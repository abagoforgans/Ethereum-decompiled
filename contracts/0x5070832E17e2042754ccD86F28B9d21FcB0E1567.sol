contract main {


// =======================  Init code  ======================


address stor0;
uint256 stor1;
address stor2;
address stor3;
uint8 stor4; offset 160
address stor4;

function _fallback() payable {
    stor1 = 8 * 10^14
    uint8(stor4.field_160) = 0
    require not msg.value
    stor0 = msg.sender
    stor2 = code.data[3646 len 20]
    stor3 = code.data[3710 len 20]
    address(stor4.field_0) = code.data[3742 len 20]
    require stor0 == msg.sender
    if code.data[3678 len 20]:
        stor0 = code.data[3678 len 20]
    return code.data[298 len 3336]
}



// =====================  Runtime code  =====================


address owner;
uint256 price;
address tokenAddress;
address stor3;
uint8 stor4; offset 160
uint128 stor4; offset 160
address stor4;

function isOpen() {
    return bool(uint8(stor4.field_160))
}

function owner() {
    return owner
}

function price() {
    return price
}

function token() {
    return tokenAddress
}

function finalize() {
    if stor3 != msg.sender:
        require owner == msg.sender
    require ext_code.size(tokenAddress)
    call tokenAddress.0x18160ddd with:
         gas gas_remaining - 710 wei
    require ext_call.success
    require ext_call.return_data[0] <= 200000000 * 10^18
    if -ext_call.return_data[0] + 200000000 * 10^18 > 0:
        require ext_code.size(tokenAddress)
        call tokenAddress.0x40c10f19 with:
             gas gas_remaining - 710 wei
            args owner, -ext_call.return_data[0] + 200000000 * 10^18
        require ext_call.success
    selfdestruct(owner)
}

function setAuthority(address arg1) {
    require owner == msg.sender
    stor3 = arg1
}

function transferOwnership(address arg1) {
    require owner == msg.sender
    if arg1:
        owner = arg1
}

function setRobot(address arg1) {
    if stor3 != msg.sender:
        require owner == msg.sender
    address(stor4.field_0) = arg1
}

function setPrice(uint256 arg1) {
    if stor3 != msg.sender:
        require owner == msg.sender
    require 5 * 10^14 <= arg1
    require arg1 <= 25 * 10^14
    price = arg1
    emit PriceSet(arg1);
}

function open(bool arg1) {
    if stor3 != msg.sender:
        require owner == msg.sender
    Mask(96, 0, stor4.field_160) = Mask(96, 0, arg1)
    if arg1:
        emit RunSale()
    else:
        emit PauseSale()
}

function getBonus(uint256 arg1) {
    if arg1 / 14000000 * 10^18 >= 10:
        return 0
    return (Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, arg1 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256)
}

function getCurrentBonus() {
    require ext_code.size(tokenAddress)
    call tokenAddress.0x18160ddd with:
         gas gas_remaining - 710 wei
    require ext_call.success
    if ext_call.return_data[0] / 14000000 * 10^18 >= 10:
        return 0
    return (Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, ext_call.return_data[0] / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256)
}

function _fallback() payable {
    mem[64] = 96
    require uint8(stor4.field_160)
    mem[128] = 0
    require ext_code.size(tokenAddress)
    call tokenAddress.0x18160ddd with:
         gas gas_remaining - 710 wei
    mem[96] = ext_call.return_data[0]
    require ext_call.success
    if var23006 / 14000000 * 10^18 >= 10:
        if (1400000000 * 10^18 * price) - (100 * var23001 % 14000000 * 10^18 * price) / 10^18 / 100 < var23009:
            var23001 = -(var23001 % 14000000 * 10^18) + var23006 + 14000000 * 10^18
            var23003 = (1400000000 * 10^18 * price) - (100 * var23001 % 14000000 * 10^18 * price) / 10^18 / 100
            var23004 = 100
            var23005 = -(var23001 % 14000000 * 10^18) + 14000000 * 10^18
            var23006 = -(var23001 % 14000000 * 10^18) + var23006 + 14000000 * 10^18
            var23007 = -(var23001 % 14000000 * 10^18) + var23007 + 14000000 * 10^18
            var23009 = var23009 - ((1400000000 * 10^18 * price) - (100 * var23001 % 14000000 * 10^18 * price) / 10^18 / 100)
            continue 
        if var23009:
            require var23009
            require 100 * var23009 / var23009 == 100
        if 100 * var23009:
            require 100 * var23009
            require 100 * 10^18 * var23009 / 100 * var23009 == 10^18
        require 100 * price
        require var23007 + (100 * 10^18 * var23009 / 100 * price) > 0
        require ext_code.size(tokenAddress)
        call tokenAddress.0x18160ddd with:
             gas gas_remaining - 710 wei
        require ext_call.success
        require ext_call.return_data[0] >= 0
        require ext_call.return_data[0] + var23007 + (100 * 10^18 * var23009 / 100 * price) <= 140000000 * 10^18
        call owner with:
           value msg.value wei
             gas 2300 * is_zero(value) wei
        require ext_call.success
        require ext_code.size(tokenAddress)
        call tokenAddress.0x40c10f19 with:
             gas gas_remaining - 710 wei
            args msg.sender, var23007 + (100 * 10^18 * var23009 / 100 * price)
        require ext_call.success
        emit Buy(msg.sender, var23007 + (100 * 10^18 * var23009 / 100 * price));
    else:
        require (Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var23006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256) + 100
        if (1400000000 * 10^18 * price) - (100 * var23001 % 14000000 * 10^18 * price) / 10^18 / (Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var23006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256) + 100 < var23009:
            var23001 = -(var23001 % 14000000 * 10^18) + var23006 + 14000000 * 10^18
            var23003 = (1400000000 * 10^18 * price) - (100 * var23001 % 14000000 * 10^18 * price) / 10^18 / (Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var23006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256) + 100
            var23004 = (Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var23006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256) + 100
            var23005 = -(var23001 % 14000000 * 10^18) + 14000000 * 10^18
            var23006 = -(var23001 % 14000000 * 10^18) + var23006 + 14000000 * 10^18
            var23007 = -(var23001 % 14000000 * 10^18) + var23007 + 14000000 * 10^18
            var23009 = var23009 - ((1400000000 * 10^18 * price) - (100 * var23001 % 14000000 * 10^18 * price) / 10^18 / (Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var23006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256) + 100)
            continue 
        if var23009:
            require var23009
            require (100 * var23009) + (Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var23006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256 * var23009) / var23009 == (Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var23006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256) + 100
        if (100 * var23009) + (Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var23006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256 * var23009):
            require (100 * var23009) + (Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var23006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256 * var23009)
            require (100 * 10^18 * var23009) + (10^18 * Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var23006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256 * var23009) / (100 * var23009) + (Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var23006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256 * var23009) == 10^18
        require 100 * price
        require var23007 + ((100 * 10^18 * var23009) + (10^18 * Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var23006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256 * var23009) / 100 * price) > 0
        require ext_code.size(tokenAddress)
        call tokenAddress.0x18160ddd with:
             gas gas_remaining - 710 wei
        require ext_call.success
        require ext_call.return_data[0] >= 0
        require ext_call.return_data[0] + var23007 + ((100 * 10^18 * var23009) + (10^18 * Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var23006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256 * var23009) / 100 * price) <= 140000000 * 10^18
        call owner with:
           value msg.value wei
             gas 2300 * is_zero(value) wei
        require ext_call.success
        require ext_code.size(tokenAddress)
        call tokenAddress.0x40c10f19 with:
             gas gas_remaining - 710 wei
            args msg.sender, var23007 + ((100 * 10^18 * var23009) + (10^18 * Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var23006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256 * var23009) / 100 * price)
        require ext_call.success
        emit Buy(msg.sender, var23007 + ((100 * 10^18 * var23009) + (10^18 * Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var23006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256 * var23009) / 100 * price));
}

function buyAlt(address arg1, uint256 arg2, string arg3) {
    mem[64] = ceil32(arg3.length) + 128
    mem[96] = arg3.length
    mem[128 len arg3.length] = arg3[all]
    require address(stor4.field_0) == msg.sender
    mem[ceil32(arg3.length) + 160] = 0
    require ext_code.size(tokenAddress)
    call tokenAddress.0x18160ddd with:
         gas gas_remaining - 710 wei
    mem[ceil32(arg3.length) + 128] = ext_call.return_data[0]
    require ext_call.success
    if var23006 / 14000000 * 10^18 >= 10:
        if (1400000000 * 10^18 * price) - (100 * var23001 % 14000000 * 10^18 * price) / 10^18 / 100 < var23009:
            var23001 = -(var23001 % 14000000 * 10^18) + var23006 + 14000000 * 10^18
            var23003 = (1400000000 * 10^18 * price) - (100 * var23001 % 14000000 * 10^18 * price) / 10^18 / 100
            var23004 = 100
            var23005 = -(var23001 % 14000000 * 10^18) + 14000000 * 10^18
            var23006 = -(var23001 % 14000000 * 10^18) + var23006 + 14000000 * 10^18
            var23007 = -(var23001 % 14000000 * 10^18) + var23007 + 14000000 * 10^18
            var23009 = var23009 - ((1400000000 * 10^18 * price) - (100 * var23001 % 14000000 * 10^18 * price) / 10^18 / 100)
            continue 
        if var23009:
            require var23009
            require 100 * var23009 / var23009 == 100
        if 100 * var23009:
            require 100 * var23009
            require 100 * 10^18 * var23009 / 100 * var23009 == 10^18
        require 100 * price
        require var23007 + (100 * 10^18 * var23009 / 100 * price) > 0
        require ext_code.size(tokenAddress)
        call tokenAddress.0x18160ddd with:
             gas gas_remaining - 710 wei
        require ext_call.success
        require ext_call.return_data[0] >= 0
        require ext_call.return_data[0] + var23007 + (100 * 10^18 * var23009 / 100 * price) <= 140000000 * 10^18
        require ext_code.size(tokenAddress)
        call tokenAddress.0x40c10f19 with:
             gas gas_remaining - 710 wei
            args address(arg1), var23007 + (100 * 10^18 * var23009 / 100 * price)
        require ext_call.success
        emit AltBuy(address(arg1), var23007 + (100 * 10^18 * var23009 / 100 * price), Array(len=arg3.length, data=arg3[all]));
    else:
        require (Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var23006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256) + 100
        if (1400000000 * 10^18 * price) - (100 * var23001 % 14000000 * 10^18 * price) / 10^18 / (Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var23006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256) + 100 < var23009:
            var23001 = -(var23001 % 14000000 * 10^18) + var23006 + 14000000 * 10^18
            var23003 = (1400000000 * 10^18 * price) - (100 * var23001 % 14000000 * 10^18 * price) / 10^18 / (Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var23006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256) + 100
            var23004 = (Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var23006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256) + 100
            var23005 = -(var23001 % 14000000 * 10^18) + 14000000 * 10^18
            var23006 = -(var23001 % 14000000 * 10^18) + var23006 + 14000000 * 10^18
            var23007 = -(var23001 % 14000000 * 10^18) + var23007 + 14000000 * 10^18
            var23009 = var23009 - ((1400000000 * 10^18 * price) - (100 * var23001 % 14000000 * 10^18 * price) / 10^18 / (Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var23006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256) + 100)
            continue 
        if var23009:
            require var23009
            require (100 * var23009) + (Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var23006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256 * var23009) / var23009 == (Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var23006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256) + 100
        if (100 * var23009) + (Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var23006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256 * var23009):
            require (100 * var23009) + (Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var23006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256 * var23009)
            require (100 * 10^18 * var23009) + (10^18 * Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var23006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256 * var23009) / (100 * var23009) + (Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var23006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256 * var23009) == 10^18
        require 100 * price
        require var23007 + ((100 * 10^18 * var23009) + (10^18 * Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var23006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256 * var23009) / 100 * price) > 0
        require ext_code.size(tokenAddress)
        call tokenAddress.0x18160ddd with:
             gas gas_remaining - 710 wei
        require ext_call.success
        require ext_call.return_data[0] >= 0
        require ext_call.return_data[0] + var23007 + ((100 * 10^18 * var23009) + (10^18 * Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var23006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256 * var23009) / 100 * price) <= 140000000 * 10^18
        require ext_code.size(tokenAddress)
        call tokenAddress.0x40c10f19 with:
             gas gas_remaining - 710 wei
            args address(arg1), var23007 + ((100 * 10^18 * var23009) + (10^18 * Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var23006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256 * var23009) / 100 * price)
        require ext_call.success
        emit AltBuy(address(arg1), var23007 + ((100 * 10^18 * var23009) + (10^18 * Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var23006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256 * var23009) / 100 * price), Array(len=arg3.length, data=arg3[all]));
}

function buy(address arg1) payable {
    mem[64] = 96
    require uint8(stor4.field_160)
    mem[128] = 0
    require ext_code.size(tokenAddress)
    call tokenAddress.0x18160ddd with:
         gas gas_remaining - 710 wei
    mem[96] = ext_call.return_data[0]
    require ext_call.success
    if var22006 / 14000000 * 10^18 >= 10:
        if (1400000000 * 10^18 * price) - (100 * var22001 % 14000000 * 10^18 * price) / 10^18 / 100 < var22009:
            var22001 = -(var22001 % 14000000 * 10^18) + var22006 + 14000000 * 10^18
            var22003 = (1400000000 * 10^18 * price) - (100 * var22001 % 14000000 * 10^18 * price) / 10^18 / 100
            var22004 = 100
            var22005 = -(var22001 % 14000000 * 10^18) + 14000000 * 10^18
            var22006 = -(var22001 % 14000000 * 10^18) + var22006 + 14000000 * 10^18
            var22007 = -(var22001 % 14000000 * 10^18) + var22007 + 14000000 * 10^18
            var22009 = var22009 - ((1400000000 * 10^18 * price) - (100 * var22001 % 14000000 * 10^18 * price) / 10^18 / 100)
            continue 
        if var22009:
            require var22009
            require 100 * var22009 / var22009 == 100
        if 100 * var22009:
            require 100 * var22009
            require 100 * 10^18 * var22009 / 100 * var22009 == 10^18
        require 100 * price
        require var22007 + (100 * 10^18 * var22009 / 100 * price) > 0
        require ext_code.size(tokenAddress)
        call tokenAddress.0x18160ddd with:
             gas gas_remaining - 710 wei
        require ext_call.success
        require ext_call.return_data[0] >= 0
        require ext_call.return_data[0] + var22007 + (100 * 10^18 * var22009 / 100 * price) <= 140000000 * 10^18
        call owner with:
           value msg.value wei
             gas 2300 * is_zero(value) wei
        require ext_call.success
        require ext_code.size(tokenAddress)
        call tokenAddress.0x40c10f19 with:
             gas gas_remaining - 710 wei
            args address(arg1), var22007 + (100 * 10^18 * var22009 / 100 * price)
        require ext_call.success
        emit Buy(address(arg1), var22007 + (100 * 10^18 * var22009 / 100 * price));
    else:
        require (Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var22006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256) + 100
        if (1400000000 * 10^18 * price) - (100 * var22001 % 14000000 * 10^18 * price) / 10^18 / (Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var22006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256) + 100 < var22009:
            var22001 = -(var22001 % 14000000 * 10^18) + var22006 + 14000000 * 10^18
            var22003 = (1400000000 * 10^18 * price) - (100 * var22001 % 14000000 * 10^18 * price) / 10^18 / (Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var22006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256) + 100
            var22004 = (Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var22006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256) + 100
            var22005 = -(var22001 % 14000000 * 10^18) + 14000000 * 10^18
            var22006 = -(var22001 % 14000000 * 10^18) + var22006 + 14000000 * 10^18
            var22007 = -(var22001 % 14000000 * 10^18) + var22007 + 14000000 * 10^18
            var22009 = var22009 - ((1400000000 * 10^18 * price) - (100 * var22001 % 14000000 * 10^18 * price) / 10^18 / (Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var22006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256) + 100)
            continue 
        if var22009:
            require var22009
            require (100 * var22009) + (Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var22006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256 * var22009) / var22009 == (Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var22006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256) + 100
        if (100 * var22009) + (Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var22006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256 * var22009):
            require (100 * var22009) + (Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var22006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256 * var22009)
            require (100 * 10^18 * var22009) + (10^18 * Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var22006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256 * var22009) / (100 * var22009) + (Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var22006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256 * var22009) == 10^18
        require 100 * price
        require var22007 + ((100 * 10^18 * var22009) + (10^18 * Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var22006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256 * var22009) / 100 * price) > 0
        require ext_code.size(tokenAddress)
        call tokenAddress.0x18160ddd with:
             gas gas_remaining - 710 wei
        require ext_call.success
        require ext_call.return_data[0] >= 0
        require ext_call.return_data[0] + var22007 + ((100 * 10^18 * var22009) + (10^18 * Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var22006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256 * var22009) / 100 * price) <= 140000000 * 10^18
        call owner with:
           value msg.value wei
             gas 2300 * is_zero(value) wei
        require ext_call.success
        require ext_code.size(tokenAddress)
        call tokenAddress.0x40c10f19 with:
             gas gas_remaining - 710 wei
            args address(arg1), var22007 + ((100 * 10^18 * var22009) + (10^18 * Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var22006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256 * var22009) / 100 * price)
        require ext_call.success
        emit Buy(address(arg1), var22007 + ((100 * 10^18 * var22009) + (10^18 * Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var22006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256 * var22009) / 100 * price));
}

function getTokensAmount(uint256 arg1) payable {
    mem[64] = 96
    require not msg.value
    mem[128] = 0
    require ext_code.size(tokenAddress)
    call tokenAddress.0x18160ddd with:
         gas gas_remaining - 710 wei
    mem[96] = ext_call.return_data[0]
    require ext_call.success
    if var20006 / 14000000 * 10^18 >= 10:
        if (1400000000 * 10^18 * price) - (100 * var20001 % 14000000 * 10^18 * price) / 10^18 / 100 < var20009:
            var20001 = -(var20001 % 14000000 * 10^18) + var20006 + 14000000 * 10^18
            var20003 = (1400000000 * 10^18 * price) - (100 * var20001 % 14000000 * 10^18 * price) / 10^18 / 100
            var20004 = 100
            var20005 = -(var20001 % 14000000 * 10^18) + 14000000 * 10^18
            var20006 = -(var20001 % 14000000 * 10^18) + var20006 + 14000000 * 10^18
            var20007 = -(var20001 % 14000000 * 10^18) + var20007 + 14000000 * 10^18
            var20009 = var20009 - ((1400000000 * 10^18 * price) - (100 * var20001 % 14000000 * 10^18 * price) / 10^18 / 100)
            continue 
        if not var20009:
            if not 100 * var20009:
                if 100 * price:
                    return (var20007 + (100 * 10^18 * var20009 / 100 * price))
            else:
                if 100 * var20009:
                    if 100 * 10^18 * var20009 / 100 * var20009 == 10^18:
                        if 100 * price:
                            return (var20007 + (100 * 10^18 * var20009 / 100 * price))
        else:
            if var20009:
                if 100 * var20009 / var20009 == 100:
                    if not 100 * var20009:
                        if 100 * price:
                            return (var20007 + (100 * 10^18 * var20009 / 100 * price))
                    else:
                        if 100 * var20009:
                            if 100 * 10^18 * var20009 / 100 * var20009 == 10^18:
                                if 100 * price:
                                    return (var20007 + (100 * 10^18 * var20009 / 100 * price))
    else:
        if (Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var20006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256) + 100:
            if (1400000000 * 10^18 * price) - (100 * var20001 % 14000000 * 10^18 * price) / 10^18 / (Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var20006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256) + 100 < var20009:
                var20001 = -(var20001 % 14000000 * 10^18) + var20006 + 14000000 * 10^18
                var20003 = (1400000000 * 10^18 * price) - (100 * var20001 % 14000000 * 10^18 * price) / 10^18 / (Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var20006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256) + 100
                var20004 = (Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var20006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256) + 100
                var20005 = -(var20001 % 14000000 * 10^18) + 14000000 * 10^18
                var20006 = -(var20001 % 14000000 * 10^18) + var20006 + 14000000 * 10^18
                var20007 = -(var20001 % 14000000 * 10^18) + var20007 + 14000000 * 10^18
                var20009 = var20009 - ((1400000000 * 10^18 * price) - (100 * var20001 % 14000000 * 10^18 * price) / 10^18 / (Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var20006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256) + 100)
                continue 
            if not var20009:
                if not (100 * var20009) + (Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var20006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256 * var20009):
                    if 100 * price:
                        return (var20007 + ((100 * 10^18 * var20009) + (10^18 * Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var20006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256 * var20009) / 100 * price))
                else:
                    if (100 * var20009) + (Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var20006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256 * var20009):
                        if (100 * 10^18 * var20009) + (10^18 * Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var20006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256 * var20009) / (100 * var20009) + (Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var20006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256 * var20009) == 10^18:
                            if 100 * price:
                                return (var20007 + ((100 * 10^18 * var20009) + (10^18 * Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var20006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256 * var20009) / 100 * price))
            else:
                if var20009:
                    if (100 * var20009) + (Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var20006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256 * var20009) / var20009 == (Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var20006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256) + 100:
                        if not (100 * var20009) + (Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var20006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256 * var20009):
                            if 100 * price:
                                return (var20007 + ((100 * 10^18 * var20009) + (10^18 * Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var20006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256 * var20009) / 100 * price))
                        else:
                            if (100 * var20009) + (Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var20006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256 * var20009):
                                if (100 * 10^18 * var20009) + (10^18 * Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var20006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256 * var20009) / (100 * var20009) + (Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var20006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256 * var20009) == 10^18:
                                    if 100 * price:
                                        return (var20007 + ((100 * 10^18 * var20009) + (10^18 * Mask(8, -(1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) + 256, var20006 / 14000000 * 10^18) << (1134549652817193219739976868814757822651017187175547166424478833242462486528, 0) - 256 * var20009) / 100 * price))
    revert
}



}
