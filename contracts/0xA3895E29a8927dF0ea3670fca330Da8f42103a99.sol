contract main {




// =====================  Runtime code  =====================


#
#  - sub_40c62ae4(?)
#
array of struct stor0;
uint256 defaultAmount;
address stor2;
address stor3;

function defaultAmount() {
    return defaultAmount
}

function _fallback() payable {
  stop
}

function sub_29636a53(?) {
    require (1000 * arg1) + (997 * arg3)
    return (997 * arg3 * arg2 / (1000 * arg1) + (997 * arg3))
}

function sub_9ccd3b6c(?) {
    require (1000 * arg1) + (997 * arg3)
    return (997 * arg3 * arg2 / (1000 * arg1) + (997 * arg3))
}

function sub_1db9dc55(?) {
    mem[128 len 32 * arg1.length] = call.data[arg1 + 36 len 32 * arg1.length]
    require 0 < arg1.length
    require 1 < arg1.length
    _5 = mem[160]
    mem[(32 * arg1.length) + 164] = mem[172 len 20]
    mem[(32 * arg1.length) + 196] = arg3
    require ext_code.size(stor3)
    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
         gas gas_remaining wei
        args address(mem[128]), address(_5), arg3
    mem[(32 * arg1.length) + 128 len 64] = ext_call.return_data[0 len 64]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    require 4 < arg1.length
    require ext_code.size(mem[268 len 20])
    call mem[268 len 20].0x313ce567 with:
         gas gas_remaining wei
    mem[(32 * arg1.length) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require 2 < arg1.length
    require 4 < arg1.length
    require ext_code.size(arg2)
    call arg2.getReturn(address arg1, address arg2, uint256 arg3) with:
         gas gas_remaining wei
        args address(mem[192]), address(mem[256]), ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return (ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18))
}

function sub_97d03604(?) {
    mem[128 len 32 * arg1.length] = call.data[arg1 + 36 len 32 * arg1.length]
    require 0 < arg1.length
    require ext_code.size(mem[140 len 20])
    call mem[140 len 20].0x313ce567 with:
         gas gas_remaining wei
    mem[(32 * arg1.length) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require 0 < arg1.length
    _9 = mem[128]
    require 2 < arg1.length
    _11 = mem[192]
    require 0 < arg1.length
    require ext_code.size(mem[140 len 20])
    call mem[140 len 20].0x313ce567 with:
         gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require 10^(-ext_call.return_data[0] + 18)
    mem[(32 * arg1.length) + 132] = mem[140 len 20]
    mem[(32 * arg1.length) + 164] = address(_11)
    mem[(32 * arg1.length) + 196] = arg3 / 10^(-ext_call.return_data[0] + 18)
    require ext_code.size(arg2)
    call arg2.getReturn(address arg1, address arg2, uint256 arg3) with:
         gas gas_remaining wei
        args address(_9), address(_11), arg3 / 10^(-ext_call.return_data[0] + 18)
    mem[(32 * arg1.length) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require 2 < arg1.length
    require 4 < arg1.length
    require ext_code.size(stor3)
    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
         gas gas_remaining wei
        args address(mem[192]), address(mem[256]), ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    return ext_call.return_data[0]
}

function sub_3f549e86(?) {
    mem[128 len 32 * arg3.length] = call.data[arg3 + 36 len 32 * arg3.length]
    require 0 < arg3.length
    require 1 < arg3.length
    _5 = mem[160]
    mem[(32 * arg3.length) + 164] = mem[172 len 20]
    mem[(32 * arg3.length) + 196] = arg5
    require ext_code.size(stor3)
    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
         gas gas_remaining wei
        args address(mem[128]), address(_5), arg5
    mem[(32 * arg3.length) + 128 len 64] = ext_call.return_data[0 len 64]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    require 4 < arg3.length
    require ext_code.size(mem[268 len 20])
    call mem[268 len 20].0x313ce567 with:
         gas gas_remaining wei
    mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require 2 < arg3.length
    require 4 < arg3.length
    require ext_code.size(arg4)
    call arg4.getReturn(address arg1, address arg2, uint256 arg3) with:
         gas gas_remaining wei
        args address(mem[192]), address(mem[256]), ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)
    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6) <= arg5:
        return 0
    return (((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)) - arg5)
}

function sub_a40fb280(?) {
    mem[128 len 32 * arg3.length] = call.data[arg3 + 36 len 32 * arg3.length]
    require (1000 * arg1) + (997 * arg5)
    require 0 < arg3.length
    require ext_code.size(mem[140 len 20])
    call mem[140 len 20].0x313ce567 with:
         gas gas_remaining wei
    mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require 0 < arg3.length
    _9 = mem[128]
    require 2 < arg3.length
    _11 = mem[192]
    require 0 < arg3.length
    require ext_code.size(mem[140 len 20])
    call mem[140 len 20].0x313ce567 with:
         gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require 10^(-ext_call.return_data[0] + 18)
    mem[(32 * arg3.length) + 132] = mem[140 len 20]
    mem[(32 * arg3.length) + 164] = address(_11)
    mem[(32 * arg3.length) + 196] = (997 * arg5 * arg2 / (1000 * arg1) + (997 * arg5)) + arg6 / 10^(-ext_call.return_data[0] + 18)
    require ext_code.size(arg4)
    call arg4.getReturn(address arg1, address arg2, uint256 arg3) with:
         gas gas_remaining wei
        args address(_9), address(_11), (997 * arg5 * arg2 / (1000 * arg1) + (997 * arg5)) + arg6 / 10^(-ext_call.return_data[0] + 18)
    mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require 2 < arg3.length
    require 4 < arg3.length
    require ext_code.size(stor3)
    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
         gas gas_remaining wei
        args address(mem[192]), address(mem[256]), ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    if ext_call.return_data[0] <= arg5:
        return 0
    return (ext_call.return_data[0] - arg5)
}

function sub_c1363681(?) {
    mem[128 len 32 * arg3.length] = call.data[arg3 + 36 len 32 * arg3.length]
    require 0 < arg3.length
    require 1 < arg3.length
    _5 = mem[160]
    mem[(32 * arg3.length) + 164] = mem[172 len 20]
    mem[(32 * arg3.length) + 196] = arg5
    require ext_code.size(stor3)
    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
         gas gas_remaining wei
        args address(mem[128]), address(_5), arg5
    mem[(32 * arg3.length) + 128 len 64] = ext_call.return_data[0 len 64]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    require 4 < arg3.length
    require ext_code.size(mem[268 len 20])
    call mem[268 len 20].0x313ce567 with:
         gas gas_remaining wei
    mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require 2 < arg3.length
    _18 = mem[192]
    require 4 < arg3.length
    _20 = mem[256]
    mem[(32 * arg3.length) + 132] = mem[204 len 20]
    mem[(32 * arg3.length) + 164] = address(_20)
    require ext_code.size(arg4)
    call arg4.getReturn(address arg1, address arg2, uint256 arg3) with:
         gas gas_remaining wei
        args address(_18), address(_20), ext_call.return_data[0]
    mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)
    require 0 < arg3.length
    require 1 < arg3.length
    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6) <= arg5:
        _31 = mem[160]
        mem[(32 * arg3.length) + 164] = mem[172 len 20]
        mem[(32 * arg3.length) + 196] = 11 * arg5 / 10
        require ext_code.size(stor3)
        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args address(mem[128]), address(_31), 11 * arg5 / 10
        mem[(32 * arg3.length) + 128 len 64] = ext_call.return_data[0 len 64]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 64
        require 4 < arg3.length
        require ext_code.size(mem[268 len 20])
        call mem[268 len 20].0x313ce567 with:
             gas gas_remaining wei
        mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 2 < arg3.length
        _57 = mem[192]
        require 4 < arg3.length
        _61 = mem[256]
        mem[(32 * arg3.length) + 132] = mem[204 len 20]
        mem[(32 * arg3.length) + 164] = address(_61)
        require ext_code.size(arg4)
        call arg4.getReturn(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args address(_57), address(_61), ext_call.return_data[0]
        mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)
        require 0 < arg3.length
        require 1 < arg3.length
        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6) <= 11 * arg5 / 10:
            _83 = mem[160]
            mem[(32 * arg3.length) + 164] = mem[172 len 20]
            mem[(32 * arg3.length) + 196] = 9 * arg5 / 10
            require ext_code.size(stor3)
            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(mem[128]), address(_83), 9 * arg5 / 10
            mem[(32 * arg3.length) + 128 len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require 4 < arg3.length
            require ext_code.size(mem[268 len 20])
            call mem[268 len 20].0x313ce567 with:
                 gas gas_remaining wei
            mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 2 < arg3.length
            _135 = mem[192]
            require 4 < arg3.length
            _143 = mem[256]
            mem[(32 * arg3.length) + 132] = mem[204 len 20]
            mem[(32 * arg3.length) + 164] = address(_143)
            mem[(32 * arg3.length) + 196] = ext_call.return_data[0]
            require ext_code.size(arg4)
            call arg4.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(_135), address(_143), ext_call.return_data[0]
            mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)
            if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6) <= 9 * arg5 / 10:
                return arg5
            if ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)) - (9 * arg5 / 10) <= 0:
                return arg5
            s = 9
            t = ((997 * mem[(32 * arg3.length) + 128] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * mem[(32 * arg3.length) + 128] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)) - (9 * arg5 / 10)
            u = 0
            v = arg5
            while t > u:
                require 0 < arg3.length
                require 1 < arg3.length
                _487 = mem[160]
                mem[(32 * arg3.length) + 132] = mem[140 len 20]
                mem[(32 * arg3.length) + 164] = address(_487)
                mem[(32 * arg3.length) + 196] = -(v * s / 10) + (s * v * s / 10) / 10
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg3.length) + 132], address(_487), -(v * s / 10) + (s * v * s / 10) / 10
                mem[(32 * arg3.length) + 128 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require 4 < arg3.length
                require ext_code.size(mem[268 len 20])
                call mem[268 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < arg3.length
                require 4 < arg3.length
                _730 = mem[256]
                mem[(32 * arg3.length) + 132] = mem[204 len 20]
                mem[(32 * arg3.length) + 164] = address(_730)
                mem[(32 * arg3.length) + 196] = ext_call.return_data[0]
                require ext_code.size(arg4)
                call arg4.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg3.length) + 132], address(_730), ext_call.return_data[0]
                mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)
                if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6) <= -(v * s / 10) + (s * v * s / 10) / 10:
                    s = s - 1
                    t = 0
                    u = t
                    v = v * s / 10
                    continue 
                s = s - 1
                t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)) - (-(v * s / 10) + (s * v * s / 10) / 10)
                u = t
                v = v * s / 10
                continue 
            return v
        _86 = mem[160]
        mem[(32 * arg3.length) + 164] = mem[172 len 20]
        mem[(32 * arg3.length) + 196] = 9 * arg5 / 10
        require ext_code.size(stor3)
        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args address(mem[128]), address(_86), 9 * arg5 / 10
        mem[(32 * arg3.length) + 128 len 64] = ext_call.return_data[0 len 64]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 64
        require 4 < arg3.length
        require ext_code.size(mem[268 len 20])
        call mem[268 len 20].0x313ce567 with:
             gas gas_remaining wei
        mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 2 < arg3.length
        _137 = mem[192]
        require 4 < arg3.length
        _146 = mem[256]
        mem[(32 * arg3.length) + 132] = mem[204 len 20]
        mem[(32 * arg3.length) + 164] = address(_146)
        mem[(32 * arg3.length) + 196] = ext_call.return_data[0]
        require ext_code.size(arg4)
        call arg4.getReturn(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args address(_137), address(_146), ext_call.return_data[0]
        mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)
        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6) <= 9 * arg5 / 10:
            if ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)) - (11 * arg5 / 10) <= 0:
                return arg5
            s = 11
            t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)) - (11 * arg5 / 10)
            u = 0
            v = arg5
            while t > u:
                require 0 < arg3.length
                require 1 < arg3.length
                _490 = mem[160]
                mem[(32 * arg3.length) + 132] = mem[140 len 20]
                mem[(32 * arg3.length) + 164] = address(_490)
                mem[(32 * arg3.length) + 196] = (v * s / 10) + (s * v * s / 10) / 10
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg3.length) + 132], address(_490), (v * s / 10) + (s * v * s / 10) / 10
                mem[(32 * arg3.length) + 128 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require 4 < arg3.length
                require ext_code.size(mem[268 len 20])
                call mem[268 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < arg3.length
                require 4 < arg3.length
                _733 = mem[256]
                mem[(32 * arg3.length) + 132] = mem[204 len 20]
                mem[(32 * arg3.length) + 164] = address(_733)
                mem[(32 * arg3.length) + 196] = ext_call.return_data[0]
                require ext_code.size(arg4)
                call arg4.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg3.length) + 132], address(_733), ext_call.return_data[0]
                mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)
                if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6) <= (v * s / 10) + (s * v * s / 10) / 10:
                    s = s + 1
                    t = 0
                    u = t
                    v = v * s / 10
                    continue 
                s = s + 1
                t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)) - ((v * s / 10) + (s * v * s / 10) / 10)
                u = t
                v = v * s / 10
                continue 
            if 0 <= u:
                return v
            t = s - 1
            w = 0
            x = u
            y = v
            while w > x:
                require 0 < arg3.length
                require 1 < arg3.length
                _875 = mem[160]
                mem[(32 * arg3.length) + 132] = mem[140 len 20]
                mem[(32 * arg3.length) + 164] = address(_875)
                mem[(32 * arg3.length) + 196] = -(y * t / 10) + (t * y * t / 10) / 10
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg3.length) + 132], address(_875), -(y * t / 10) + (t * y * t / 10) / 10
                mem[(32 * arg3.length) + 128 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require 4 < arg3.length
                require ext_code.size(mem[268 len 20])
                call mem[268 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < arg3.length
                require 4 < arg3.length
                _965 = mem[256]
                mem[(32 * arg3.length) + 132] = mem[204 len 20]
                mem[(32 * arg3.length) + 164] = address(_965)
                mem[(32 * arg3.length) + 196] = ext_call.return_data[0]
                require ext_code.size(arg4)
                call arg4.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg3.length) + 132], address(_965), ext_call.return_data[0]
                mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)
                if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6) <= -(y * t / 10) + (t * y * t / 10) / 10:
                    t = t - 1
                    w = 0
                    x = w
                    y = y * t / 10
                    continue 
                t = t - 1
                w = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)) - (-(y * t / 10) + (t * y * t / 10) / 10)
                x = w
                y = y * t / 10
                continue 
        else:
            if ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)) - (11 * arg5 / 10) <= 0:
                if ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)) - (9 * arg5 / 10) <= 0:
                    return arg5
                s = 9
                t = ((997 * mem[(32 * arg3.length) + 128] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * mem[(32 * arg3.length) + 128] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)) - (9 * arg5 / 10)
                u = 0
                v = arg5
                while t > u:
                    require 0 < arg3.length
                    require 1 < arg3.length
                    _493 = mem[160]
                    mem[(32 * arg3.length) + 132] = mem[140 len 20]
                    mem[(32 * arg3.length) + 164] = address(_493)
                    mem[(32 * arg3.length) + 196] = -(v * s / 10) + (s * v * s / 10) / 10
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg3.length) + 132], address(_493), -(v * s / 10) + (s * v * s / 10) / 10
                    mem[(32 * arg3.length) + 128 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < arg3.length
                    require ext_code.size(mem[268 len 20])
                    call mem[268 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg3.length
                    require 4 < arg3.length
                    _736 = mem[256]
                    mem[(32 * arg3.length) + 132] = mem[204 len 20]
                    mem[(32 * arg3.length) + 164] = address(_736)
                    mem[(32 * arg3.length) + 196] = ext_call.return_data[0]
                    require ext_code.size(arg4)
                    call arg4.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg3.length) + 132], address(_736), ext_call.return_data[0]
                    mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)
                    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6) <= -(v * s / 10) + (s * v * s / 10) / 10:
                        s = s - 1
                        t = 0
                        u = t
                        v = v * s / 10
                        continue 
                    s = s - 1
                    t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)) - (-(v * s / 10) + (s * v * s / 10) / 10)
                    u = t
                    v = v * s / 10
                    continue 
                return v
            s = 11
            t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)) - (11 * arg5 / 10)
            u = 0
            v = arg5
            while t > u:
                require 0 < arg3.length
                require 1 < arg3.length
                _496 = mem[160]
                mem[(32 * arg3.length) + 132] = mem[140 len 20]
                mem[(32 * arg3.length) + 164] = address(_496)
                mem[(32 * arg3.length) + 196] = (v * s / 10) + (s * v * s / 10) / 10
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg3.length) + 132], address(_496), (v * s / 10) + (s * v * s / 10) / 10
                mem[(32 * arg3.length) + 128 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require 4 < arg3.length
                require ext_code.size(mem[268 len 20])
                call mem[268 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < arg3.length
                require 4 < arg3.length
                _739 = mem[256]
                mem[(32 * arg3.length) + 132] = mem[204 len 20]
                mem[(32 * arg3.length) + 164] = address(_739)
                mem[(32 * arg3.length) + 196] = ext_call.return_data[0]
                require ext_code.size(arg4)
                call arg4.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg3.length) + 132], address(_739), ext_call.return_data[0]
                mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)
                if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6) <= (v * s / 10) + (s * v * s / 10) / 10:
                    s = s + 1
                    t = 0
                    u = t
                    v = v * s / 10
                    continue 
                s = s + 1
                t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)) - ((v * s / 10) + (s * v * s / 10) / 10)
                u = t
                v = v * s / 10
                continue 
            if ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)) - (9 * arg5 / 10) <= u:
                return v
            t = s - 1
            w = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)) - (9 * arg5 / 10)
            x = u
            y = v
            while w > x:
                require 0 < arg3.length
                require 1 < arg3.length
                _878 = mem[160]
                mem[(32 * arg3.length) + 132] = mem[140 len 20]
                mem[(32 * arg3.length) + 164] = address(_878)
                mem[(32 * arg3.length) + 196] = -(y * t / 10) + (t * y * t / 10) / 10
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg3.length) + 132], address(_878), -(y * t / 10) + (t * y * t / 10) / 10
                mem[(32 * arg3.length) + 128 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require 4 < arg3.length
                require ext_code.size(mem[268 len 20])
                call mem[268 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < arg3.length
                require 4 < arg3.length
                _968 = mem[256]
                mem[(32 * arg3.length) + 132] = mem[204 len 20]
                mem[(32 * arg3.length) + 164] = address(_968)
                mem[(32 * arg3.length) + 196] = ext_call.return_data[0]
                require ext_code.size(arg4)
                call arg4.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg3.length) + 132], address(_968), ext_call.return_data[0]
                mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)
                if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6) <= -(y * t / 10) + (t * y * t / 10) / 10:
                    t = t - 1
                    w = 0
                    x = w
                    y = y * t / 10
                    continue 
                t = t - 1
                w = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)) - (-(y * t / 10) + (t * y * t / 10) / 10)
                x = w
                y = y * t / 10
                continue 
    else:
        _34 = mem[160]
        mem[(32 * arg3.length) + 164] = mem[172 len 20]
        mem[(32 * arg3.length) + 196] = 11 * arg5 / 10
        require ext_code.size(stor3)
        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args address(mem[128]), address(_34), 11 * arg5 / 10
        mem[(32 * arg3.length) + 128 len 64] = ext_call.return_data[0 len 64]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 64
        require 4 < arg3.length
        require ext_code.size(mem[268 len 20])
        call mem[268 len 20].0x313ce567 with:
             gas gas_remaining wei
        mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 2 < arg3.length
        _59 = mem[192]
        require 4 < arg3.length
        _64 = mem[256]
        mem[(32 * arg3.length) + 132] = mem[204 len 20]
        mem[(32 * arg3.length) + 164] = address(_64)
        require ext_code.size(arg4)
        call arg4.getReturn(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args address(_59), address(_64), ext_call.return_data[0]
        mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)
        require 0 < arg3.length
        require 1 < arg3.length
        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6) <= 11 * arg5 / 10:
            _89 = mem[160]
            mem[(32 * arg3.length) + 164] = mem[172 len 20]
            mem[(32 * arg3.length) + 196] = 9 * arg5 / 10
            require ext_code.size(stor3)
            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(mem[128]), address(_89), 9 * arg5 / 10
            mem[(32 * arg3.length) + 128 len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require 4 < arg3.length
            require ext_code.size(mem[268 len 20])
            call mem[268 len 20].0x313ce567 with:
                 gas gas_remaining wei
            mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 2 < arg3.length
            _139 = mem[192]
            require 4 < arg3.length
            _149 = mem[256]
            mem[(32 * arg3.length) + 132] = mem[204 len 20]
            mem[(32 * arg3.length) + 164] = address(_149)
            mem[(32 * arg3.length) + 196] = ext_call.return_data[0]
            require ext_code.size(arg4)
            call arg4.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(_139), address(_149), ext_call.return_data[0]
            mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)
            if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6) <= 9 * arg5 / 10:
                if 0 <= ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)) - arg5:
                    return arg5
                s = 11
                t = 0
                u = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)) - arg5
                v = arg5
                while t > u:
                    require 0 < arg3.length
                    require 1 < arg3.length
                    _499 = mem[160]
                    mem[(32 * arg3.length) + 132] = mem[140 len 20]
                    mem[(32 * arg3.length) + 164] = address(_499)
                    mem[(32 * arg3.length) + 196] = (v * s / 10) + (s * v * s / 10) / 10
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg3.length) + 132], address(_499), (v * s / 10) + (s * v * s / 10) / 10
                    mem[(32 * arg3.length) + 128 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < arg3.length
                    require ext_code.size(mem[268 len 20])
                    call mem[268 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg3.length
                    require 4 < arg3.length
                    _742 = mem[256]
                    mem[(32 * arg3.length) + 132] = mem[204 len 20]
                    mem[(32 * arg3.length) + 164] = address(_742)
                    mem[(32 * arg3.length) + 196] = ext_call.return_data[0]
                    require ext_code.size(arg4)
                    call arg4.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg3.length) + 132], address(_742), ext_call.return_data[0]
                    mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)
                    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6) <= (v * s / 10) + (s * v * s / 10) / 10:
                        s = s + 1
                        t = 0
                        u = t
                        v = v * s / 10
                        continue 
                    s = s + 1
                    t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)) - ((v * s / 10) + (s * v * s / 10) / 10)
                    u = t
                    v = v * s / 10
                    continue 
                if 0 <= u:
                    return v
                t = s - 1
                w = 0
                x = u
                y = v
                while w > x:
                    require 0 < arg3.length
                    require 1 < arg3.length
                    _881 = mem[160]
                    mem[(32 * arg3.length) + 132] = mem[140 len 20]
                    mem[(32 * arg3.length) + 164] = address(_881)
                    mem[(32 * arg3.length) + 196] = -(y * t / 10) + (t * y * t / 10) / 10
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg3.length) + 132], address(_881), -(y * t / 10) + (t * y * t / 10) / 10
                    mem[(32 * arg3.length) + 128 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < arg3.length
                    require ext_code.size(mem[268 len 20])
                    call mem[268 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg3.length
                    require 4 < arg3.length
                    _971 = mem[256]
                    mem[(32 * arg3.length) + 132] = mem[204 len 20]
                    mem[(32 * arg3.length) + 164] = address(_971)
                    mem[(32 * arg3.length) + 196] = ext_call.return_data[0]
                    require ext_code.size(arg4)
                    call arg4.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg3.length) + 132], address(_971), ext_call.return_data[0]
                    mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)
                    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6) <= -(y * t / 10) + (t * y * t / 10) / 10:
                        t = t - 1
                        w = 0
                        x = w
                        y = y * t / 10
                        continue 
                    t = t - 1
                    w = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)) - (-(y * t / 10) + (t * y * t / 10) / 10)
                    x = w
                    y = y * t / 10
                    continue 
            else:
                if 0 <= ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)) - arg5:
                    if -9 * arg5 / 10 <= -arg5:
                        return arg5
                    s = 9
                    t = ((997 * mem[(32 * arg3.length) + 128] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * mem[(32 * arg3.length) + 128] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)) - (9 * arg5 / 10)
                    u = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)) - arg5
                    v = arg5
                    while t > u:
                        require 0 < arg3.length
                        require 1 < arg3.length
                        _502 = mem[160]
                        mem[(32 * arg3.length) + 132] = mem[140 len 20]
                        mem[(32 * arg3.length) + 164] = address(_502)
                        mem[(32 * arg3.length) + 196] = -(v * s / 10) + (s * v * s / 10) / 10
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * arg3.length) + 132], address(_502), -(v * s / 10) + (s * v * s / 10) / 10
                        mem[(32 * arg3.length) + 128 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 4 < arg3.length
                        require ext_code.size(mem[268 len 20])
                        call mem[268 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < arg3.length
                        require 4 < arg3.length
                        _745 = mem[256]
                        mem[(32 * arg3.length) + 132] = mem[204 len 20]
                        mem[(32 * arg3.length) + 164] = address(_745)
                        mem[(32 * arg3.length) + 196] = ext_call.return_data[0]
                        require ext_code.size(arg4)
                        call arg4.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * arg3.length) + 132], address(_745), ext_call.return_data[0]
                        mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)
                        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6) <= -(v * s / 10) + (s * v * s / 10) / 10:
                            s = s - 1
                            t = 0
                            u = t
                            v = v * s / 10
                            continue 
                        s = s - 1
                        t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)) - (-(v * s / 10) + (s * v * s / 10) / 10)
                        u = t
                        v = v * s / 10
                        continue 
                    return v
                s = 11
                t = 0
                u = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)) - arg5
                v = arg5
                while t > u:
                    require 0 < arg3.length
                    require 1 < arg3.length
                    _505 = mem[160]
                    mem[(32 * arg3.length) + 132] = mem[140 len 20]
                    mem[(32 * arg3.length) + 164] = address(_505)
                    mem[(32 * arg3.length) + 196] = (v * s / 10) + (s * v * s / 10) / 10
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg3.length) + 132], address(_505), (v * s / 10) + (s * v * s / 10) / 10
                    mem[(32 * arg3.length) + 128 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < arg3.length
                    require ext_code.size(mem[268 len 20])
                    call mem[268 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg3.length
                    require 4 < arg3.length
                    _748 = mem[256]
                    mem[(32 * arg3.length) + 132] = mem[204 len 20]
                    mem[(32 * arg3.length) + 164] = address(_748)
                    mem[(32 * arg3.length) + 196] = ext_call.return_data[0]
                    require ext_code.size(arg4)
                    call arg4.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg3.length) + 132], address(_748), ext_call.return_data[0]
                    mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)
                    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6) <= (v * s / 10) + (s * v * s / 10) / 10:
                        s = s + 1
                        t = 0
                        u = t
                        v = v * s / 10
                        continue 
                    s = s + 1
                    t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)) - ((v * s / 10) + (s * v * s / 10) / 10)
                    u = t
                    v = v * s / 10
                    continue 
                if ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)) - (9 * arg5 / 10) <= u:
                    return v
                t = s - 1
                w = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)) - (9 * arg5 / 10)
                x = u
                y = v
                while w > x:
                    require 0 < arg3.length
                    require 1 < arg3.length
                    _884 = mem[160]
                    mem[(32 * arg3.length) + 132] = mem[140 len 20]
                    mem[(32 * arg3.length) + 164] = address(_884)
                    mem[(32 * arg3.length) + 196] = -(y * t / 10) + (t * y * t / 10) / 10
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg3.length) + 132], address(_884), -(y * t / 10) + (t * y * t / 10) / 10
                    mem[(32 * arg3.length) + 128 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < arg3.length
                    require ext_code.size(mem[268 len 20])
                    call mem[268 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg3.length
                    require 4 < arg3.length
                    _974 = mem[256]
                    mem[(32 * arg3.length) + 132] = mem[204 len 20]
                    mem[(32 * arg3.length) + 164] = address(_974)
                    mem[(32 * arg3.length) + 196] = ext_call.return_data[0]
                    require ext_code.size(arg4)
                    call arg4.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg3.length) + 132], address(_974), ext_call.return_data[0]
                    mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)
                    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6) <= -(y * t / 10) + (t * y * t / 10) / 10:
                        t = t - 1
                        w = 0
                        x = w
                        y = y * t / 10
                        continue 
                    t = t - 1
                    w = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)) - (-(y * t / 10) + (t * y * t / 10) / 10)
                    x = w
                    y = y * t / 10
                    continue 
        else:
            _92 = mem[160]
            mem[(32 * arg3.length) + 164] = mem[172 len 20]
            mem[(32 * arg3.length) + 196] = 9 * arg5 / 10
            require ext_code.size(stor3)
            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(mem[128]), address(_92), 9 * arg5 / 10
            mem[(32 * arg3.length) + 128 len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require 4 < arg3.length
            require ext_code.size(mem[268 len 20])
            call mem[268 len 20].0x313ce567 with:
                 gas gas_remaining wei
            mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 2 < arg3.length
            _141 = mem[192]
            require 4 < arg3.length
            _152 = mem[256]
            mem[(32 * arg3.length) + 132] = mem[204 len 20]
            mem[(32 * arg3.length) + 164] = address(_152)
            mem[(32 * arg3.length) + 196] = ext_call.return_data[0]
            require ext_code.size(arg4)
            call arg4.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(_141), address(_152), ext_call.return_data[0]
            mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)
            if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6) <= 9 * arg5 / 10:
                if -11 * arg5 / 10 <= -arg5:
                    if 0 <= ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)) - arg5:
                        return arg5
                    s = 9
                    t = 0
                    u = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)) - arg5
                    v = arg5
                    while t > u:
                        require 0 < arg3.length
                        require 1 < arg3.length
                        _508 = mem[160]
                        mem[(32 * arg3.length) + 132] = mem[140 len 20]
                        mem[(32 * arg3.length) + 164] = address(_508)
                        mem[(32 * arg3.length) + 196] = -(v * s / 10) + (s * v * s / 10) / 10
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * arg3.length) + 132], address(_508), -(v * s / 10) + (s * v * s / 10) / 10
                        mem[(32 * arg3.length) + 128 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 4 < arg3.length
                        require ext_code.size(mem[268 len 20])
                        call mem[268 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < arg3.length
                        require 4 < arg3.length
                        _751 = mem[256]
                        mem[(32 * arg3.length) + 132] = mem[204 len 20]
                        mem[(32 * arg3.length) + 164] = address(_751)
                        mem[(32 * arg3.length) + 196] = ext_call.return_data[0]
                        require ext_code.size(arg4)
                        call arg4.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * arg3.length) + 132], address(_751), ext_call.return_data[0]
                        mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)
                        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6) <= -(v * s / 10) + (s * v * s / 10) / 10:
                            s = s - 1
                            t = 0
                            u = t
                            v = v * s / 10
                            continue 
                        s = s - 1
                        t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)) - (-(v * s / 10) + (s * v * s / 10) / 10)
                        u = t
                        v = v * s / 10
                        continue 
                    return v
                s = 11
                t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)) - (11 * arg5 / 10)
                u = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)) - arg5
                v = arg5
                while t > u:
                    require 0 < arg3.length
                    require 1 < arg3.length
                    _511 = mem[160]
                    mem[(32 * arg3.length) + 132] = mem[140 len 20]
                    mem[(32 * arg3.length) + 164] = address(_511)
                    mem[(32 * arg3.length) + 196] = (v * s / 10) + (s * v * s / 10) / 10
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg3.length) + 132], address(_511), (v * s / 10) + (s * v * s / 10) / 10
                    mem[(32 * arg3.length) + 128 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < arg3.length
                    require ext_code.size(mem[268 len 20])
                    call mem[268 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg3.length
                    require 4 < arg3.length
                    _754 = mem[256]
                    mem[(32 * arg3.length) + 132] = mem[204 len 20]
                    mem[(32 * arg3.length) + 164] = address(_754)
                    mem[(32 * arg3.length) + 196] = ext_call.return_data[0]
                    require ext_code.size(arg4)
                    call arg4.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg3.length) + 132], address(_754), ext_call.return_data[0]
                    mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)
                    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6) <= (v * s / 10) + (s * v * s / 10) / 10:
                        s = s + 1
                        t = 0
                        u = t
                        v = v * s / 10
                        continue 
                    s = s + 1
                    t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)) - ((v * s / 10) + (s * v * s / 10) / 10)
                    u = t
                    v = v * s / 10
                    continue 
                if 0 <= u:
                    return v
                t = s - 1
                w = 0
                x = u
                y = v
                while w > x:
                    require 0 < arg3.length
                    require 1 < arg3.length
                    _887 = mem[160]
                    mem[(32 * arg3.length) + 132] = mem[140 len 20]
                    mem[(32 * arg3.length) + 164] = address(_887)
                    mem[(32 * arg3.length) + 196] = -(y * t / 10) + (t * y * t / 10) / 10
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg3.length) + 132], address(_887), -(y * t / 10) + (t * y * t / 10) / 10
                    mem[(32 * arg3.length) + 128 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < arg3.length
                    require ext_code.size(mem[268 len 20])
                    call mem[268 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg3.length
                    require 4 < arg3.length
                    _977 = mem[256]
                    mem[(32 * arg3.length) + 132] = mem[204 len 20]
                    mem[(32 * arg3.length) + 164] = address(_977)
                    mem[(32 * arg3.length) + 196] = ext_call.return_data[0]
                    require ext_code.size(arg4)
                    call arg4.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg3.length) + 132], address(_977), ext_call.return_data[0]
                    mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)
                    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6) <= -(y * t / 10) + (t * y * t / 10) / 10:
                        t = t - 1
                        w = 0
                        x = w
                        y = y * t / 10
                        continue 
                    t = t - 1
                    w = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)) - (-(y * t / 10) + (t * y * t / 10) / 10)
                    x = w
                    y = y * t / 10
                    continue 
            else:
                if -11 * arg5 / 10 <= -arg5:
                    if -9 * arg5 / 10 <= -arg5:
                        return arg5
                    s = 9
                    t = ((997 * mem[(32 * arg3.length) + 128] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * mem[(32 * arg3.length) + 128] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)) - (9 * arg5 / 10)
                    u = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)) - arg5
                    v = arg5
                    while t > u:
                        require 0 < arg3.length
                        require 1 < arg3.length
                        _514 = mem[160]
                        mem[(32 * arg3.length) + 132] = mem[140 len 20]
                        mem[(32 * arg3.length) + 164] = address(_514)
                        mem[(32 * arg3.length) + 196] = -(v * s / 10) + (s * v * s / 10) / 10
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * arg3.length) + 132], address(_514), -(v * s / 10) + (s * v * s / 10) / 10
                        mem[(32 * arg3.length) + 128 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 4 < arg3.length
                        require ext_code.size(mem[268 len 20])
                        call mem[268 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < arg3.length
                        require 4 < arg3.length
                        _757 = mem[256]
                        mem[(32 * arg3.length) + 132] = mem[204 len 20]
                        mem[(32 * arg3.length) + 164] = address(_757)
                        mem[(32 * arg3.length) + 196] = ext_call.return_data[0]
                        require ext_code.size(arg4)
                        call arg4.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * arg3.length) + 132], address(_757), ext_call.return_data[0]
                        mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)
                        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6) <= -(v * s / 10) + (s * v * s / 10) / 10:
                            s = s - 1
                            t = 0
                            u = t
                            v = v * s / 10
                            continue 
                        s = s - 1
                        t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)) - (-(v * s / 10) + (s * v * s / 10) / 10)
                        u = t
                        v = v * s / 10
                        continue 
                    return v
                s = 11
                t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)) - (11 * arg5 / 10)
                u = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)) - arg5
                v = arg5
                while t > u:
                    require 0 < arg3.length
                    require 1 < arg3.length
                    _517 = mem[160]
                    mem[(32 * arg3.length) + 132] = mem[140 len 20]
                    mem[(32 * arg3.length) + 164] = address(_517)
                    mem[(32 * arg3.length) + 196] = (v * s / 10) + (s * v * s / 10) / 10
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg3.length) + 132], address(_517), (v * s / 10) + (s * v * s / 10) / 10
                    mem[(32 * arg3.length) + 128 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < arg3.length
                    require ext_code.size(mem[268 len 20])
                    call mem[268 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg3.length
                    require 4 < arg3.length
                    _760 = mem[256]
                    mem[(32 * arg3.length) + 132] = mem[204 len 20]
                    mem[(32 * arg3.length) + 164] = address(_760)
                    mem[(32 * arg3.length) + 196] = ext_call.return_data[0]
                    require ext_code.size(arg4)
                    call arg4.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg3.length) + 132], address(_760), ext_call.return_data[0]
                    mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)
                    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6) <= (v * s / 10) + (s * v * s / 10) / 10:
                        s = s + 1
                        t = 0
                        u = t
                        v = v * s / 10
                        continue 
                    s = s + 1
                    t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)) - ((v * s / 10) + (s * v * s / 10) / 10)
                    u = t
                    v = v * s / 10
                    continue 
                if ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)) - (9 * arg5 / 10) <= u:
                    return v
                t = s - 1
                w = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)) - (9 * arg5 / 10)
                x = u
                y = v
                while w > x:
                    require 0 < arg3.length
                    require 1 < arg3.length
                    _890 = mem[160]
                    mem[(32 * arg3.length) + 132] = mem[140 len 20]
                    mem[(32 * arg3.length) + 164] = address(_890)
                    mem[(32 * arg3.length) + 196] = -(y * t / 10) + (t * y * t / 10) / 10
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg3.length) + 132], address(_890), -(y * t / 10) + (t * y * t / 10) / 10
                    mem[(32 * arg3.length) + 128 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < arg3.length
                    require ext_code.size(mem[268 len 20])
                    call mem[268 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg3.length
                    require 4 < arg3.length
                    _980 = mem[256]
                    mem[(32 * arg3.length) + 132] = mem[204 len 20]
                    mem[(32 * arg3.length) + 164] = address(_980)
                    mem[(32 * arg3.length) + 196] = ext_call.return_data[0]
                    require ext_code.size(arg4)
                    call arg4.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg3.length) + 132], address(_980), ext_call.return_data[0]
                    mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)
                    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6) <= -(y * t / 10) + (t * y * t / 10) / 10:
                        t = t - 1
                        w = 0
                        x = w
                        y = y * t / 10
                        continue 
                    t = t - 1
                    w = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * arg2) + (997 * arg6 * arg2) / (1000 * arg1) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * arg6)) - (-(y * t / 10) + (t * y * t / 10) / 10)
                    x = w
                    y = y * t / 10
                    continue 
    return y
}

function sub_ca73e942(?) {
    mem[128 len 32 * arg3.length] = call.data[arg3 + 36 len 32 * arg3.length]
    require (1000 * arg1) + (997 * arg5)
    require 0 < arg3.length
    require ext_code.size(mem[140 len 20])
    call mem[140 len 20].0x313ce567 with:
         gas gas_remaining wei
    mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require 0 < arg3.length
    _9 = mem[128]
    require 2 < arg3.length
    _11 = mem[192]
    require 0 < arg3.length
    require ext_code.size(mem[140 len 20])
    call mem[140 len 20].0x313ce567 with:
         gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require 10^(-ext_call.return_data[0] + 18)
    mem[(32 * arg3.length) + 132] = mem[140 len 20]
    mem[(32 * arg3.length) + 164] = address(_11)
    mem[(32 * arg3.length) + 196] = (997 * arg5 * arg2 / (1000 * arg1) + (997 * arg5)) + arg6 / 10^(-ext_call.return_data[0] + 18)
    require ext_code.size(arg4)
    call arg4.getReturn(address arg1, address arg2, uint256 arg3) with:
         gas gas_remaining wei
        args address(_9), address(_11), (997 * arg5 * arg2 / (1000 * arg1) + (997 * arg5)) + arg6 / 10^(-ext_call.return_data[0] + 18)
    mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require 2 < arg3.length
    _23 = mem[192]
    require 4 < arg3.length
    _25 = mem[256]
    mem[(32 * arg3.length) + 164] = mem[268 len 20]
    mem[(32 * arg3.length) + 196] = ext_call.return_data[0]
    require ext_code.size(stor3)
    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
         gas gas_remaining wei
        args address(_23), address(_25), ext_call.return_data[0]
    mem[(32 * arg3.length) + 128 len 64] = ext_call.return_data[0 len 64]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    require (1000 * arg1) + (997 * 11 * arg5 / 10)
    require 0 < arg3.length
    require ext_code.size(mem[140 len 20])
    call mem[140 len 20].0x313ce567 with:
         gas gas_remaining wei
    mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require 0 < arg3.length
    if ext_call.return_data[0] <= arg5:
        _45 = mem[128]
        require 2 < arg3.length
        _49 = mem[192]
        require 0 < arg3.length
        require ext_code.size(mem[140 len 20])
        call mem[140 len 20].0x313ce567 with:
             gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 10^(-ext_call.return_data[0] + 18)
        mem[(32 * arg3.length) + 132] = mem[140 len 20]
        mem[(32 * arg3.length) + 164] = address(_49)
        mem[(32 * arg3.length) + 196] = (997 * 11 * arg5 / 10 * arg2 / (1000 * arg1) + (997 * 11 * arg5 / 10)) + arg6 / 10^(-ext_call.return_data[0] + 18)
        require ext_code.size(arg4)
        call arg4.getReturn(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args address(_45), address(_49), (997 * 11 * arg5 / 10 * arg2 / (1000 * arg1) + (997 * 11 * arg5 / 10)) + arg6 / 10^(-ext_call.return_data[0] + 18)
        mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 2 < arg3.length
        _73 = mem[192]
        require 4 < arg3.length
        _77 = mem[256]
        mem[(32 * arg3.length) + 164] = mem[268 len 20]
        mem[(32 * arg3.length) + 196] = ext_call.return_data[0]
        require ext_code.size(stor3)
        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args address(_73), address(_77), ext_call.return_data[0]
        mem[(32 * arg3.length) + 128 len 64] = ext_call.return_data[0 len 64]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 64
        require (1000 * arg1) + (997 * 9 * arg5 / 10)
        require 0 < arg3.length
        require ext_code.size(mem[140 len 20])
        call mem[140 len 20].0x313ce567 with:
             gas gas_remaining wei
        mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 0 < arg3.length
        if ext_call.return_data[0] <= 11 * arg5 / 10:
            _117 = mem[128]
            require 2 < arg3.length
            _125 = mem[192]
            require 0 < arg3.length
            require ext_code.size(mem[140 len 20])
            call mem[140 len 20].0x313ce567 with:
                 gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 10^(-ext_call.return_data[0] + 18)
            mem[(32 * arg3.length) + 132] = mem[140 len 20]
            mem[(32 * arg3.length) + 164] = address(_125)
            mem[(32 * arg3.length) + 196] = (997 * 9 * arg5 / 10 * arg2 / (1000 * arg1) + (997 * 9 * arg5 / 10)) + arg6 / 10^(-ext_call.return_data[0] + 18)
            require ext_code.size(arg4)
            call arg4.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(_117), address(_125), (997 * 9 * arg5 / 10 * arg2 / (1000 * arg1) + (997 * 9 * arg5 / 10)) + arg6 / 10^(-ext_call.return_data[0] + 18)
            mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 2 < arg3.length
            _173 = mem[192]
            require 4 < arg3.length
            _181 = mem[256]
            mem[(32 * arg3.length) + 164] = mem[268 len 20]
            mem[(32 * arg3.length) + 196] = ext_call.return_data[0]
            require ext_code.size(stor3)
            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(_173), address(_181), ext_call.return_data[0]
            mem[(32 * arg3.length) + 128 len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            if ext_call.return_data[0] <= 9 * arg5 / 10:
                return arg5
            if ext_call.return_data[0] - (9 * arg5 / 10) <= 0:
                return arg5
            s = 9
            t = mem[(32 * arg3.length) + 128] - (9 * arg5 / 10)
            u = 0
            v = arg5
            while t > u:
                require (1000 * arg1) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)
                require 0 < arg3.length
                require ext_code.size(mem[140 len 20])
                call mem[140 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 0 < arg3.length
                require 2 < arg3.length
                _685 = mem[192]
                require 0 < arg3.length
                require ext_code.size(mem[140 len 20])
                call mem[140 len 20].0x313ce567 with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 10^(-ext_call.return_data[0] + 18)
                mem[(32 * arg3.length) + 132] = mem[140 len 20]
                mem[(32 * arg3.length) + 164] = address(_685)
                mem[(32 * arg3.length) + 196] = (997 * -(v * s / 10) + (s * v * s / 10) / 10 * arg2 / (1000 * arg1) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)) + arg6 / 10^(-ext_call.return_data[0] + 18)
                require ext_code.size(arg4)
                call arg4.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg3.length) + 132], address(_685), (997 * -(v * s / 10) + (s * v * s / 10) / 10 * arg2 / (1000 * arg1) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)) + arg6 / 10^(-ext_call.return_data[0] + 18)
                mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < arg3.length
                require 4 < arg3.length
                _923 = mem[256]
                mem[(32 * arg3.length) + 132] = mem[204 len 20]
                mem[(32 * arg3.length) + 164] = address(_923)
                mem[(32 * arg3.length) + 196] = ext_call.return_data[0]
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg3.length) + 132], address(_923), ext_call.return_data[0]
                mem[(32 * arg3.length) + 128 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                if ext_call.return_data[0] <= -(v * s / 10) + (s * v * s / 10) / 10:
                    s = s - 1
                    t = 0
                    u = t
                    v = v * s / 10
                    continue 
                s = s - 1
                t = ext_call.return_data[0] - (-(v * s / 10) + (s * v * s / 10) / 10)
                u = t
                v = v * s / 10
                continue 
            return v
        _119 = mem[128]
        require 2 < arg3.length
        _127 = mem[192]
        require 0 < arg3.length
        require ext_code.size(mem[140 len 20])
        call mem[140 len 20].0x313ce567 with:
             gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 10^(-ext_call.return_data[0] + 18)
        mem[(32 * arg3.length) + 132] = mem[140 len 20]
        mem[(32 * arg3.length) + 164] = address(_127)
        mem[(32 * arg3.length) + 196] = (997 * 9 * arg5 / 10 * arg2 / (1000 * arg1) + (997 * 9 * arg5 / 10)) + arg6 / 10^(-ext_call.return_data[0] + 18)
        require ext_code.size(arg4)
        call arg4.getReturn(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args address(_119), address(_127), (997 * 9 * arg5 / 10 * arg2 / (1000 * arg1) + (997 * 9 * arg5 / 10)) + arg6 / 10^(-ext_call.return_data[0] + 18)
        mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 2 < arg3.length
        _175 = mem[192]
        require 4 < arg3.length
        _184 = mem[256]
        mem[(32 * arg3.length) + 164] = mem[268 len 20]
        mem[(32 * arg3.length) + 196] = ext_call.return_data[0]
        require ext_code.size(stor3)
        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args address(_175), address(_184), ext_call.return_data[0]
        mem[(32 * arg3.length) + 128 len 64] = ext_call.return_data[0 len 64]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 64
        if ext_call.return_data[0] <= 9 * arg5 / 10:
            if ext_call.return_data[0] - (11 * arg5 / 10) <= 0:
                return arg5
            s = 11
            t = ext_call.return_data[0] - (11 * arg5 / 10)
            u = 0
            v = arg5
            while t > u:
                require (1000 * arg1) + (997 * (v * s / 10) + (s * v * s / 10) / 10)
                require 0 < arg3.length
                require ext_code.size(mem[140 len 20])
                call mem[140 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 0 < arg3.length
                require 2 < arg3.length
                _687 = mem[192]
                require 0 < arg3.length
                require ext_code.size(mem[140 len 20])
                call mem[140 len 20].0x313ce567 with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 10^(-ext_call.return_data[0] + 18)
                mem[(32 * arg3.length) + 132] = mem[140 len 20]
                mem[(32 * arg3.length) + 164] = address(_687)
                mem[(32 * arg3.length) + 196] = (997 * (v * s / 10) + (s * v * s / 10) / 10 * arg2 / (1000 * arg1) + (997 * (v * s / 10) + (s * v * s / 10) / 10)) + arg6 / 10^(-ext_call.return_data[0] + 18)
                require ext_code.size(arg4)
                call arg4.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg3.length) + 132], address(_687), (997 * (v * s / 10) + (s * v * s / 10) / 10 * arg2 / (1000 * arg1) + (997 * (v * s / 10) + (s * v * s / 10) / 10)) + arg6 / 10^(-ext_call.return_data[0] + 18)
                mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < arg3.length
                require 4 < arg3.length
                _926 = mem[256]
                mem[(32 * arg3.length) + 132] = mem[204 len 20]
                mem[(32 * arg3.length) + 164] = address(_926)
                mem[(32 * arg3.length) + 196] = ext_call.return_data[0]
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg3.length) + 132], address(_926), ext_call.return_data[0]
                mem[(32 * arg3.length) + 128 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                if ext_call.return_data[0] <= (v * s / 10) + (s * v * s / 10) / 10:
                    s = s + 1
                    t = 0
                    u = t
                    v = v * s / 10
                    continue 
                s = s + 1
                t = ext_call.return_data[0] - ((v * s / 10) + (s * v * s / 10) / 10)
                u = t
                v = v * s / 10
                continue 
            if 0 <= u:
                return v
            t = s - 1
            w = 0
            x = u
            y = v
            while w > x:
                require (1000 * arg1) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)
                require 0 < arg3.length
                require ext_code.size(mem[140 len 20])
                call mem[140 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 0 < arg3.length
                require 2 < arg3.length
                _1121 = mem[192]
                require 0 < arg3.length
                require ext_code.size(mem[140 len 20])
                call mem[140 len 20].0x313ce567 with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 10^(-ext_call.return_data[0] + 18)
                mem[(32 * arg3.length) + 132] = mem[140 len 20]
                mem[(32 * arg3.length) + 164] = address(_1121)
                mem[(32 * arg3.length) + 196] = (997 * -(y * t / 10) + (t * y * t / 10) / 10 * arg2 / (1000 * arg1) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)) + arg6 / 10^(-ext_call.return_data[0] + 18)
                require ext_code.size(arg4)
                call arg4.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg3.length) + 132], address(_1121), (997 * -(y * t / 10) + (t * y * t / 10) / 10 * arg2 / (1000 * arg1) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)) + arg6 / 10^(-ext_call.return_data[0] + 18)
                mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < arg3.length
                require 4 < arg3.length
                _1205 = mem[256]
                mem[(32 * arg3.length) + 132] = mem[204 len 20]
                mem[(32 * arg3.length) + 164] = address(_1205)
                mem[(32 * arg3.length) + 196] = ext_call.return_data[0]
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg3.length) + 132], address(_1205), ext_call.return_data[0]
                mem[(32 * arg3.length) + 128 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                if ext_call.return_data[0] <= -(y * t / 10) + (t * y * t / 10) / 10:
                    t = t - 1
                    w = 0
                    x = w
                    y = y * t / 10
                    continue 
                t = t - 1
                w = ext_call.return_data[0] - (-(y * t / 10) + (t * y * t / 10) / 10)
                x = w
                y = y * t / 10
                continue 
        else:
            if ext_call.return_data[0] - (11 * arg5 / 10) <= 0:
                if ext_call.return_data[0] - (9 * arg5 / 10) <= 0:
                    return arg5
                s = 9
                t = mem[(32 * arg3.length) + 128] - (9 * arg5 / 10)
                u = 0
                v = arg5
                while t > u:
                    require (1000 * arg1) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)
                    require 0 < arg3.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < arg3.length
                    require 2 < arg3.length
                    _689 = mem[192]
                    require 0 < arg3.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg3.length) + 132] = mem[140 len 20]
                    mem[(32 * arg3.length) + 164] = address(_689)
                    mem[(32 * arg3.length) + 196] = (997 * -(v * s / 10) + (s * v * s / 10) / 10 * arg2 / (1000 * arg1) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)) + arg6 / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg4)
                    call arg4.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg3.length) + 132], address(_689), (997 * -(v * s / 10) + (s * v * s / 10) / 10 * arg2 / (1000 * arg1) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)) + arg6 / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg3.length
                    require 4 < arg3.length
                    _929 = mem[256]
                    mem[(32 * arg3.length) + 132] = mem[204 len 20]
                    mem[(32 * arg3.length) + 164] = address(_929)
                    mem[(32 * arg3.length) + 196] = ext_call.return_data[0]
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg3.length) + 132], address(_929), ext_call.return_data[0]
                    mem[(32 * arg3.length) + 128 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    if ext_call.return_data[0] <= -(v * s / 10) + (s * v * s / 10) / 10:
                        s = s - 1
                        t = 0
                        u = t
                        v = v * s / 10
                        continue 
                    s = s - 1
                    t = ext_call.return_data[0] - (-(v * s / 10) + (s * v * s / 10) / 10)
                    u = t
                    v = v * s / 10
                    continue 
                return v
            s = 11
            t = ext_call.return_data[0] - (11 * arg5 / 10)
            u = 0
            v = arg5
            while t > u:
                require (1000 * arg1) + (997 * (v * s / 10) + (s * v * s / 10) / 10)
                require 0 < arg3.length
                require ext_code.size(mem[140 len 20])
                call mem[140 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 0 < arg3.length
                require 2 < arg3.length
                _691 = mem[192]
                require 0 < arg3.length
                require ext_code.size(mem[140 len 20])
                call mem[140 len 20].0x313ce567 with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 10^(-ext_call.return_data[0] + 18)
                mem[(32 * arg3.length) + 132] = mem[140 len 20]
                mem[(32 * arg3.length) + 164] = address(_691)
                mem[(32 * arg3.length) + 196] = (997 * (v * s / 10) + (s * v * s / 10) / 10 * arg2 / (1000 * arg1) + (997 * (v * s / 10) + (s * v * s / 10) / 10)) + arg6 / 10^(-ext_call.return_data[0] + 18)
                require ext_code.size(arg4)
                call arg4.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg3.length) + 132], address(_691), (997 * (v * s / 10) + (s * v * s / 10) / 10 * arg2 / (1000 * arg1) + (997 * (v * s / 10) + (s * v * s / 10) / 10)) + arg6 / 10^(-ext_call.return_data[0] + 18)
                mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < arg3.length
                require 4 < arg3.length
                _932 = mem[256]
                mem[(32 * arg3.length) + 132] = mem[204 len 20]
                mem[(32 * arg3.length) + 164] = address(_932)
                mem[(32 * arg3.length) + 196] = ext_call.return_data[0]
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg3.length) + 132], address(_932), ext_call.return_data[0]
                mem[(32 * arg3.length) + 128 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                if ext_call.return_data[0] <= (v * s / 10) + (s * v * s / 10) / 10:
                    s = s + 1
                    t = 0
                    u = t
                    v = v * s / 10
                    continue 
                s = s + 1
                t = ext_call.return_data[0] - ((v * s / 10) + (s * v * s / 10) / 10)
                u = t
                v = v * s / 10
                continue 
            if ext_call.return_data[0] - (9 * arg5 / 10) <= u:
                return v
            t = s - 1
            w = ext_call.return_data[0] - (9 * arg5 / 10)
            x = u
            y = v
            while w > x:
                require (1000 * arg1) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)
                require 0 < arg3.length
                require ext_code.size(mem[140 len 20])
                call mem[140 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 0 < arg3.length
                require 2 < arg3.length
                _1123 = mem[192]
                require 0 < arg3.length
                require ext_code.size(mem[140 len 20])
                call mem[140 len 20].0x313ce567 with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 10^(-ext_call.return_data[0] + 18)
                mem[(32 * arg3.length) + 132] = mem[140 len 20]
                mem[(32 * arg3.length) + 164] = address(_1123)
                mem[(32 * arg3.length) + 196] = (997 * -(y * t / 10) + (t * y * t / 10) / 10 * arg2 / (1000 * arg1) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)) + arg6 / 10^(-ext_call.return_data[0] + 18)
                require ext_code.size(arg4)
                call arg4.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg3.length) + 132], address(_1123), (997 * -(y * t / 10) + (t * y * t / 10) / 10 * arg2 / (1000 * arg1) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)) + arg6 / 10^(-ext_call.return_data[0] + 18)
                mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < arg3.length
                require 4 < arg3.length
                _1208 = mem[256]
                mem[(32 * arg3.length) + 132] = mem[204 len 20]
                mem[(32 * arg3.length) + 164] = address(_1208)
                mem[(32 * arg3.length) + 196] = ext_call.return_data[0]
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg3.length) + 132], address(_1208), ext_call.return_data[0]
                mem[(32 * arg3.length) + 128 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                if ext_call.return_data[0] <= -(y * t / 10) + (t * y * t / 10) / 10:
                    t = t - 1
                    w = 0
                    x = w
                    y = y * t / 10
                    continue 
                t = t - 1
                w = ext_call.return_data[0] - (-(y * t / 10) + (t * y * t / 10) / 10)
                x = w
                y = y * t / 10
                continue 
    else:
        _47 = mem[128]
        require 2 < arg3.length
        _51 = mem[192]
        require 0 < arg3.length
        require ext_code.size(mem[140 len 20])
        call mem[140 len 20].0x313ce567 with:
             gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 10^(-ext_call.return_data[0] + 18)
        mem[(32 * arg3.length) + 132] = mem[140 len 20]
        mem[(32 * arg3.length) + 164] = address(_51)
        mem[(32 * arg3.length) + 196] = (997 * 11 * arg5 / 10 * arg2 / (1000 * arg1) + (997 * 11 * arg5 / 10)) + arg6 / 10^(-ext_call.return_data[0] + 18)
        require ext_code.size(arg4)
        call arg4.getReturn(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args address(_47), address(_51), (997 * 11 * arg5 / 10 * arg2 / (1000 * arg1) + (997 * 11 * arg5 / 10)) + arg6 / 10^(-ext_call.return_data[0] + 18)
        mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 2 < arg3.length
        _75 = mem[192]
        require 4 < arg3.length
        _80 = mem[256]
        mem[(32 * arg3.length) + 164] = mem[268 len 20]
        mem[(32 * arg3.length) + 196] = ext_call.return_data[0]
        require ext_code.size(stor3)
        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args address(_75), address(_80), ext_call.return_data[0]
        mem[(32 * arg3.length) + 128 len 64] = ext_call.return_data[0 len 64]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 64
        require (1000 * arg1) + (997 * 9 * arg5 / 10)
        require 0 < arg3.length
        require ext_code.size(mem[140 len 20])
        call mem[140 len 20].0x313ce567 with:
             gas gas_remaining wei
        mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 0 < arg3.length
        if ext_call.return_data[0] <= 11 * arg5 / 10:
            _121 = mem[128]
            require 2 < arg3.length
            _129 = mem[192]
            require 0 < arg3.length
            require ext_code.size(mem[140 len 20])
            call mem[140 len 20].0x313ce567 with:
                 gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 10^(-ext_call.return_data[0] + 18)
            mem[(32 * arg3.length) + 132] = mem[140 len 20]
            mem[(32 * arg3.length) + 164] = address(_129)
            mem[(32 * arg3.length) + 196] = (997 * 9 * arg5 / 10 * arg2 / (1000 * arg1) + (997 * 9 * arg5 / 10)) + arg6 / 10^(-ext_call.return_data[0] + 18)
            require ext_code.size(arg4)
            call arg4.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(_121), address(_129), (997 * 9 * arg5 / 10 * arg2 / (1000 * arg1) + (997 * 9 * arg5 / 10)) + arg6 / 10^(-ext_call.return_data[0] + 18)
            mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 2 < arg3.length
            _177 = mem[192]
            require 4 < arg3.length
            _187 = mem[256]
            mem[(32 * arg3.length) + 164] = mem[268 len 20]
            mem[(32 * arg3.length) + 196] = ext_call.return_data[0]
            require ext_code.size(stor3)
            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(_177), address(_187), ext_call.return_data[0]
            mem[(32 * arg3.length) + 128 len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            if ext_call.return_data[0] <= 9 * arg5 / 10:
                if 0 <= ext_call.return_data[0] - arg5:
                    return arg5
                s = 11
                t = 0
                u = ext_call.return_data[0] - arg5
                v = arg5
                while t > u:
                    require (1000 * arg1) + (997 * (v * s / 10) + (s * v * s / 10) / 10)
                    require 0 < arg3.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < arg3.length
                    require 2 < arg3.length
                    _693 = mem[192]
                    require 0 < arg3.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg3.length) + 132] = mem[140 len 20]
                    mem[(32 * arg3.length) + 164] = address(_693)
                    mem[(32 * arg3.length) + 196] = (997 * (v * s / 10) + (s * v * s / 10) / 10 * arg2 / (1000 * arg1) + (997 * (v * s / 10) + (s * v * s / 10) / 10)) + arg6 / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg4)
                    call arg4.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg3.length) + 132], address(_693), (997 * (v * s / 10) + (s * v * s / 10) / 10 * arg2 / (1000 * arg1) + (997 * (v * s / 10) + (s * v * s / 10) / 10)) + arg6 / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg3.length
                    require 4 < arg3.length
                    _935 = mem[256]
                    mem[(32 * arg3.length) + 132] = mem[204 len 20]
                    mem[(32 * arg3.length) + 164] = address(_935)
                    mem[(32 * arg3.length) + 196] = ext_call.return_data[0]
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg3.length) + 132], address(_935), ext_call.return_data[0]
                    mem[(32 * arg3.length) + 128 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    if ext_call.return_data[0] <= (v * s / 10) + (s * v * s / 10) / 10:
                        s = s + 1
                        t = 0
                        u = t
                        v = v * s / 10
                        continue 
                    s = s + 1
                    t = ext_call.return_data[0] - ((v * s / 10) + (s * v * s / 10) / 10)
                    u = t
                    v = v * s / 10
                    continue 
                if 0 <= u:
                    return v
                t = s - 1
                w = 0
                x = u
                y = v
                while w > x:
                    require (1000 * arg1) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)
                    require 0 < arg3.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < arg3.length
                    require 2 < arg3.length
                    _1125 = mem[192]
                    require 0 < arg3.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg3.length) + 132] = mem[140 len 20]
                    mem[(32 * arg3.length) + 164] = address(_1125)
                    mem[(32 * arg3.length) + 196] = (997 * -(y * t / 10) + (t * y * t / 10) / 10 * arg2 / (1000 * arg1) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)) + arg6 / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg4)
                    call arg4.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg3.length) + 132], address(_1125), (997 * -(y * t / 10) + (t * y * t / 10) / 10 * arg2 / (1000 * arg1) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)) + arg6 / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg3.length
                    require 4 < arg3.length
                    _1211 = mem[256]
                    mem[(32 * arg3.length) + 132] = mem[204 len 20]
                    mem[(32 * arg3.length) + 164] = address(_1211)
                    mem[(32 * arg3.length) + 196] = ext_call.return_data[0]
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg3.length) + 132], address(_1211), ext_call.return_data[0]
                    mem[(32 * arg3.length) + 128 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    if ext_call.return_data[0] <= -(y * t / 10) + (t * y * t / 10) / 10:
                        t = t - 1
                        w = 0
                        x = w
                        y = y * t / 10
                        continue 
                    t = t - 1
                    w = ext_call.return_data[0] - (-(y * t / 10) + (t * y * t / 10) / 10)
                    x = w
                    y = y * t / 10
                    continue 
            else:
                if 0 <= ext_call.return_data[0] - arg5:
                    if -9 * arg5 / 10 <= -arg5:
                        return arg5
                    s = 9
                    t = mem[(32 * arg3.length) + 128] - (9 * arg5 / 10)
                    u = ext_call.return_data[0] - arg5
                    v = arg5
                    while t > u:
                        require (1000 * arg1) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)
                        require 0 < arg3.length
                        require ext_code.size(mem[140 len 20])
                        call mem[140 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 0 < arg3.length
                        require 2 < arg3.length
                        _695 = mem[192]
                        require 0 < arg3.length
                        require ext_code.size(mem[140 len 20])
                        call mem[140 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * arg3.length) + 132] = mem[140 len 20]
                        mem[(32 * arg3.length) + 164] = address(_695)
                        mem[(32 * arg3.length) + 196] = (997 * -(v * s / 10) + (s * v * s / 10) / 10 * arg2 / (1000 * arg1) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)) + arg6 / 10^(-ext_call.return_data[0] + 18)
                        require ext_code.size(arg4)
                        call arg4.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * arg3.length) + 132], address(_695), (997 * -(v * s / 10) + (s * v * s / 10) / 10 * arg2 / (1000 * arg1) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)) + arg6 / 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < arg3.length
                        require 4 < arg3.length
                        _938 = mem[256]
                        mem[(32 * arg3.length) + 132] = mem[204 len 20]
                        mem[(32 * arg3.length) + 164] = address(_938)
                        mem[(32 * arg3.length) + 196] = ext_call.return_data[0]
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * arg3.length) + 132], address(_938), ext_call.return_data[0]
                        mem[(32 * arg3.length) + 128 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        if ext_call.return_data[0] <= -(v * s / 10) + (s * v * s / 10) / 10:
                            s = s - 1
                            t = 0
                            u = t
                            v = v * s / 10
                            continue 
                        s = s - 1
                        t = ext_call.return_data[0] - (-(v * s / 10) + (s * v * s / 10) / 10)
                        u = t
                        v = v * s / 10
                        continue 
                    return v
                s = 11
                t = 0
                u = ext_call.return_data[0] - arg5
                v = arg5
                while t > u:
                    require (1000 * arg1) + (997 * (v * s / 10) + (s * v * s / 10) / 10)
                    require 0 < arg3.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < arg3.length
                    require 2 < arg3.length
                    _697 = mem[192]
                    require 0 < arg3.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg3.length) + 132] = mem[140 len 20]
                    mem[(32 * arg3.length) + 164] = address(_697)
                    mem[(32 * arg3.length) + 196] = (997 * (v * s / 10) + (s * v * s / 10) / 10 * arg2 / (1000 * arg1) + (997 * (v * s / 10) + (s * v * s / 10) / 10)) + arg6 / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg4)
                    call arg4.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg3.length) + 132], address(_697), (997 * (v * s / 10) + (s * v * s / 10) / 10 * arg2 / (1000 * arg1) + (997 * (v * s / 10) + (s * v * s / 10) / 10)) + arg6 / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg3.length
                    require 4 < arg3.length
                    _941 = mem[256]
                    mem[(32 * arg3.length) + 132] = mem[204 len 20]
                    mem[(32 * arg3.length) + 164] = address(_941)
                    mem[(32 * arg3.length) + 196] = ext_call.return_data[0]
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg3.length) + 132], address(_941), ext_call.return_data[0]
                    mem[(32 * arg3.length) + 128 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    if ext_call.return_data[0] <= (v * s / 10) + (s * v * s / 10) / 10:
                        s = s + 1
                        t = 0
                        u = t
                        v = v * s / 10
                        continue 
                    s = s + 1
                    t = ext_call.return_data[0] - ((v * s / 10) + (s * v * s / 10) / 10)
                    u = t
                    v = v * s / 10
                    continue 
                if ext_call.return_data[0] - (9 * arg5 / 10) <= u:
                    return v
                t = s - 1
                w = ext_call.return_data[0] - (9 * arg5 / 10)
                x = u
                y = v
                while w > x:
                    require (1000 * arg1) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)
                    require 0 < arg3.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < arg3.length
                    require 2 < arg3.length
                    _1127 = mem[192]
                    require 0 < arg3.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg3.length) + 132] = mem[140 len 20]
                    mem[(32 * arg3.length) + 164] = address(_1127)
                    mem[(32 * arg3.length) + 196] = (997 * -(y * t / 10) + (t * y * t / 10) / 10 * arg2 / (1000 * arg1) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)) + arg6 / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg4)
                    call arg4.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg3.length) + 132], address(_1127), (997 * -(y * t / 10) + (t * y * t / 10) / 10 * arg2 / (1000 * arg1) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)) + arg6 / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg3.length
                    require 4 < arg3.length
                    _1214 = mem[256]
                    mem[(32 * arg3.length) + 132] = mem[204 len 20]
                    mem[(32 * arg3.length) + 164] = address(_1214)
                    mem[(32 * arg3.length) + 196] = ext_call.return_data[0]
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg3.length) + 132], address(_1214), ext_call.return_data[0]
                    mem[(32 * arg3.length) + 128 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    if ext_call.return_data[0] <= -(y * t / 10) + (t * y * t / 10) / 10:
                        t = t - 1
                        w = 0
                        x = w
                        y = y * t / 10
                        continue 
                    t = t - 1
                    w = ext_call.return_data[0] - (-(y * t / 10) + (t * y * t / 10) / 10)
                    x = w
                    y = y * t / 10
                    continue 
        else:
            _123 = mem[128]
            require 2 < arg3.length
            _131 = mem[192]
            require 0 < arg3.length
            require ext_code.size(mem[140 len 20])
            call mem[140 len 20].0x313ce567 with:
                 gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 10^(-ext_call.return_data[0] + 18)
            mem[(32 * arg3.length) + 132] = mem[140 len 20]
            mem[(32 * arg3.length) + 164] = address(_131)
            mem[(32 * arg3.length) + 196] = (997 * 9 * arg5 / 10 * arg2 / (1000 * arg1) + (997 * 9 * arg5 / 10)) + arg6 / 10^(-ext_call.return_data[0] + 18)
            require ext_code.size(arg4)
            call arg4.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(_123), address(_131), (997 * 9 * arg5 / 10 * arg2 / (1000 * arg1) + (997 * 9 * arg5 / 10)) + arg6 / 10^(-ext_call.return_data[0] + 18)
            mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 2 < arg3.length
            _179 = mem[192]
            require 4 < arg3.length
            _190 = mem[256]
            mem[(32 * arg3.length) + 164] = mem[268 len 20]
            mem[(32 * arg3.length) + 196] = ext_call.return_data[0]
            require ext_code.size(stor3)
            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(_179), address(_190), ext_call.return_data[0]
            mem[(32 * arg3.length) + 128 len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            if ext_call.return_data[0] <= 9 * arg5 / 10:
                if -11 * arg5 / 10 <= -arg5:
                    if 0 <= ext_call.return_data[0] - arg5:
                        return arg5
                    s = 9
                    t = 0
                    u = ext_call.return_data[0] - arg5
                    v = arg5
                    while t > u:
                        require (1000 * arg1) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)
                        require 0 < arg3.length
                        require ext_code.size(mem[140 len 20])
                        call mem[140 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 0 < arg3.length
                        require 2 < arg3.length
                        _699 = mem[192]
                        require 0 < arg3.length
                        require ext_code.size(mem[140 len 20])
                        call mem[140 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * arg3.length) + 132] = mem[140 len 20]
                        mem[(32 * arg3.length) + 164] = address(_699)
                        mem[(32 * arg3.length) + 196] = (997 * -(v * s / 10) + (s * v * s / 10) / 10 * arg2 / (1000 * arg1) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)) + arg6 / 10^(-ext_call.return_data[0] + 18)
                        require ext_code.size(arg4)
                        call arg4.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * arg3.length) + 132], address(_699), (997 * -(v * s / 10) + (s * v * s / 10) / 10 * arg2 / (1000 * arg1) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)) + arg6 / 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < arg3.length
                        require 4 < arg3.length
                        _944 = mem[256]
                        mem[(32 * arg3.length) + 132] = mem[204 len 20]
                        mem[(32 * arg3.length) + 164] = address(_944)
                        mem[(32 * arg3.length) + 196] = ext_call.return_data[0]
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * arg3.length) + 132], address(_944), ext_call.return_data[0]
                        mem[(32 * arg3.length) + 128 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        if ext_call.return_data[0] <= -(v * s / 10) + (s * v * s / 10) / 10:
                            s = s - 1
                            t = 0
                            u = t
                            v = v * s / 10
                            continue 
                        s = s - 1
                        t = ext_call.return_data[0] - (-(v * s / 10) + (s * v * s / 10) / 10)
                        u = t
                        v = v * s / 10
                        continue 
                    return v
                s = 11
                t = ext_call.return_data[0] - (11 * arg5 / 10)
                u = ext_call.return_data[0] - arg5
                v = arg5
                while t > u:
                    require (1000 * arg1) + (997 * (v * s / 10) + (s * v * s / 10) / 10)
                    require 0 < arg3.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < arg3.length
                    require 2 < arg3.length
                    _701 = mem[192]
                    require 0 < arg3.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg3.length) + 132] = mem[140 len 20]
                    mem[(32 * arg3.length) + 164] = address(_701)
                    mem[(32 * arg3.length) + 196] = (997 * (v * s / 10) + (s * v * s / 10) / 10 * arg2 / (1000 * arg1) + (997 * (v * s / 10) + (s * v * s / 10) / 10)) + arg6 / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg4)
                    call arg4.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg3.length) + 132], address(_701), (997 * (v * s / 10) + (s * v * s / 10) / 10 * arg2 / (1000 * arg1) + (997 * (v * s / 10) + (s * v * s / 10) / 10)) + arg6 / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg3.length
                    require 4 < arg3.length
                    _947 = mem[256]
                    mem[(32 * arg3.length) + 132] = mem[204 len 20]
                    mem[(32 * arg3.length) + 164] = address(_947)
                    mem[(32 * arg3.length) + 196] = ext_call.return_data[0]
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg3.length) + 132], address(_947), ext_call.return_data[0]
                    mem[(32 * arg3.length) + 128 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    if ext_call.return_data[0] <= (v * s / 10) + (s * v * s / 10) / 10:
                        s = s + 1
                        t = 0
                        u = t
                        v = v * s / 10
                        continue 
                    s = s + 1
                    t = ext_call.return_data[0] - ((v * s / 10) + (s * v * s / 10) / 10)
                    u = t
                    v = v * s / 10
                    continue 
                if 0 <= u:
                    return v
                t = s - 1
                w = 0
                x = u
                y = v
                while w > x:
                    require (1000 * arg1) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)
                    require 0 < arg3.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < arg3.length
                    require 2 < arg3.length
                    _1129 = mem[192]
                    require 0 < arg3.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg3.length) + 132] = mem[140 len 20]
                    mem[(32 * arg3.length) + 164] = address(_1129)
                    mem[(32 * arg3.length) + 196] = (997 * -(y * t / 10) + (t * y * t / 10) / 10 * arg2 / (1000 * arg1) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)) + arg6 / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg4)
                    call arg4.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg3.length) + 132], address(_1129), (997 * -(y * t / 10) + (t * y * t / 10) / 10 * arg2 / (1000 * arg1) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)) + arg6 / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg3.length
                    require 4 < arg3.length
                    _1217 = mem[256]
                    mem[(32 * arg3.length) + 132] = mem[204 len 20]
                    mem[(32 * arg3.length) + 164] = address(_1217)
                    mem[(32 * arg3.length) + 196] = ext_call.return_data[0]
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg3.length) + 132], address(_1217), ext_call.return_data[0]
                    mem[(32 * arg3.length) + 128 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    if ext_call.return_data[0] <= -(y * t / 10) + (t * y * t / 10) / 10:
                        t = t - 1
                        w = 0
                        x = w
                        y = y * t / 10
                        continue 
                    t = t - 1
                    w = ext_call.return_data[0] - (-(y * t / 10) + (t * y * t / 10) / 10)
                    x = w
                    y = y * t / 10
                    continue 
            else:
                if -11 * arg5 / 10 <= -arg5:
                    if -9 * arg5 / 10 <= -arg5:
                        return arg5
                    s = 9
                    t = mem[(32 * arg3.length) + 128] - (9 * arg5 / 10)
                    u = ext_call.return_data[0] - arg5
                    v = arg5
                    while t > u:
                        require (1000 * arg1) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)
                        require 0 < arg3.length
                        require ext_code.size(mem[140 len 20])
                        call mem[140 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 0 < arg3.length
                        require 2 < arg3.length
                        _703 = mem[192]
                        require 0 < arg3.length
                        require ext_code.size(mem[140 len 20])
                        call mem[140 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * arg3.length) + 132] = mem[140 len 20]
                        mem[(32 * arg3.length) + 164] = address(_703)
                        mem[(32 * arg3.length) + 196] = (997 * -(v * s / 10) + (s * v * s / 10) / 10 * arg2 / (1000 * arg1) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)) + arg6 / 10^(-ext_call.return_data[0] + 18)
                        require ext_code.size(arg4)
                        call arg4.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * arg3.length) + 132], address(_703), (997 * -(v * s / 10) + (s * v * s / 10) / 10 * arg2 / (1000 * arg1) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)) + arg6 / 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < arg3.length
                        require 4 < arg3.length
                        _950 = mem[256]
                        mem[(32 * arg3.length) + 132] = mem[204 len 20]
                        mem[(32 * arg3.length) + 164] = address(_950)
                        mem[(32 * arg3.length) + 196] = ext_call.return_data[0]
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * arg3.length) + 132], address(_950), ext_call.return_data[0]
                        mem[(32 * arg3.length) + 128 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        if ext_call.return_data[0] <= -(v * s / 10) + (s * v * s / 10) / 10:
                            s = s - 1
                            t = 0
                            u = t
                            v = v * s / 10
                            continue 
                        s = s - 1
                        t = ext_call.return_data[0] - (-(v * s / 10) + (s * v * s / 10) / 10)
                        u = t
                        v = v * s / 10
                        continue 
                    return v
                s = 11
                t = ext_call.return_data[0] - (11 * arg5 / 10)
                u = ext_call.return_data[0] - arg5
                v = arg5
                while t > u:
                    require (1000 * arg1) + (997 * (v * s / 10) + (s * v * s / 10) / 10)
                    require 0 < arg3.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < arg3.length
                    require 2 < arg3.length
                    _705 = mem[192]
                    require 0 < arg3.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg3.length) + 132] = mem[140 len 20]
                    mem[(32 * arg3.length) + 164] = address(_705)
                    mem[(32 * arg3.length) + 196] = (997 * (v * s / 10) + (s * v * s / 10) / 10 * arg2 / (1000 * arg1) + (997 * (v * s / 10) + (s * v * s / 10) / 10)) + arg6 / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg4)
                    call arg4.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg3.length) + 132], address(_705), (997 * (v * s / 10) + (s * v * s / 10) / 10 * arg2 / (1000 * arg1) + (997 * (v * s / 10) + (s * v * s / 10) / 10)) + arg6 / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg3.length
                    require 4 < arg3.length
                    _953 = mem[256]
                    mem[(32 * arg3.length) + 132] = mem[204 len 20]
                    mem[(32 * arg3.length) + 164] = address(_953)
                    mem[(32 * arg3.length) + 196] = ext_call.return_data[0]
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg3.length) + 132], address(_953), ext_call.return_data[0]
                    mem[(32 * arg3.length) + 128 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    if ext_call.return_data[0] <= (v * s / 10) + (s * v * s / 10) / 10:
                        s = s + 1
                        t = 0
                        u = t
                        v = v * s / 10
                        continue 
                    s = s + 1
                    t = ext_call.return_data[0] - ((v * s / 10) + (s * v * s / 10) / 10)
                    u = t
                    v = v * s / 10
                    continue 
                if ext_call.return_data[0] - (9 * arg5 / 10) <= u:
                    return v
                t = s - 1
                w = ext_call.return_data[0] - (9 * arg5 / 10)
                x = u
                y = v
                while w > x:
                    require (1000 * arg1) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)
                    require 0 < arg3.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < arg3.length
                    require 2 < arg3.length
                    _1131 = mem[192]
                    require 0 < arg3.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg3.length) + 132] = mem[140 len 20]
                    mem[(32 * arg3.length) + 164] = address(_1131)
                    mem[(32 * arg3.length) + 196] = (997 * -(y * t / 10) + (t * y * t / 10) / 10 * arg2 / (1000 * arg1) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)) + arg6 / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg4)
                    call arg4.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg3.length) + 132], address(_1131), (997 * -(y * t / 10) + (t * y * t / 10) / 10 * arg2 / (1000 * arg1) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)) + arg6 / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg3.length
                    require 4 < arg3.length
                    _1220 = mem[256]
                    mem[(32 * arg3.length) + 132] = mem[204 len 20]
                    mem[(32 * arg3.length) + 164] = address(_1220)
                    mem[(32 * arg3.length) + 196] = ext_call.return_data[0]
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg3.length) + 132], address(_1220), ext_call.return_data[0]
                    mem[(32 * arg3.length) + 128 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    if ext_call.return_data[0] <= -(y * t / 10) + (t * y * t / 10) / 10:
                        t = t - 1
                        w = 0
                        x = w
                        y = y * t / 10
                        continue 
                    t = t - 1
                    w = ext_call.return_data[0] - (-(y * t / 10) + (t * y * t / 10) / 10)
                    x = w
                    y = y * t / 10
                    continue 
    return y
}

function sub_533dc435(?) {
    mem[128 len 32 * arg2.length] = call.data[arg2 + 36 len 32 * arg2.length]
    require 4 < arg2.length
    require ext_code.size(mem[268 len 20])
    call mem[268 len 20].0x313ce567 with:
         gas gas_remaining wei
    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require 4 < arg2.length
    _9 = mem[256]
    mem[(32 * arg2.length) + 132] = arg1
    require ext_code.size(address(_9))
    call address(_9).0x70a08231 with:
         gas gas_remaining wei
        args arg1
    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require arg4
    require 0 < arg2.length
    require 1 < arg2.length
    _17 = mem[160]
    mem[(32 * arg2.length) + 164] = mem[172 len 20]
    mem[(32 * arg2.length) + 196] = defaultAmount
    require ext_code.size(stor3)
    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
         gas gas_remaining wei
        args address(mem[128]), address(_17), defaultAmount
    mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    require 4 < arg2.length
    require ext_code.size(mem[268 len 20])
    call mem[268 len 20].0x313ce567 with:
         gas gas_remaining wei
    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require 2 < arg2.length
    _30 = mem[192]
    require 4 < arg2.length
    _32 = mem[256]
    mem[(32 * arg2.length) + 132] = mem[204 len 20]
    mem[(32 * arg2.length) + 164] = address(_32)
    require ext_code.size(arg3)
    call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
         gas gas_remaining wei
        args address(_30), address(_32), ext_call.return_data[0]
    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require 0 < arg2.length
    require 1 < arg2.length
    _40 = mem[160]
    mem[(32 * arg2.length) + 164] = mem[172 len 20]
    mem[(32 * arg2.length) + 196] = defaultAmount
    require ext_code.size(stor3)
    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
         gas gas_remaining wei
        args address(mem[128]), address(_40), defaultAmount
    mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    require 4 < arg2.length
    require ext_code.size(mem[268 len 20])
    call mem[268 len 20].0x313ce567 with:
         gas gas_remaining wei
    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require 2 < arg2.length
    _53 = mem[192]
    require 4 < arg2.length
    _55 = mem[256]
    mem[(32 * arg2.length) + 132] = mem[204 len 20]
    mem[(32 * arg2.length) + 164] = address(_55)
    require ext_code.size(arg3)
    call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
         gas gas_remaining wei
        args address(_53), address(_55), ext_call.return_data[0]
    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)
    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4) <= defaultAmount:
        return 0
    require 0 < arg2.length
    require 1 < arg2.length
    _65 = mem[160]
    mem[(32 * arg2.length) + 164] = mem[172 len 20]
    mem[(32 * arg2.length) + 196] = defaultAmount
    require ext_code.size(stor3)
    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
         gas gas_remaining wei
        args address(mem[128]), address(_65), defaultAmount
    mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    require 4 < arg2.length
    require ext_code.size(mem[268 len 20])
    call mem[268 len 20].0x313ce567 with:
         gas gas_remaining wei
    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require 2 < arg2.length
    _78 = mem[192]
    require 4 < arg2.length
    _80 = mem[256]
    mem[(32 * arg2.length) + 132] = mem[204 len 20]
    mem[(32 * arg2.length) + 164] = address(_80)
    require ext_code.size(arg3)
    call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
         gas gas_remaining wei
        args address(_78), address(_80), ext_call.return_data[0]
    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)
    require 0 < arg2.length
    require 1 < arg2.length
    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4) <= defaultAmount:
        _91 = mem[160]
        mem[(32 * arg2.length) + 164] = mem[172 len 20]
        mem[(32 * arg2.length) + 196] = 11 * defaultAmount / 10
        require ext_code.size(stor3)
        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args address(mem[128]), address(_91), 11 * defaultAmount / 10
        mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 64
        require 4 < arg2.length
        require ext_code.size(mem[268 len 20])
        call mem[268 len 20].0x313ce567 with:
             gas gas_remaining wei
        mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 2 < arg2.length
        _117 = mem[192]
        require 4 < arg2.length
        _121 = mem[256]
        mem[(32 * arg2.length) + 132] = mem[204 len 20]
        mem[(32 * arg2.length) + 164] = address(_121)
        require ext_code.size(arg3)
        call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args address(_117), address(_121), ext_call.return_data[0]
        mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)
        require 0 < arg2.length
        require 1 < arg2.length
        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4) <= 11 * defaultAmount / 10:
            _143 = mem[160]
            mem[(32 * arg2.length) + 164] = mem[172 len 20]
            mem[(32 * arg2.length) + 196] = 9 * defaultAmount / 10
            require ext_code.size(stor3)
            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(mem[128]), address(_143), 9 * defaultAmount / 10
            mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require 4 < arg2.length
            require ext_code.size(mem[268 len 20])
            call mem[268 len 20].0x313ce567 with:
                 gas gas_remaining wei
            mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 2 < arg2.length
            _195 = mem[192]
            require 4 < arg2.length
            _203 = mem[256]
            mem[(32 * arg2.length) + 132] = mem[204 len 20]
            mem[(32 * arg2.length) + 164] = address(_203)
            mem[(32 * arg2.length) + 196] = ext_call.return_data[0]
            require ext_code.size(arg3)
            call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(_195), address(_203), ext_call.return_data[0]
            mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)
            if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4) <= 9 * defaultAmount / 10:
                require 0 < arg2.length
                require 1 < arg2.length
                _247 = mem[160]
                mem[(32 * arg2.length) + 164] = mem[172 len 20]
                mem[(32 * arg2.length) + 196] = defaultAmount
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args address(mem[128]), address(_247), defaultAmount
                mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require 4 < arg2.length
                require ext_code.size(mem[268 len 20])
                call mem[268 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < arg2.length
                require 4 < arg2.length
                require ext_code.size(arg3)
                call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args address(mem[192]), address(mem[256]), ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)
                if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4) <= defaultAmount:
                    return defaultAmount, 0
                return defaultAmount, 
                       ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - defaultAmount
            if ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - (9 * defaultAmount / 10) <= 0:
                require 0 < arg2.length
                require 1 < arg2.length
                _250 = mem[160]
                mem[(32 * arg2.length) + 164] = mem[172 len 20]
                mem[(32 * arg2.length) + 196] = defaultAmount
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args address(mem[128]), address(_250), defaultAmount
                mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require 4 < arg2.length
                require ext_code.size(mem[268 len 20])
                call mem[268 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < arg2.length
                require 4 < arg2.length
                require ext_code.size(arg3)
                call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args address(mem[192]), address(mem[256]), ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)
                if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4) <= defaultAmount:
                    return defaultAmount, 0
                return defaultAmount, 
                       ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - defaultAmount
            s = 9
            t = ((997 * mem[(32 * arg2.length) + 128] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * mem[(32 * arg2.length) + 128] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - (9 * defaultAmount / 10)
            u = 0
            v = defaultAmount
            while t > u:
                require 0 < arg2.length
                require 1 < arg2.length
                _749 = mem[160]
                mem[(32 * arg2.length) + 132] = mem[140 len 20]
                mem[(32 * arg2.length) + 164] = address(_749)
                mem[(32 * arg2.length) + 196] = -(v * s / 10) + (s * v * s / 10) / 10
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg2.length) + 132], address(_749), -(v * s / 10) + (s * v * s / 10) / 10
                mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require 4 < arg2.length
                require ext_code.size(mem[268 len 20])
                call mem[268 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < arg2.length
                require 4 < arg2.length
                _1157 = mem[256]
                mem[(32 * arg2.length) + 132] = mem[204 len 20]
                mem[(32 * arg2.length) + 164] = address(_1157)
                mem[(32 * arg2.length) + 196] = ext_call.return_data[0]
                require ext_code.size(arg3)
                call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg2.length) + 132], address(_1157), ext_call.return_data[0]
                mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)
                if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4) <= -(v * s / 10) + (s * v * s / 10) / 10:
                    s = s - 1
                    t = 0
                    u = t
                    v = v * s / 10
                    continue 
                s = s - 1
                t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - (-(v * s / 10) + (s * v * s / 10) / 10)
                u = t
                v = v * s / 10
                continue 
            require 0 < arg2.length
            require 1 < arg2.length
            _746 = mem[160]
            mem[(32 * arg2.length) + 132] = mem[140 len 20]
            mem[(32 * arg2.length) + 164] = address(_746)
            mem[(32 * arg2.length) + 196] = v
            require ext_code.size(stor3)
            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args mem[(32 * arg2.length) + 132], address(_746), v
            mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require 4 < arg2.length
            require ext_code.size(mem[268 len 20])
            call mem[268 len 20].0x313ce567 with:
                 gas gas_remaining wei
            mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 2 < arg2.length
            require 4 < arg2.length
            _1154 = mem[256]
            mem[(32 * arg2.length) + 132] = mem[204 len 20]
            require ext_code.size(arg3)
            call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args mem[(32 * arg2.length) + 132], address(_1154), ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)
            if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4) <= v:
                return v, 0
            return v, 
                   ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - v
        _146 = mem[160]
        mem[(32 * arg2.length) + 164] = mem[172 len 20]
        mem[(32 * arg2.length) + 196] = 9 * defaultAmount / 10
        require ext_code.size(stor3)
        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args address(mem[128]), address(_146), 9 * defaultAmount / 10
        mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 64
        require 4 < arg2.length
        require ext_code.size(mem[268 len 20])
        call mem[268 len 20].0x313ce567 with:
             gas gas_remaining wei
        mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 2 < arg2.length
        _197 = mem[192]
        require 4 < arg2.length
        _206 = mem[256]
        mem[(32 * arg2.length) + 132] = mem[204 len 20]
        mem[(32 * arg2.length) + 164] = address(_206)
        mem[(32 * arg2.length) + 196] = ext_call.return_data[0]
        require ext_code.size(arg3)
        call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args address(_197), address(_206), ext_call.return_data[0]
        mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)
        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4) <= 9 * defaultAmount / 10:
            if ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - (11 * defaultAmount / 10) <= 0:
                require 0 < arg2.length
                require 1 < arg2.length
                _253 = mem[160]
                mem[(32 * arg2.length) + 164] = mem[172 len 20]
                mem[(32 * arg2.length) + 196] = defaultAmount
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args address(mem[128]), address(_253), defaultAmount
                mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require 4 < arg2.length
                require ext_code.size(mem[268 len 20])
                call mem[268 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < arg2.length
                require 4 < arg2.length
                require ext_code.size(arg3)
                call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args address(mem[192]), address(mem[256]), ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)
                if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4) <= defaultAmount:
                    return defaultAmount, 0
                return defaultAmount, 
                       ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - defaultAmount
            s = 11
            t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - (11 * defaultAmount / 10)
            u = 0
            v = defaultAmount
            while t > u:
                require 0 < arg2.length
                require 1 < arg2.length
                _754 = mem[160]
                mem[(32 * arg2.length) + 132] = mem[140 len 20]
                mem[(32 * arg2.length) + 164] = address(_754)
                mem[(32 * arg2.length) + 196] = (v * s / 10) + (s * v * s / 10) / 10
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg2.length) + 132], address(_754), (v * s / 10) + (s * v * s / 10) / 10
                mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require 4 < arg2.length
                require ext_code.size(mem[268 len 20])
                call mem[268 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < arg2.length
                require 4 < arg2.length
                _1162 = mem[256]
                mem[(32 * arg2.length) + 132] = mem[204 len 20]
                mem[(32 * arg2.length) + 164] = address(_1162)
                mem[(32 * arg2.length) + 196] = ext_call.return_data[0]
                require ext_code.size(arg3)
                call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg2.length) + 132], address(_1162), ext_call.return_data[0]
                mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)
                if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4) <= (v * s / 10) + (s * v * s / 10) / 10:
                    s = s + 1
                    t = 0
                    u = t
                    v = v * s / 10
                    continue 
                s = s + 1
                t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - ((v * s / 10) + (s * v * s / 10) / 10)
                u = t
                v = v * s / 10
                continue 
            if 0 <= u:
                require 0 < arg2.length
                require 1 < arg2.length
                _806 = mem[160]
                mem[(32 * arg2.length) + 132] = mem[140 len 20]
                mem[(32 * arg2.length) + 164] = address(_806)
                mem[(32 * arg2.length) + 196] = v
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg2.length) + 132], address(_806), v
                mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require 4 < arg2.length
                require ext_code.size(mem[268 len 20])
                call mem[268 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < arg2.length
                require 4 < arg2.length
                _1214 = mem[256]
                mem[(32 * arg2.length) + 132] = mem[204 len 20]
                require ext_code.size(arg3)
                call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg2.length) + 132], address(_1214), ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)
                if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4) <= v:
                    return v, 0
                return v, 
                       ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - v
            t = s - 1
            w = 0
            x = u
            y = v
            while w > x:
                require 0 < arg2.length
                require 1 < arg2.length
                _1419 = mem[160]
                mem[(32 * arg2.length) + 132] = mem[140 len 20]
                mem[(32 * arg2.length) + 164] = address(_1419)
                mem[(32 * arg2.length) + 196] = -(y * t / 10) + (t * y * t / 10) / 10
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg2.length) + 132], address(_1419), -(y * t / 10) + (t * y * t / 10) / 10
                mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require 4 < arg2.length
                require ext_code.size(mem[268 len 20])
                call mem[268 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < arg2.length
                require 4 < arg2.length
                _1599 = mem[256]
                mem[(32 * arg2.length) + 132] = mem[204 len 20]
                mem[(32 * arg2.length) + 164] = address(_1599)
                mem[(32 * arg2.length) + 196] = ext_call.return_data[0]
                require ext_code.size(arg3)
                call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg2.length) + 132], address(_1599), ext_call.return_data[0]
                mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)
                if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4) <= -(y * t / 10) + (t * y * t / 10) / 10:
                    t = t - 1
                    w = 0
                    x = w
                    y = y * t / 10
                    continue 
                t = t - 1
                w = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - (-(y * t / 10) + (t * y * t / 10) / 10)
                x = w
                y = y * t / 10
                continue 
            require 0 < arg2.length
            require 1 < arg2.length
            _1416 = mem[160]
            mem[(32 * arg2.length) + 132] = mem[140 len 20]
            mem[(32 * arg2.length) + 164] = address(_1416)
            mem[(32 * arg2.length) + 196] = y
            require ext_code.size(stor3)
            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args mem[(32 * arg2.length) + 132], address(_1416), y
            mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require 4 < arg2.length
            require ext_code.size(mem[268 len 20])
            call mem[268 len 20].0x313ce567 with:
                 gas gas_remaining wei
            mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 2 < arg2.length
            require 4 < arg2.length
            _1596 = mem[256]
            mem[(32 * arg2.length) + 132] = mem[204 len 20]
            require ext_code.size(arg3)
            call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args mem[(32 * arg2.length) + 132], address(_1596), ext_call.return_data[0]
        else:
            if ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - (11 * defaultAmount / 10) <= 0:
                if ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - (9 * defaultAmount / 10) <= 0:
                    require 0 < arg2.length
                    require 1 < arg2.length
                    _257 = mem[160]
                    mem[(32 * arg2.length) + 164] = mem[172 len 20]
                    mem[(32 * arg2.length) + 196] = defaultAmount
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args address(mem[128]), address(_257), defaultAmount
                    mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < arg2.length
                    require ext_code.size(mem[268 len 20])
                    call mem[268 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg2.length
                    require 4 < arg2.length
                    require ext_code.size(arg3)
                    call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args address(mem[192]), address(mem[256]), ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)
                    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4) <= defaultAmount:
                        return defaultAmount, 0
                    return defaultAmount, 
                           ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - defaultAmount
                s = 9
                t = ((997 * mem[(32 * arg2.length) + 128] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * mem[(32 * arg2.length) + 128] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - (9 * defaultAmount / 10)
                u = 0
                v = defaultAmount
                while t > u:
                    require 0 < arg2.length
                    require 1 < arg2.length
                    _760 = mem[160]
                    mem[(32 * arg2.length) + 132] = mem[140 len 20]
                    mem[(32 * arg2.length) + 164] = address(_760)
                    mem[(32 * arg2.length) + 196] = -(v * s / 10) + (s * v * s / 10) / 10
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_760), -(v * s / 10) + (s * v * s / 10) / 10
                    mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < arg2.length
                    require ext_code.size(mem[268 len 20])
                    call mem[268 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg2.length
                    require 4 < arg2.length
                    _1168 = mem[256]
                    mem[(32 * arg2.length) + 132] = mem[204 len 20]
                    mem[(32 * arg2.length) + 164] = address(_1168)
                    mem[(32 * arg2.length) + 196] = ext_call.return_data[0]
                    require ext_code.size(arg3)
                    call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_1168), ext_call.return_data[0]
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)
                    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4) <= -(v * s / 10) + (s * v * s / 10) / 10:
                        s = s - 1
                        t = 0
                        u = t
                        v = v * s / 10
                        continue 
                    s = s - 1
                    t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - (-(v * s / 10) + (s * v * s / 10) / 10)
                    u = t
                    v = v * s / 10
                    continue 
                require 0 < arg2.length
                require 1 < arg2.length
                _757 = mem[160]
                mem[(32 * arg2.length) + 132] = mem[140 len 20]
                mem[(32 * arg2.length) + 164] = address(_757)
                mem[(32 * arg2.length) + 196] = v
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg2.length) + 132], address(_757), v
                mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require 4 < arg2.length
                require ext_code.size(mem[268 len 20])
                call mem[268 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < arg2.length
                require 4 < arg2.length
                _1165 = mem[256]
                mem[(32 * arg2.length) + 132] = mem[204 len 20]
                require ext_code.size(arg3)
                call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg2.length) + 132], address(_1165), ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)
                if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4) <= v:
                    return v, 0
                return v, 
                       ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - v
            s = 11
            t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - (11 * defaultAmount / 10)
            u = 0
            v = defaultAmount
            while t > u:
                require 0 < arg2.length
                require 1 < arg2.length
                _765 = mem[160]
                mem[(32 * arg2.length) + 132] = mem[140 len 20]
                mem[(32 * arg2.length) + 164] = address(_765)
                mem[(32 * arg2.length) + 196] = (v * s / 10) + (s * v * s / 10) / 10
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg2.length) + 132], address(_765), (v * s / 10) + (s * v * s / 10) / 10
                mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require 4 < arg2.length
                require ext_code.size(mem[268 len 20])
                call mem[268 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < arg2.length
                require 4 < arg2.length
                _1173 = mem[256]
                mem[(32 * arg2.length) + 132] = mem[204 len 20]
                mem[(32 * arg2.length) + 164] = address(_1173)
                mem[(32 * arg2.length) + 196] = ext_call.return_data[0]
                require ext_code.size(arg3)
                call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg2.length) + 132], address(_1173), ext_call.return_data[0]
                mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)
                if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4) <= (v * s / 10) + (s * v * s / 10) / 10:
                    s = s + 1
                    t = 0
                    u = t
                    v = v * s / 10
                    continue 
                s = s + 1
                t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - ((v * s / 10) + (s * v * s / 10) / 10)
                u = t
                v = v * s / 10
                continue 
            if ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - (9 * defaultAmount / 10) <= u:
                require 0 < arg2.length
                require 1 < arg2.length
                _809 = mem[160]
                mem[(32 * arg2.length) + 132] = mem[140 len 20]
                mem[(32 * arg2.length) + 164] = address(_809)
                mem[(32 * arg2.length) + 196] = v
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg2.length) + 132], address(_809), v
                mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require 4 < arg2.length
                require ext_code.size(mem[268 len 20])
                call mem[268 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < arg2.length
                require 4 < arg2.length
                _1218 = mem[256]
                mem[(32 * arg2.length) + 132] = mem[204 len 20]
                require ext_code.size(arg3)
                call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg2.length) + 132], address(_1218), ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)
                if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4) <= v:
                    return v, 0
                return v, 
                       ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - v
            t = s - 1
            w = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - (9 * defaultAmount / 10)
            x = u
            y = v
            while w > x:
                require 0 < arg2.length
                require 1 < arg2.length
                _1425 = mem[160]
                mem[(32 * arg2.length) + 132] = mem[140 len 20]
                mem[(32 * arg2.length) + 164] = address(_1425)
                mem[(32 * arg2.length) + 196] = -(y * t / 10) + (t * y * t / 10) / 10
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg2.length) + 132], address(_1425), -(y * t / 10) + (t * y * t / 10) / 10
                mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require 4 < arg2.length
                require ext_code.size(mem[268 len 20])
                call mem[268 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < arg2.length
                require 4 < arg2.length
                _1605 = mem[256]
                mem[(32 * arg2.length) + 132] = mem[204 len 20]
                mem[(32 * arg2.length) + 164] = address(_1605)
                mem[(32 * arg2.length) + 196] = ext_call.return_data[0]
                require ext_code.size(arg3)
                call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg2.length) + 132], address(_1605), ext_call.return_data[0]
                mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)
                if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4) <= -(y * t / 10) + (t * y * t / 10) / 10:
                    t = t - 1
                    w = 0
                    x = w
                    y = y * t / 10
                    continue 
                t = t - 1
                w = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - (-(y * t / 10) + (t * y * t / 10) / 10)
                x = w
                y = y * t / 10
                continue 
            require 0 < arg2.length
            require 1 < arg2.length
            _1422 = mem[160]
            mem[(32 * arg2.length) + 132] = mem[140 len 20]
            mem[(32 * arg2.length) + 164] = address(_1422)
            mem[(32 * arg2.length) + 196] = y
            require ext_code.size(stor3)
            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args mem[(32 * arg2.length) + 132], address(_1422), y
            mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require 4 < arg2.length
            require ext_code.size(mem[268 len 20])
            call mem[268 len 20].0x313ce567 with:
                 gas gas_remaining wei
            mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 2 < arg2.length
            require 4 < arg2.length
            _1602 = mem[256]
            mem[(32 * arg2.length) + 132] = mem[204 len 20]
            require ext_code.size(arg3)
            call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args mem[(32 * arg2.length) + 132], address(_1602), ext_call.return_data[0]
    else:
        _94 = mem[160]
        mem[(32 * arg2.length) + 164] = mem[172 len 20]
        mem[(32 * arg2.length) + 196] = 11 * defaultAmount / 10
        require ext_code.size(stor3)
        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args address(mem[128]), address(_94), 11 * defaultAmount / 10
        mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 64
        require 4 < arg2.length
        require ext_code.size(mem[268 len 20])
        call mem[268 len 20].0x313ce567 with:
             gas gas_remaining wei
        mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 2 < arg2.length
        _119 = mem[192]
        require 4 < arg2.length
        _124 = mem[256]
        mem[(32 * arg2.length) + 132] = mem[204 len 20]
        mem[(32 * arg2.length) + 164] = address(_124)
        require ext_code.size(arg3)
        call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args address(_119), address(_124), ext_call.return_data[0]
        mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)
        require 0 < arg2.length
        require 1 < arg2.length
        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4) <= 11 * defaultAmount / 10:
            _149 = mem[160]
            mem[(32 * arg2.length) + 164] = mem[172 len 20]
            mem[(32 * arg2.length) + 196] = 9 * defaultAmount / 10
            require ext_code.size(stor3)
            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(mem[128]), address(_149), 9 * defaultAmount / 10
            mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require 4 < arg2.length
            require ext_code.size(mem[268 len 20])
            call mem[268 len 20].0x313ce567 with:
                 gas gas_remaining wei
            mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 2 < arg2.length
            _199 = mem[192]
            require 4 < arg2.length
            _209 = mem[256]
            mem[(32 * arg2.length) + 132] = mem[204 len 20]
            mem[(32 * arg2.length) + 164] = address(_209)
            mem[(32 * arg2.length) + 196] = ext_call.return_data[0]
            require ext_code.size(arg3)
            call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(_199), address(_209), ext_call.return_data[0]
            mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)
            if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4) <= 9 * defaultAmount / 10:
                if 0 <= ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - defaultAmount:
                    require 0 < arg2.length
                    require 1 < arg2.length
                    _261 = mem[160]
                    mem[(32 * arg2.length) + 164] = mem[172 len 20]
                    mem[(32 * arg2.length) + 196] = defaultAmount
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args address(mem[128]), address(_261), defaultAmount
                    mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < arg2.length
                    require ext_code.size(mem[268 len 20])
                    call mem[268 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg2.length
                    require 4 < arg2.length
                    require ext_code.size(arg3)
                    call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args address(mem[192]), address(mem[256]), ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)
                    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4) <= defaultAmount:
                        return defaultAmount, 0
                    return defaultAmount, 
                           ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - defaultAmount
                s = 11
                t = 0
                u = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - defaultAmount
                v = defaultAmount
                while t > u:
                    require 0 < arg2.length
                    require 1 < arg2.length
                    _770 = mem[160]
                    mem[(32 * arg2.length) + 132] = mem[140 len 20]
                    mem[(32 * arg2.length) + 164] = address(_770)
                    mem[(32 * arg2.length) + 196] = (v * s / 10) + (s * v * s / 10) / 10
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_770), (v * s / 10) + (s * v * s / 10) / 10
                    mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < arg2.length
                    require ext_code.size(mem[268 len 20])
                    call mem[268 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg2.length
                    require 4 < arg2.length
                    _1178 = mem[256]
                    mem[(32 * arg2.length) + 132] = mem[204 len 20]
                    mem[(32 * arg2.length) + 164] = address(_1178)
                    mem[(32 * arg2.length) + 196] = ext_call.return_data[0]
                    require ext_code.size(arg3)
                    call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_1178), ext_call.return_data[0]
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)
                    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4) <= (v * s / 10) + (s * v * s / 10) / 10:
                        s = s + 1
                        t = 0
                        u = t
                        v = v * s / 10
                        continue 
                    s = s + 1
                    t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - ((v * s / 10) + (s * v * s / 10) / 10)
                    u = t
                    v = v * s / 10
                    continue 
                if 0 <= u:
                    require 0 < arg2.length
                    require 1 < arg2.length
                    _812 = mem[160]
                    mem[(32 * arg2.length) + 132] = mem[140 len 20]
                    mem[(32 * arg2.length) + 164] = address(_812)
                    mem[(32 * arg2.length) + 196] = v
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_812), v
                    mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < arg2.length
                    require ext_code.size(mem[268 len 20])
                    call mem[268 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg2.length
                    require 4 < arg2.length
                    _1222 = mem[256]
                    mem[(32 * arg2.length) + 132] = mem[204 len 20]
                    require ext_code.size(arg3)
                    call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_1222), ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)
                    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4) <= v:
                        return v, 0
                    return v, 
                           ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - v
                t = s - 1
                w = 0
                x = u
                y = v
                while w > x:
                    require 0 < arg2.length
                    require 1 < arg2.length
                    _1431 = mem[160]
                    mem[(32 * arg2.length) + 132] = mem[140 len 20]
                    mem[(32 * arg2.length) + 164] = address(_1431)
                    mem[(32 * arg2.length) + 196] = -(y * t / 10) + (t * y * t / 10) / 10
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_1431), -(y * t / 10) + (t * y * t / 10) / 10
                    mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < arg2.length
                    require ext_code.size(mem[268 len 20])
                    call mem[268 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg2.length
                    require 4 < arg2.length
                    _1611 = mem[256]
                    mem[(32 * arg2.length) + 132] = mem[204 len 20]
                    mem[(32 * arg2.length) + 164] = address(_1611)
                    mem[(32 * arg2.length) + 196] = ext_call.return_data[0]
                    require ext_code.size(arg3)
                    call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_1611), ext_call.return_data[0]
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)
                    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4) <= -(y * t / 10) + (t * y * t / 10) / 10:
                        t = t - 1
                        w = 0
                        x = w
                        y = y * t / 10
                        continue 
                    t = t - 1
                    w = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - (-(y * t / 10) + (t * y * t / 10) / 10)
                    x = w
                    y = y * t / 10
                    continue 
                require 0 < arg2.length
                require 1 < arg2.length
                _1428 = mem[160]
                mem[(32 * arg2.length) + 132] = mem[140 len 20]
                mem[(32 * arg2.length) + 164] = address(_1428)
                mem[(32 * arg2.length) + 196] = y
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg2.length) + 132], address(_1428), y
                mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require 4 < arg2.length
                require ext_code.size(mem[268 len 20])
                call mem[268 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < arg2.length
                require 4 < arg2.length
                _1608 = mem[256]
                mem[(32 * arg2.length) + 132] = mem[204 len 20]
                require ext_code.size(arg3)
                call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg2.length) + 132], address(_1608), ext_call.return_data[0]
            else:
                if 0 <= ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - defaultAmount:
                    if -9 * defaultAmount / 10 <= -defaultAmount:
                        require 0 < arg2.length
                        require 1 < arg2.length
                        _265 = mem[160]
                        mem[(32 * arg2.length) + 164] = mem[172 len 20]
                        mem[(32 * arg2.length) + 196] = defaultAmount
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args address(mem[128]), address(_265), defaultAmount
                        mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 4 < arg2.length
                        require ext_code.size(mem[268 len 20])
                        call mem[268 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < arg2.length
                        require 4 < arg2.length
                        require ext_code.size(arg3)
                        call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args address(mem[192]), address(mem[256]), ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)
                        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4) <= defaultAmount:
                            return defaultAmount, 0
                        return defaultAmount, 
                               ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - defaultAmount
                    s = 9
                    t = ((997 * mem[(32 * arg2.length) + 128] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * mem[(32 * arg2.length) + 128] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - (9 * defaultAmount / 10)
                    u = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - defaultAmount
                    v = defaultAmount
                    while t > u:
                        require 0 < arg2.length
                        require 1 < arg2.length
                        _776 = mem[160]
                        mem[(32 * arg2.length) + 132] = mem[140 len 20]
                        mem[(32 * arg2.length) + 164] = address(_776)
                        mem[(32 * arg2.length) + 196] = -(v * s / 10) + (s * v * s / 10) / 10
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * arg2.length) + 132], address(_776), -(v * s / 10) + (s * v * s / 10) / 10
                        mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 4 < arg2.length
                        require ext_code.size(mem[268 len 20])
                        call mem[268 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < arg2.length
                        require 4 < arg2.length
                        _1184 = mem[256]
                        mem[(32 * arg2.length) + 132] = mem[204 len 20]
                        mem[(32 * arg2.length) + 164] = address(_1184)
                        mem[(32 * arg2.length) + 196] = ext_call.return_data[0]
                        require ext_code.size(arg3)
                        call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * arg2.length) + 132], address(_1184), ext_call.return_data[0]
                        mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)
                        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4) <= -(v * s / 10) + (s * v * s / 10) / 10:
                            s = s - 1
                            t = 0
                            u = t
                            v = v * s / 10
                            continue 
                        s = s - 1
                        t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - (-(v * s / 10) + (s * v * s / 10) / 10)
                        u = t
                        v = v * s / 10
                        continue 
                    require 0 < arg2.length
                    require 1 < arg2.length
                    _773 = mem[160]
                    mem[(32 * arg2.length) + 132] = mem[140 len 20]
                    mem[(32 * arg2.length) + 164] = address(_773)
                    mem[(32 * arg2.length) + 196] = v
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_773), v
                    mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < arg2.length
                    require ext_code.size(mem[268 len 20])
                    call mem[268 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg2.length
                    require 4 < arg2.length
                    _1181 = mem[256]
                    mem[(32 * arg2.length) + 132] = mem[204 len 20]
                    require ext_code.size(arg3)
                    call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_1181), ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)
                    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4) <= v:
                        return v, 0
                    return v, 
                           ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - v
                s = 11
                t = 0
                u = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - defaultAmount
                v = defaultAmount
                while t > u:
                    require 0 < arg2.length
                    require 1 < arg2.length
                    _781 = mem[160]
                    mem[(32 * arg2.length) + 132] = mem[140 len 20]
                    mem[(32 * arg2.length) + 164] = address(_781)
                    mem[(32 * arg2.length) + 196] = (v * s / 10) + (s * v * s / 10) / 10
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_781), (v * s / 10) + (s * v * s / 10) / 10
                    mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < arg2.length
                    require ext_code.size(mem[268 len 20])
                    call mem[268 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg2.length
                    require 4 < arg2.length
                    _1189 = mem[256]
                    mem[(32 * arg2.length) + 132] = mem[204 len 20]
                    mem[(32 * arg2.length) + 164] = address(_1189)
                    mem[(32 * arg2.length) + 196] = ext_call.return_data[0]
                    require ext_code.size(arg3)
                    call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_1189), ext_call.return_data[0]
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)
                    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4) <= (v * s / 10) + (s * v * s / 10) / 10:
                        s = s + 1
                        t = 0
                        u = t
                        v = v * s / 10
                        continue 
                    s = s + 1
                    t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - ((v * s / 10) + (s * v * s / 10) / 10)
                    u = t
                    v = v * s / 10
                    continue 
                if ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - (9 * defaultAmount / 10) <= u:
                    require 0 < arg2.length
                    require 1 < arg2.length
                    _815 = mem[160]
                    mem[(32 * arg2.length) + 132] = mem[140 len 20]
                    mem[(32 * arg2.length) + 164] = address(_815)
                    mem[(32 * arg2.length) + 196] = v
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_815), v
                    mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < arg2.length
                    require ext_code.size(mem[268 len 20])
                    call mem[268 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg2.length
                    require 4 < arg2.length
                    _1226 = mem[256]
                    mem[(32 * arg2.length) + 132] = mem[204 len 20]
                    require ext_code.size(arg3)
                    call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_1226), ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)
                    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4) <= v:
                        return v, 0
                    return v, 
                           ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - v
                t = s - 1
                w = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - (9 * defaultAmount / 10)
                x = u
                y = v
                while w > x:
                    require 0 < arg2.length
                    require 1 < arg2.length
                    _1437 = mem[160]
                    mem[(32 * arg2.length) + 132] = mem[140 len 20]
                    mem[(32 * arg2.length) + 164] = address(_1437)
                    mem[(32 * arg2.length) + 196] = -(y * t / 10) + (t * y * t / 10) / 10
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_1437), -(y * t / 10) + (t * y * t / 10) / 10
                    mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < arg2.length
                    require ext_code.size(mem[268 len 20])
                    call mem[268 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg2.length
                    require 4 < arg2.length
                    _1617 = mem[256]
                    mem[(32 * arg2.length) + 132] = mem[204 len 20]
                    mem[(32 * arg2.length) + 164] = address(_1617)
                    mem[(32 * arg2.length) + 196] = ext_call.return_data[0]
                    require ext_code.size(arg3)
                    call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_1617), ext_call.return_data[0]
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)
                    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4) <= -(y * t / 10) + (t * y * t / 10) / 10:
                        t = t - 1
                        w = 0
                        x = w
                        y = y * t / 10
                        continue 
                    t = t - 1
                    w = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - (-(y * t / 10) + (t * y * t / 10) / 10)
                    x = w
                    y = y * t / 10
                    continue 
                require 0 < arg2.length
                require 1 < arg2.length
                _1434 = mem[160]
                mem[(32 * arg2.length) + 132] = mem[140 len 20]
                mem[(32 * arg2.length) + 164] = address(_1434)
                mem[(32 * arg2.length) + 196] = y
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg2.length) + 132], address(_1434), y
                mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require 4 < arg2.length
                require ext_code.size(mem[268 len 20])
                call mem[268 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < arg2.length
                require 4 < arg2.length
                _1614 = mem[256]
                mem[(32 * arg2.length) + 132] = mem[204 len 20]
                require ext_code.size(arg3)
                call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg2.length) + 132], address(_1614), ext_call.return_data[0]
        else:
            _152 = mem[160]
            mem[(32 * arg2.length) + 164] = mem[172 len 20]
            mem[(32 * arg2.length) + 196] = 9 * defaultAmount / 10
            require ext_code.size(stor3)
            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(mem[128]), address(_152), 9 * defaultAmount / 10
            mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require 4 < arg2.length
            require ext_code.size(mem[268 len 20])
            call mem[268 len 20].0x313ce567 with:
                 gas gas_remaining wei
            mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 2 < arg2.length
            _201 = mem[192]
            require 4 < arg2.length
            _212 = mem[256]
            mem[(32 * arg2.length) + 132] = mem[204 len 20]
            mem[(32 * arg2.length) + 164] = address(_212)
            mem[(32 * arg2.length) + 196] = ext_call.return_data[0]
            require ext_code.size(arg3)
            call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(_201), address(_212), ext_call.return_data[0]
            mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)
            if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4) <= 9 * defaultAmount / 10:
                if -11 * defaultAmount / 10 <= -defaultAmount:
                    if 0 <= ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - defaultAmount:
                        require 0 < arg2.length
                        require 1 < arg2.length
                        _269 = mem[160]
                        mem[(32 * arg2.length) + 164] = mem[172 len 20]
                        mem[(32 * arg2.length) + 196] = defaultAmount
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args address(mem[128]), address(_269), defaultAmount
                        mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 4 < arg2.length
                        require ext_code.size(mem[268 len 20])
                        call mem[268 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < arg2.length
                        require 4 < arg2.length
                        require ext_code.size(arg3)
                        call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args address(mem[192]), address(mem[256]), ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)
                        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4) <= defaultAmount:
                            return defaultAmount, 0
                        return defaultAmount, 
                               ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - defaultAmount
                    s = 9
                    t = 0
                    u = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - defaultAmount
                    v = defaultAmount
                    while t > u:
                        require 0 < arg2.length
                        require 1 < arg2.length
                        _787 = mem[160]
                        mem[(32 * arg2.length) + 132] = mem[140 len 20]
                        mem[(32 * arg2.length) + 164] = address(_787)
                        mem[(32 * arg2.length) + 196] = -(v * s / 10) + (s * v * s / 10) / 10
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * arg2.length) + 132], address(_787), -(v * s / 10) + (s * v * s / 10) / 10
                        mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 4 < arg2.length
                        require ext_code.size(mem[268 len 20])
                        call mem[268 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < arg2.length
                        require 4 < arg2.length
                        _1195 = mem[256]
                        mem[(32 * arg2.length) + 132] = mem[204 len 20]
                        mem[(32 * arg2.length) + 164] = address(_1195)
                        mem[(32 * arg2.length) + 196] = ext_call.return_data[0]
                        require ext_code.size(arg3)
                        call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * arg2.length) + 132], address(_1195), ext_call.return_data[0]
                        mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)
                        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4) <= -(v * s / 10) + (s * v * s / 10) / 10:
                            s = s - 1
                            t = 0
                            u = t
                            v = v * s / 10
                            continue 
                        s = s - 1
                        t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - (-(v * s / 10) + (s * v * s / 10) / 10)
                        u = t
                        v = v * s / 10
                        continue 
                    require 0 < arg2.length
                    require 1 < arg2.length
                    _784 = mem[160]
                    mem[(32 * arg2.length) + 132] = mem[140 len 20]
                    mem[(32 * arg2.length) + 164] = address(_784)
                    mem[(32 * arg2.length) + 196] = v
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_784), v
                    mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < arg2.length
                    require ext_code.size(mem[268 len 20])
                    call mem[268 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg2.length
                    require 4 < arg2.length
                    _1192 = mem[256]
                    mem[(32 * arg2.length) + 132] = mem[204 len 20]
                    require ext_code.size(arg3)
                    call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_1192), ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)
                    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4) <= v:
                        return v, 0
                    return v, 
                           ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - v
                s = 11
                t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - (11 * defaultAmount / 10)
                u = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - defaultAmount
                v = defaultAmount
                while t > u:
                    require 0 < arg2.length
                    require 1 < arg2.length
                    _792 = mem[160]
                    mem[(32 * arg2.length) + 132] = mem[140 len 20]
                    mem[(32 * arg2.length) + 164] = address(_792)
                    mem[(32 * arg2.length) + 196] = (v * s / 10) + (s * v * s / 10) / 10
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_792), (v * s / 10) + (s * v * s / 10) / 10
                    mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < arg2.length
                    require ext_code.size(mem[268 len 20])
                    call mem[268 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg2.length
                    require 4 < arg2.length
                    _1200 = mem[256]
                    mem[(32 * arg2.length) + 132] = mem[204 len 20]
                    mem[(32 * arg2.length) + 164] = address(_1200)
                    mem[(32 * arg2.length) + 196] = ext_call.return_data[0]
                    require ext_code.size(arg3)
                    call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_1200), ext_call.return_data[0]
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)
                    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4) <= (v * s / 10) + (s * v * s / 10) / 10:
                        s = s + 1
                        t = 0
                        u = t
                        v = v * s / 10
                        continue 
                    s = s + 1
                    t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - ((v * s / 10) + (s * v * s / 10) / 10)
                    u = t
                    v = v * s / 10
                    continue 
                if 0 <= u:
                    require 0 < arg2.length
                    require 1 < arg2.length
                    _818 = mem[160]
                    mem[(32 * arg2.length) + 132] = mem[140 len 20]
                    mem[(32 * arg2.length) + 164] = address(_818)
                    mem[(32 * arg2.length) + 196] = v
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_818), v
                    mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < arg2.length
                    require ext_code.size(mem[268 len 20])
                    call mem[268 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg2.length
                    require 4 < arg2.length
                    _1230 = mem[256]
                    mem[(32 * arg2.length) + 132] = mem[204 len 20]
                    require ext_code.size(arg3)
                    call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_1230), ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)
                    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4) <= v:
                        return v, 0
                    return v, 
                           ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - v
                t = s - 1
                w = 0
                x = u
                y = v
                while w > x:
                    require 0 < arg2.length
                    require 1 < arg2.length
                    _1443 = mem[160]
                    mem[(32 * arg2.length) + 132] = mem[140 len 20]
                    mem[(32 * arg2.length) + 164] = address(_1443)
                    mem[(32 * arg2.length) + 196] = -(y * t / 10) + (t * y * t / 10) / 10
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_1443), -(y * t / 10) + (t * y * t / 10) / 10
                    mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < arg2.length
                    require ext_code.size(mem[268 len 20])
                    call mem[268 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg2.length
                    require 4 < arg2.length
                    _1623 = mem[256]
                    mem[(32 * arg2.length) + 132] = mem[204 len 20]
                    mem[(32 * arg2.length) + 164] = address(_1623)
                    mem[(32 * arg2.length) + 196] = ext_call.return_data[0]
                    require ext_code.size(arg3)
                    call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_1623), ext_call.return_data[0]
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)
                    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4) <= -(y * t / 10) + (t * y * t / 10) / 10:
                        t = t - 1
                        w = 0
                        x = w
                        y = y * t / 10
                        continue 
                    t = t - 1
                    w = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - (-(y * t / 10) + (t * y * t / 10) / 10)
                    x = w
                    y = y * t / 10
                    continue 
                require 0 < arg2.length
                require 1 < arg2.length
                _1440 = mem[160]
                mem[(32 * arg2.length) + 132] = mem[140 len 20]
                mem[(32 * arg2.length) + 164] = address(_1440)
                mem[(32 * arg2.length) + 196] = y
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg2.length) + 132], address(_1440), y
                mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require 4 < arg2.length
                require ext_code.size(mem[268 len 20])
                call mem[268 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < arg2.length
                require 4 < arg2.length
                _1620 = mem[256]
                mem[(32 * arg2.length) + 132] = mem[204 len 20]
                require ext_code.size(arg3)
                call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg2.length) + 132], address(_1620), ext_call.return_data[0]
            else:
                if -11 * defaultAmount / 10 <= -defaultAmount:
                    if -9 * defaultAmount / 10 <= -defaultAmount:
                        require 0 < arg2.length
                        require 1 < arg2.length
                        _273 = mem[160]
                        mem[(32 * arg2.length) + 164] = mem[172 len 20]
                        mem[(32 * arg2.length) + 196] = defaultAmount
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args address(mem[128]), address(_273), defaultAmount
                        mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 4 < arg2.length
                        require ext_code.size(mem[268 len 20])
                        call mem[268 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < arg2.length
                        require 4 < arg2.length
                        require ext_code.size(arg3)
                        call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args address(mem[192]), address(mem[256]), ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)
                        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4) <= defaultAmount:
                            return defaultAmount, 0
                        return defaultAmount, 
                               ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - defaultAmount
                    s = 9
                    t = ((997 * mem[(32 * arg2.length) + 128] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * mem[(32 * arg2.length) + 128] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - (9 * defaultAmount / 10)
                    u = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - defaultAmount
                    v = defaultAmount
                    while t > u:
                        require 0 < arg2.length
                        require 1 < arg2.length
                        _798 = mem[160]
                        mem[(32 * arg2.length) + 132] = mem[140 len 20]
                        mem[(32 * arg2.length) + 164] = address(_798)
                        mem[(32 * arg2.length) + 196] = -(v * s / 10) + (s * v * s / 10) / 10
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * arg2.length) + 132], address(_798), -(v * s / 10) + (s * v * s / 10) / 10
                        mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 4 < arg2.length
                        require ext_code.size(mem[268 len 20])
                        call mem[268 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < arg2.length
                        require 4 < arg2.length
                        _1206 = mem[256]
                        mem[(32 * arg2.length) + 132] = mem[204 len 20]
                        mem[(32 * arg2.length) + 164] = address(_1206)
                        mem[(32 * arg2.length) + 196] = ext_call.return_data[0]
                        require ext_code.size(arg3)
                        call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * arg2.length) + 132], address(_1206), ext_call.return_data[0]
                        mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)
                        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4) <= -(v * s / 10) + (s * v * s / 10) / 10:
                            s = s - 1
                            t = 0
                            u = t
                            v = v * s / 10
                            continue 
                        s = s - 1
                        t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - (-(v * s / 10) + (s * v * s / 10) / 10)
                        u = t
                        v = v * s / 10
                        continue 
                    require 0 < arg2.length
                    require 1 < arg2.length
                    _795 = mem[160]
                    mem[(32 * arg2.length) + 132] = mem[140 len 20]
                    mem[(32 * arg2.length) + 164] = address(_795)
                    mem[(32 * arg2.length) + 196] = v
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_795), v
                    mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < arg2.length
                    require ext_code.size(mem[268 len 20])
                    call mem[268 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg2.length
                    require 4 < arg2.length
                    _1203 = mem[256]
                    mem[(32 * arg2.length) + 132] = mem[204 len 20]
                    require ext_code.size(arg3)
                    call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_1203), ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)
                    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4) <= v:
                        return v, 0
                    return v, 
                           ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - v
                s = 11
                t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - (11 * defaultAmount / 10)
                u = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - defaultAmount
                v = defaultAmount
                while t > u:
                    require 0 < arg2.length
                    require 1 < arg2.length
                    _803 = mem[160]
                    mem[(32 * arg2.length) + 132] = mem[140 len 20]
                    mem[(32 * arg2.length) + 164] = address(_803)
                    mem[(32 * arg2.length) + 196] = (v * s / 10) + (s * v * s / 10) / 10
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_803), (v * s / 10) + (s * v * s / 10) / 10
                    mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < arg2.length
                    require ext_code.size(mem[268 len 20])
                    call mem[268 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg2.length
                    require 4 < arg2.length
                    _1211 = mem[256]
                    mem[(32 * arg2.length) + 132] = mem[204 len 20]
                    mem[(32 * arg2.length) + 164] = address(_1211)
                    mem[(32 * arg2.length) + 196] = ext_call.return_data[0]
                    require ext_code.size(arg3)
                    call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_1211), ext_call.return_data[0]
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)
                    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4) <= (v * s / 10) + (s * v * s / 10) / 10:
                        s = s + 1
                        t = 0
                        u = t
                        v = v * s / 10
                        continue 
                    s = s + 1
                    t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - ((v * s / 10) + (s * v * s / 10) / 10)
                    u = t
                    v = v * s / 10
                    continue 
                if ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - (9 * defaultAmount / 10) <= u:
                    require 0 < arg2.length
                    require 1 < arg2.length
                    _821 = mem[160]
                    mem[(32 * arg2.length) + 132] = mem[140 len 20]
                    mem[(32 * arg2.length) + 164] = address(_821)
                    mem[(32 * arg2.length) + 196] = v
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_821), v
                    mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < arg2.length
                    require ext_code.size(mem[268 len 20])
                    call mem[268 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg2.length
                    require 4 < arg2.length
                    _1234 = mem[256]
                    mem[(32 * arg2.length) + 132] = mem[204 len 20]
                    require ext_code.size(arg3)
                    call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_1234), ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)
                    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4) <= v:
                        return v, 0
                    return v, 
                           ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - v
                t = s - 1
                w = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - (9 * defaultAmount / 10)
                x = u
                y = v
                while w > x:
                    require 0 < arg2.length
                    require 1 < arg2.length
                    _1449 = mem[160]
                    mem[(32 * arg2.length) + 132] = mem[140 len 20]
                    mem[(32 * arg2.length) + 164] = address(_1449)
                    mem[(32 * arg2.length) + 196] = -(y * t / 10) + (t * y * t / 10) / 10
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_1449), -(y * t / 10) + (t * y * t / 10) / 10
                    mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < arg2.length
                    require ext_code.size(mem[268 len 20])
                    call mem[268 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg2.length
                    require 4 < arg2.length
                    _1629 = mem[256]
                    mem[(32 * arg2.length) + 132] = mem[204 len 20]
                    mem[(32 * arg2.length) + 164] = address(_1629)
                    mem[(32 * arg2.length) + 196] = ext_call.return_data[0]
                    require ext_code.size(arg3)
                    call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_1629), ext_call.return_data[0]
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)
                    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4) <= -(y * t / 10) + (t * y * t / 10) / 10:
                        t = t - 1
                        w = 0
                        x = w
                        y = y * t / 10
                        continue 
                    t = t - 1
                    w = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - (-(y * t / 10) + (t * y * t / 10) / 10)
                    x = w
                    y = y * t / 10
                    continue 
                require 0 < arg2.length
                require 1 < arg2.length
                _1446 = mem[160]
                mem[(32 * arg2.length) + 132] = mem[140 len 20]
                mem[(32 * arg2.length) + 164] = address(_1446)
                mem[(32 * arg2.length) + 196] = y
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg2.length) + 132], address(_1446), y
                mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require 4 < arg2.length
                require ext_code.size(mem[268 len 20])
                call mem[268 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < arg2.length
                require 4 < arg2.length
                _1626 = mem[256]
                mem[(32 * arg2.length) + 132] = mem[204 len 20]
                require ext_code.size(arg3)
                call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg2.length) + 132], address(_1626), ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)
    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4) <= y:
        return y, 0
    return y, 
           ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(arg1)) - (997 * 10^18 * defaultAmount / arg4 * eth.balance(arg1)) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg4)) - y
}

function sub_fafb2c16(?) {
    mem[128 len 32 * arg2.length] = call.data[arg2 + 36 len 32 * arg2.length]
    require 0 < arg2.length
    require ext_code.size(mem[140 len 20])
    call mem[140 len 20].0x313ce567 with:
         gas gas_remaining wei
    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require 0 < arg2.length
    _9 = mem[128]
    mem[(32 * arg2.length) + 132] = arg1
    require ext_code.size(address(_9))
    call address(_9).0x70a08231 with:
         gas gas_remaining wei
        args arg1
    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require (1000 * eth.balance(arg1)) + (997 * defaultAmount)
    require arg4
    require (1000 * eth.balance(arg1)) + (997 * defaultAmount)
    require 0 < arg2.length
    require ext_code.size(mem[140 len 20])
    call mem[140 len 20].0x313ce567 with:
         gas gas_remaining wei
    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require 0 < arg2.length
    _21 = mem[128]
    require 2 < arg2.length
    _23 = mem[192]
    require 0 < arg2.length
    require ext_code.size(mem[140 len 20])
    call mem[140 len 20].0x313ce567 with:
         gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require 10^(-ext_call.return_data[0] + 18)
    mem[(32 * arg2.length) + 132] = mem[140 len 20]
    mem[(32 * arg2.length) + 164] = address(_23)
    mem[(32 * arg2.length) + 196] = 10^18 * defaultAmount / arg4 / 10^(-ext_call.return_data[0] + 18)
    require ext_code.size(arg3)
    call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
         gas gas_remaining wei
        args address(_21), address(_23), 10^18 * defaultAmount / arg4 / 10^(-ext_call.return_data[0] + 18)
    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require 2 < arg2.length
    _35 = mem[192]
    require 4 < arg2.length
    _37 = mem[256]
    mem[(32 * arg2.length) + 164] = mem[268 len 20]
    mem[(32 * arg2.length) + 196] = ext_call.return_data[0]
    require ext_code.size(stor3)
    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
         gas gas_remaining wei
        args address(_35), address(_37), ext_call.return_data[0]
    mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    if ext_call.return_data[0] <= defaultAmount:
        return 0
    require (1000 * eth.balance(arg1)) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount))
    require 0 < arg2.length
    require ext_code.size(mem[140 len 20])
    call mem[140 len 20].0x313ce567 with:
         gas gas_remaining wei
    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require 0 < arg2.length
    _52 = mem[128]
    require 2 < arg2.length
    _54 = mem[192]
    require 0 < arg2.length
    require ext_code.size(mem[140 len 20])
    call mem[140 len 20].0x313ce567 with:
         gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require 10^(-ext_call.return_data[0] + 18)
    mem[(32 * arg2.length) + 132] = mem[140 len 20]
    mem[(32 * arg2.length) + 164] = address(_54)
    mem[(32 * arg2.length) + 196] = (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
    require ext_code.size(arg3)
    call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
         gas gas_remaining wei
        args address(_52), address(_54), (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require 2 < arg2.length
    _66 = mem[192]
    require 4 < arg2.length
    _68 = mem[256]
    mem[(32 * arg2.length) + 164] = mem[268 len 20]
    mem[(32 * arg2.length) + 196] = ext_call.return_data[0]
    require ext_code.size(stor3)
    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
         gas gas_remaining wei
        args address(_66), address(_68), ext_call.return_data[0]
    mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    require (1000 * eth.balance(arg1)) + (997 * 11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10)
    require 0 < arg2.length
    require ext_code.size(mem[140 len 20])
    call mem[140 len 20].0x313ce567 with:
         gas gas_remaining wei
    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require 0 < arg2.length
    if ext_call.return_data[0] <= 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount):
        _88 = mem[128]
        require 2 < arg2.length
        _92 = mem[192]
        require 0 < arg2.length
        require ext_code.size(mem[140 len 20])
        call mem[140 len 20].0x313ce567 with:
             gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 10^(-ext_call.return_data[0] + 18)
        mem[(32 * arg2.length) + 132] = mem[140 len 20]
        mem[(32 * arg2.length) + 164] = address(_92)
        mem[(32 * arg2.length) + 196] = (997 * 11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * 11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
        require ext_code.size(arg3)
        call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args address(_88), address(_92), (997 * 11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * 11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
        mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 2 < arg2.length
        _116 = mem[192]
        require 4 < arg2.length
        _120 = mem[256]
        mem[(32 * arg2.length) + 164] = mem[268 len 20]
        mem[(32 * arg2.length) + 196] = ext_call.return_data[0]
        require ext_code.size(stor3)
        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args address(_116), address(_120), ext_call.return_data[0]
        mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 64
        require (1000 * eth.balance(arg1)) + (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10)
        require 0 < arg2.length
        require ext_code.size(mem[140 len 20])
        call mem[140 len 20].0x313ce567 with:
             gas gas_remaining wei
        mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 0 < arg2.length
        if ext_call.return_data[0] <= 11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10:
            _160 = mem[128]
            require 2 < arg2.length
            _168 = mem[192]
            require 0 < arg2.length
            require ext_code.size(mem[140 len 20])
            call mem[140 len 20].0x313ce567 with:
                 gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 10^(-ext_call.return_data[0] + 18)
            mem[(32 * arg2.length) + 132] = mem[140 len 20]
            mem[(32 * arg2.length) + 164] = address(_168)
            mem[(32 * arg2.length) + 196] = (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
            require ext_code.size(arg3)
            call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(_160), address(_168), (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
            mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 2 < arg2.length
            _216 = mem[192]
            require 4 < arg2.length
            _224 = mem[256]
            mem[(32 * arg2.length) + 164] = mem[268 len 20]
            mem[(32 * arg2.length) + 196] = ext_call.return_data[0]
            require ext_code.size(stor3)
            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(_216), address(_224), ext_call.return_data[0]
            mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            if ext_call.return_data[0] <= 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10:
                require (1000 * eth.balance(arg1)) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount))
                require 0 < arg2.length
                require ext_code.size(mem[140 len 20])
                call mem[140 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 0 < arg2.length
                _348 = mem[128]
                require 2 < arg2.length
                _370 = mem[192]
                require 0 < arg2.length
                require ext_code.size(mem[140 len 20])
                call mem[140 len 20].0x313ce567 with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 10^(-ext_call.return_data[0] + 18)
                mem[(32 * arg2.length) + 132] = mem[140 len 20]
                mem[(32 * arg2.length) + 164] = address(_370)
                mem[(32 * arg2.length) + 196] = (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                require ext_code.size(arg3)
                call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args address(_348), address(_370), (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < arg2.length
                require 4 < arg2.length
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args address(mem[192]), address(mem[256]), ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                if ext_call.return_data[0] <= 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount):
                    return 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount), 
                           0
                return 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount), 
                       ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount))
            if ext_call.return_data[0] - (9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10) <= 0:
                require (1000 * eth.balance(arg1)) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount))
                require 0 < arg2.length
                require ext_code.size(mem[140 len 20])
                call mem[140 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 0 < arg2.length
                _350 = mem[128]
                require 2 < arg2.length
                _372 = mem[192]
                require 0 < arg2.length
                require ext_code.size(mem[140 len 20])
                call mem[140 len 20].0x313ce567 with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 10^(-ext_call.return_data[0] + 18)
                mem[(32 * arg2.length) + 132] = mem[140 len 20]
                mem[(32 * arg2.length) + 164] = address(_372)
                mem[(32 * arg2.length) + 196] = (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                require ext_code.size(arg3)
                call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args address(_350), address(_372), (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < arg2.length
                require 4 < arg2.length
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args address(mem[192]), address(mem[256]), ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                if ext_call.return_data[0] <= 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount):
                    return 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount), 
                           0
                return 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount), 
                       ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount))
            s = 9
            t = mem[(32 * arg2.length) + 128] - (9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10)
            u = 0
            v = 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)
            while t > u:
                require (1000 * eth.balance(arg1)) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)
                require 0 < arg2.length
                require ext_code.size(mem[140 len 20])
                call mem[140 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 0 < arg2.length
                require 2 < arg2.length
                _1043 = mem[192]
                require 0 < arg2.length
                require ext_code.size(mem[140 len 20])
                call mem[140 len 20].0x313ce567 with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 10^(-ext_call.return_data[0] + 18)
                mem[(32 * arg2.length) + 132] = mem[140 len 20]
                mem[(32 * arg2.length) + 164] = address(_1043)
                mem[(32 * arg2.length) + 196] = (997 * -(v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                require ext_code.size(arg3)
                call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg2.length) + 132], address(_1043), (997 * -(v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < arg2.length
                require 4 < arg2.length
                _1436 = mem[256]
                mem[(32 * arg2.length) + 132] = mem[204 len 20]
                mem[(32 * arg2.length) + 164] = address(_1436)
                mem[(32 * arg2.length) + 196] = ext_call.return_data[0]
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg2.length) + 132], address(_1436), ext_call.return_data[0]
                mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                if ext_call.return_data[0] <= -(v * s / 10) + (s * v * s / 10) / 10:
                    s = s - 1
                    t = 0
                    u = t
                    v = v * s / 10
                    continue 
                s = s - 1
                t = ext_call.return_data[0] - (-(v * s / 10) + (s * v * s / 10) / 10)
                u = t
                v = v * s / 10
                continue 
            require (1000 * eth.balance(arg1)) + (997 * v)
            require 0 < arg2.length
            require ext_code.size(mem[140 len 20])
            call mem[140 len 20].0x313ce567 with:
                 gas gas_remaining wei
            mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 0 < arg2.length
            require 2 < arg2.length
            _1041 = mem[192]
            require 0 < arg2.length
            require ext_code.size(mem[140 len 20])
            call mem[140 len 20].0x313ce567 with:
                 gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 10^(-ext_call.return_data[0] + 18)
            mem[(32 * arg2.length) + 132] = mem[140 len 20]
            mem[(32 * arg2.length) + 164] = address(_1041)
            mem[(32 * arg2.length) + 196] = (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * v)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
            require ext_code.size(arg3)
            call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args mem[(32 * arg2.length) + 132], address(_1041), (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * v)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
            mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 2 < arg2.length
            require 4 < arg2.length
            _1433 = mem[256]
            mem[(32 * arg2.length) + 132] = mem[204 len 20]
            require ext_code.size(stor3)
            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args mem[(32 * arg2.length) + 132], address(_1433), ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            if ext_call.return_data[0] <= v:
                return v, 0
            return v, ext_call.return_data[0] - v
        _162 = mem[128]
        require 2 < arg2.length
        _170 = mem[192]
        require 0 < arg2.length
        require ext_code.size(mem[140 len 20])
        call mem[140 len 20].0x313ce567 with:
             gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 10^(-ext_call.return_data[0] + 18)
        mem[(32 * arg2.length) + 132] = mem[140 len 20]
        mem[(32 * arg2.length) + 164] = address(_170)
        mem[(32 * arg2.length) + 196] = (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
        require ext_code.size(arg3)
        call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args address(_162), address(_170), (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
        mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 2 < arg2.length
        _218 = mem[192]
        require 4 < arg2.length
        _227 = mem[256]
        mem[(32 * arg2.length) + 164] = mem[268 len 20]
        mem[(32 * arg2.length) + 196] = ext_call.return_data[0]
        require ext_code.size(stor3)
        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args address(_218), address(_227), ext_call.return_data[0]
        mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 64
        if ext_call.return_data[0] <= 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10:
            if ext_call.return_data[0] - (11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10) <= 0:
                require (1000 * eth.balance(arg1)) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount))
                require 0 < arg2.length
                require ext_code.size(mem[140 len 20])
                call mem[140 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 0 < arg2.length
                _352 = mem[128]
                require 2 < arg2.length
                _375 = mem[192]
                require 0 < arg2.length
                require ext_code.size(mem[140 len 20])
                call mem[140 len 20].0x313ce567 with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 10^(-ext_call.return_data[0] + 18)
                mem[(32 * arg2.length) + 132] = mem[140 len 20]
                mem[(32 * arg2.length) + 164] = address(_375)
                mem[(32 * arg2.length) + 196] = (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                require ext_code.size(arg3)
                call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args address(_352), address(_375), (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < arg2.length
                require 4 < arg2.length
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args address(mem[192]), address(mem[256]), ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                if ext_call.return_data[0] <= 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount):
                    return 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount), 
                           0
                return 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount), 
                       ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount))
            s = 11
            t = ext_call.return_data[0] - (11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10)
            u = 0
            v = 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)
            while t > u:
                require (1000 * eth.balance(arg1)) + (997 * (v * s / 10) + (s * v * s / 10) / 10)
                require 0 < arg2.length
                require ext_code.size(mem[140 len 20])
                call mem[140 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 0 < arg2.length
                require 2 < arg2.length
                _1047 = mem[192]
                require 0 < arg2.length
                require ext_code.size(mem[140 len 20])
                call mem[140 len 20].0x313ce567 with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 10^(-ext_call.return_data[0] + 18)
                mem[(32 * arg2.length) + 132] = mem[140 len 20]
                mem[(32 * arg2.length) + 164] = address(_1047)
                mem[(32 * arg2.length) + 196] = (997 * (v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * (v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                require ext_code.size(arg3)
                call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg2.length) + 132], address(_1047), (997 * (v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * (v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < arg2.length
                require 4 < arg2.length
                _1441 = mem[256]
                mem[(32 * arg2.length) + 132] = mem[204 len 20]
                mem[(32 * arg2.length) + 164] = address(_1441)
                mem[(32 * arg2.length) + 196] = ext_call.return_data[0]
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg2.length) + 132], address(_1441), ext_call.return_data[0]
                mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                if ext_call.return_data[0] <= (v * s / 10) + (s * v * s / 10) / 10:
                    s = s + 1
                    t = 0
                    u = t
                    v = v * s / 10
                    continue 
                s = s + 1
                t = ext_call.return_data[0] - ((v * s / 10) + (s * v * s / 10) / 10)
                u = t
                v = v * s / 10
                continue 
            if 0 <= u:
                require (1000 * eth.balance(arg1)) + (997 * v)
                require 0 < arg2.length
                require ext_code.size(mem[140 len 20])
                call mem[140 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 0 < arg2.length
                require 2 < arg2.length
                _1091 = mem[192]
                require 0 < arg2.length
                require ext_code.size(mem[140 len 20])
                call mem[140 len 20].0x313ce567 with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 10^(-ext_call.return_data[0] + 18)
                mem[(32 * arg2.length) + 132] = mem[140 len 20]
                mem[(32 * arg2.length) + 164] = address(_1091)
                mem[(32 * arg2.length) + 196] = (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * v)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                require ext_code.size(arg3)
                call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg2.length) + 132], address(_1091), (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * v)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < arg2.length
                require 4 < arg2.length
                _1493 = mem[256]
                mem[(32 * arg2.length) + 132] = mem[204 len 20]
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg2.length) + 132], address(_1493), ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                if ext_call.return_data[0] <= v:
                    return v, 0
                return v, ext_call.return_data[0] - v
            t = s - 1
            w = 0
            x = u
            y = v
            while w > x:
                require (1000 * eth.balance(arg1)) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)
                require 0 < arg2.length
                require ext_code.size(mem[140 len 20])
                call mem[140 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 0 < arg2.length
                require 2 < arg2.length
                _1797 = mem[192]
                require 0 < arg2.length
                require ext_code.size(mem[140 len 20])
                call mem[140 len 20].0x313ce567 with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 10^(-ext_call.return_data[0] + 18)
                mem[(32 * arg2.length) + 132] = mem[140 len 20]
                mem[(32 * arg2.length) + 164] = address(_1797)
                mem[(32 * arg2.length) + 196] = (997 * -(y * t / 10) + (t * y * t / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                require ext_code.size(arg3)
                call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg2.length) + 132], address(_1797), (997 * -(y * t / 10) + (t * y * t / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < arg2.length
                require 4 < arg2.length
                _1966 = mem[256]
                mem[(32 * arg2.length) + 132] = mem[204 len 20]
                mem[(32 * arg2.length) + 164] = address(_1966)
                mem[(32 * arg2.length) + 196] = ext_call.return_data[0]
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg2.length) + 132], address(_1966), ext_call.return_data[0]
                mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                if ext_call.return_data[0] <= -(y * t / 10) + (t * y * t / 10) / 10:
                    t = t - 1
                    w = 0
                    x = w
                    y = y * t / 10
                    continue 
                t = t - 1
                w = ext_call.return_data[0] - (-(y * t / 10) + (t * y * t / 10) / 10)
                x = w
                y = y * t / 10
                continue 
            require (1000 * eth.balance(arg1)) + (997 * y)
            require 0 < arg2.length
            require ext_code.size(mem[140 len 20])
            call mem[140 len 20].0x313ce567 with:
                 gas gas_remaining wei
            mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 0 < arg2.length
            require 2 < arg2.length
            _1795 = mem[192]
            require 0 < arg2.length
            require ext_code.size(mem[140 len 20])
            call mem[140 len 20].0x313ce567 with:
                 gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 10^(-ext_call.return_data[0] + 18)
            mem[(32 * arg2.length) + 132] = mem[140 len 20]
            mem[(32 * arg2.length) + 164] = address(_1795)
            mem[(32 * arg2.length) + 196] = (997 * y * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * y)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
            require ext_code.size(arg3)
            call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args mem[(32 * arg2.length) + 132], address(_1795), (997 * y * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * y)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
            mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 2 < arg2.length
            require 4 < arg2.length
            _1963 = mem[256]
            mem[(32 * arg2.length) + 132] = mem[204 len 20]
            require ext_code.size(stor3)
            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args mem[(32 * arg2.length) + 132], address(_1963), ext_call.return_data[0]
        else:
            if ext_call.return_data[0] - (11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10) <= 0:
                if ext_call.return_data[0] - (9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10) <= 0:
                    require (1000 * eth.balance(arg1)) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount))
                    require 0 < arg2.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < arg2.length
                    _355 = mem[128]
                    require 2 < arg2.length
                    _379 = mem[192]
                    require 0 < arg2.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg2.length) + 132] = mem[140 len 20]
                    mem[(32 * arg2.length) + 164] = address(_379)
                    mem[(32 * arg2.length) + 196] = (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg3)
                    call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args address(_355), address(_379), (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg2.length
                    require 4 < arg2.length
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args address(mem[192]), address(mem[256]), ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    if ext_call.return_data[0] <= 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount):
                        return 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount), 
                               0
                    return 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount), 
                           ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount))
                s = 9
                t = mem[(32 * arg2.length) + 128] - (9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10)
                u = 0
                v = 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)
                while t > u:
                    require (1000 * eth.balance(arg1)) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)
                    require 0 < arg2.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < arg2.length
                    require 2 < arg2.length
                    _1051 = mem[192]
                    require 0 < arg2.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg2.length) + 132] = mem[140 len 20]
                    mem[(32 * arg2.length) + 164] = address(_1051)
                    mem[(32 * arg2.length) + 196] = (997 * -(v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg3)
                    call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_1051), (997 * -(v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg2.length
                    require 4 < arg2.length
                    _1447 = mem[256]
                    mem[(32 * arg2.length) + 132] = mem[204 len 20]
                    mem[(32 * arg2.length) + 164] = address(_1447)
                    mem[(32 * arg2.length) + 196] = ext_call.return_data[0]
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_1447), ext_call.return_data[0]
                    mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    if ext_call.return_data[0] <= -(v * s / 10) + (s * v * s / 10) / 10:
                        s = s - 1
                        t = 0
                        u = t
                        v = v * s / 10
                        continue 
                    s = s - 1
                    t = ext_call.return_data[0] - (-(v * s / 10) + (s * v * s / 10) / 10)
                    u = t
                    v = v * s / 10
                    continue 
                require (1000 * eth.balance(arg1)) + (997 * v)
                require 0 < arg2.length
                require ext_code.size(mem[140 len 20])
                call mem[140 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 0 < arg2.length
                require 2 < arg2.length
                _1049 = mem[192]
                require 0 < arg2.length
                require ext_code.size(mem[140 len 20])
                call mem[140 len 20].0x313ce567 with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 10^(-ext_call.return_data[0] + 18)
                mem[(32 * arg2.length) + 132] = mem[140 len 20]
                mem[(32 * arg2.length) + 164] = address(_1049)
                mem[(32 * arg2.length) + 196] = (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * v)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                require ext_code.size(arg3)
                call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg2.length) + 132], address(_1049), (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * v)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < arg2.length
                require 4 < arg2.length
                _1444 = mem[256]
                mem[(32 * arg2.length) + 132] = mem[204 len 20]
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg2.length) + 132], address(_1444), ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                if ext_call.return_data[0] <= v:
                    return v, 0
                return v, ext_call.return_data[0] - v
            s = 11
            t = ext_call.return_data[0] - (11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10)
            u = 0
            v = 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)
            while t > u:
                require (1000 * eth.balance(arg1)) + (997 * (v * s / 10) + (s * v * s / 10) / 10)
                require 0 < arg2.length
                require ext_code.size(mem[140 len 20])
                call mem[140 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 0 < arg2.length
                require 2 < arg2.length
                _1055 = mem[192]
                require 0 < arg2.length
                require ext_code.size(mem[140 len 20])
                call mem[140 len 20].0x313ce567 with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 10^(-ext_call.return_data[0] + 18)
                mem[(32 * arg2.length) + 132] = mem[140 len 20]
                mem[(32 * arg2.length) + 164] = address(_1055)
                mem[(32 * arg2.length) + 196] = (997 * (v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * (v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                require ext_code.size(arg3)
                call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg2.length) + 132], address(_1055), (997 * (v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * (v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < arg2.length
                require 4 < arg2.length
                _1452 = mem[256]
                mem[(32 * arg2.length) + 132] = mem[204 len 20]
                mem[(32 * arg2.length) + 164] = address(_1452)
                mem[(32 * arg2.length) + 196] = ext_call.return_data[0]
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg2.length) + 132], address(_1452), ext_call.return_data[0]
                mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                if ext_call.return_data[0] <= (v * s / 10) + (s * v * s / 10) / 10:
                    s = s + 1
                    t = 0
                    u = t
                    v = v * s / 10
                    continue 
                s = s + 1
                t = ext_call.return_data[0] - ((v * s / 10) + (s * v * s / 10) / 10)
                u = t
                v = v * s / 10
                continue 
            if ext_call.return_data[0] - (9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10) <= u:
                require (1000 * eth.balance(arg1)) + (997 * v)
                require 0 < arg2.length
                require ext_code.size(mem[140 len 20])
                call mem[140 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 0 < arg2.length
                require 2 < arg2.length
                _1103 = mem[192]
                require 0 < arg2.length
                require ext_code.size(mem[140 len 20])
                call mem[140 len 20].0x313ce567 with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 10^(-ext_call.return_data[0] + 18)
                mem[(32 * arg2.length) + 132] = mem[140 len 20]
                mem[(32 * arg2.length) + 164] = address(_1103)
                mem[(32 * arg2.length) + 196] = (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * v)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                require ext_code.size(arg3)
                call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg2.length) + 132], address(_1103), (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * v)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < arg2.length
                require 4 < arg2.length
                _1497 = mem[256]
                mem[(32 * arg2.length) + 132] = mem[204 len 20]
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg2.length) + 132], address(_1497), ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                if ext_call.return_data[0] <= v:
                    return v, 0
                return v, ext_call.return_data[0] - v
            t = s - 1
            w = ext_call.return_data[0] - (9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10)
            x = u
            y = v
            while w > x:
                require (1000 * eth.balance(arg1)) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)
                require 0 < arg2.length
                require ext_code.size(mem[140 len 20])
                call mem[140 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 0 < arg2.length
                require 2 < arg2.length
                _1801 = mem[192]
                require 0 < arg2.length
                require ext_code.size(mem[140 len 20])
                call mem[140 len 20].0x313ce567 with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 10^(-ext_call.return_data[0] + 18)
                mem[(32 * arg2.length) + 132] = mem[140 len 20]
                mem[(32 * arg2.length) + 164] = address(_1801)
                mem[(32 * arg2.length) + 196] = (997 * -(y * t / 10) + (t * y * t / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                require ext_code.size(arg3)
                call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg2.length) + 132], address(_1801), (997 * -(y * t / 10) + (t * y * t / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < arg2.length
                require 4 < arg2.length
                _1972 = mem[256]
                mem[(32 * arg2.length) + 132] = mem[204 len 20]
                mem[(32 * arg2.length) + 164] = address(_1972)
                mem[(32 * arg2.length) + 196] = ext_call.return_data[0]
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg2.length) + 132], address(_1972), ext_call.return_data[0]
                mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                if ext_call.return_data[0] <= -(y * t / 10) + (t * y * t / 10) / 10:
                    t = t - 1
                    w = 0
                    x = w
                    y = y * t / 10
                    continue 
                t = t - 1
                w = ext_call.return_data[0] - (-(y * t / 10) + (t * y * t / 10) / 10)
                x = w
                y = y * t / 10
                continue 
            require (1000 * eth.balance(arg1)) + (997 * y)
            require 0 < arg2.length
            require ext_code.size(mem[140 len 20])
            call mem[140 len 20].0x313ce567 with:
                 gas gas_remaining wei
            mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 0 < arg2.length
            require 2 < arg2.length
            _1799 = mem[192]
            require 0 < arg2.length
            require ext_code.size(mem[140 len 20])
            call mem[140 len 20].0x313ce567 with:
                 gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 10^(-ext_call.return_data[0] + 18)
            mem[(32 * arg2.length) + 132] = mem[140 len 20]
            mem[(32 * arg2.length) + 164] = address(_1799)
            mem[(32 * arg2.length) + 196] = (997 * y * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * y)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
            require ext_code.size(arg3)
            call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args mem[(32 * arg2.length) + 132], address(_1799), (997 * y * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * y)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
            mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 2 < arg2.length
            require 4 < arg2.length
            _1969 = mem[256]
            mem[(32 * arg2.length) + 132] = mem[204 len 20]
            require ext_code.size(stor3)
            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args mem[(32 * arg2.length) + 132], address(_1969), ext_call.return_data[0]
    else:
        _90 = mem[128]
        require 2 < arg2.length
        _94 = mem[192]
        require 0 < arg2.length
        require ext_code.size(mem[140 len 20])
        call mem[140 len 20].0x313ce567 with:
             gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 10^(-ext_call.return_data[0] + 18)
        mem[(32 * arg2.length) + 132] = mem[140 len 20]
        mem[(32 * arg2.length) + 164] = address(_94)
        mem[(32 * arg2.length) + 196] = (997 * 11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * 11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
        require ext_code.size(arg3)
        call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args address(_90), address(_94), (997 * 11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * 11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
        mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 2 < arg2.length
        _118 = mem[192]
        require 4 < arg2.length
        _123 = mem[256]
        mem[(32 * arg2.length) + 164] = mem[268 len 20]
        mem[(32 * arg2.length) + 196] = ext_call.return_data[0]
        require ext_code.size(stor3)
        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args address(_118), address(_123), ext_call.return_data[0]
        mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 64
        require (1000 * eth.balance(arg1)) + (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10)
        require 0 < arg2.length
        require ext_code.size(mem[140 len 20])
        call mem[140 len 20].0x313ce567 with:
             gas gas_remaining wei
        mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 0 < arg2.length
        if ext_call.return_data[0] <= 11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10:
            _164 = mem[128]
            require 2 < arg2.length
            _172 = mem[192]
            require 0 < arg2.length
            require ext_code.size(mem[140 len 20])
            call mem[140 len 20].0x313ce567 with:
                 gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 10^(-ext_call.return_data[0] + 18)
            mem[(32 * arg2.length) + 132] = mem[140 len 20]
            mem[(32 * arg2.length) + 164] = address(_172)
            mem[(32 * arg2.length) + 196] = (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
            require ext_code.size(arg3)
            call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(_164), address(_172), (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
            mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 2 < arg2.length
            _220 = mem[192]
            require 4 < arg2.length
            _230 = mem[256]
            mem[(32 * arg2.length) + 164] = mem[268 len 20]
            mem[(32 * arg2.length) + 196] = ext_call.return_data[0]
            require ext_code.size(stor3)
            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(_220), address(_230), ext_call.return_data[0]
            mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            if ext_call.return_data[0] <= 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10:
                if 0 <= ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)):
                    require (1000 * eth.balance(arg1)) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount))
                    require 0 < arg2.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < arg2.length
                    _358 = mem[128]
                    require 2 < arg2.length
                    _384 = mem[192]
                    require 0 < arg2.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg2.length) + 132] = mem[140 len 20]
                    mem[(32 * arg2.length) + 164] = address(_384)
                    mem[(32 * arg2.length) + 196] = (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg3)
                    call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args address(_358), address(_384), (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg2.length
                    require 4 < arg2.length
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args address(mem[192]), address(mem[256]), ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    if ext_call.return_data[0] <= 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount):
                        return 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount), 
                               0
                    return 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount), 
                           ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount))
                s = 11
                t = 0
                u = ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount))
                v = 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)
                while t > u:
                    require (1000 * eth.balance(arg1)) + (997 * (v * s / 10) + (s * v * s / 10) / 10)
                    require 0 < arg2.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < arg2.length
                    require 2 < arg2.length
                    _1059 = mem[192]
                    require 0 < arg2.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg2.length) + 132] = mem[140 len 20]
                    mem[(32 * arg2.length) + 164] = address(_1059)
                    mem[(32 * arg2.length) + 196] = (997 * (v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * (v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg3)
                    call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_1059), (997 * (v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * (v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg2.length
                    require 4 < arg2.length
                    _1457 = mem[256]
                    mem[(32 * arg2.length) + 132] = mem[204 len 20]
                    mem[(32 * arg2.length) + 164] = address(_1457)
                    mem[(32 * arg2.length) + 196] = ext_call.return_data[0]
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_1457), ext_call.return_data[0]
                    mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    if ext_call.return_data[0] <= (v * s / 10) + (s * v * s / 10) / 10:
                        s = s + 1
                        t = 0
                        u = t
                        v = v * s / 10
                        continue 
                    s = s + 1
                    t = ext_call.return_data[0] - ((v * s / 10) + (s * v * s / 10) / 10)
                    u = t
                    v = v * s / 10
                    continue 
                if 0 <= u:
                    require (1000 * eth.balance(arg1)) + (997 * v)
                    require 0 < arg2.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < arg2.length
                    require 2 < arg2.length
                    _1109 = mem[192]
                    require 0 < arg2.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg2.length) + 132] = mem[140 len 20]
                    mem[(32 * arg2.length) + 164] = address(_1109)
                    mem[(32 * arg2.length) + 196] = (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * v)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg3)
                    call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_1109), (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * v)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg2.length
                    require 4 < arg2.length
                    _1501 = mem[256]
                    mem[(32 * arg2.length) + 132] = mem[204 len 20]
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_1501), ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    if ext_call.return_data[0] <= v:
                        return v, 0
                    return v, ext_call.return_data[0] - v
                t = s - 1
                w = 0
                x = u
                y = v
                while w > x:
                    require (1000 * eth.balance(arg1)) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)
                    require 0 < arg2.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < arg2.length
                    require 2 < arg2.length
                    _1805 = mem[192]
                    require 0 < arg2.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg2.length) + 132] = mem[140 len 20]
                    mem[(32 * arg2.length) + 164] = address(_1805)
                    mem[(32 * arg2.length) + 196] = (997 * -(y * t / 10) + (t * y * t / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg3)
                    call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_1805), (997 * -(y * t / 10) + (t * y * t / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg2.length
                    require 4 < arg2.length
                    _1978 = mem[256]
                    mem[(32 * arg2.length) + 132] = mem[204 len 20]
                    mem[(32 * arg2.length) + 164] = address(_1978)
                    mem[(32 * arg2.length) + 196] = ext_call.return_data[0]
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_1978), ext_call.return_data[0]
                    mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    if ext_call.return_data[0] <= -(y * t / 10) + (t * y * t / 10) / 10:
                        t = t - 1
                        w = 0
                        x = w
                        y = y * t / 10
                        continue 
                    t = t - 1
                    w = ext_call.return_data[0] - (-(y * t / 10) + (t * y * t / 10) / 10)
                    x = w
                    y = y * t / 10
                    continue 
                require (1000 * eth.balance(arg1)) + (997 * y)
                require 0 < arg2.length
                require ext_code.size(mem[140 len 20])
                call mem[140 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 0 < arg2.length
                require 2 < arg2.length
                _1803 = mem[192]
                require 0 < arg2.length
                require ext_code.size(mem[140 len 20])
                call mem[140 len 20].0x313ce567 with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 10^(-ext_call.return_data[0] + 18)
                mem[(32 * arg2.length) + 132] = mem[140 len 20]
                mem[(32 * arg2.length) + 164] = address(_1803)
                mem[(32 * arg2.length) + 196] = (997 * y * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * y)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                require ext_code.size(arg3)
                call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg2.length) + 132], address(_1803), (997 * y * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * y)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < arg2.length
                require 4 < arg2.length
                _1975 = mem[256]
                mem[(32 * arg2.length) + 132] = mem[204 len 20]
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg2.length) + 132], address(_1975), ext_call.return_data[0]
            else:
                if 0 <= ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)):
                    if -9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10 <= -997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount):
                        require (1000 * eth.balance(arg1)) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount))
                        require 0 < arg2.length
                        require ext_code.size(mem[140 len 20])
                        call mem[140 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 0 < arg2.length
                        _361 = mem[128]
                        require 2 < arg2.length
                        _388 = mem[192]
                        require 0 < arg2.length
                        require ext_code.size(mem[140 len 20])
                        call mem[140 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * arg2.length) + 132] = mem[140 len 20]
                        mem[(32 * arg2.length) + 164] = address(_388)
                        mem[(32 * arg2.length) + 196] = (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        require ext_code.size(arg3)
                        call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args address(_361), address(_388), (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < arg2.length
                        require 4 < arg2.length
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args address(mem[192]), address(mem[256]), ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        if ext_call.return_data[0] <= 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount):
                            return 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount), 
                                   0
                        return 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount), 
                               ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount))
                    s = 9
                    t = mem[(32 * arg2.length) + 128] - (9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10)
                    u = ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount))
                    v = 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)
                    while t > u:
                        require (1000 * eth.balance(arg1)) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)
                        require 0 < arg2.length
                        require ext_code.size(mem[140 len 20])
                        call mem[140 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 0 < arg2.length
                        require 2 < arg2.length
                        _1063 = mem[192]
                        require 0 < arg2.length
                        require ext_code.size(mem[140 len 20])
                        call mem[140 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * arg2.length) + 132] = mem[140 len 20]
                        mem[(32 * arg2.length) + 164] = address(_1063)
                        mem[(32 * arg2.length) + 196] = (997 * -(v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        require ext_code.size(arg3)
                        call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * arg2.length) + 132], address(_1063), (997 * -(v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < arg2.length
                        require 4 < arg2.length
                        _1463 = mem[256]
                        mem[(32 * arg2.length) + 132] = mem[204 len 20]
                        mem[(32 * arg2.length) + 164] = address(_1463)
                        mem[(32 * arg2.length) + 196] = ext_call.return_data[0]
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * arg2.length) + 132], address(_1463), ext_call.return_data[0]
                        mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        if ext_call.return_data[0] <= -(v * s / 10) + (s * v * s / 10) / 10:
                            s = s - 1
                            t = 0
                            u = t
                            v = v * s / 10
                            continue 
                        s = s - 1
                        t = ext_call.return_data[0] - (-(v * s / 10) + (s * v * s / 10) / 10)
                        u = t
                        v = v * s / 10
                        continue 
                    require (1000 * eth.balance(arg1)) + (997 * v)
                    require 0 < arg2.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < arg2.length
                    require 2 < arg2.length
                    _1061 = mem[192]
                    require 0 < arg2.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg2.length) + 132] = mem[140 len 20]
                    mem[(32 * arg2.length) + 164] = address(_1061)
                    mem[(32 * arg2.length) + 196] = (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * v)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg3)
                    call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_1061), (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * v)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg2.length
                    require 4 < arg2.length
                    _1460 = mem[256]
                    mem[(32 * arg2.length) + 132] = mem[204 len 20]
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_1460), ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    if ext_call.return_data[0] <= v:
                        return v, 0
                    return v, ext_call.return_data[0] - v
                s = 11
                t = 0
                u = ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount))
                v = 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)
                while t > u:
                    require (1000 * eth.balance(arg1)) + (997 * (v * s / 10) + (s * v * s / 10) / 10)
                    require 0 < arg2.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < arg2.length
                    require 2 < arg2.length
                    _1067 = mem[192]
                    require 0 < arg2.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg2.length) + 132] = mem[140 len 20]
                    mem[(32 * arg2.length) + 164] = address(_1067)
                    mem[(32 * arg2.length) + 196] = (997 * (v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * (v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg3)
                    call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_1067), (997 * (v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * (v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg2.length
                    require 4 < arg2.length
                    _1468 = mem[256]
                    mem[(32 * arg2.length) + 132] = mem[204 len 20]
                    mem[(32 * arg2.length) + 164] = address(_1468)
                    mem[(32 * arg2.length) + 196] = ext_call.return_data[0]
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_1468), ext_call.return_data[0]
                    mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    if ext_call.return_data[0] <= (v * s / 10) + (s * v * s / 10) / 10:
                        s = s + 1
                        t = 0
                        u = t
                        v = v * s / 10
                        continue 
                    s = s + 1
                    t = ext_call.return_data[0] - ((v * s / 10) + (s * v * s / 10) / 10)
                    u = t
                    v = v * s / 10
                    continue 
                if ext_call.return_data[0] - (9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10) <= u:
                    require (1000 * eth.balance(arg1)) + (997 * v)
                    require 0 < arg2.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < arg2.length
                    require 2 < arg2.length
                    _1121 = mem[192]
                    require 0 < arg2.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg2.length) + 132] = mem[140 len 20]
                    mem[(32 * arg2.length) + 164] = address(_1121)
                    mem[(32 * arg2.length) + 196] = (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * v)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg3)
                    call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_1121), (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * v)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg2.length
                    require 4 < arg2.length
                    _1505 = mem[256]
                    mem[(32 * arg2.length) + 132] = mem[204 len 20]
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_1505), ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    if ext_call.return_data[0] <= v:
                        return v, 0
                    return v, ext_call.return_data[0] - v
                t = s - 1
                w = ext_call.return_data[0] - (9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10)
                x = u
                y = v
                while w > x:
                    require (1000 * eth.balance(arg1)) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)
                    require 0 < arg2.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < arg2.length
                    require 2 < arg2.length
                    _1809 = mem[192]
                    require 0 < arg2.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg2.length) + 132] = mem[140 len 20]
                    mem[(32 * arg2.length) + 164] = address(_1809)
                    mem[(32 * arg2.length) + 196] = (997 * -(y * t / 10) + (t * y * t / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg3)
                    call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_1809), (997 * -(y * t / 10) + (t * y * t / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg2.length
                    require 4 < arg2.length
                    _1984 = mem[256]
                    mem[(32 * arg2.length) + 132] = mem[204 len 20]
                    mem[(32 * arg2.length) + 164] = address(_1984)
                    mem[(32 * arg2.length) + 196] = ext_call.return_data[0]
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_1984), ext_call.return_data[0]
                    mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    if ext_call.return_data[0] <= -(y * t / 10) + (t * y * t / 10) / 10:
                        t = t - 1
                        w = 0
                        x = w
                        y = y * t / 10
                        continue 
                    t = t - 1
                    w = ext_call.return_data[0] - (-(y * t / 10) + (t * y * t / 10) / 10)
                    x = w
                    y = y * t / 10
                    continue 
                require (1000 * eth.balance(arg1)) + (997 * y)
                require 0 < arg2.length
                require ext_code.size(mem[140 len 20])
                call mem[140 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 0 < arg2.length
                require 2 < arg2.length
                _1807 = mem[192]
                require 0 < arg2.length
                require ext_code.size(mem[140 len 20])
                call mem[140 len 20].0x313ce567 with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 10^(-ext_call.return_data[0] + 18)
                mem[(32 * arg2.length) + 132] = mem[140 len 20]
                mem[(32 * arg2.length) + 164] = address(_1807)
                mem[(32 * arg2.length) + 196] = (997 * y * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * y)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                require ext_code.size(arg3)
                call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg2.length) + 132], address(_1807), (997 * y * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * y)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < arg2.length
                require 4 < arg2.length
                _1981 = mem[256]
                mem[(32 * arg2.length) + 132] = mem[204 len 20]
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg2.length) + 132], address(_1981), ext_call.return_data[0]
        else:
            _166 = mem[128]
            require 2 < arg2.length
            _174 = mem[192]
            require 0 < arg2.length
            require ext_code.size(mem[140 len 20])
            call mem[140 len 20].0x313ce567 with:
                 gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 10^(-ext_call.return_data[0] + 18)
            mem[(32 * arg2.length) + 132] = mem[140 len 20]
            mem[(32 * arg2.length) + 164] = address(_174)
            mem[(32 * arg2.length) + 196] = (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
            require ext_code.size(arg3)
            call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(_166), address(_174), (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
            mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 2 < arg2.length
            _222 = mem[192]
            require 4 < arg2.length
            _233 = mem[256]
            mem[(32 * arg2.length) + 164] = mem[268 len 20]
            mem[(32 * arg2.length) + 196] = ext_call.return_data[0]
            require ext_code.size(stor3)
            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(_222), address(_233), ext_call.return_data[0]
            mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            if ext_call.return_data[0] <= 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10:
                if -11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10 <= -997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount):
                    if 0 <= ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)):
                        require (1000 * eth.balance(arg1)) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount))
                        require 0 < arg2.length
                        require ext_code.size(mem[140 len 20])
                        call mem[140 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 0 < arg2.length
                        _364 = mem[128]
                        require 2 < arg2.length
                        _393 = mem[192]
                        require 0 < arg2.length
                        require ext_code.size(mem[140 len 20])
                        call mem[140 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * arg2.length) + 132] = mem[140 len 20]
                        mem[(32 * arg2.length) + 164] = address(_393)
                        mem[(32 * arg2.length) + 196] = (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        require ext_code.size(arg3)
                        call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args address(_364), address(_393), (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < arg2.length
                        require 4 < arg2.length
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args address(mem[192]), address(mem[256]), ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        if ext_call.return_data[0] <= 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount):
                            return 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount), 
                                   0
                        return 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount), 
                               ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount))
                    s = 9
                    t = 0
                    u = ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount))
                    v = 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)
                    while t > u:
                        require (1000 * eth.balance(arg1)) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)
                        require 0 < arg2.length
                        require ext_code.size(mem[140 len 20])
                        call mem[140 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 0 < arg2.length
                        require 2 < arg2.length
                        _1071 = mem[192]
                        require 0 < arg2.length
                        require ext_code.size(mem[140 len 20])
                        call mem[140 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * arg2.length) + 132] = mem[140 len 20]
                        mem[(32 * arg2.length) + 164] = address(_1071)
                        mem[(32 * arg2.length) + 196] = (997 * -(v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        require ext_code.size(arg3)
                        call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * arg2.length) + 132], address(_1071), (997 * -(v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < arg2.length
                        require 4 < arg2.length
                        _1474 = mem[256]
                        mem[(32 * arg2.length) + 132] = mem[204 len 20]
                        mem[(32 * arg2.length) + 164] = address(_1474)
                        mem[(32 * arg2.length) + 196] = ext_call.return_data[0]
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * arg2.length) + 132], address(_1474), ext_call.return_data[0]
                        mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        if ext_call.return_data[0] <= -(v * s / 10) + (s * v * s / 10) / 10:
                            s = s - 1
                            t = 0
                            u = t
                            v = v * s / 10
                            continue 
                        s = s - 1
                        t = ext_call.return_data[0] - (-(v * s / 10) + (s * v * s / 10) / 10)
                        u = t
                        v = v * s / 10
                        continue 
                    require (1000 * eth.balance(arg1)) + (997 * v)
                    require 0 < arg2.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < arg2.length
                    require 2 < arg2.length
                    _1069 = mem[192]
                    require 0 < arg2.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg2.length) + 132] = mem[140 len 20]
                    mem[(32 * arg2.length) + 164] = address(_1069)
                    mem[(32 * arg2.length) + 196] = (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * v)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg3)
                    call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_1069), (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * v)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg2.length
                    require 4 < arg2.length
                    _1471 = mem[256]
                    mem[(32 * arg2.length) + 132] = mem[204 len 20]
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_1471), ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    if ext_call.return_data[0] <= v:
                        return v, 0
                    return v, ext_call.return_data[0] - v
                s = 11
                t = ext_call.return_data[0] - (11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10)
                u = ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount))
                v = 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)
                while t > u:
                    require (1000 * eth.balance(arg1)) + (997 * (v * s / 10) + (s * v * s / 10) / 10)
                    require 0 < arg2.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < arg2.length
                    require 2 < arg2.length
                    _1075 = mem[192]
                    require 0 < arg2.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg2.length) + 132] = mem[140 len 20]
                    mem[(32 * arg2.length) + 164] = address(_1075)
                    mem[(32 * arg2.length) + 196] = (997 * (v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * (v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg3)
                    call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_1075), (997 * (v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * (v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg2.length
                    require 4 < arg2.length
                    _1479 = mem[256]
                    mem[(32 * arg2.length) + 132] = mem[204 len 20]
                    mem[(32 * arg2.length) + 164] = address(_1479)
                    mem[(32 * arg2.length) + 196] = ext_call.return_data[0]
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_1479), ext_call.return_data[0]
                    mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    if ext_call.return_data[0] <= (v * s / 10) + (s * v * s / 10) / 10:
                        s = s + 1
                        t = 0
                        u = t
                        v = v * s / 10
                        continue 
                    s = s + 1
                    t = ext_call.return_data[0] - ((v * s / 10) + (s * v * s / 10) / 10)
                    u = t
                    v = v * s / 10
                    continue 
                if 0 <= u:
                    require (1000 * eth.balance(arg1)) + (997 * v)
                    require 0 < arg2.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < arg2.length
                    require 2 < arg2.length
                    _1133 = mem[192]
                    require 0 < arg2.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg2.length) + 132] = mem[140 len 20]
                    mem[(32 * arg2.length) + 164] = address(_1133)
                    mem[(32 * arg2.length) + 196] = (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * v)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg3)
                    call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_1133), (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * v)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg2.length
                    require 4 < arg2.length
                    _1509 = mem[256]
                    mem[(32 * arg2.length) + 132] = mem[204 len 20]
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_1509), ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    if ext_call.return_data[0] <= v:
                        return v, 0
                    return v, ext_call.return_data[0] - v
                t = s - 1
                w = 0
                x = u
                y = v
                while w > x:
                    require (1000 * eth.balance(arg1)) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)
                    require 0 < arg2.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < arg2.length
                    require 2 < arg2.length
                    _1813 = mem[192]
                    require 0 < arg2.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg2.length) + 132] = mem[140 len 20]
                    mem[(32 * arg2.length) + 164] = address(_1813)
                    mem[(32 * arg2.length) + 196] = (997 * -(y * t / 10) + (t * y * t / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg3)
                    call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_1813), (997 * -(y * t / 10) + (t * y * t / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg2.length
                    require 4 < arg2.length
                    _1990 = mem[256]
                    mem[(32 * arg2.length) + 132] = mem[204 len 20]
                    mem[(32 * arg2.length) + 164] = address(_1990)
                    mem[(32 * arg2.length) + 196] = ext_call.return_data[0]
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_1990), ext_call.return_data[0]
                    mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    if ext_call.return_data[0] <= -(y * t / 10) + (t * y * t / 10) / 10:
                        t = t - 1
                        w = 0
                        x = w
                        y = y * t / 10
                        continue 
                    t = t - 1
                    w = ext_call.return_data[0] - (-(y * t / 10) + (t * y * t / 10) / 10)
                    x = w
                    y = y * t / 10
                    continue 
                require (1000 * eth.balance(arg1)) + (997 * y)
                require 0 < arg2.length
                require ext_code.size(mem[140 len 20])
                call mem[140 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 0 < arg2.length
                require 2 < arg2.length
                _1811 = mem[192]
                require 0 < arg2.length
                require ext_code.size(mem[140 len 20])
                call mem[140 len 20].0x313ce567 with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 10^(-ext_call.return_data[0] + 18)
                mem[(32 * arg2.length) + 132] = mem[140 len 20]
                mem[(32 * arg2.length) + 164] = address(_1811)
                mem[(32 * arg2.length) + 196] = (997 * y * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * y)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                require ext_code.size(arg3)
                call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg2.length) + 132], address(_1811), (997 * y * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * y)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < arg2.length
                require 4 < arg2.length
                _1987 = mem[256]
                mem[(32 * arg2.length) + 132] = mem[204 len 20]
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg2.length) + 132], address(_1987), ext_call.return_data[0]
            else:
                if -11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10 <= -997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount):
                    if -9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10 <= -997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount):
                        require (1000 * eth.balance(arg1)) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount))
                        require 0 < arg2.length
                        require ext_code.size(mem[140 len 20])
                        call mem[140 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 0 < arg2.length
                        _367 = mem[128]
                        require 2 < arg2.length
                        _398 = mem[192]
                        require 0 < arg2.length
                        require ext_code.size(mem[140 len 20])
                        call mem[140 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * arg2.length) + 132] = mem[140 len 20]
                        mem[(32 * arg2.length) + 164] = address(_398)
                        mem[(32 * arg2.length) + 196] = (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        require ext_code.size(arg3)
                        call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args address(_367), address(_398), (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < arg2.length
                        require 4 < arg2.length
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args address(mem[192]), address(mem[256]), ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        if ext_call.return_data[0] <= 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount):
                            return 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount), 
                                   0
                        return 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount), 
                               ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount))
                    s = 9
                    t = mem[(32 * arg2.length) + 128] - (9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10)
                    u = ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount))
                    v = 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)
                    while t > u:
                        require (1000 * eth.balance(arg1)) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)
                        require 0 < arg2.length
                        require ext_code.size(mem[140 len 20])
                        call mem[140 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 0 < arg2.length
                        require 2 < arg2.length
                        _1079 = mem[192]
                        require 0 < arg2.length
                        require ext_code.size(mem[140 len 20])
                        call mem[140 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * arg2.length) + 132] = mem[140 len 20]
                        mem[(32 * arg2.length) + 164] = address(_1079)
                        mem[(32 * arg2.length) + 196] = (997 * -(v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        require ext_code.size(arg3)
                        call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * arg2.length) + 132], address(_1079), (997 * -(v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < arg2.length
                        require 4 < arg2.length
                        _1485 = mem[256]
                        mem[(32 * arg2.length) + 132] = mem[204 len 20]
                        mem[(32 * arg2.length) + 164] = address(_1485)
                        mem[(32 * arg2.length) + 196] = ext_call.return_data[0]
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * arg2.length) + 132], address(_1485), ext_call.return_data[0]
                        mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        if ext_call.return_data[0] <= -(v * s / 10) + (s * v * s / 10) / 10:
                            s = s - 1
                            t = 0
                            u = t
                            v = v * s / 10
                            continue 
                        s = s - 1
                        t = ext_call.return_data[0] - (-(v * s / 10) + (s * v * s / 10) / 10)
                        u = t
                        v = v * s / 10
                        continue 
                    require (1000 * eth.balance(arg1)) + (997 * v)
                    require 0 < arg2.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < arg2.length
                    require 2 < arg2.length
                    _1077 = mem[192]
                    require 0 < arg2.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg2.length) + 132] = mem[140 len 20]
                    mem[(32 * arg2.length) + 164] = address(_1077)
                    mem[(32 * arg2.length) + 196] = (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * v)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg3)
                    call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_1077), (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * v)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg2.length
                    require 4 < arg2.length
                    _1482 = mem[256]
                    mem[(32 * arg2.length) + 132] = mem[204 len 20]
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_1482), ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    if ext_call.return_data[0] <= v:
                        return v, 0
                    return v, ext_call.return_data[0] - v
                s = 11
                t = ext_call.return_data[0] - (11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10)
                u = ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount))
                v = 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)
                while t > u:
                    require (1000 * eth.balance(arg1)) + (997 * (v * s / 10) + (s * v * s / 10) / 10)
                    require 0 < arg2.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < arg2.length
                    require 2 < arg2.length
                    _1083 = mem[192]
                    require 0 < arg2.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg2.length) + 132] = mem[140 len 20]
                    mem[(32 * arg2.length) + 164] = address(_1083)
                    mem[(32 * arg2.length) + 196] = (997 * (v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * (v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg3)
                    call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_1083), (997 * (v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * (v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg2.length
                    require 4 < arg2.length
                    _1490 = mem[256]
                    mem[(32 * arg2.length) + 132] = mem[204 len 20]
                    mem[(32 * arg2.length) + 164] = address(_1490)
                    mem[(32 * arg2.length) + 196] = ext_call.return_data[0]
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_1490), ext_call.return_data[0]
                    mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    if ext_call.return_data[0] <= (v * s / 10) + (s * v * s / 10) / 10:
                        s = s + 1
                        t = 0
                        u = t
                        v = v * s / 10
                        continue 
                    s = s + 1
                    t = ext_call.return_data[0] - ((v * s / 10) + (s * v * s / 10) / 10)
                    u = t
                    v = v * s / 10
                    continue 
                if ext_call.return_data[0] - (9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10) <= u:
                    require (1000 * eth.balance(arg1)) + (997 * v)
                    require 0 < arg2.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < arg2.length
                    require 2 < arg2.length
                    _1145 = mem[192]
                    require 0 < arg2.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg2.length) + 132] = mem[140 len 20]
                    mem[(32 * arg2.length) + 164] = address(_1145)
                    mem[(32 * arg2.length) + 196] = (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * v)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg3)
                    call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_1145), (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * v)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg2.length
                    require 4 < arg2.length
                    _1513 = mem[256]
                    mem[(32 * arg2.length) + 132] = mem[204 len 20]
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_1513), ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    if ext_call.return_data[0] <= v:
                        return v, 0
                    return v, ext_call.return_data[0] - v
                t = s - 1
                w = ext_call.return_data[0] - (9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount) / 10)
                x = u
                y = v
                while w > x:
                    require (1000 * eth.balance(arg1)) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)
                    require 0 < arg2.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < arg2.length
                    require 2 < arg2.length
                    _1817 = mem[192]
                    require 0 < arg2.length
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg2.length) + 132] = mem[140 len 20]
                    mem[(32 * arg2.length) + 164] = address(_1817)
                    mem[(32 * arg2.length) + 196] = (997 * -(y * t / 10) + (t * y * t / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg3)
                    call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_1817), (997 * -(y * t / 10) + (t * y * t / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < arg2.length
                    require 4 < arg2.length
                    _1996 = mem[256]
                    mem[(32 * arg2.length) + 132] = mem[204 len 20]
                    mem[(32 * arg2.length) + 164] = address(_1996)
                    mem[(32 * arg2.length) + 196] = ext_call.return_data[0]
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg2.length) + 132], address(_1996), ext_call.return_data[0]
                    mem[(32 * arg2.length) + 128 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    if ext_call.return_data[0] <= -(y * t / 10) + (t * y * t / 10) / 10:
                        t = t - 1
                        w = 0
                        x = w
                        y = y * t / 10
                        continue 
                    t = t - 1
                    w = ext_call.return_data[0] - (-(y * t / 10) + (t * y * t / 10) / 10)
                    x = w
                    y = y * t / 10
                    continue 
                require (1000 * eth.balance(arg1)) + (997 * y)
                require 0 < arg2.length
                require ext_code.size(mem[140 len 20])
                call mem[140 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 0 < arg2.length
                require 2 < arg2.length
                _1815 = mem[192]
                require 0 < arg2.length
                require ext_code.size(mem[140 len 20])
                call mem[140 len 20].0x313ce567 with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 10^(-ext_call.return_data[0] + 18)
                mem[(32 * arg2.length) + 132] = mem[140 len 20]
                mem[(32 * arg2.length) + 164] = address(_1815)
                mem[(32 * arg2.length) + 196] = (997 * y * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * y)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                require ext_code.size(arg3)
                call arg3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg2.length) + 132], address(_1815), (997 * y * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * y)) + (10^18 * defaultAmount / arg4) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(arg1)) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                mem[(32 * arg2.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < arg2.length
                require 4 < arg2.length
                _1993 = mem[256]
                mem[(32 * arg2.length) + 132] = mem[204 len 20]
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg2.length) + 132], address(_1993), ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    if ext_call.return_data[0] <= y:
        return y, 0
    return y, ext_call.return_data[0] - y
}

function sub_4c3ad5c4(?) {
    mem[96] = 0xc0829421c1d260bd3cb3e0f06cfe2d52db2ce315
    mem[128] = 0x1f573d6fb3f13d689ff844b4ce37794d79a7ff1c
    mem[160] = 0x1f573d6fb3f13d689ff844b4ce37794d79a7ff1c
    mem[192] = 0x1f573d6fb3f13d689ff844b4ce37794d79a7ff1c
    mem[224] = arg2
    stor0.length = 5
    s = 0
    idx = 96
    while 256 > idx:
        stor0[s].field_0 = mem[idx + 12 len 20]
        s = s + 1
        idx = idx + 32
        continue 
    idx = 5
    while stor0.length > idx:
        stor0[idx].field_0 = 0
        idx = idx + 1
        continue 
    mem[260] = arg2
    require ext_code.size(stor2)
    call stor2.getExchange(address arg1) with:
         gas gas_remaining wei
        args arg2
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not stor0.length:
        require 4 < stor0.length
        require ext_code.size(mem[428 len 20])
        call mem[428 len 20].0x313ce567 with:
             gas gas_remaining wei
        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 4 < stor0.length
        _2002 = mem[416]
        mem[(32 * stor0.length) + 292] = address(ext_call.return_data[0])
        require ext_code.size(address(_2002))
        call address(_2002).0x70a08231 with:
             gas gas_remaining wei
            args address(ext_call.return_data[0])
        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require arg3
        require 0 < stor0.length
        require 1 < stor0.length
        _2010 = mem[320]
        mem[(32 * stor0.length) + 324] = mem[332 len 20]
        mem[(32 * stor0.length) + 356] = defaultAmount
        require ext_code.size(stor3)
        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args address(mem[292 len 28]), address(_2010), defaultAmount
        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 64
        require 4 < stor0.length
        require ext_code.size(mem[428 len 20])
        call mem[428 len 20].0x313ce567 with:
             gas gas_remaining wei
        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 2 < stor0.length
        _2023 = mem[352]
        require 4 < stor0.length
        _2025 = mem[416]
        mem[(32 * stor0.length) + 292] = mem[364 len 20]
        mem[(32 * stor0.length) + 324] = address(_2025)
        require ext_code.size(arg1)
        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args address(_2023), address(_2025), ext_call.return_data[0]
        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 0 < stor0.length
        require 1 < stor0.length
        _2033 = mem[320]
        mem[(32 * stor0.length) + 324] = mem[332 len 20]
        mem[(32 * stor0.length) + 356] = defaultAmount
        require ext_code.size(stor3)
        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args address(mem[292 len 28]), address(_2033), defaultAmount
        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 64
        require 4 < stor0.length
        require ext_code.size(mem[428 len 20])
        call mem[428 len 20].0x313ce567 with:
             gas gas_remaining wei
        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 2 < stor0.length
        _2046 = mem[352]
        require 4 < stor0.length
        _2048 = mem[416]
        mem[(32 * stor0.length) + 292] = mem[364 len 20]
        mem[(32 * stor0.length) + 324] = address(_2048)
        require ext_code.size(arg1)
        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args address(_2046), address(_2048), ext_call.return_data[0]
        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= defaultAmount:
            require ext_code.size(arg2)
            call arg2.0x70a08231 with:
                 gas gas_remaining wei
                args arg1
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(arg2)
            call arg2.0x70a08231 with:
                 gas gas_remaining wei
                args address(ext_call.return_data[0])
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
        require 0 < stor0.length
        require 1 < stor0.length
        _2059 = mem[320]
        mem[(32 * stor0.length) + 324] = mem[332 len 20]
        mem[(32 * stor0.length) + 356] = defaultAmount
        require ext_code.size(stor3)
        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args address(mem[292 len 28]), address(_2059), defaultAmount
        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 64
        require 4 < stor0.length
        require ext_code.size(mem[428 len 20])
        call mem[428 len 20].0x313ce567 with:
             gas gas_remaining wei
        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 2 < stor0.length
        _2079 = mem[352]
        require 4 < stor0.length
        _2081 = mem[416]
        mem[(32 * stor0.length) + 292] = mem[364 len 20]
        mem[(32 * stor0.length) + 324] = address(_2081)
        require ext_code.size(arg1)
        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args address(_2079), address(_2081), ext_call.return_data[0]
        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
        require 0 < stor0.length
        require 1 < stor0.length
        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= defaultAmount:
            _2092 = mem[320]
            mem[(32 * stor0.length) + 324] = mem[332 len 20]
            mem[(32 * stor0.length) + 356] = 11 * defaultAmount / 10
            require ext_code.size(stor3)
            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(mem[292 len 28]), address(_2092), 11 * defaultAmount / 10
            mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require 4 < stor0.length
            require ext_code.size(mem[428 len 20])
            call mem[428 len 20].0x313ce567 with:
                 gas gas_remaining wei
            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 2 < stor0.length
            _2118 = mem[352]
            require 4 < stor0.length
            _2122 = mem[416]
            mem[(32 * stor0.length) + 292] = mem[364 len 20]
            mem[(32 * stor0.length) + 324] = address(_2122)
            require ext_code.size(arg1)
            call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(_2118), address(_2122), ext_call.return_data[0]
            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
            require 0 < stor0.length
            require 1 < stor0.length
            if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= 11 * defaultAmount / 10:
                _2144 = mem[320]
                mem[(32 * stor0.length) + 324] = mem[332 len 20]
                mem[(32 * stor0.length) + 356] = 9 * defaultAmount / 10
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args address(mem[292 len 28]), address(_2144), 9 * defaultAmount / 10
                mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require 4 < stor0.length
                require ext_code.size(mem[428 len 20])
                call mem[428 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < stor0.length
                _2196 = mem[352]
                require 4 < stor0.length
                _2204 = mem[416]
                mem[(32 * stor0.length) + 292] = mem[364 len 20]
                mem[(32 * stor0.length) + 324] = address(_2204)
                mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                require ext_code.size(arg1)
                call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args address(_2196), address(_2204), ext_call.return_data[0]
                mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= 9 * defaultAmount / 10:
                    require 0 < stor0.length
                    require 1 < stor0.length
                    _2248 = mem[320]
                    mem[(32 * stor0.length) + 324] = mem[332 len 20]
                    mem[(32 * stor0.length) + 356] = defaultAmount
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args address(mem[292 len 28]), address(_2248), defaultAmount
                    mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < stor0.length
                    require ext_code.size(mem[428 len 20])
                    call mem[428 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args address(mem[352]), address(mem[416]), ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                    require ext_code.size(arg2)
                    call arg2.0x70a08231 with:
                         gas gas_remaining wei
                        args arg1
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(arg2)
                    call arg2.0x70a08231 with:
                         gas gas_remaining wei
                        args address(ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if defaultAmount <= 0:
                        return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= defaultAmount:
                        return defaultAmount, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    return defaultAmount, 
                           ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - defaultAmount,
                           address(ext_call.return_data[0]),
                           ext_call.return_data[0],
                           ext_call.return_data[0]
                if ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (9 * defaultAmount / 10) <= 0:
                    require 0 < stor0.length
                    require 1 < stor0.length
                    _2251 = mem[320]
                    mem[(32 * stor0.length) + 324] = mem[332 len 20]
                    mem[(32 * stor0.length) + 356] = defaultAmount
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args address(mem[292 len 28]), address(_2251), defaultAmount
                    mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < stor0.length
                    require ext_code.size(mem[428 len 20])
                    call mem[428 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args address(mem[352]), address(mem[416]), ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                    require ext_code.size(arg2)
                    call arg2.0x70a08231 with:
                         gas gas_remaining wei
                        args arg1
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(arg2)
                    call arg2.0x70a08231 with:
                         gas gas_remaining wei
                        args address(ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if defaultAmount <= 0:
                        return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= defaultAmount:
                        return defaultAmount, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    return defaultAmount, 
                           ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - defaultAmount,
                           address(ext_call.return_data[0]),
                           ext_call.return_data[0],
                           ext_call.return_data[0]
                s = 9
                t = ((997 * mem[(32 * stor0.length) + 288] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * mem[(32 * stor0.length) + 288] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (9 * defaultAmount / 10)
                u = 0
                v = defaultAmount
                while t > u:
                    require 0 < stor0.length
                    require 1 < stor0.length
                    _3038 = mem[320]
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_3038)
                    mem[(32 * stor0.length) + 356] = -(v * s / 10) + (s * v * s / 10) / 10
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_3038), -(v * s / 10) + (s * v * s / 10) / 10
                    mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < stor0.length
                    require ext_code.size(mem[428 len 20])
                    call mem[428 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _3446 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    mem[(32 * stor0.length) + 324] = address(_3446)
                    mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_3446), ext_call.return_data[0]
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= -(v * s / 10) + (s * v * s / 10) / 10:
                        s = s - 1
                        t = 0
                        u = t
                        v = v * s / 10
                        continue 
                    s = s - 1
                    t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (-(v * s / 10) + (s * v * s / 10) / 10)
                    u = t
                    v = v * s / 10
                    continue 
                require 0 < stor0.length
                require 1 < stor0.length
                _3035 = mem[320]
                mem[(32 * stor0.length) + 292] = mem[300 len 20]
                mem[(32 * stor0.length) + 324] = address(_3035)
                mem[(32 * stor0.length) + 356] = v
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * stor0.length) + 292], address(_3035), v
                mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require 4 < stor0.length
                require ext_code.size(mem[428 len 20])
                call mem[428 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < stor0.length
                require 4 < stor0.length
                _3443 = mem[416]
                mem[(32 * stor0.length) + 292] = mem[364 len 20]
                require ext_code.size(arg1)
                call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * stor0.length) + 292], address(_3443), ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                require ext_code.size(arg2)
                call arg2.0x70a08231 with:
                     gas gas_remaining wei
                    args address(arg1)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(arg2)
                call arg2.0x70a08231 with:
                     gas gas_remaining wei
                    args address(ext_call.return_data[0])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if v <= 0:
                    return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= v:
                    return v, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                return v, 
                       ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - v,
                       address(ext_call.return_data[0]),
                       ext_call.return_data[0],
                       ext_call.return_data[0]
            _2147 = mem[320]
            mem[(32 * stor0.length) + 324] = mem[332 len 20]
            mem[(32 * stor0.length) + 356] = 9 * defaultAmount / 10
            require ext_code.size(stor3)
            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(mem[292 len 28]), address(_2147), 9 * defaultAmount / 10
            mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require 4 < stor0.length
            require ext_code.size(mem[428 len 20])
            call mem[428 len 20].0x313ce567 with:
                 gas gas_remaining wei
            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 2 < stor0.length
            _2198 = mem[352]
            require 4 < stor0.length
            _2207 = mem[416]
            mem[(32 * stor0.length) + 292] = mem[364 len 20]
            mem[(32 * stor0.length) + 324] = address(_2207)
            mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
            require ext_code.size(arg1)
            call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(_2198), address(_2207), ext_call.return_data[0]
            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
            if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= 9 * defaultAmount / 10:
                if ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (11 * defaultAmount / 10) <= 0:
                    require 0 < stor0.length
                    require 1 < stor0.length
                    _2254 = mem[320]
                    mem[(32 * stor0.length) + 324] = mem[332 len 20]
                    mem[(32 * stor0.length) + 356] = defaultAmount
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args address(mem[292 len 28]), address(_2254), defaultAmount
                    mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < stor0.length
                    require ext_code.size(mem[428 len 20])
                    call mem[428 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args address(mem[352]), address(mem[416]), ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                    require ext_code.size(arg2)
                    call arg2.0x70a08231 with:
                         gas gas_remaining wei
                        args arg1
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(arg2)
                    call arg2.0x70a08231 with:
                         gas gas_remaining wei
                        args address(ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if defaultAmount <= 0:
                        return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= defaultAmount:
                        return defaultAmount, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    return defaultAmount, 
                           ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - defaultAmount,
                           address(ext_call.return_data[0]),
                           ext_call.return_data[0],
                           ext_call.return_data[0]
                s = 11
                t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (11 * defaultAmount / 10)
                u = 0
                v = defaultAmount
                while t > u:
                    require 0 < stor0.length
                    require 1 < stor0.length
                    _3043 = mem[320]
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_3043)
                    mem[(32 * stor0.length) + 356] = (v * s / 10) + (s * v * s / 10) / 10
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_3043), (v * s / 10) + (s * v * s / 10) / 10
                    mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < stor0.length
                    require ext_code.size(mem[428 len 20])
                    call mem[428 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _3451 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    mem[(32 * stor0.length) + 324] = address(_3451)
                    mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_3451), ext_call.return_data[0]
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= (v * s / 10) + (s * v * s / 10) / 10:
                        s = s + 1
                        t = 0
                        u = t
                        v = v * s / 10
                        continue 
                    s = s + 1
                    t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - ((v * s / 10) + (s * v * s / 10) / 10)
                    u = t
                    v = v * s / 10
                    continue 
                if 0 <= u:
                    require 0 < stor0.length
                    require 1 < stor0.length
                    _3095 = mem[320]
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_3095)
                    mem[(32 * stor0.length) + 356] = v
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_3095), v
                    mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < stor0.length
                    require ext_code.size(mem[428 len 20])
                    call mem[428 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _3503 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_3503), ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                    require ext_code.size(arg2)
                    call arg2.0x70a08231 with:
                         gas gas_remaining wei
                        args address(arg1)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(arg2)
                    call arg2.0x70a08231 with:
                         gas gas_remaining wei
                        args address(ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if v <= 0:
                        return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= v:
                        return v, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    return v, 
                           ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - v,
                           address(ext_call.return_data[0]),
                           ext_call.return_data[0],
                           ext_call.return_data[0]
                t = s - 1
                w = 0
                x = u
                y = v
                while w > x:
                    require 0 < stor0.length
                    require 1 < stor0.length
                    _4114 = mem[320]
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_4114)
                    mem[(32 * stor0.length) + 356] = -(y * t / 10) + (t * y * t / 10) / 10
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_4114), -(y * t / 10) + (t * y * t / 10) / 10
                    mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < stor0.length
                    require ext_code.size(mem[428 len 20])
                    call mem[428 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _4303 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    mem[(32 * stor0.length) + 324] = address(_4303)
                    mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_4303), ext_call.return_data[0]
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= -(y * t / 10) + (t * y * t / 10) / 10:
                        t = t - 1
                        w = 0
                        x = w
                        y = y * t / 10
                        continue 
                    t = t - 1
                    w = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (-(y * t / 10) + (t * y * t / 10) / 10)
                    x = w
                    y = y * t / 10
                    continue 
                require 0 < stor0.length
                require 1 < stor0.length
                _4111 = mem[320]
                mem[(32 * stor0.length) + 292] = mem[300 len 20]
                mem[(32 * stor0.length) + 324] = address(_4111)
                mem[(32 * stor0.length) + 356] = y
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * stor0.length) + 292], address(_4111), y
                mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require 4 < stor0.length
                require ext_code.size(mem[428 len 20])
                call mem[428 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < stor0.length
                require 4 < stor0.length
                _4300 = mem[416]
                mem[(32 * stor0.length) + 292] = mem[364 len 20]
                require ext_code.size(arg1)
                call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * stor0.length) + 292], address(_4300), ext_call.return_data[0]
            else:
                if ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (11 * defaultAmount / 10) <= 0:
                    if ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (9 * defaultAmount / 10) <= 0:
                        require 0 < stor0.length
                        require 1 < stor0.length
                        _2258 = mem[320]
                        mem[(32 * stor0.length) + 324] = mem[332 len 20]
                        mem[(32 * stor0.length) + 356] = defaultAmount
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args address(mem[292 len 28]), address(_2258), defaultAmount
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 4 < stor0.length
                        require ext_code.size(mem[428 len 20])
                        call mem[428 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args address(mem[352]), address(mem[416]), ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args arg1
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if defaultAmount <= 0:
                            return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= defaultAmount:
                            return defaultAmount, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        return defaultAmount, 
                               ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - defaultAmount,
                               address(ext_call.return_data[0]),
                               ext_call.return_data[0],
                               ext_call.return_data[0]
                    s = 9
                    t = ((997 * mem[(32 * stor0.length) + 288] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * mem[(32 * stor0.length) + 288] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (9 * defaultAmount / 10)
                    u = 0
                    v = defaultAmount
                    while t > u:
                        require 0 < stor0.length
                        require 1 < stor0.length
                        _3049 = mem[320]
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_3049)
                        mem[(32 * stor0.length) + 356] = -(v * s / 10) + (s * v * s / 10) / 10
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_3049), -(v * s / 10) + (s * v * s / 10) / 10
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 4 < stor0.length
                        require ext_code.size(mem[428 len 20])
                        call mem[428 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _3457 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        mem[(32 * stor0.length) + 324] = address(_3457)
                        mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_3457), ext_call.return_data[0]
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= -(v * s / 10) + (s * v * s / 10) / 10:
                            s = s - 1
                            t = 0
                            u = t
                            v = v * s / 10
                            continue 
                        s = s - 1
                        t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (-(v * s / 10) + (s * v * s / 10) / 10)
                        u = t
                        v = v * s / 10
                        continue 
                    require 0 < stor0.length
                    require 1 < stor0.length
                    _3046 = mem[320]
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_3046)
                    mem[(32 * stor0.length) + 356] = v
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_3046), v
                    mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < stor0.length
                    require ext_code.size(mem[428 len 20])
                    call mem[428 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _3454 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_3454), ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                    require ext_code.size(arg2)
                    call arg2.0x70a08231 with:
                         gas gas_remaining wei
                        args address(arg1)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(arg2)
                    call arg2.0x70a08231 with:
                         gas gas_remaining wei
                        args address(ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if v <= 0:
                        return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= v:
                        return v, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    return v, 
                           ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - v,
                           address(ext_call.return_data[0]),
                           ext_call.return_data[0],
                           ext_call.return_data[0]
                s = 11
                t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (11 * defaultAmount / 10)
                u = 0
                v = defaultAmount
                while t > u:
                    require 0 < stor0.length
                    require 1 < stor0.length
                    _3054 = mem[320]
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_3054)
                    mem[(32 * stor0.length) + 356] = (v * s / 10) + (s * v * s / 10) / 10
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_3054), (v * s / 10) + (s * v * s / 10) / 10
                    mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < stor0.length
                    require ext_code.size(mem[428 len 20])
                    call mem[428 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _3462 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    mem[(32 * stor0.length) + 324] = address(_3462)
                    mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_3462), ext_call.return_data[0]
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= (v * s / 10) + (s * v * s / 10) / 10:
                        s = s + 1
                        t = 0
                        u = t
                        v = v * s / 10
                        continue 
                    s = s + 1
                    t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - ((v * s / 10) + (s * v * s / 10) / 10)
                    u = t
                    v = v * s / 10
                    continue 
                if ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (9 * defaultAmount / 10) <= u:
                    require 0 < stor0.length
                    require 1 < stor0.length
                    _3098 = mem[320]
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_3098)
                    mem[(32 * stor0.length) + 356] = v
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_3098), v
                    mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < stor0.length
                    require ext_code.size(mem[428 len 20])
                    call mem[428 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _3507 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_3507), ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                    require ext_code.size(arg2)
                    call arg2.0x70a08231 with:
                         gas gas_remaining wei
                        args address(arg1)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(arg2)
                    call arg2.0x70a08231 with:
                         gas gas_remaining wei
                        args address(ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if v <= 0:
                        return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= v:
                        return v, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    return v, 
                           ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - v,
                           address(ext_call.return_data[0]),
                           ext_call.return_data[0],
                           ext_call.return_data[0]
                t = s - 1
                w = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (9 * defaultAmount / 10)
                x = u
                y = v
                while w > x:
                    require 0 < stor0.length
                    require 1 < stor0.length
                    _4120 = mem[320]
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_4120)
                    mem[(32 * stor0.length) + 356] = -(y * t / 10) + (t * y * t / 10) / 10
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_4120), -(y * t / 10) + (t * y * t / 10) / 10
                    mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < stor0.length
                    require ext_code.size(mem[428 len 20])
                    call mem[428 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _4309 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    mem[(32 * stor0.length) + 324] = address(_4309)
                    mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_4309), ext_call.return_data[0]
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= -(y * t / 10) + (t * y * t / 10) / 10:
                        t = t - 1
                        w = 0
                        x = w
                        y = y * t / 10
                        continue 
                    t = t - 1
                    w = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (-(y * t / 10) + (t * y * t / 10) / 10)
                    x = w
                    y = y * t / 10
                    continue 
                require 0 < stor0.length
                require 1 < stor0.length
                _4117 = mem[320]
                mem[(32 * stor0.length) + 292] = mem[300 len 20]
                mem[(32 * stor0.length) + 324] = address(_4117)
                mem[(32 * stor0.length) + 356] = y
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * stor0.length) + 292], address(_4117), y
                mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require 4 < stor0.length
                require ext_code.size(mem[428 len 20])
                call mem[428 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < stor0.length
                require 4 < stor0.length
                _4306 = mem[416]
                mem[(32 * stor0.length) + 292] = mem[364 len 20]
                require ext_code.size(arg1)
                call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * stor0.length) + 292], address(_4306), ext_call.return_data[0]
        else:
            _2095 = mem[320]
            mem[(32 * stor0.length) + 324] = mem[332 len 20]
            mem[(32 * stor0.length) + 356] = 11 * defaultAmount / 10
            require ext_code.size(stor3)
            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(mem[292 len 28]), address(_2095), 11 * defaultAmount / 10
            mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require 4 < stor0.length
            require ext_code.size(mem[428 len 20])
            call mem[428 len 20].0x313ce567 with:
                 gas gas_remaining wei
            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 2 < stor0.length
            _2120 = mem[352]
            require 4 < stor0.length
            _2125 = mem[416]
            mem[(32 * stor0.length) + 292] = mem[364 len 20]
            mem[(32 * stor0.length) + 324] = address(_2125)
            require ext_code.size(arg1)
            call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(_2120), address(_2125), ext_call.return_data[0]
            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
            require 0 < stor0.length
            require 1 < stor0.length
            if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= 11 * defaultAmount / 10:
                _2150 = mem[320]
                mem[(32 * stor0.length) + 324] = mem[332 len 20]
                mem[(32 * stor0.length) + 356] = 9 * defaultAmount / 10
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args address(mem[292 len 28]), address(_2150), 9 * defaultAmount / 10
                mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require 4 < stor0.length
                require ext_code.size(mem[428 len 20])
                call mem[428 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < stor0.length
                _2200 = mem[352]
                require 4 < stor0.length
                _2210 = mem[416]
                mem[(32 * stor0.length) + 292] = mem[364 len 20]
                mem[(32 * stor0.length) + 324] = address(_2210)
                mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                require ext_code.size(arg1)
                call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args address(_2200), address(_2210), ext_call.return_data[0]
                mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= 9 * defaultAmount / 10:
                    if 0 <= ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - defaultAmount:
                        require 0 < stor0.length
                        require 1 < stor0.length
                        _2262 = mem[320]
                        mem[(32 * stor0.length) + 324] = mem[332 len 20]
                        mem[(32 * stor0.length) + 356] = defaultAmount
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args address(mem[292 len 28]), address(_2262), defaultAmount
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 4 < stor0.length
                        require ext_code.size(mem[428 len 20])
                        call mem[428 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args address(mem[352]), address(mem[416]), ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args arg1
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if defaultAmount <= 0:
                            return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= defaultAmount:
                            return defaultAmount, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        return defaultAmount, 
                               ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - defaultAmount,
                               address(ext_call.return_data[0]),
                               ext_call.return_data[0],
                               ext_call.return_data[0]
                    s = 11
                    t = 0
                    u = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - defaultAmount
                    v = defaultAmount
                    while t > u:
                        require 0 < stor0.length
                        require 1 < stor0.length
                        _3059 = mem[320]
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_3059)
                        mem[(32 * stor0.length) + 356] = (v * s / 10) + (s * v * s / 10) / 10
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_3059), (v * s / 10) + (s * v * s / 10) / 10
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 4 < stor0.length
                        require ext_code.size(mem[428 len 20])
                        call mem[428 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _3467 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        mem[(32 * stor0.length) + 324] = address(_3467)
                        mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_3467), ext_call.return_data[0]
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= (v * s / 10) + (s * v * s / 10) / 10:
                            s = s + 1
                            t = 0
                            u = t
                            v = v * s / 10
                            continue 
                        s = s + 1
                        t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - ((v * s / 10) + (s * v * s / 10) / 10)
                        u = t
                        v = v * s / 10
                        continue 
                    if 0 <= u:
                        require 0 < stor0.length
                        require 1 < stor0.length
                        _3101 = mem[320]
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_3101)
                        mem[(32 * stor0.length) + 356] = v
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_3101), v
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 4 < stor0.length
                        require ext_code.size(mem[428 len 20])
                        call mem[428 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _3511 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_3511), ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(arg1)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if v <= 0:
                            return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= v:
                            return v, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        return v, 
                               ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - v,
                               address(ext_call.return_data[0]),
                               ext_call.return_data[0],
                               ext_call.return_data[0]
                    t = s - 1
                    w = 0
                    x = u
                    y = v
                    while w > x:
                        require 0 < stor0.length
                        require 1 < stor0.length
                        _4126 = mem[320]
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_4126)
                        mem[(32 * stor0.length) + 356] = -(y * t / 10) + (t * y * t / 10) / 10
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_4126), -(y * t / 10) + (t * y * t / 10) / 10
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 4 < stor0.length
                        require ext_code.size(mem[428 len 20])
                        call mem[428 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _4315 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        mem[(32 * stor0.length) + 324] = address(_4315)
                        mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_4315), ext_call.return_data[0]
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= -(y * t / 10) + (t * y * t / 10) / 10:
                            t = t - 1
                            w = 0
                            x = w
                            y = y * t / 10
                            continue 
                        t = t - 1
                        w = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (-(y * t / 10) + (t * y * t / 10) / 10)
                        x = w
                        y = y * t / 10
                        continue 
                    require 0 < stor0.length
                    require 1 < stor0.length
                    _4123 = mem[320]
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_4123)
                    mem[(32 * stor0.length) + 356] = y
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_4123), y
                    mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < stor0.length
                    require ext_code.size(mem[428 len 20])
                    call mem[428 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _4312 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_4312), ext_call.return_data[0]
                else:
                    if 0 <= ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - defaultAmount:
                        if -9 * defaultAmount / 10 <= -defaultAmount:
                            require 0 < stor0.length
                            require 1 < stor0.length
                            _2266 = mem[320]
                            mem[(32 * stor0.length) + 324] = mem[332 len 20]
                            mem[(32 * stor0.length) + 356] = defaultAmount
                            require ext_code.size(stor3)
                            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args address(mem[292 len 28]), address(_2266), defaultAmount
                            mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 4 < stor0.length
                            require ext_code.size(mem[428 len 20])
                            call mem[428 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            require ext_code.size(arg1)
                            call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args address(mem[352]), address(mem[416]), ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                            require ext_code.size(arg2)
                            call arg2.0x70a08231 with:
                                 gas gas_remaining wei
                                args arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(arg2)
                            call arg2.0x70a08231 with:
                                 gas gas_remaining wei
                                args address(ext_call.return_data[0])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if defaultAmount <= 0:
                                return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                            if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= defaultAmount:
                                return defaultAmount, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                            return defaultAmount, 
                                   ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - defaultAmount,
                                   address(ext_call.return_data[0]),
                                   ext_call.return_data[0],
                                   ext_call.return_data[0]
                        s = 9
                        t = ((997 * mem[(32 * stor0.length) + 288] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * mem[(32 * stor0.length) + 288] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (9 * defaultAmount / 10)
                        u = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - defaultAmount
                        v = defaultAmount
                        while t > u:
                            require 0 < stor0.length
                            require 1 < stor0.length
                            _3065 = mem[320]
                            mem[(32 * stor0.length) + 292] = mem[300 len 20]
                            mem[(32 * stor0.length) + 324] = address(_3065)
                            mem[(32 * stor0.length) + 356] = -(v * s / 10) + (s * v * s / 10) / 10
                            require ext_code.size(stor3)
                            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[(32 * stor0.length) + 292], address(_3065), -(v * s / 10) + (s * v * s / 10) / 10
                            mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 4 < stor0.length
                            require ext_code.size(mem[428 len 20])
                            call mem[428 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _3473 = mem[416]
                            mem[(32 * stor0.length) + 292] = mem[364 len 20]
                            mem[(32 * stor0.length) + 324] = address(_3473)
                            mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                            require ext_code.size(arg1)
                            call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[(32 * stor0.length) + 292], address(_3473), ext_call.return_data[0]
                            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                            if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= -(v * s / 10) + (s * v * s / 10) / 10:
                                s = s - 1
                                t = 0
                                u = t
                                v = v * s / 10
                                continue 
                            s = s - 1
                            t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (-(v * s / 10) + (s * v * s / 10) / 10)
                            u = t
                            v = v * s / 10
                            continue 
                        require 0 < stor0.length
                        require 1 < stor0.length
                        _3062 = mem[320]
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_3062)
                        mem[(32 * stor0.length) + 356] = v
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_3062), v
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 4 < stor0.length
                        require ext_code.size(mem[428 len 20])
                        call mem[428 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _3470 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_3470), ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(arg1)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if v <= 0:
                            return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= v:
                            return v, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        return v, 
                               ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - v,
                               address(ext_call.return_data[0]),
                               ext_call.return_data[0],
                               ext_call.return_data[0]
                    s = 11
                    t = 0
                    u = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - defaultAmount
                    v = defaultAmount
                    while t > u:
                        require 0 < stor0.length
                        require 1 < stor0.length
                        _3070 = mem[320]
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_3070)
                        mem[(32 * stor0.length) + 356] = (v * s / 10) + (s * v * s / 10) / 10
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_3070), (v * s / 10) + (s * v * s / 10) / 10
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 4 < stor0.length
                        require ext_code.size(mem[428 len 20])
                        call mem[428 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _3478 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        mem[(32 * stor0.length) + 324] = address(_3478)
                        mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_3478), ext_call.return_data[0]
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= (v * s / 10) + (s * v * s / 10) / 10:
                            s = s + 1
                            t = 0
                            u = t
                            v = v * s / 10
                            continue 
                        s = s + 1
                        t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - ((v * s / 10) + (s * v * s / 10) / 10)
                        u = t
                        v = v * s / 10
                        continue 
                    if ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (9 * defaultAmount / 10) <= u:
                        require 0 < stor0.length
                        require 1 < stor0.length
                        _3104 = mem[320]
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_3104)
                        mem[(32 * stor0.length) + 356] = v
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_3104), v
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 4 < stor0.length
                        require ext_code.size(mem[428 len 20])
                        call mem[428 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _3515 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_3515), ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(arg1)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if v <= 0:
                            return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= v:
                            return v, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        return v, 
                               ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - v,
                               address(ext_call.return_data[0]),
                               ext_call.return_data[0],
                               ext_call.return_data[0]
                    t = s - 1
                    w = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (9 * defaultAmount / 10)
                    x = u
                    y = v
                    while w > x:
                        require 0 < stor0.length
                        require 1 < stor0.length
                        _4132 = mem[320]
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_4132)
                        mem[(32 * stor0.length) + 356] = -(y * t / 10) + (t * y * t / 10) / 10
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_4132), -(y * t / 10) + (t * y * t / 10) / 10
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 4 < stor0.length
                        require ext_code.size(mem[428 len 20])
                        call mem[428 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _4321 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        mem[(32 * stor0.length) + 324] = address(_4321)
                        mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_4321), ext_call.return_data[0]
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= -(y * t / 10) + (t * y * t / 10) / 10:
                            t = t - 1
                            w = 0
                            x = w
                            y = y * t / 10
                            continue 
                        t = t - 1
                        w = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (-(y * t / 10) + (t * y * t / 10) / 10)
                        x = w
                        y = y * t / 10
                        continue 
                    require 0 < stor0.length
                    require 1 < stor0.length
                    _4129 = mem[320]
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_4129)
                    mem[(32 * stor0.length) + 356] = y
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_4129), y
                    mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < stor0.length
                    require ext_code.size(mem[428 len 20])
                    call mem[428 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _4318 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_4318), ext_call.return_data[0]
            else:
                _2153 = mem[320]
                mem[(32 * stor0.length) + 324] = mem[332 len 20]
                mem[(32 * stor0.length) + 356] = 9 * defaultAmount / 10
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args address(mem[292 len 28]), address(_2153), 9 * defaultAmount / 10
                mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require 4 < stor0.length
                require ext_code.size(mem[428 len 20])
                call mem[428 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < stor0.length
                _2202 = mem[352]
                require 4 < stor0.length
                _2213 = mem[416]
                mem[(32 * stor0.length) + 292] = mem[364 len 20]
                mem[(32 * stor0.length) + 324] = address(_2213)
                mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                require ext_code.size(arg1)
                call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args address(_2202), address(_2213), ext_call.return_data[0]
                mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= 9 * defaultAmount / 10:
                    if -11 * defaultAmount / 10 <= -defaultAmount:
                        if 0 <= ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - defaultAmount:
                            require 0 < stor0.length
                            require 1 < stor0.length
                            _2270 = mem[320]
                            mem[(32 * stor0.length) + 324] = mem[332 len 20]
                            mem[(32 * stor0.length) + 356] = defaultAmount
                            require ext_code.size(stor3)
                            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args address(mem[292 len 28]), address(_2270), defaultAmount
                            mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 4 < stor0.length
                            require ext_code.size(mem[428 len 20])
                            call mem[428 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            require ext_code.size(arg1)
                            call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args address(mem[352]), address(mem[416]), ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                            require ext_code.size(arg2)
                            call arg2.0x70a08231 with:
                                 gas gas_remaining wei
                                args arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(arg2)
                            call arg2.0x70a08231 with:
                                 gas gas_remaining wei
                                args address(ext_call.return_data[0])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if defaultAmount <= 0:
                                return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                            if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= defaultAmount:
                                return defaultAmount, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                            return defaultAmount, 
                                   ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - defaultAmount,
                                   address(ext_call.return_data[0]),
                                   ext_call.return_data[0],
                                   ext_call.return_data[0]
                        s = 9
                        t = 0
                        u = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - defaultAmount
                        v = defaultAmount
                        while t > u:
                            require 0 < stor0.length
                            require 1 < stor0.length
                            _3076 = mem[320]
                            mem[(32 * stor0.length) + 292] = mem[300 len 20]
                            mem[(32 * stor0.length) + 324] = address(_3076)
                            mem[(32 * stor0.length) + 356] = -(v * s / 10) + (s * v * s / 10) / 10
                            require ext_code.size(stor3)
                            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[(32 * stor0.length) + 292], address(_3076), -(v * s / 10) + (s * v * s / 10) / 10
                            mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 4 < stor0.length
                            require ext_code.size(mem[428 len 20])
                            call mem[428 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _3484 = mem[416]
                            mem[(32 * stor0.length) + 292] = mem[364 len 20]
                            mem[(32 * stor0.length) + 324] = address(_3484)
                            mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                            require ext_code.size(arg1)
                            call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[(32 * stor0.length) + 292], address(_3484), ext_call.return_data[0]
                            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                            if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= -(v * s / 10) + (s * v * s / 10) / 10:
                                s = s - 1
                                t = 0
                                u = t
                                v = v * s / 10
                                continue 
                            s = s - 1
                            t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (-(v * s / 10) + (s * v * s / 10) / 10)
                            u = t
                            v = v * s / 10
                            continue 
                        require 0 < stor0.length
                        require 1 < stor0.length
                        _3073 = mem[320]
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_3073)
                        mem[(32 * stor0.length) + 356] = v
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_3073), v
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 4 < stor0.length
                        require ext_code.size(mem[428 len 20])
                        call mem[428 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _3481 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_3481), ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(arg1)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if v <= 0:
                            return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= v:
                            return v, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        return v, 
                               ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - v,
                               address(ext_call.return_data[0]),
                               ext_call.return_data[0],
                               ext_call.return_data[0]
                    s = 11
                    t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (11 * defaultAmount / 10)
                    u = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - defaultAmount
                    v = defaultAmount
                    while t > u:
                        require 0 < stor0.length
                        require 1 < stor0.length
                        _3081 = mem[320]
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_3081)
                        mem[(32 * stor0.length) + 356] = (v * s / 10) + (s * v * s / 10) / 10
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_3081), (v * s / 10) + (s * v * s / 10) / 10
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 4 < stor0.length
                        require ext_code.size(mem[428 len 20])
                        call mem[428 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _3489 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        mem[(32 * stor0.length) + 324] = address(_3489)
                        mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_3489), ext_call.return_data[0]
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= (v * s / 10) + (s * v * s / 10) / 10:
                            s = s + 1
                            t = 0
                            u = t
                            v = v * s / 10
                            continue 
                        s = s + 1
                        t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - ((v * s / 10) + (s * v * s / 10) / 10)
                        u = t
                        v = v * s / 10
                        continue 
                    if 0 <= u:
                        require 0 < stor0.length
                        require 1 < stor0.length
                        _3107 = mem[320]
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_3107)
                        mem[(32 * stor0.length) + 356] = v
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_3107), v
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 4 < stor0.length
                        require ext_code.size(mem[428 len 20])
                        call mem[428 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _3519 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_3519), ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(arg1)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if v <= 0:
                            return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= v:
                            return v, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        return v, 
                               ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - v,
                               address(ext_call.return_data[0]),
                               ext_call.return_data[0],
                               ext_call.return_data[0]
                    t = s - 1
                    w = 0
                    x = u
                    y = v
                    while w > x:
                        require 0 < stor0.length
                        require 1 < stor0.length
                        _4138 = mem[320]
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_4138)
                        mem[(32 * stor0.length) + 356] = -(y * t / 10) + (t * y * t / 10) / 10
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_4138), -(y * t / 10) + (t * y * t / 10) / 10
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 4 < stor0.length
                        require ext_code.size(mem[428 len 20])
                        call mem[428 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _4327 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        mem[(32 * stor0.length) + 324] = address(_4327)
                        mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_4327), ext_call.return_data[0]
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= -(y * t / 10) + (t * y * t / 10) / 10:
                            t = t - 1
                            w = 0
                            x = w
                            y = y * t / 10
                            continue 
                        t = t - 1
                        w = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (-(y * t / 10) + (t * y * t / 10) / 10)
                        x = w
                        y = y * t / 10
                        continue 
                    require 0 < stor0.length
                    require 1 < stor0.length
                    _4135 = mem[320]
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_4135)
                    mem[(32 * stor0.length) + 356] = y
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_4135), y
                    mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < stor0.length
                    require ext_code.size(mem[428 len 20])
                    call mem[428 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _4324 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_4324), ext_call.return_data[0]
                else:
                    if -11 * defaultAmount / 10 <= -defaultAmount:
                        if -9 * defaultAmount / 10 <= -defaultAmount:
                            require 0 < stor0.length
                            require 1 < stor0.length
                            _2274 = mem[320]
                            mem[(32 * stor0.length) + 324] = mem[332 len 20]
                            mem[(32 * stor0.length) + 356] = defaultAmount
                            require ext_code.size(stor3)
                            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args address(mem[292 len 28]), address(_2274), defaultAmount
                            mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 4 < stor0.length
                            require ext_code.size(mem[428 len 20])
                            call mem[428 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            require ext_code.size(arg1)
                            call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args address(mem[352]), address(mem[416]), ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                            require ext_code.size(arg2)
                            call arg2.0x70a08231 with:
                                 gas gas_remaining wei
                                args arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(arg2)
                            call arg2.0x70a08231 with:
                                 gas gas_remaining wei
                                args address(ext_call.return_data[0])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if defaultAmount <= 0:
                                return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                            if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= defaultAmount:
                                return defaultAmount, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                            return defaultAmount, 
                                   ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - defaultAmount,
                                   address(ext_call.return_data[0]),
                                   ext_call.return_data[0],
                                   ext_call.return_data[0]
                        s = 9
                        t = ((997 * mem[(32 * stor0.length) + 288] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * mem[(32 * stor0.length) + 288] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (9 * defaultAmount / 10)
                        u = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - defaultAmount
                        v = defaultAmount
                        while t > u:
                            require 0 < stor0.length
                            require 1 < stor0.length
                            _3087 = mem[320]
                            mem[(32 * stor0.length) + 292] = mem[300 len 20]
                            mem[(32 * stor0.length) + 324] = address(_3087)
                            mem[(32 * stor0.length) + 356] = -(v * s / 10) + (s * v * s / 10) / 10
                            require ext_code.size(stor3)
                            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[(32 * stor0.length) + 292], address(_3087), -(v * s / 10) + (s * v * s / 10) / 10
                            mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 4 < stor0.length
                            require ext_code.size(mem[428 len 20])
                            call mem[428 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _3495 = mem[416]
                            mem[(32 * stor0.length) + 292] = mem[364 len 20]
                            mem[(32 * stor0.length) + 324] = address(_3495)
                            mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                            require ext_code.size(arg1)
                            call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[(32 * stor0.length) + 292], address(_3495), ext_call.return_data[0]
                            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                            if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= -(v * s / 10) + (s * v * s / 10) / 10:
                                s = s - 1
                                t = 0
                                u = t
                                v = v * s / 10
                                continue 
                            s = s - 1
                            t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (-(v * s / 10) + (s * v * s / 10) / 10)
                            u = t
                            v = v * s / 10
                            continue 
                        require 0 < stor0.length
                        require 1 < stor0.length
                        _3084 = mem[320]
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_3084)
                        mem[(32 * stor0.length) + 356] = v
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_3084), v
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 4 < stor0.length
                        require ext_code.size(mem[428 len 20])
                        call mem[428 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _3492 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_3492), ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(arg1)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if v <= 0:
                            return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= v:
                            return v, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        return v, 
                               ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - v,
                               address(ext_call.return_data[0]),
                               ext_call.return_data[0],
                               ext_call.return_data[0]
                    s = 11
                    t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (11 * defaultAmount / 10)
                    u = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - defaultAmount
                    v = defaultAmount
                    while t > u:
                        require 0 < stor0.length
                        require 1 < stor0.length
                        _3092 = mem[320]
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_3092)
                        mem[(32 * stor0.length) + 356] = (v * s / 10) + (s * v * s / 10) / 10
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_3092), (v * s / 10) + (s * v * s / 10) / 10
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 4 < stor0.length
                        require ext_code.size(mem[428 len 20])
                        call mem[428 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _3500 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        mem[(32 * stor0.length) + 324] = address(_3500)
                        mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_3500), ext_call.return_data[0]
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= (v * s / 10) + (s * v * s / 10) / 10:
                            s = s + 1
                            t = 0
                            u = t
                            v = v * s / 10
                            continue 
                        s = s + 1
                        t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - ((v * s / 10) + (s * v * s / 10) / 10)
                        u = t
                        v = v * s / 10
                        continue 
                    if ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (9 * defaultAmount / 10) <= u:
                        require 0 < stor0.length
                        require 1 < stor0.length
                        _3110 = mem[320]
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_3110)
                        mem[(32 * stor0.length) + 356] = v
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_3110), v
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 4 < stor0.length
                        require ext_code.size(mem[428 len 20])
                        call mem[428 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _3523 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_3523), ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(arg1)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if v <= 0:
                            return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= v:
                            return v, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        return v, 
                               ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - v,
                               address(ext_call.return_data[0]),
                               ext_call.return_data[0],
                               ext_call.return_data[0]
                    t = s - 1
                    w = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (9 * defaultAmount / 10)
                    x = u
                    y = v
                    while w > x:
                        require 0 < stor0.length
                        require 1 < stor0.length
                        _4144 = mem[320]
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_4144)
                        mem[(32 * stor0.length) + 356] = -(y * t / 10) + (t * y * t / 10) / 10
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_4144), -(y * t / 10) + (t * y * t / 10) / 10
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 4 < stor0.length
                        require ext_code.size(mem[428 len 20])
                        call mem[428 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _4333 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        mem[(32 * stor0.length) + 324] = address(_4333)
                        mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_4333), ext_call.return_data[0]
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= -(y * t / 10) + (t * y * t / 10) / 10:
                            t = t - 1
                            w = 0
                            x = w
                            y = y * t / 10
                            continue 
                        t = t - 1
                        w = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (-(y * t / 10) + (t * y * t / 10) / 10)
                        x = w
                        y = y * t / 10
                        continue 
                    require 0 < stor0.length
                    require 1 < stor0.length
                    _4141 = mem[320]
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_4141)
                    mem[(32 * stor0.length) + 356] = y
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_4141), y
                    mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < stor0.length
                    require ext_code.size(mem[428 len 20])
                    call mem[428 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _4330 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_4330), ext_call.return_data[0]
    else:
        mem[288] = address(stor0.field_0)
        idx = 288
        s = 0
        while (32 * stor0.length) + 256 > idx:
            mem[idx + 32] = stor0[s].field_256
            idx = idx + 32
            s = s + 1
            continue 
        require 4 < stor0.length
        require ext_code.size(mem[428 len 20])
        call mem[428 len 20].0x313ce567 with:
             gas gas_remaining wei
        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 4 < stor0.length
        _4108 = mem[416]
        mem[(32 * stor0.length) + 292] = address(ext_call.return_data[0])
        require ext_code.size(address(_4108))
        call address(_4108).0x70a08231 with:
             gas gas_remaining wei
            args address(ext_call.return_data[0])
        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require arg3
        require 0 < stor0.length
        require 1 < stor0.length
        _4248 = mem[320]
        mem[(32 * stor0.length) + 292] = mem[300 len 20]
        mem[(32 * stor0.length) + 324] = address(_4248)
        mem[(32 * stor0.length) + 356] = defaultAmount
        require ext_code.size(stor3)
        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args mem[(32 * stor0.length) + 292], address(_4248), defaultAmount
        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 64
        require 4 < stor0.length
        require ext_code.size(mem[428 len 20])
        call mem[428 len 20].0x313ce567 with:
             gas gas_remaining wei
        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 2 < stor0.length
        require 4 < stor0.length
        _4371 = mem[416]
        mem[(32 * stor0.length) + 292] = mem[364 len 20]
        mem[(32 * stor0.length) + 324] = address(_4371)
        require ext_code.size(arg1)
        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args mem[(32 * stor0.length) + 292], address(_4371), ext_call.return_data[0]
        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 0 < stor0.length
        require 1 < stor0.length
        _4427 = mem[320]
        mem[(32 * stor0.length) + 292] = mem[300 len 20]
        mem[(32 * stor0.length) + 324] = address(_4427)
        mem[(32 * stor0.length) + 356] = defaultAmount
        require ext_code.size(stor3)
        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args mem[(32 * stor0.length) + 292], address(_4427), defaultAmount
        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 64
        require 4 < stor0.length
        require ext_code.size(mem[428 len 20])
        call mem[428 len 20].0x313ce567 with:
             gas gas_remaining wei
        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 2 < stor0.length
        require 4 < stor0.length
        _4634 = mem[416]
        mem[(32 * stor0.length) + 292] = mem[364 len 20]
        mem[(32 * stor0.length) + 324] = address(_4634)
        require ext_code.size(arg1)
        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args mem[(32 * stor0.length) + 292], address(_4634), ext_call.return_data[0]
        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= defaultAmount:
            require ext_code.size(arg2)
            call arg2.0x70a08231 with:
                 gas gas_remaining wei
                args arg1
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(arg2)
            call arg2.0x70a08231 with:
                 gas gas_remaining wei
                args address(ext_call.return_data[0])
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
        require 0 < stor0.length
        require 1 < stor0.length
        _4645 = mem[320]
        mem[(32 * stor0.length) + 292] = mem[300 len 20]
        mem[(32 * stor0.length) + 324] = address(_4645)
        mem[(32 * stor0.length) + 356] = defaultAmount
        require ext_code.size(stor3)
        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args mem[(32 * stor0.length) + 292], address(_4645), defaultAmount
        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 64
        require 4 < stor0.length
        require ext_code.size(mem[428 len 20])
        call mem[428 len 20].0x313ce567 with:
             gas gas_remaining wei
        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 2 < stor0.length
        require 4 < stor0.length
        _4667 = mem[416]
        mem[(32 * stor0.length) + 292] = mem[364 len 20]
        mem[(32 * stor0.length) + 324] = address(_4667)
        require ext_code.size(arg1)
        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args mem[(32 * stor0.length) + 292], address(_4667), ext_call.return_data[0]
        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
        require 0 < stor0.length
        require 1 < stor0.length
        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= defaultAmount:
            _4678 = mem[320]
            mem[(32 * stor0.length) + 292] = mem[300 len 20]
            mem[(32 * stor0.length) + 324] = address(_4678)
            mem[(32 * stor0.length) + 356] = 11 * defaultAmount / 10
            require ext_code.size(stor3)
            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args mem[(32 * stor0.length) + 292], address(_4678), 11 * defaultAmount / 10
            mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require 4 < stor0.length
            require ext_code.size(mem[428 len 20])
            call mem[428 len 20].0x313ce567 with:
                 gas gas_remaining wei
            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 2 < stor0.length
            require 4 < stor0.length
            _4708 = mem[416]
            mem[(32 * stor0.length) + 292] = mem[364 len 20]
            mem[(32 * stor0.length) + 324] = address(_4708)
            require ext_code.size(arg1)
            call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args mem[(32 * stor0.length) + 292], address(_4708), ext_call.return_data[0]
            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
            require 0 < stor0.length
            require 1 < stor0.length
            if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= 11 * defaultAmount / 10:
                _4730 = mem[320]
                mem[(32 * stor0.length) + 292] = mem[300 len 20]
                mem[(32 * stor0.length) + 324] = address(_4730)
                mem[(32 * stor0.length) + 356] = 9 * defaultAmount / 10
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * stor0.length) + 292], address(_4730), 9 * defaultAmount / 10
                mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require 4 < stor0.length
                require ext_code.size(mem[428 len 20])
                call mem[428 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < stor0.length
                require 4 < stor0.length
                _4790 = mem[416]
                mem[(32 * stor0.length) + 292] = mem[364 len 20]
                mem[(32 * stor0.length) + 324] = address(_4790)
                mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                require ext_code.size(arg1)
                call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * stor0.length) + 292], address(_4790), ext_call.return_data[0]
                mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= 9 * defaultAmount / 10:
                    require 0 < stor0.length
                    require 1 < stor0.length
                    _4834 = mem[320]
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_4834)
                    mem[(32 * stor0.length) + 356] = defaultAmount
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_4834), defaultAmount
                    mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < stor0.length
                    require ext_code.size(mem[428 len 20])
                    call mem[428 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _5103 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_5103), ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                    require ext_code.size(arg2)
                    call arg2.0x70a08231 with:
                         gas gas_remaining wei
                        args arg1
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(arg2)
                    call arg2.0x70a08231 with:
                         gas gas_remaining wei
                        args address(ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if defaultAmount <= 0:
                        return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= defaultAmount:
                        return defaultAmount, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    return defaultAmount, 
                           ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - defaultAmount,
                           address(ext_call.return_data[0]),
                           ext_call.return_data[0],
                           ext_call.return_data[0]
                if ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (9 * defaultAmount / 10) <= 0:
                    require 0 < stor0.length
                    require 1 < stor0.length
                    _4837 = mem[320]
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_4837)
                    mem[(32 * stor0.length) + 356] = defaultAmount
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_4837), defaultAmount
                    mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < stor0.length
                    require ext_code.size(mem[428 len 20])
                    call mem[428 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _5106 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_5106), ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                    require ext_code.size(arg2)
                    call arg2.0x70a08231 with:
                         gas gas_remaining wei
                        args arg1
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(arg2)
                    call arg2.0x70a08231 with:
                         gas gas_remaining wei
                        args address(ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if defaultAmount <= 0:
                        return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= defaultAmount:
                        return defaultAmount, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    return defaultAmount, 
                           ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - defaultAmount,
                           address(ext_call.return_data[0]),
                           ext_call.return_data[0],
                           ext_call.return_data[0]
                s = 9
                t = ((997 * mem[(32 * stor0.length) + 288] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * mem[(32 * stor0.length) + 288] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (9 * defaultAmount / 10)
                u = 0
                v = defaultAmount
                while t > u:
                    require 0 < stor0.length
                    require 1 < stor0.length
                    _5624 = mem[320]
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_5624)
                    mem[(32 * stor0.length) + 356] = -(v * s / 10) + (s * v * s / 10) / 10
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_5624), -(v * s / 10) + (s * v * s / 10) / 10
                    mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < stor0.length
                    require ext_code.size(mem[428 len 20])
                    call mem[428 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _6032 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    mem[(32 * stor0.length) + 324] = address(_6032)
                    mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_6032), ext_call.return_data[0]
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= -(v * s / 10) + (s * v * s / 10) / 10:
                        s = s - 1
                        t = 0
                        u = t
                        v = v * s / 10
                        continue 
                    s = s - 1
                    t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (-(v * s / 10) + (s * v * s / 10) / 10)
                    u = t
                    v = v * s / 10
                    continue 
                require 0 < stor0.length
                require 1 < stor0.length
                _5621 = mem[320]
                mem[(32 * stor0.length) + 292] = mem[300 len 20]
                mem[(32 * stor0.length) + 324] = address(_5621)
                mem[(32 * stor0.length) + 356] = v
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * stor0.length) + 292], address(_5621), v
                mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require 4 < stor0.length
                require ext_code.size(mem[428 len 20])
                call mem[428 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < stor0.length
                require 4 < stor0.length
                _6029 = mem[416]
                mem[(32 * stor0.length) + 292] = mem[364 len 20]
                require ext_code.size(arg1)
                call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * stor0.length) + 292], address(_6029), ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                require ext_code.size(arg2)
                call arg2.0x70a08231 with:
                     gas gas_remaining wei
                    args address(arg1)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(arg2)
                call arg2.0x70a08231 with:
                     gas gas_remaining wei
                    args address(ext_call.return_data[0])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if v <= 0:
                    return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= v:
                    return v, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                return v, 
                       ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - v,
                       address(ext_call.return_data[0]),
                       ext_call.return_data[0],
                       ext_call.return_data[0]
            _4733 = mem[320]
            mem[(32 * stor0.length) + 292] = mem[300 len 20]
            mem[(32 * stor0.length) + 324] = address(_4733)
            mem[(32 * stor0.length) + 356] = 9 * defaultAmount / 10
            require ext_code.size(stor3)
            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args mem[(32 * stor0.length) + 292], address(_4733), 9 * defaultAmount / 10
            mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require 4 < stor0.length
            require ext_code.size(mem[428 len 20])
            call mem[428 len 20].0x313ce567 with:
                 gas gas_remaining wei
            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 2 < stor0.length
            require 4 < stor0.length
            _4793 = mem[416]
            mem[(32 * stor0.length) + 292] = mem[364 len 20]
            mem[(32 * stor0.length) + 324] = address(_4793)
            mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
            require ext_code.size(arg1)
            call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args mem[(32 * stor0.length) + 292], address(_4793), ext_call.return_data[0]
            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
            if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= 9 * defaultAmount / 10:
                if ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (11 * defaultAmount / 10) <= 0:
                    require 0 < stor0.length
                    require 1 < stor0.length
                    _4840 = mem[320]
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_4840)
                    mem[(32 * stor0.length) + 356] = defaultAmount
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_4840), defaultAmount
                    mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < stor0.length
                    require ext_code.size(mem[428 len 20])
                    call mem[428 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _5110 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_5110), ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                    require ext_code.size(arg2)
                    call arg2.0x70a08231 with:
                         gas gas_remaining wei
                        args arg1
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(arg2)
                    call arg2.0x70a08231 with:
                         gas gas_remaining wei
                        args address(ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if defaultAmount <= 0:
                        return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= defaultAmount:
                        return defaultAmount, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    return defaultAmount, 
                           ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - defaultAmount,
                           address(ext_call.return_data[0]),
                           ext_call.return_data[0],
                           ext_call.return_data[0]
                s = 11
                t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (11 * defaultAmount / 10)
                u = 0
                v = defaultAmount
                while t > u:
                    require 0 < stor0.length
                    require 1 < stor0.length
                    _5629 = mem[320]
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_5629)
                    mem[(32 * stor0.length) + 356] = (v * s / 10) + (s * v * s / 10) / 10
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_5629), (v * s / 10) + (s * v * s / 10) / 10
                    mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < stor0.length
                    require ext_code.size(mem[428 len 20])
                    call mem[428 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _6037 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    mem[(32 * stor0.length) + 324] = address(_6037)
                    mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_6037), ext_call.return_data[0]
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= (v * s / 10) + (s * v * s / 10) / 10:
                        s = s + 1
                        t = 0
                        u = t
                        v = v * s / 10
                        continue 
                    s = s + 1
                    t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - ((v * s / 10) + (s * v * s / 10) / 10)
                    u = t
                    v = v * s / 10
                    continue 
                if 0 <= u:
                    require 0 < stor0.length
                    require 1 < stor0.length
                    _5681 = mem[320]
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_5681)
                    mem[(32 * stor0.length) + 356] = v
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_5681), v
                    mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < stor0.length
                    require ext_code.size(mem[428 len 20])
                    call mem[428 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _6089 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_6089), ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                    require ext_code.size(arg2)
                    call arg2.0x70a08231 with:
                         gas gas_remaining wei
                        args address(arg1)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(arg2)
                    call arg2.0x70a08231 with:
                         gas gas_remaining wei
                        args address(ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if v <= 0:
                        return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= v:
                        return v, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    return v, 
                           ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - v,
                           address(ext_call.return_data[0]),
                           ext_call.return_data[0],
                           ext_call.return_data[0]
                t = s - 1
                w = 0
                x = u
                y = v
                while w > x:
                    require 0 < stor0.length
                    require 1 < stor0.length
                    _6690 = mem[320]
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_6690)
                    mem[(32 * stor0.length) + 356] = -(y * t / 10) + (t * y * t / 10) / 10
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_6690), -(y * t / 10) + (t * y * t / 10) / 10
                    mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < stor0.length
                    require ext_code.size(mem[428 len 20])
                    call mem[428 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _6870 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    mem[(32 * stor0.length) + 324] = address(_6870)
                    mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_6870), ext_call.return_data[0]
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= -(y * t / 10) + (t * y * t / 10) / 10:
                        t = t - 1
                        w = 0
                        x = w
                        y = y * t / 10
                        continue 
                    t = t - 1
                    w = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (-(y * t / 10) + (t * y * t / 10) / 10)
                    x = w
                    y = y * t / 10
                    continue 
                require 0 < stor0.length
                require 1 < stor0.length
                _6687 = mem[320]
                mem[(32 * stor0.length) + 292] = mem[300 len 20]
                mem[(32 * stor0.length) + 324] = address(_6687)
                mem[(32 * stor0.length) + 356] = y
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * stor0.length) + 292], address(_6687), y
                mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require 4 < stor0.length
                require ext_code.size(mem[428 len 20])
                call mem[428 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < stor0.length
                require 4 < stor0.length
                _6867 = mem[416]
                mem[(32 * stor0.length) + 292] = mem[364 len 20]
                require ext_code.size(arg1)
                call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * stor0.length) + 292], address(_6867), ext_call.return_data[0]
            else:
                if ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (11 * defaultAmount / 10) <= 0:
                    if ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (9 * defaultAmount / 10) <= 0:
                        require 0 < stor0.length
                        require 1 < stor0.length
                        _4844 = mem[320]
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_4844)
                        mem[(32 * stor0.length) + 356] = defaultAmount
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_4844), defaultAmount
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 4 < stor0.length
                        require ext_code.size(mem[428 len 20])
                        call mem[428 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _5115 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_5115), ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args arg1
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if defaultAmount <= 0:
                            return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= defaultAmount:
                            return defaultAmount, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        return defaultAmount, 
                               ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - defaultAmount,
                               address(ext_call.return_data[0]),
                               ext_call.return_data[0],
                               ext_call.return_data[0]
                    s = 9
                    t = ((997 * mem[(32 * stor0.length) + 288] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * mem[(32 * stor0.length) + 288] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (9 * defaultAmount / 10)
                    u = 0
                    v = defaultAmount
                    while t > u:
                        require 0 < stor0.length
                        require 1 < stor0.length
                        _5635 = mem[320]
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_5635)
                        mem[(32 * stor0.length) + 356] = -(v * s / 10) + (s * v * s / 10) / 10
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_5635), -(v * s / 10) + (s * v * s / 10) / 10
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 4 < stor0.length
                        require ext_code.size(mem[428 len 20])
                        call mem[428 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _6043 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        mem[(32 * stor0.length) + 324] = address(_6043)
                        mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_6043), ext_call.return_data[0]
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= -(v * s / 10) + (s * v * s / 10) / 10:
                            s = s - 1
                            t = 0
                            u = t
                            v = v * s / 10
                            continue 
                        s = s - 1
                        t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (-(v * s / 10) + (s * v * s / 10) / 10)
                        u = t
                        v = v * s / 10
                        continue 
                    require 0 < stor0.length
                    require 1 < stor0.length
                    _5632 = mem[320]
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_5632)
                    mem[(32 * stor0.length) + 356] = v
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_5632), v
                    mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < stor0.length
                    require ext_code.size(mem[428 len 20])
                    call mem[428 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _6040 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_6040), ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                    require ext_code.size(arg2)
                    call arg2.0x70a08231 with:
                         gas gas_remaining wei
                        args address(arg1)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(arg2)
                    call arg2.0x70a08231 with:
                         gas gas_remaining wei
                        args address(ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if v <= 0:
                        return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= v:
                        return v, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    return v, 
                           ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - v,
                           address(ext_call.return_data[0]),
                           ext_call.return_data[0],
                           ext_call.return_data[0]
                s = 11
                t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (11 * defaultAmount / 10)
                u = 0
                v = defaultAmount
                while t > u:
                    require 0 < stor0.length
                    require 1 < stor0.length
                    _5640 = mem[320]
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_5640)
                    mem[(32 * stor0.length) + 356] = (v * s / 10) + (s * v * s / 10) / 10
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_5640), (v * s / 10) + (s * v * s / 10) / 10
                    mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < stor0.length
                    require ext_code.size(mem[428 len 20])
                    call mem[428 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _6048 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    mem[(32 * stor0.length) + 324] = address(_6048)
                    mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_6048), ext_call.return_data[0]
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= (v * s / 10) + (s * v * s / 10) / 10:
                        s = s + 1
                        t = 0
                        u = t
                        v = v * s / 10
                        continue 
                    s = s + 1
                    t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - ((v * s / 10) + (s * v * s / 10) / 10)
                    u = t
                    v = v * s / 10
                    continue 
                if ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (9 * defaultAmount / 10) <= u:
                    require 0 < stor0.length
                    require 1 < stor0.length
                    _5684 = mem[320]
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_5684)
                    mem[(32 * stor0.length) + 356] = v
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_5684), v
                    mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < stor0.length
                    require ext_code.size(mem[428 len 20])
                    call mem[428 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _6093 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_6093), ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                    require ext_code.size(arg2)
                    call arg2.0x70a08231 with:
                         gas gas_remaining wei
                        args address(arg1)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(arg2)
                    call arg2.0x70a08231 with:
                         gas gas_remaining wei
                        args address(ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if v <= 0:
                        return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= v:
                        return v, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    return v, 
                           ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - v,
                           address(ext_call.return_data[0]),
                           ext_call.return_data[0],
                           ext_call.return_data[0]
                t = s - 1
                w = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (9 * defaultAmount / 10)
                x = u
                y = v
                while w > x:
                    require 0 < stor0.length
                    require 1 < stor0.length
                    _6696 = mem[320]
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_6696)
                    mem[(32 * stor0.length) + 356] = -(y * t / 10) + (t * y * t / 10) / 10
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_6696), -(y * t / 10) + (t * y * t / 10) / 10
                    mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < stor0.length
                    require ext_code.size(mem[428 len 20])
                    call mem[428 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _6876 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    mem[(32 * stor0.length) + 324] = address(_6876)
                    mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_6876), ext_call.return_data[0]
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= -(y * t / 10) + (t * y * t / 10) / 10:
                        t = t - 1
                        w = 0
                        x = w
                        y = y * t / 10
                        continue 
                    t = t - 1
                    w = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (-(y * t / 10) + (t * y * t / 10) / 10)
                    x = w
                    y = y * t / 10
                    continue 
                require 0 < stor0.length
                require 1 < stor0.length
                _6693 = mem[320]
                mem[(32 * stor0.length) + 292] = mem[300 len 20]
                mem[(32 * stor0.length) + 324] = address(_6693)
                mem[(32 * stor0.length) + 356] = y
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * stor0.length) + 292], address(_6693), y
                mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require 4 < stor0.length
                require ext_code.size(mem[428 len 20])
                call mem[428 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < stor0.length
                require 4 < stor0.length
                _6873 = mem[416]
                mem[(32 * stor0.length) + 292] = mem[364 len 20]
                require ext_code.size(arg1)
                call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * stor0.length) + 292], address(_6873), ext_call.return_data[0]
        else:
            _4681 = mem[320]
            mem[(32 * stor0.length) + 292] = mem[300 len 20]
            mem[(32 * stor0.length) + 324] = address(_4681)
            mem[(32 * stor0.length) + 356] = 11 * defaultAmount / 10
            require ext_code.size(stor3)
            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args mem[(32 * stor0.length) + 292], address(_4681), 11 * defaultAmount / 10
            mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require 4 < stor0.length
            require ext_code.size(mem[428 len 20])
            call mem[428 len 20].0x313ce567 with:
                 gas gas_remaining wei
            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 2 < stor0.length
            require 4 < stor0.length
            _4711 = mem[416]
            mem[(32 * stor0.length) + 292] = mem[364 len 20]
            mem[(32 * stor0.length) + 324] = address(_4711)
            require ext_code.size(arg1)
            call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args mem[(32 * stor0.length) + 292], address(_4711), ext_call.return_data[0]
            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
            require 0 < stor0.length
            require 1 < stor0.length
            if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= 11 * defaultAmount / 10:
                _4736 = mem[320]
                mem[(32 * stor0.length) + 292] = mem[300 len 20]
                mem[(32 * stor0.length) + 324] = address(_4736)
                mem[(32 * stor0.length) + 356] = 9 * defaultAmount / 10
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * stor0.length) + 292], address(_4736), 9 * defaultAmount / 10
                mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require 4 < stor0.length
                require ext_code.size(mem[428 len 20])
                call mem[428 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < stor0.length
                require 4 < stor0.length
                _4796 = mem[416]
                mem[(32 * stor0.length) + 292] = mem[364 len 20]
                mem[(32 * stor0.length) + 324] = address(_4796)
                mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                require ext_code.size(arg1)
                call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * stor0.length) + 292], address(_4796), ext_call.return_data[0]
                mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= 9 * defaultAmount / 10:
                    if 0 <= ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - defaultAmount:
                        require 0 < stor0.length
                        require 1 < stor0.length
                        _4848 = mem[320]
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_4848)
                        mem[(32 * stor0.length) + 356] = defaultAmount
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_4848), defaultAmount
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 4 < stor0.length
                        require ext_code.size(mem[428 len 20])
                        call mem[428 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _5121 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_5121), ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args arg1
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if defaultAmount <= 0:
                            return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= defaultAmount:
                            return defaultAmount, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        return defaultAmount, 
                               ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - defaultAmount,
                               address(ext_call.return_data[0]),
                               ext_call.return_data[0],
                               ext_call.return_data[0]
                    s = 11
                    t = 0
                    u = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - defaultAmount
                    v = defaultAmount
                    while t > u:
                        require 0 < stor0.length
                        require 1 < stor0.length
                        _5645 = mem[320]
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_5645)
                        mem[(32 * stor0.length) + 356] = (v * s / 10) + (s * v * s / 10) / 10
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_5645), (v * s / 10) + (s * v * s / 10) / 10
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 4 < stor0.length
                        require ext_code.size(mem[428 len 20])
                        call mem[428 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _6053 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        mem[(32 * stor0.length) + 324] = address(_6053)
                        mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_6053), ext_call.return_data[0]
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= (v * s / 10) + (s * v * s / 10) / 10:
                            s = s + 1
                            t = 0
                            u = t
                            v = v * s / 10
                            continue 
                        s = s + 1
                        t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - ((v * s / 10) + (s * v * s / 10) / 10)
                        u = t
                        v = v * s / 10
                        continue 
                    if 0 <= u:
                        require 0 < stor0.length
                        require 1 < stor0.length
                        _5687 = mem[320]
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_5687)
                        mem[(32 * stor0.length) + 356] = v
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_5687), v
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 4 < stor0.length
                        require ext_code.size(mem[428 len 20])
                        call mem[428 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _6097 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_6097), ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(arg1)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if v <= 0:
                            return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= v:
                            return v, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        return v, 
                               ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - v,
                               address(ext_call.return_data[0]),
                               ext_call.return_data[0],
                               ext_call.return_data[0]
                    t = s - 1
                    w = 0
                    x = u
                    y = v
                    while w > x:
                        require 0 < stor0.length
                        require 1 < stor0.length
                        _6702 = mem[320]
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_6702)
                        mem[(32 * stor0.length) + 356] = -(y * t / 10) + (t * y * t / 10) / 10
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_6702), -(y * t / 10) + (t * y * t / 10) / 10
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 4 < stor0.length
                        require ext_code.size(mem[428 len 20])
                        call mem[428 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _6882 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        mem[(32 * stor0.length) + 324] = address(_6882)
                        mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_6882), ext_call.return_data[0]
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= -(y * t / 10) + (t * y * t / 10) / 10:
                            t = t - 1
                            w = 0
                            x = w
                            y = y * t / 10
                            continue 
                        t = t - 1
                        w = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (-(y * t / 10) + (t * y * t / 10) / 10)
                        x = w
                        y = y * t / 10
                        continue 
                    require 0 < stor0.length
                    require 1 < stor0.length
                    _6699 = mem[320]
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_6699)
                    mem[(32 * stor0.length) + 356] = y
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_6699), y
                    mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < stor0.length
                    require ext_code.size(mem[428 len 20])
                    call mem[428 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _6879 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_6879), ext_call.return_data[0]
                else:
                    if 0 <= ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - defaultAmount:
                        if -9 * defaultAmount / 10 <= -defaultAmount:
                            require 0 < stor0.length
                            require 1 < stor0.length
                            _4852 = mem[320]
                            mem[(32 * stor0.length) + 292] = mem[300 len 20]
                            mem[(32 * stor0.length) + 324] = address(_4852)
                            mem[(32 * stor0.length) + 356] = defaultAmount
                            require ext_code.size(stor3)
                            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[(32 * stor0.length) + 292], address(_4852), defaultAmount
                            mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 4 < stor0.length
                            require ext_code.size(mem[428 len 20])
                            call mem[428 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _5126 = mem[416]
                            mem[(32 * stor0.length) + 292] = mem[364 len 20]
                            require ext_code.size(arg1)
                            call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[(32 * stor0.length) + 292], address(_5126), ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                            require ext_code.size(arg2)
                            call arg2.0x70a08231 with:
                                 gas gas_remaining wei
                                args arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(arg2)
                            call arg2.0x70a08231 with:
                                 gas gas_remaining wei
                                args address(ext_call.return_data[0])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if defaultAmount <= 0:
                                return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                            if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= defaultAmount:
                                return defaultAmount, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                            return defaultAmount, 
                                   ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - defaultAmount,
                                   address(ext_call.return_data[0]),
                                   ext_call.return_data[0],
                                   ext_call.return_data[0]
                        s = 9
                        t = ((997 * mem[(32 * stor0.length) + 288] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * mem[(32 * stor0.length) + 288] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (9 * defaultAmount / 10)
                        u = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - defaultAmount
                        v = defaultAmount
                        while t > u:
                            require 0 < stor0.length
                            require 1 < stor0.length
                            _5651 = mem[320]
                            mem[(32 * stor0.length) + 292] = mem[300 len 20]
                            mem[(32 * stor0.length) + 324] = address(_5651)
                            mem[(32 * stor0.length) + 356] = -(v * s / 10) + (s * v * s / 10) / 10
                            require ext_code.size(stor3)
                            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[(32 * stor0.length) + 292], address(_5651), -(v * s / 10) + (s * v * s / 10) / 10
                            mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 4 < stor0.length
                            require ext_code.size(mem[428 len 20])
                            call mem[428 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _6059 = mem[416]
                            mem[(32 * stor0.length) + 292] = mem[364 len 20]
                            mem[(32 * stor0.length) + 324] = address(_6059)
                            mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                            require ext_code.size(arg1)
                            call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[(32 * stor0.length) + 292], address(_6059), ext_call.return_data[0]
                            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                            if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= -(v * s / 10) + (s * v * s / 10) / 10:
                                s = s - 1
                                t = 0
                                u = t
                                v = v * s / 10
                                continue 
                            s = s - 1
                            t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (-(v * s / 10) + (s * v * s / 10) / 10)
                            u = t
                            v = v * s / 10
                            continue 
                        require 0 < stor0.length
                        require 1 < stor0.length
                        _5648 = mem[320]
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_5648)
                        mem[(32 * stor0.length) + 356] = v
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_5648), v
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 4 < stor0.length
                        require ext_code.size(mem[428 len 20])
                        call mem[428 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _6056 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_6056), ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(arg1)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if v <= 0:
                            return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= v:
                            return v, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        return v, 
                               ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - v,
                               address(ext_call.return_data[0]),
                               ext_call.return_data[0],
                               ext_call.return_data[0]
                    s = 11
                    t = 0
                    u = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - defaultAmount
                    v = defaultAmount
                    while t > u:
                        require 0 < stor0.length
                        require 1 < stor0.length
                        _5656 = mem[320]
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_5656)
                        mem[(32 * stor0.length) + 356] = (v * s / 10) + (s * v * s / 10) / 10
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_5656), (v * s / 10) + (s * v * s / 10) / 10
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 4 < stor0.length
                        require ext_code.size(mem[428 len 20])
                        call mem[428 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _6064 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        mem[(32 * stor0.length) + 324] = address(_6064)
                        mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_6064), ext_call.return_data[0]
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= (v * s / 10) + (s * v * s / 10) / 10:
                            s = s + 1
                            t = 0
                            u = t
                            v = v * s / 10
                            continue 
                        s = s + 1
                        t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - ((v * s / 10) + (s * v * s / 10) / 10)
                        u = t
                        v = v * s / 10
                        continue 
                    if ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (9 * defaultAmount / 10) <= u:
                        require 0 < stor0.length
                        require 1 < stor0.length
                        _5690 = mem[320]
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_5690)
                        mem[(32 * stor0.length) + 356] = v
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_5690), v
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 4 < stor0.length
                        require ext_code.size(mem[428 len 20])
                        call mem[428 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _6101 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_6101), ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(arg1)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if v <= 0:
                            return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= v:
                            return v, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        return v, 
                               ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - v,
                               address(ext_call.return_data[0]),
                               ext_call.return_data[0],
                               ext_call.return_data[0]
                    t = s - 1
                    w = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (9 * defaultAmount / 10)
                    x = u
                    y = v
                    while w > x:
                        require 0 < stor0.length
                        require 1 < stor0.length
                        _6708 = mem[320]
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_6708)
                        mem[(32 * stor0.length) + 356] = -(y * t / 10) + (t * y * t / 10) / 10
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_6708), -(y * t / 10) + (t * y * t / 10) / 10
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 4 < stor0.length
                        require ext_code.size(mem[428 len 20])
                        call mem[428 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _6888 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        mem[(32 * stor0.length) + 324] = address(_6888)
                        mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_6888), ext_call.return_data[0]
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= -(y * t / 10) + (t * y * t / 10) / 10:
                            t = t - 1
                            w = 0
                            x = w
                            y = y * t / 10
                            continue 
                        t = t - 1
                        w = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (-(y * t / 10) + (t * y * t / 10) / 10)
                        x = w
                        y = y * t / 10
                        continue 
                    require 0 < stor0.length
                    require 1 < stor0.length
                    _6705 = mem[320]
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_6705)
                    mem[(32 * stor0.length) + 356] = y
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_6705), y
                    mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < stor0.length
                    require ext_code.size(mem[428 len 20])
                    call mem[428 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _6885 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_6885), ext_call.return_data[0]
            else:
                _4739 = mem[320]
                mem[(32 * stor0.length) + 292] = mem[300 len 20]
                mem[(32 * stor0.length) + 324] = address(_4739)
                mem[(32 * stor0.length) + 356] = 9 * defaultAmount / 10
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * stor0.length) + 292], address(_4739), 9 * defaultAmount / 10
                mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require 4 < stor0.length
                require ext_code.size(mem[428 len 20])
                call mem[428 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < stor0.length
                require 4 < stor0.length
                _4799 = mem[416]
                mem[(32 * stor0.length) + 292] = mem[364 len 20]
                mem[(32 * stor0.length) + 324] = address(_4799)
                mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                require ext_code.size(arg1)
                call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * stor0.length) + 292], address(_4799), ext_call.return_data[0]
                mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= 9 * defaultAmount / 10:
                    if -11 * defaultAmount / 10 <= -defaultAmount:
                        if 0 <= ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - defaultAmount:
                            require 0 < stor0.length
                            require 1 < stor0.length
                            _4856 = mem[320]
                            mem[(32 * stor0.length) + 292] = mem[300 len 20]
                            mem[(32 * stor0.length) + 324] = address(_4856)
                            mem[(32 * stor0.length) + 356] = defaultAmount
                            require ext_code.size(stor3)
                            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[(32 * stor0.length) + 292], address(_4856), defaultAmount
                            mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 4 < stor0.length
                            require ext_code.size(mem[428 len 20])
                            call mem[428 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _5132 = mem[416]
                            mem[(32 * stor0.length) + 292] = mem[364 len 20]
                            require ext_code.size(arg1)
                            call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[(32 * stor0.length) + 292], address(_5132), ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                            require ext_code.size(arg2)
                            call arg2.0x70a08231 with:
                                 gas gas_remaining wei
                                args arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(arg2)
                            call arg2.0x70a08231 with:
                                 gas gas_remaining wei
                                args address(ext_call.return_data[0])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if defaultAmount <= 0:
                                return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                            if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= defaultAmount:
                                return defaultAmount, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                            return defaultAmount, 
                                   ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - defaultAmount,
                                   address(ext_call.return_data[0]),
                                   ext_call.return_data[0],
                                   ext_call.return_data[0]
                        s = 9
                        t = 0
                        u = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - defaultAmount
                        v = defaultAmount
                        while t > u:
                            require 0 < stor0.length
                            require 1 < stor0.length
                            _5662 = mem[320]
                            mem[(32 * stor0.length) + 292] = mem[300 len 20]
                            mem[(32 * stor0.length) + 324] = address(_5662)
                            mem[(32 * stor0.length) + 356] = -(v * s / 10) + (s * v * s / 10) / 10
                            require ext_code.size(stor3)
                            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[(32 * stor0.length) + 292], address(_5662), -(v * s / 10) + (s * v * s / 10) / 10
                            mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 4 < stor0.length
                            require ext_code.size(mem[428 len 20])
                            call mem[428 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _6070 = mem[416]
                            mem[(32 * stor0.length) + 292] = mem[364 len 20]
                            mem[(32 * stor0.length) + 324] = address(_6070)
                            mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                            require ext_code.size(arg1)
                            call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[(32 * stor0.length) + 292], address(_6070), ext_call.return_data[0]
                            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                            if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= -(v * s / 10) + (s * v * s / 10) / 10:
                                s = s - 1
                                t = 0
                                u = t
                                v = v * s / 10
                                continue 
                            s = s - 1
                            t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (-(v * s / 10) + (s * v * s / 10) / 10)
                            u = t
                            v = v * s / 10
                            continue 
                        require 0 < stor0.length
                        require 1 < stor0.length
                        _5659 = mem[320]
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_5659)
                        mem[(32 * stor0.length) + 356] = v
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_5659), v
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 4 < stor0.length
                        require ext_code.size(mem[428 len 20])
                        call mem[428 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _6067 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_6067), ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(arg1)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if v <= 0:
                            return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= v:
                            return v, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        return v, 
                               ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - v,
                               address(ext_call.return_data[0]),
                               ext_call.return_data[0],
                               ext_call.return_data[0]
                    s = 11
                    t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (11 * defaultAmount / 10)
                    u = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - defaultAmount
                    v = defaultAmount
                    while t > u:
                        require 0 < stor0.length
                        require 1 < stor0.length
                        _5667 = mem[320]
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_5667)
                        mem[(32 * stor0.length) + 356] = (v * s / 10) + (s * v * s / 10) / 10
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_5667), (v * s / 10) + (s * v * s / 10) / 10
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 4 < stor0.length
                        require ext_code.size(mem[428 len 20])
                        call mem[428 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _6075 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        mem[(32 * stor0.length) + 324] = address(_6075)
                        mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_6075), ext_call.return_data[0]
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= (v * s / 10) + (s * v * s / 10) / 10:
                            s = s + 1
                            t = 0
                            u = t
                            v = v * s / 10
                            continue 
                        s = s + 1
                        t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - ((v * s / 10) + (s * v * s / 10) / 10)
                        u = t
                        v = v * s / 10
                        continue 
                    if 0 <= u:
                        require 0 < stor0.length
                        require 1 < stor0.length
                        _5693 = mem[320]
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_5693)
                        mem[(32 * stor0.length) + 356] = v
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_5693), v
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 4 < stor0.length
                        require ext_code.size(mem[428 len 20])
                        call mem[428 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _6105 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_6105), ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(arg1)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if v <= 0:
                            return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= v:
                            return v, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        return v, 
                               ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - v,
                               address(ext_call.return_data[0]),
                               ext_call.return_data[0],
                               ext_call.return_data[0]
                    t = s - 1
                    w = 0
                    x = u
                    y = v
                    while w > x:
                        require 0 < stor0.length
                        require 1 < stor0.length
                        _6714 = mem[320]
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_6714)
                        mem[(32 * stor0.length) + 356] = -(y * t / 10) + (t * y * t / 10) / 10
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_6714), -(y * t / 10) + (t * y * t / 10) / 10
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 4 < stor0.length
                        require ext_code.size(mem[428 len 20])
                        call mem[428 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _6894 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        mem[(32 * stor0.length) + 324] = address(_6894)
                        mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_6894), ext_call.return_data[0]
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= -(y * t / 10) + (t * y * t / 10) / 10:
                            t = t - 1
                            w = 0
                            x = w
                            y = y * t / 10
                            continue 
                        t = t - 1
                        w = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (-(y * t / 10) + (t * y * t / 10) / 10)
                        x = w
                        y = y * t / 10
                        continue 
                    require 0 < stor0.length
                    require 1 < stor0.length
                    _6711 = mem[320]
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_6711)
                    mem[(32 * stor0.length) + 356] = y
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_6711), y
                    mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < stor0.length
                    require ext_code.size(mem[428 len 20])
                    call mem[428 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _6891 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_6891), ext_call.return_data[0]
                else:
                    if -11 * defaultAmount / 10 <= -defaultAmount:
                        if -9 * defaultAmount / 10 <= -defaultAmount:
                            require 0 < stor0.length
                            require 1 < stor0.length
                            _4860 = mem[320]
                            mem[(32 * stor0.length) + 292] = mem[300 len 20]
                            mem[(32 * stor0.length) + 324] = address(_4860)
                            mem[(32 * stor0.length) + 356] = defaultAmount
                            require ext_code.size(stor3)
                            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[(32 * stor0.length) + 292], address(_4860), defaultAmount
                            mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 4 < stor0.length
                            require ext_code.size(mem[428 len 20])
                            call mem[428 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _5138 = mem[416]
                            mem[(32 * stor0.length) + 292] = mem[364 len 20]
                            require ext_code.size(arg1)
                            call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[(32 * stor0.length) + 292], address(_5138), ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                            require ext_code.size(arg2)
                            call arg2.0x70a08231 with:
                                 gas gas_remaining wei
                                args arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(arg2)
                            call arg2.0x70a08231 with:
                                 gas gas_remaining wei
                                args address(ext_call.return_data[0])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if defaultAmount <= 0:
                                return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                            if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= defaultAmount:
                                return defaultAmount, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                            return defaultAmount, 
                                   ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - defaultAmount,
                                   address(ext_call.return_data[0]),
                                   ext_call.return_data[0],
                                   ext_call.return_data[0]
                        s = 9
                        t = ((997 * mem[(32 * stor0.length) + 288] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * mem[(32 * stor0.length) + 288] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (9 * defaultAmount / 10)
                        u = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - defaultAmount
                        v = defaultAmount
                        while t > u:
                            require 0 < stor0.length
                            require 1 < stor0.length
                            _5673 = mem[320]
                            mem[(32 * stor0.length) + 292] = mem[300 len 20]
                            mem[(32 * stor0.length) + 324] = address(_5673)
                            mem[(32 * stor0.length) + 356] = -(v * s / 10) + (s * v * s / 10) / 10
                            require ext_code.size(stor3)
                            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[(32 * stor0.length) + 292], address(_5673), -(v * s / 10) + (s * v * s / 10) / 10
                            mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 4 < stor0.length
                            require ext_code.size(mem[428 len 20])
                            call mem[428 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _6081 = mem[416]
                            mem[(32 * stor0.length) + 292] = mem[364 len 20]
                            mem[(32 * stor0.length) + 324] = address(_6081)
                            mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                            require ext_code.size(arg1)
                            call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[(32 * stor0.length) + 292], address(_6081), ext_call.return_data[0]
                            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                            if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= -(v * s / 10) + (s * v * s / 10) / 10:
                                s = s - 1
                                t = 0
                                u = t
                                v = v * s / 10
                                continue 
                            s = s - 1
                            t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (-(v * s / 10) + (s * v * s / 10) / 10)
                            u = t
                            v = v * s / 10
                            continue 
                        require 0 < stor0.length
                        require 1 < stor0.length
                        _5670 = mem[320]
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_5670)
                        mem[(32 * stor0.length) + 356] = v
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_5670), v
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 4 < stor0.length
                        require ext_code.size(mem[428 len 20])
                        call mem[428 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _6078 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_6078), ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(arg1)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if v <= 0:
                            return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= v:
                            return v, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        return v, 
                               ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - v,
                               address(ext_call.return_data[0]),
                               ext_call.return_data[0],
                               ext_call.return_data[0]
                    s = 11
                    t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (11 * defaultAmount / 10)
                    u = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - defaultAmount
                    v = defaultAmount
                    while t > u:
                        require 0 < stor0.length
                        require 1 < stor0.length
                        _5678 = mem[320]
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_5678)
                        mem[(32 * stor0.length) + 356] = (v * s / 10) + (s * v * s / 10) / 10
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_5678), (v * s / 10) + (s * v * s / 10) / 10
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 4 < stor0.length
                        require ext_code.size(mem[428 len 20])
                        call mem[428 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _6086 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        mem[(32 * stor0.length) + 324] = address(_6086)
                        mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_6086), ext_call.return_data[0]
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= (v * s / 10) + (s * v * s / 10) / 10:
                            s = s + 1
                            t = 0
                            u = t
                            v = v * s / 10
                            continue 
                        s = s + 1
                        t = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - ((v * s / 10) + (s * v * s / 10) / 10)
                        u = t
                        v = v * s / 10
                        continue 
                    if ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (9 * defaultAmount / 10) <= u:
                        require 0 < stor0.length
                        require 1 < stor0.length
                        _5696 = mem[320]
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_5696)
                        mem[(32 * stor0.length) + 356] = v
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_5696), v
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 4 < stor0.length
                        require ext_code.size(mem[428 len 20])
                        call mem[428 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _6109 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_6109), ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(arg1)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if v <= 0:
                            return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= v:
                            return v, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        return v, 
                               ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - v,
                               address(ext_call.return_data[0]),
                               ext_call.return_data[0],
                               ext_call.return_data[0]
                    t = s - 1
                    w = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (9 * defaultAmount / 10)
                    x = u
                    y = v
                    while w > x:
                        require 0 < stor0.length
                        require 1 < stor0.length
                        _6720 = mem[320]
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_6720)
                        mem[(32 * stor0.length) + 356] = -(y * t / 10) + (t * y * t / 10) / 10
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_6720), -(y * t / 10) + (t * y * t / 10) / 10
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 4 < stor0.length
                        require ext_code.size(mem[428 len 20])
                        call mem[428 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _6900 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        mem[(32 * stor0.length) + 324] = address(_6900)
                        mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_6900), ext_call.return_data[0]
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
                        if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= -(y * t / 10) + (t * y * t / 10) / 10:
                            t = t - 1
                            w = 0
                            x = w
                            y = y * t / 10
                            continue 
                        t = t - 1
                        w = ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - (-(y * t / 10) + (t * y * t / 10) / 10)
                        x = w
                        y = y * t / 10
                        continue 
                    require 0 < stor0.length
                    require 1 < stor0.length
                    _6717 = mem[320]
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_6717)
                    mem[(32 * stor0.length) + 356] = y
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_6717), y
                    mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 4 < stor0.length
                    require ext_code.size(mem[428 len 20])
                    call mem[428 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _6897 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_6897), ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)
    require ext_code.size(arg2)
    call arg2.0x70a08231 with:
         gas gas_remaining wei
        args address(arg1)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(arg2)
    call arg2.0x70a08231 with:
         gas gas_remaining wei
        args address(ext_call.return_data[0])
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if y <= 0:
        return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
    if (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3) <= y:
        return y, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
    return y, 
           ((997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * eth.balance(ext_call.return_data[0])) - (997 * 10^18 * defaultAmount / arg3 * eth.balance(ext_call.return_data[0])) / (1000 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) + (997 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (997 * 10^18 * defaultAmount / arg3)) - y,
           address(ext_call.return_data[0]),
           ext_call.return_data[0],
           ext_call.return_data[0]
}

function sub_aff612fa(?) {
    mem[96] = arg2
    mem[128] = 0x1f573d6fb3f13d689ff844b4ce37794d79a7ff1c
    mem[160] = 0x1f573d6fb3f13d689ff844b4ce37794d79a7ff1c
    mem[192] = 0x1f573d6fb3f13d689ff844b4ce37794d79a7ff1c
    mem[224] = 0xc0829421c1d260bd3cb3e0f06cfe2d52db2ce315
    stor0.length = 5
    s = 0
    idx = 96
    while 256 > idx:
        stor0[s].field_0 = mem[idx + 12 len 20]
        s = s + 1
        idx = idx + 32
        continue 
    idx = 5
    while stor0.length > idx:
        stor0[idx].field_0 = 0
        idx = idx + 1
        continue 
    mem[260] = arg2
    require ext_code.size(stor2)
    call stor2.getExchange(address arg1) with:
         gas gas_remaining wei
        args arg2
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if stor0.length:
        mem[288] = address(stor0.field_0)
        idx = 288
        s = 0
        while (32 * stor0.length) + 256 > idx:
            mem[idx + 32] = stor0[s].field_256
            idx = idx + 32
            s = s + 1
            continue 
        require 0 < stor0.length
        require ext_code.size(mem[300 len 20])
        call mem[300 len 20].0x313ce567 with:
             gas gas_remaining wei
        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 0 < stor0.length
        _4657 = mem[288]
        mem[(32 * stor0.length) + 292] = address(ext_call.return_data[0])
        require ext_code.size(address(_4657))
        call address(_4657).0x70a08231 with:
             gas gas_remaining wei
            args address(ext_call.return_data[0])
        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)
        require arg3
        require (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)
        require 0 < stor0.length
        require ext_code.size(mem[300 len 20])
        call mem[300 len 20].0x313ce567 with:
             gas gas_remaining wei
        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 0 < stor0.length
        require 2 < stor0.length
        _4947 = mem[352]
        require 0 < stor0.length
        require ext_code.size(mem[300 len 20])
        call mem[300 len 20].0x313ce567 with:
             gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 10^(-ext_call.return_data[0] + 18)
        mem[(32 * stor0.length) + 292] = mem[300 len 20]
        mem[(32 * stor0.length) + 324] = address(_4947)
        mem[(32 * stor0.length) + 356] = 10^18 * defaultAmount / arg3 / 10^(-ext_call.return_data[0] + 18)
        require ext_code.size(arg1)
        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args mem[(32 * stor0.length) + 292], address(_4947), 10^18 * defaultAmount / arg3 / 10^(-ext_call.return_data[0] + 18)
        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 2 < stor0.length
        require 4 < stor0.length
        _5033 = mem[416]
        mem[(32 * stor0.length) + 292] = mem[364 len 20]
        mem[(32 * stor0.length) + 324] = address(_5033)
        mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
        require ext_code.size(stor3)
        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args mem[(32 * stor0.length) + 292], address(_5033), ext_call.return_data[0]
        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 64
        if ext_call.return_data[0] <= defaultAmount:
            require ext_code.size(arg2)
            call arg2.0x70a08231 with:
                 gas gas_remaining wei
                args arg1
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(arg2)
            call arg2.0x70a08231 with:
                 gas gas_remaining wei
                args address(ext_call.return_data[0])
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
        require (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))
        require 0 < stor0.length
        require ext_code.size(mem[300 len 20])
        call mem[300 len 20].0x313ce567 with:
             gas gas_remaining wei
        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 0 < stor0.length
        require 2 < stor0.length
        _5298 = mem[352]
        require 0 < stor0.length
        require ext_code.size(mem[300 len 20])
        call mem[300 len 20].0x313ce567 with:
             gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 10^(-ext_call.return_data[0] + 18)
        mem[(32 * stor0.length) + 292] = mem[300 len 20]
        mem[(32 * stor0.length) + 324] = address(_5298)
        mem[(32 * stor0.length) + 356] = (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
        require ext_code.size(arg1)
        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args mem[(32 * stor0.length) + 292], address(_5298), (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 2 < stor0.length
        require 4 < stor0.length
        _5312 = mem[416]
        mem[(32 * stor0.length) + 292] = mem[364 len 20]
        mem[(32 * stor0.length) + 324] = address(_5312)
        mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
        require ext_code.size(stor3)
        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args mem[(32 * stor0.length) + 292], address(_5312), ext_call.return_data[0]
        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 64
        require (1000 * eth.balance(ext_call.return_data[0])) + (997 * 11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10)
        require 0 < stor0.length
        require ext_code.size(mem[300 len 20])
        call mem[300 len 20].0x313ce567 with:
             gas gas_remaining wei
        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 0 < stor0.length
        require 2 < stor0.length
        if ext_call.return_data[0] <= 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount):
            _5336 = mem[352]
            require 0 < stor0.length
            require ext_code.size(mem[300 len 20])
            call mem[300 len 20].0x313ce567 with:
                 gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 10^(-ext_call.return_data[0] + 18)
            mem[(32 * stor0.length) + 292] = mem[300 len 20]
            mem[(32 * stor0.length) + 324] = address(_5336)
            mem[(32 * stor0.length) + 356] = (997 * 11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
            require ext_code.size(arg1)
            call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args mem[(32 * stor0.length) + 292], address(_5336), (997 * 11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 2 < stor0.length
            require 4 < stor0.length
            _5364 = mem[416]
            mem[(32 * stor0.length) + 292] = mem[364 len 20]
            mem[(32 * stor0.length) + 324] = address(_5364)
            mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
            require ext_code.size(stor3)
            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args mem[(32 * stor0.length) + 292], address(_5364), ext_call.return_data[0]
            mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require (1000 * eth.balance(ext_call.return_data[0])) + (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10)
            require 0 < stor0.length
            require ext_code.size(mem[300 len 20])
            call mem[300 len 20].0x313ce567 with:
                 gas gas_remaining wei
            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 0 < stor0.length
            require 2 < stor0.length
            if ext_call.return_data[0] <= 11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10:
                _5412 = mem[352]
                require 0 < stor0.length
                require ext_code.size(mem[300 len 20])
                call mem[300 len 20].0x313ce567 with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 10^(-ext_call.return_data[0] + 18)
                mem[(32 * stor0.length) + 292] = mem[300 len 20]
                mem[(32 * stor0.length) + 324] = address(_5412)
                mem[(32 * stor0.length) + 356] = (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                require ext_code.size(arg1)
                call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * stor0.length) + 292], address(_5412), (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < stor0.length
                require 4 < stor0.length
                _5468 = mem[416]
                mem[(32 * stor0.length) + 292] = mem[364 len 20]
                mem[(32 * stor0.length) + 324] = address(_5468)
                mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * stor0.length) + 292], address(_5468), ext_call.return_data[0]
                mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                if ext_call.return_data[0] <= 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10:
                    require (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < stor0.length
                    require 2 < stor0.length
                    _5614 = mem[352]
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_5614)
                    mem[(32 * stor0.length) + 356] = (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_5614), (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _5880 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_5880), ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require ext_code.size(arg2)
                    call arg2.0x70a08231 with:
                         gas gas_remaining wei
                        args arg1
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(arg2)
                    call arg2.0x70a08231 with:
                         gas gas_remaining wei
                        args address(ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) <= 0:
                        return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    if ext_call.return_data[0] <= 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount):
                        return 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount), 
                               0,
                               address(ext_call.return_data[0]),
                               ext_call.return_data[0],
                               ext_call.return_data[0]
                    return 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount), 
                           ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)),
                           address(ext_call.return_data[0]),
                           ext_call.return_data[0],
                           ext_call.return_data[0]
                if ext_call.return_data[0] - (9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10) <= 0:
                    require (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < stor0.length
                    require 2 < stor0.length
                    _5616 = mem[352]
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_5616)
                    mem[(32 * stor0.length) + 356] = (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_5616), (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _5883 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_5883), ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require ext_code.size(arg2)
                    call arg2.0x70a08231 with:
                         gas gas_remaining wei
                        args arg1
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(arg2)
                    call arg2.0x70a08231 with:
                         gas gas_remaining wei
                        args address(ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) <= 0:
                        return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    if ext_call.return_data[0] <= 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount):
                        return 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount), 
                               0,
                               address(ext_call.return_data[0]),
                               ext_call.return_data[0],
                               ext_call.return_data[0]
                    return 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount), 
                           ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)),
                           address(ext_call.return_data[0]),
                           ext_call.return_data[0],
                           ext_call.return_data[0]
                s = 9
                t = mem[(32 * stor0.length) + 288] - (9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10)
                u = 0
                v = 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)
                while t > u:
                    require (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < stor0.length
                    require 2 < stor0.length
                    _6575 = mem[352]
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_6575)
                    mem[(32 * stor0.length) + 356] = (997 * -(v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_6575), (997 * -(v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _6968 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    mem[(32 * stor0.length) + 324] = address(_6968)
                    mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_6968), ext_call.return_data[0]
                    mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    if ext_call.return_data[0] <= -(v * s / 10) + (s * v * s / 10) / 10:
                        s = s - 1
                        t = 0
                        u = t
                        v = v * s / 10
                        continue 
                    s = s - 1
                    t = ext_call.return_data[0] - (-(v * s / 10) + (s * v * s / 10) / 10)
                    u = t
                    v = v * s / 10
                    continue 
                require (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)
                require 0 < stor0.length
                require ext_code.size(mem[300 len 20])
                call mem[300 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 0 < stor0.length
                require 2 < stor0.length
                _6573 = mem[352]
                require 0 < stor0.length
                require ext_code.size(mem[300 len 20])
                call mem[300 len 20].0x313ce567 with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 10^(-ext_call.return_data[0] + 18)
                mem[(32 * stor0.length) + 292] = mem[300 len 20]
                mem[(32 * stor0.length) + 324] = address(_6573)
                mem[(32 * stor0.length) + 356] = (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                require ext_code.size(arg1)
                call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * stor0.length) + 292], address(_6573), (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < stor0.length
                require 4 < stor0.length
                _6965 = mem[416]
                mem[(32 * stor0.length) + 292] = mem[364 len 20]
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * stor0.length) + 292], address(_6965), ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require ext_code.size(arg2)
                call arg2.0x70a08231 with:
                     gas gas_remaining wei
                    args address(arg1)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(arg2)
                call arg2.0x70a08231 with:
                     gas gas_remaining wei
                    args address(ext_call.return_data[0])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if v <= 0:
                    return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                if ext_call.return_data[0] <= v:
                    return v, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                return v, ext_call.return_data[0] - v, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
            _5414 = mem[352]
            require 0 < stor0.length
            require ext_code.size(mem[300 len 20])
            call mem[300 len 20].0x313ce567 with:
                 gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 10^(-ext_call.return_data[0] + 18)
            mem[(32 * stor0.length) + 292] = mem[300 len 20]
            mem[(32 * stor0.length) + 324] = address(_5414)
            mem[(32 * stor0.length) + 356] = (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
            require ext_code.size(arg1)
            call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args mem[(32 * stor0.length) + 292], address(_5414), (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 2 < stor0.length
            require 4 < stor0.length
            _5471 = mem[416]
            mem[(32 * stor0.length) + 292] = mem[364 len 20]
            mem[(32 * stor0.length) + 324] = address(_5471)
            mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
            require ext_code.size(stor3)
            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args mem[(32 * stor0.length) + 292], address(_5471), ext_call.return_data[0]
            mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            if ext_call.return_data[0] <= 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10:
                if ext_call.return_data[0] - (11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10) <= 0:
                    require (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < stor0.length
                    require 2 < stor0.length
                    _5619 = mem[352]
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_5619)
                    mem[(32 * stor0.length) + 356] = (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_5619), (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _5887 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_5887), ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require ext_code.size(arg2)
                    call arg2.0x70a08231 with:
                         gas gas_remaining wei
                        args arg1
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(arg2)
                    call arg2.0x70a08231 with:
                         gas gas_remaining wei
                        args address(ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) <= 0:
                        return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    if ext_call.return_data[0] <= 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount):
                        return 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount), 
                               0,
                               address(ext_call.return_data[0]),
                               ext_call.return_data[0],
                               ext_call.return_data[0]
                    return 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount), 
                           ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)),
                           address(ext_call.return_data[0]),
                           ext_call.return_data[0],
                           ext_call.return_data[0]
                s = 11
                t = ext_call.return_data[0] - (11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10)
                u = 0
                v = 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)
                while t > u:
                    require (1000 * eth.balance(ext_call.return_data[0])) + (997 * (v * s / 10) + (s * v * s / 10) / 10)
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < stor0.length
                    require 2 < stor0.length
                    _6579 = mem[352]
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_6579)
                    mem[(32 * stor0.length) + 356] = (997 * (v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * (v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_6579), (997 * (v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * (v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _6973 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    mem[(32 * stor0.length) + 324] = address(_6973)
                    mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_6973), ext_call.return_data[0]
                    mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    if ext_call.return_data[0] <= (v * s / 10) + (s * v * s / 10) / 10:
                        s = s + 1
                        t = 0
                        u = t
                        v = v * s / 10
                        continue 
                    s = s + 1
                    t = ext_call.return_data[0] - ((v * s / 10) + (s * v * s / 10) / 10)
                    u = t
                    v = v * s / 10
                    continue 
                if 0 <= u:
                    require (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < stor0.length
                    require 2 < stor0.length
                    _6623 = mem[352]
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_6623)
                    mem[(32 * stor0.length) + 356] = (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_6623), (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _7025 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_7025), ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require ext_code.size(arg2)
                    call arg2.0x70a08231 with:
                         gas gas_remaining wei
                        args address(arg1)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(arg2)
                    call arg2.0x70a08231 with:
                         gas gas_remaining wei
                        args address(ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if v <= 0:
                        return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    if ext_call.return_data[0] <= v:
                        return v, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    return v, ext_call.return_data[0] - v, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                t = s - 1
                w = 0
                x = u
                y = v
                while w > x:
                    require (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < stor0.length
                    require 2 < stor0.length
                    _7725 = mem[352]
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_7725)
                    mem[(32 * stor0.length) + 356] = (997 * -(y * t / 10) + (t * y * t / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_7725), (997 * -(y * t / 10) + (t * y * t / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _7894 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    mem[(32 * stor0.length) + 324] = address(_7894)
                    mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_7894), ext_call.return_data[0]
                    mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    if ext_call.return_data[0] <= -(y * t / 10) + (t * y * t / 10) / 10:
                        t = t - 1
                        w = 0
                        x = w
                        y = y * t / 10
                        continue 
                    t = t - 1
                    w = ext_call.return_data[0] - (-(y * t / 10) + (t * y * t / 10) / 10)
                    x = w
                    y = y * t / 10
                    continue 
                require (1000 * eth.balance(ext_call.return_data[0])) + (997 * y)
                require 0 < stor0.length
                require ext_code.size(mem[300 len 20])
                call mem[300 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 0 < stor0.length
                require 2 < stor0.length
                _7723 = mem[352]
                require 0 < stor0.length
                require ext_code.size(mem[300 len 20])
                call mem[300 len 20].0x313ce567 with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 10^(-ext_call.return_data[0] + 18)
                mem[(32 * stor0.length) + 292] = mem[300 len 20]
                mem[(32 * stor0.length) + 324] = address(_7723)
                mem[(32 * stor0.length) + 356] = (997 * y * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * y)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                require ext_code.size(arg1)
                call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * stor0.length) + 292], address(_7723), (997 * y * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * y)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < stor0.length
                require 4 < stor0.length
                _7891 = mem[416]
                mem[(32 * stor0.length) + 292] = mem[364 len 20]
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * stor0.length) + 292], address(_7891), ext_call.return_data[0]
            else:
                if ext_call.return_data[0] - (11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10) <= 0:
                    if ext_call.return_data[0] - (9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10) <= 0:
                        require (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 0 < stor0.length
                        require 2 < stor0.length
                        _5623 = mem[352]
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_5623)
                        mem[(32 * stor0.length) + 356] = (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_5623), (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _5892 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_5892), ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args arg1
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) <= 0:
                            return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        if ext_call.return_data[0] <= 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount):
                            return 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount), 
                                   0,
                                   address(ext_call.return_data[0]),
                                   ext_call.return_data[0],
                                   ext_call.return_data[0]
                        return 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount), 
                               ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)),
                               address(ext_call.return_data[0]),
                               ext_call.return_data[0],
                               ext_call.return_data[0]
                    s = 9
                    t = mem[(32 * stor0.length) + 288] - (9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10)
                    u = 0
                    v = 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)
                    while t > u:
                        require (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 0 < stor0.length
                        require 2 < stor0.length
                        _6583 = mem[352]
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_6583)
                        mem[(32 * stor0.length) + 356] = (997 * -(v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_6583), (997 * -(v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _6979 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        mem[(32 * stor0.length) + 324] = address(_6979)
                        mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_6979), ext_call.return_data[0]
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        if ext_call.return_data[0] <= -(v * s / 10) + (s * v * s / 10) / 10:
                            s = s - 1
                            t = 0
                            u = t
                            v = v * s / 10
                            continue 
                        s = s - 1
                        t = ext_call.return_data[0] - (-(v * s / 10) + (s * v * s / 10) / 10)
                        u = t
                        v = v * s / 10
                        continue 
                    require (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < stor0.length
                    require 2 < stor0.length
                    _6581 = mem[352]
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_6581)
                    mem[(32 * stor0.length) + 356] = (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_6581), (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _6976 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_6976), ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require ext_code.size(arg2)
                    call arg2.0x70a08231 with:
                         gas gas_remaining wei
                        args address(arg1)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(arg2)
                    call arg2.0x70a08231 with:
                         gas gas_remaining wei
                        args address(ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if v <= 0:
                        return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    if ext_call.return_data[0] <= v:
                        return v, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    return v, ext_call.return_data[0] - v, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                s = 11
                t = ext_call.return_data[0] - (11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10)
                u = 0
                v = 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)
                while t > u:
                    require (1000 * eth.balance(ext_call.return_data[0])) + (997 * (v * s / 10) + (s * v * s / 10) / 10)
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < stor0.length
                    require 2 < stor0.length
                    _6587 = mem[352]
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_6587)
                    mem[(32 * stor0.length) + 356] = (997 * (v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * (v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_6587), (997 * (v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * (v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _6984 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    mem[(32 * stor0.length) + 324] = address(_6984)
                    mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_6984), ext_call.return_data[0]
                    mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    if ext_call.return_data[0] <= (v * s / 10) + (s * v * s / 10) / 10:
                        s = s + 1
                        t = 0
                        u = t
                        v = v * s / 10
                        continue 
                    s = s + 1
                    t = ext_call.return_data[0] - ((v * s / 10) + (s * v * s / 10) / 10)
                    u = t
                    v = v * s / 10
                    continue 
                if ext_call.return_data[0] - (9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10) <= u:
                    require (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < stor0.length
                    require 2 < stor0.length
                    _6635 = mem[352]
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_6635)
                    mem[(32 * stor0.length) + 356] = (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_6635), (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _7029 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_7029), ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require ext_code.size(arg2)
                    call arg2.0x70a08231 with:
                         gas gas_remaining wei
                        args address(arg1)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(arg2)
                    call arg2.0x70a08231 with:
                         gas gas_remaining wei
                        args address(ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if v <= 0:
                        return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    if ext_call.return_data[0] <= v:
                        return v, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    return v, ext_call.return_data[0] - v, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                t = s - 1
                w = ext_call.return_data[0] - (9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10)
                x = u
                y = v
                while w > x:
                    require (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < stor0.length
                    require 2 < stor0.length
                    _7729 = mem[352]
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_7729)
                    mem[(32 * stor0.length) + 356] = (997 * -(y * t / 10) + (t * y * t / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_7729), (997 * -(y * t / 10) + (t * y * t / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _7900 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    mem[(32 * stor0.length) + 324] = address(_7900)
                    mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_7900), ext_call.return_data[0]
                    mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    if ext_call.return_data[0] <= -(y * t / 10) + (t * y * t / 10) / 10:
                        t = t - 1
                        w = 0
                        x = w
                        y = y * t / 10
                        continue 
                    t = t - 1
                    w = ext_call.return_data[0] - (-(y * t / 10) + (t * y * t / 10) / 10)
                    x = w
                    y = y * t / 10
                    continue 
                require (1000 * eth.balance(ext_call.return_data[0])) + (997 * y)
                require 0 < stor0.length
                require ext_code.size(mem[300 len 20])
                call mem[300 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 0 < stor0.length
                require 2 < stor0.length
                _7727 = mem[352]
                require 0 < stor0.length
                require ext_code.size(mem[300 len 20])
                call mem[300 len 20].0x313ce567 with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 10^(-ext_call.return_data[0] + 18)
                mem[(32 * stor0.length) + 292] = mem[300 len 20]
                mem[(32 * stor0.length) + 324] = address(_7727)
                mem[(32 * stor0.length) + 356] = (997 * y * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * y)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                require ext_code.size(arg1)
                call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * stor0.length) + 292], address(_7727), (997 * y * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * y)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < stor0.length
                require 4 < stor0.length
                _7897 = mem[416]
                mem[(32 * stor0.length) + 292] = mem[364 len 20]
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * stor0.length) + 292], address(_7897), ext_call.return_data[0]
        else:
            _5338 = mem[352]
            require 0 < stor0.length
            require ext_code.size(mem[300 len 20])
            call mem[300 len 20].0x313ce567 with:
                 gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 10^(-ext_call.return_data[0] + 18)
            mem[(32 * stor0.length) + 292] = mem[300 len 20]
            mem[(32 * stor0.length) + 324] = address(_5338)
            mem[(32 * stor0.length) + 356] = (997 * 11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
            require ext_code.size(arg1)
            call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args mem[(32 * stor0.length) + 292], address(_5338), (997 * 11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 2 < stor0.length
            require 4 < stor0.length
            _5367 = mem[416]
            mem[(32 * stor0.length) + 292] = mem[364 len 20]
            mem[(32 * stor0.length) + 324] = address(_5367)
            mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
            require ext_code.size(stor3)
            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args mem[(32 * stor0.length) + 292], address(_5367), ext_call.return_data[0]
            mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require (1000 * eth.balance(ext_call.return_data[0])) + (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10)
            require 0 < stor0.length
            require ext_code.size(mem[300 len 20])
            call mem[300 len 20].0x313ce567 with:
                 gas gas_remaining wei
            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 0 < stor0.length
            require 2 < stor0.length
            if ext_call.return_data[0] <= 11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10:
                _5416 = mem[352]
                require 0 < stor0.length
                require ext_code.size(mem[300 len 20])
                call mem[300 len 20].0x313ce567 with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 10^(-ext_call.return_data[0] + 18)
                mem[(32 * stor0.length) + 292] = mem[300 len 20]
                mem[(32 * stor0.length) + 324] = address(_5416)
                mem[(32 * stor0.length) + 356] = (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                require ext_code.size(arg1)
                call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * stor0.length) + 292], address(_5416), (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < stor0.length
                require 4 < stor0.length
                _5474 = mem[416]
                mem[(32 * stor0.length) + 292] = mem[364 len 20]
                mem[(32 * stor0.length) + 324] = address(_5474)
                mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * stor0.length) + 292], address(_5474), ext_call.return_data[0]
                mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                if ext_call.return_data[0] <= 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10:
                    if 0 <= ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)):
                        require (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 0 < stor0.length
                        require 2 < stor0.length
                        _5628 = mem[352]
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_5628)
                        mem[(32 * stor0.length) + 356] = (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_5628), (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _5898 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_5898), ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args arg1
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) <= 0:
                            return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        if ext_call.return_data[0] <= 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount):
                            return 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount), 
                                   0,
                                   address(ext_call.return_data[0]),
                                   ext_call.return_data[0],
                                   ext_call.return_data[0]
                        return 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount), 
                               ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)),
                               address(ext_call.return_data[0]),
                               ext_call.return_data[0],
                               ext_call.return_data[0]
                    s = 11
                    t = 0
                    u = ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))
                    v = 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)
                    while t > u:
                        require (1000 * eth.balance(ext_call.return_data[0])) + (997 * (v * s / 10) + (s * v * s / 10) / 10)
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 0 < stor0.length
                        require 2 < stor0.length
                        _6591 = mem[352]
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_6591)
                        mem[(32 * stor0.length) + 356] = (997 * (v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * (v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_6591), (997 * (v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * (v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _6989 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        mem[(32 * stor0.length) + 324] = address(_6989)
                        mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_6989), ext_call.return_data[0]
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        if ext_call.return_data[0] <= (v * s / 10) + (s * v * s / 10) / 10:
                            s = s + 1
                            t = 0
                            u = t
                            v = v * s / 10
                            continue 
                        s = s + 1
                        t = ext_call.return_data[0] - ((v * s / 10) + (s * v * s / 10) / 10)
                        u = t
                        v = v * s / 10
                        continue 
                    if 0 <= u:
                        require (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 0 < stor0.length
                        require 2 < stor0.length
                        _6641 = mem[352]
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_6641)
                        mem[(32 * stor0.length) + 356] = (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_6641), (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _7033 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_7033), ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(arg1)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if v <= 0:
                            return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        if ext_call.return_data[0] <= v:
                            return v, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        return v, ext_call.return_data[0] - v, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    t = s - 1
                    w = 0
                    x = u
                    y = v
                    while w > x:
                        require (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 0 < stor0.length
                        require 2 < stor0.length
                        _7733 = mem[352]
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_7733)
                        mem[(32 * stor0.length) + 356] = (997 * -(y * t / 10) + (t * y * t / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_7733), (997 * -(y * t / 10) + (t * y * t / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _7906 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        mem[(32 * stor0.length) + 324] = address(_7906)
                        mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_7906), ext_call.return_data[0]
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        if ext_call.return_data[0] <= -(y * t / 10) + (t * y * t / 10) / 10:
                            t = t - 1
                            w = 0
                            x = w
                            y = y * t / 10
                            continue 
                        t = t - 1
                        w = ext_call.return_data[0] - (-(y * t / 10) + (t * y * t / 10) / 10)
                        x = w
                        y = y * t / 10
                        continue 
                    require (1000 * eth.balance(ext_call.return_data[0])) + (997 * y)
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < stor0.length
                    require 2 < stor0.length
                    _7731 = mem[352]
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_7731)
                    mem[(32 * stor0.length) + 356] = (997 * y * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * y)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_7731), (997 * y * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * y)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _7903 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_7903), ext_call.return_data[0]
                else:
                    if 0 <= ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)):
                        if -9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10 <= -997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount):
                            require (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))
                            require 0 < stor0.length
                            require ext_code.size(mem[300 len 20])
                            call mem[300 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 0 < stor0.length
                            require 2 < stor0.length
                            _5632 = mem[352]
                            require 0 < stor0.length
                            require ext_code.size(mem[300 len 20])
                            call mem[300 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[(32 * stor0.length) + 292] = mem[300 len 20]
                            mem[(32 * stor0.length) + 324] = address(_5632)
                            mem[(32 * stor0.length) + 356] = (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                            require ext_code.size(arg1)
                            call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[(32 * stor0.length) + 292], address(_5632), (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _5903 = mem[416]
                            mem[(32 * stor0.length) + 292] = mem[364 len 20]
                            require ext_code.size(stor3)
                            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[(32 * stor0.length) + 292], address(_5903), ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require ext_code.size(arg2)
                            call arg2.0x70a08231 with:
                                 gas gas_remaining wei
                                args arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(arg2)
                            call arg2.0x70a08231 with:
                                 gas gas_remaining wei
                                args address(ext_call.return_data[0])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) <= 0:
                                return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                            if ext_call.return_data[0] <= 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount):
                                return 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount), 
                                       0,
                                       address(ext_call.return_data[0]),
                                       ext_call.return_data[0],
                                       ext_call.return_data[0]
                            return 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount), 
                                   ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)),
                                   address(ext_call.return_data[0]),
                                   ext_call.return_data[0],
                                   ext_call.return_data[0]
                        s = 9
                        t = mem[(32 * stor0.length) + 288] - (9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10)
                        u = ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))
                        v = 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)
                        while t > u:
                            require (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)
                            require 0 < stor0.length
                            require ext_code.size(mem[300 len 20])
                            call mem[300 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 0 < stor0.length
                            require 2 < stor0.length
                            _6595 = mem[352]
                            require 0 < stor0.length
                            require ext_code.size(mem[300 len 20])
                            call mem[300 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[(32 * stor0.length) + 292] = mem[300 len 20]
                            mem[(32 * stor0.length) + 324] = address(_6595)
                            mem[(32 * stor0.length) + 356] = (997 * -(v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                            require ext_code.size(arg1)
                            call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[(32 * stor0.length) + 292], address(_6595), (997 * -(v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _6995 = mem[416]
                            mem[(32 * stor0.length) + 292] = mem[364 len 20]
                            mem[(32 * stor0.length) + 324] = address(_6995)
                            mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                            require ext_code.size(stor3)
                            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[(32 * stor0.length) + 292], address(_6995), ext_call.return_data[0]
                            mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            if ext_call.return_data[0] <= -(v * s / 10) + (s * v * s / 10) / 10:
                                s = s - 1
                                t = 0
                                u = t
                                v = v * s / 10
                                continue 
                            s = s - 1
                            t = ext_call.return_data[0] - (-(v * s / 10) + (s * v * s / 10) / 10)
                            u = t
                            v = v * s / 10
                            continue 
                        require (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 0 < stor0.length
                        require 2 < stor0.length
                        _6593 = mem[352]
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_6593)
                        mem[(32 * stor0.length) + 356] = (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_6593), (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _6992 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_6992), ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(arg1)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if v <= 0:
                            return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        if ext_call.return_data[0] <= v:
                            return v, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        return v, ext_call.return_data[0] - v, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    s = 11
                    t = 0
                    u = ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))
                    v = 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)
                    while t > u:
                        require (1000 * eth.balance(ext_call.return_data[0])) + (997 * (v * s / 10) + (s * v * s / 10) / 10)
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 0 < stor0.length
                        require 2 < stor0.length
                        _6599 = mem[352]
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_6599)
                        mem[(32 * stor0.length) + 356] = (997 * (v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * (v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_6599), (997 * (v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * (v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _7000 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        mem[(32 * stor0.length) + 324] = address(_7000)
                        mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_7000), ext_call.return_data[0]
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        if ext_call.return_data[0] <= (v * s / 10) + (s * v * s / 10) / 10:
                            s = s + 1
                            t = 0
                            u = t
                            v = v * s / 10
                            continue 
                        s = s + 1
                        t = ext_call.return_data[0] - ((v * s / 10) + (s * v * s / 10) / 10)
                        u = t
                        v = v * s / 10
                        continue 
                    if ext_call.return_data[0] - (9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10) <= u:
                        require (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 0 < stor0.length
                        require 2 < stor0.length
                        _6653 = mem[352]
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_6653)
                        mem[(32 * stor0.length) + 356] = (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_6653), (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _7037 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_7037), ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(arg1)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if v <= 0:
                            return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        if ext_call.return_data[0] <= v:
                            return v, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        return v, ext_call.return_data[0] - v, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    t = s - 1
                    w = ext_call.return_data[0] - (9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10)
                    x = u
                    y = v
                    while w > x:
                        require (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 0 < stor0.length
                        require 2 < stor0.length
                        _7737 = mem[352]
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_7737)
                        mem[(32 * stor0.length) + 356] = (997 * -(y * t / 10) + (t * y * t / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_7737), (997 * -(y * t / 10) + (t * y * t / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _7912 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        mem[(32 * stor0.length) + 324] = address(_7912)
                        mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_7912), ext_call.return_data[0]
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        if ext_call.return_data[0] <= -(y * t / 10) + (t * y * t / 10) / 10:
                            t = t - 1
                            w = 0
                            x = w
                            y = y * t / 10
                            continue 
                        t = t - 1
                        w = ext_call.return_data[0] - (-(y * t / 10) + (t * y * t / 10) / 10)
                        x = w
                        y = y * t / 10
                        continue 
                    require (1000 * eth.balance(ext_call.return_data[0])) + (997 * y)
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < stor0.length
                    require 2 < stor0.length
                    _7735 = mem[352]
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_7735)
                    mem[(32 * stor0.length) + 356] = (997 * y * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * y)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_7735), (997 * y * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * y)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _7909 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_7909), ext_call.return_data[0]
            else:
                _5418 = mem[352]
                require 0 < stor0.length
                require ext_code.size(mem[300 len 20])
                call mem[300 len 20].0x313ce567 with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 10^(-ext_call.return_data[0] + 18)
                mem[(32 * stor0.length) + 292] = mem[300 len 20]
                mem[(32 * stor0.length) + 324] = address(_5418)
                mem[(32 * stor0.length) + 356] = (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                require ext_code.size(arg1)
                call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * stor0.length) + 292], address(_5418), (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < stor0.length
                require 4 < stor0.length
                _5477 = mem[416]
                mem[(32 * stor0.length) + 292] = mem[364 len 20]
                mem[(32 * stor0.length) + 324] = address(_5477)
                mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * stor0.length) + 292], address(_5477), ext_call.return_data[0]
                mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                if ext_call.return_data[0] <= 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10:
                    if -11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10 <= -997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount):
                        if 0 <= ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)):
                            require (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))
                            require 0 < stor0.length
                            require ext_code.size(mem[300 len 20])
                            call mem[300 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 0 < stor0.length
                            require 2 < stor0.length
                            _5637 = mem[352]
                            require 0 < stor0.length
                            require ext_code.size(mem[300 len 20])
                            call mem[300 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[(32 * stor0.length) + 292] = mem[300 len 20]
                            mem[(32 * stor0.length) + 324] = address(_5637)
                            mem[(32 * stor0.length) + 356] = (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                            require ext_code.size(arg1)
                            call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[(32 * stor0.length) + 292], address(_5637), (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _5909 = mem[416]
                            mem[(32 * stor0.length) + 292] = mem[364 len 20]
                            require ext_code.size(stor3)
                            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[(32 * stor0.length) + 292], address(_5909), ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require ext_code.size(arg2)
                            call arg2.0x70a08231 with:
                                 gas gas_remaining wei
                                args arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(arg2)
                            call arg2.0x70a08231 with:
                                 gas gas_remaining wei
                                args address(ext_call.return_data[0])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) <= 0:
                                return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                            if ext_call.return_data[0] <= 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount):
                                return 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount), 
                                       0,
                                       address(ext_call.return_data[0]),
                                       ext_call.return_data[0],
                                       ext_call.return_data[0]
                            return 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount), 
                                   ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)),
                                   address(ext_call.return_data[0]),
                                   ext_call.return_data[0],
                                   ext_call.return_data[0]
                        s = 9
                        t = 0
                        u = ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))
                        v = 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)
                        while t > u:
                            require (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)
                            require 0 < stor0.length
                            require ext_code.size(mem[300 len 20])
                            call mem[300 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 0 < stor0.length
                            require 2 < stor0.length
                            _6603 = mem[352]
                            require 0 < stor0.length
                            require ext_code.size(mem[300 len 20])
                            call mem[300 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[(32 * stor0.length) + 292] = mem[300 len 20]
                            mem[(32 * stor0.length) + 324] = address(_6603)
                            mem[(32 * stor0.length) + 356] = (997 * -(v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                            require ext_code.size(arg1)
                            call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[(32 * stor0.length) + 292], address(_6603), (997 * -(v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _7006 = mem[416]
                            mem[(32 * stor0.length) + 292] = mem[364 len 20]
                            mem[(32 * stor0.length) + 324] = address(_7006)
                            mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                            require ext_code.size(stor3)
                            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[(32 * stor0.length) + 292], address(_7006), ext_call.return_data[0]
                            mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            if ext_call.return_data[0] <= -(v * s / 10) + (s * v * s / 10) / 10:
                                s = s - 1
                                t = 0
                                u = t
                                v = v * s / 10
                                continue 
                            s = s - 1
                            t = ext_call.return_data[0] - (-(v * s / 10) + (s * v * s / 10) / 10)
                            u = t
                            v = v * s / 10
                            continue 
                        require (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 0 < stor0.length
                        require 2 < stor0.length
                        _6601 = mem[352]
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_6601)
                        mem[(32 * stor0.length) + 356] = (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_6601), (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _7003 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_7003), ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(arg1)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if v <= 0:
                            return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        if ext_call.return_data[0] <= v:
                            return v, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        return v, ext_call.return_data[0] - v, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    s = 11
                    t = ext_call.return_data[0] - (11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10)
                    u = ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))
                    v = 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)
                    while t > u:
                        require (1000 * eth.balance(ext_call.return_data[0])) + (997 * (v * s / 10) + (s * v * s / 10) / 10)
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 0 < stor0.length
                        require 2 < stor0.length
                        _6607 = mem[352]
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_6607)
                        mem[(32 * stor0.length) + 356] = (997 * (v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * (v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_6607), (997 * (v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * (v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _7011 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        mem[(32 * stor0.length) + 324] = address(_7011)
                        mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_7011), ext_call.return_data[0]
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        if ext_call.return_data[0] <= (v * s / 10) + (s * v * s / 10) / 10:
                            s = s + 1
                            t = 0
                            u = t
                            v = v * s / 10
                            continue 
                        s = s + 1
                        t = ext_call.return_data[0] - ((v * s / 10) + (s * v * s / 10) / 10)
                        u = t
                        v = v * s / 10
                        continue 
                    if 0 <= u:
                        require (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 0 < stor0.length
                        require 2 < stor0.length
                        _6665 = mem[352]
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_6665)
                        mem[(32 * stor0.length) + 356] = (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_6665), (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _7041 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_7041), ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(arg1)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if v <= 0:
                            return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        if ext_call.return_data[0] <= v:
                            return v, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        return v, ext_call.return_data[0] - v, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    t = s - 1
                    w = 0
                    x = u
                    y = v
                    while w > x:
                        require (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 0 < stor0.length
                        require 2 < stor0.length
                        _7741 = mem[352]
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_7741)
                        mem[(32 * stor0.length) + 356] = (997 * -(y * t / 10) + (t * y * t / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_7741), (997 * -(y * t / 10) + (t * y * t / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _7918 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        mem[(32 * stor0.length) + 324] = address(_7918)
                        mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_7918), ext_call.return_data[0]
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        if ext_call.return_data[0] <= -(y * t / 10) + (t * y * t / 10) / 10:
                            t = t - 1
                            w = 0
                            x = w
                            y = y * t / 10
                            continue 
                        t = t - 1
                        w = ext_call.return_data[0] - (-(y * t / 10) + (t * y * t / 10) / 10)
                        x = w
                        y = y * t / 10
                        continue 
                    require (1000 * eth.balance(ext_call.return_data[0])) + (997 * y)
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < stor0.length
                    require 2 < stor0.length
                    _7739 = mem[352]
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_7739)
                    mem[(32 * stor0.length) + 356] = (997 * y * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * y)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_7739), (997 * y * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * y)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _7915 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_7915), ext_call.return_data[0]
                else:
                    if -11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10 <= -997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount):
                        if -9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10 <= -997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount):
                            require (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))
                            require 0 < stor0.length
                            require ext_code.size(mem[300 len 20])
                            call mem[300 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 0 < stor0.length
                            require 2 < stor0.length
                            _5642 = mem[352]
                            require 0 < stor0.length
                            require ext_code.size(mem[300 len 20])
                            call mem[300 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[(32 * stor0.length) + 292] = mem[300 len 20]
                            mem[(32 * stor0.length) + 324] = address(_5642)
                            mem[(32 * stor0.length) + 356] = (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                            require ext_code.size(arg1)
                            call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[(32 * stor0.length) + 292], address(_5642), (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _5915 = mem[416]
                            mem[(32 * stor0.length) + 292] = mem[364 len 20]
                            require ext_code.size(stor3)
                            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[(32 * stor0.length) + 292], address(_5915), ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require ext_code.size(arg2)
                            call arg2.0x70a08231 with:
                                 gas gas_remaining wei
                                args arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(arg2)
                            call arg2.0x70a08231 with:
                                 gas gas_remaining wei
                                args address(ext_call.return_data[0])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) <= 0:
                                return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                            if ext_call.return_data[0] <= 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount):
                                return 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount), 
                                       0,
                                       address(ext_call.return_data[0]),
                                       ext_call.return_data[0],
                                       ext_call.return_data[0]
                            return 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount), 
                                   ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)),
                                   address(ext_call.return_data[0]),
                                   ext_call.return_data[0],
                                   ext_call.return_data[0]
                        s = 9
                        t = mem[(32 * stor0.length) + 288] - (9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10)
                        u = ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))
                        v = 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)
                        while t > u:
                            require (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)
                            require 0 < stor0.length
                            require ext_code.size(mem[300 len 20])
                            call mem[300 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 0 < stor0.length
                            require 2 < stor0.length
                            _6611 = mem[352]
                            require 0 < stor0.length
                            require ext_code.size(mem[300 len 20])
                            call mem[300 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[(32 * stor0.length) + 292] = mem[300 len 20]
                            mem[(32 * stor0.length) + 324] = address(_6611)
                            mem[(32 * stor0.length) + 356] = (997 * -(v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                            require ext_code.size(arg1)
                            call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[(32 * stor0.length) + 292], address(_6611), (997 * -(v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _7017 = mem[416]
                            mem[(32 * stor0.length) + 292] = mem[364 len 20]
                            mem[(32 * stor0.length) + 324] = address(_7017)
                            mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                            require ext_code.size(stor3)
                            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[(32 * stor0.length) + 292], address(_7017), ext_call.return_data[0]
                            mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            if ext_call.return_data[0] <= -(v * s / 10) + (s * v * s / 10) / 10:
                                s = s - 1
                                t = 0
                                u = t
                                v = v * s / 10
                                continue 
                            s = s - 1
                            t = ext_call.return_data[0] - (-(v * s / 10) + (s * v * s / 10) / 10)
                            u = t
                            v = v * s / 10
                            continue 
                        require (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 0 < stor0.length
                        require 2 < stor0.length
                        _6609 = mem[352]
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_6609)
                        mem[(32 * stor0.length) + 356] = (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_6609), (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _7014 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_7014), ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(arg1)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if v <= 0:
                            return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        if ext_call.return_data[0] <= v:
                            return v, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        return v, ext_call.return_data[0] - v, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    s = 11
                    t = ext_call.return_data[0] - (11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10)
                    u = ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))
                    v = 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)
                    while t > u:
                        require (1000 * eth.balance(ext_call.return_data[0])) + (997 * (v * s / 10) + (s * v * s / 10) / 10)
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 0 < stor0.length
                        require 2 < stor0.length
                        _6615 = mem[352]
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_6615)
                        mem[(32 * stor0.length) + 356] = (997 * (v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * (v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_6615), (997 * (v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * (v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _7022 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        mem[(32 * stor0.length) + 324] = address(_7022)
                        mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_7022), ext_call.return_data[0]
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        if ext_call.return_data[0] <= (v * s / 10) + (s * v * s / 10) / 10:
                            s = s + 1
                            t = 0
                            u = t
                            v = v * s / 10
                            continue 
                        s = s + 1
                        t = ext_call.return_data[0] - ((v * s / 10) + (s * v * s / 10) / 10)
                        u = t
                        v = v * s / 10
                        continue 
                    if ext_call.return_data[0] - (9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10) <= u:
                        require (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 0 < stor0.length
                        require 2 < stor0.length
                        _6677 = mem[352]
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_6677)
                        mem[(32 * stor0.length) + 356] = (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_6677), (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _7045 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_7045), ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(arg1)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if v <= 0:
                            return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        if ext_call.return_data[0] <= v:
                            return v, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        return v, ext_call.return_data[0] - v, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    t = s - 1
                    w = ext_call.return_data[0] - (9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10)
                    x = u
                    y = v
                    while w > x:
                        require (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 0 < stor0.length
                        require 2 < stor0.length
                        _7745 = mem[352]
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_7745)
                        mem[(32 * stor0.length) + 356] = (997 * -(y * t / 10) + (t * y * t / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_7745), (997 * -(y * t / 10) + (t * y * t / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _7924 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        mem[(32 * stor0.length) + 324] = address(_7924)
                        mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_7924), ext_call.return_data[0]
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        if ext_call.return_data[0] <= -(y * t / 10) + (t * y * t / 10) / 10:
                            t = t - 1
                            w = 0
                            x = w
                            y = y * t / 10
                            continue 
                        t = t - 1
                        w = ext_call.return_data[0] - (-(y * t / 10) + (t * y * t / 10) / 10)
                        x = w
                        y = y * t / 10
                        continue 
                    require (1000 * eth.balance(ext_call.return_data[0])) + (997 * y)
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < stor0.length
                    require 2 < stor0.length
                    _7743 = mem[352]
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_7743)
                    mem[(32 * stor0.length) + 356] = (997 * y * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * y)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_7743), (997 * y * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * y)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _7921 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_7921), ext_call.return_data[0]
    else:
        require 0 < stor0.length
        require ext_code.size(mem[300 len 20])
        call mem[300 len 20].0x313ce567 with:
             gas gas_remaining wei
        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 0 < stor0.length
        _2280 = 0, mem[292 len 28]
        mem[(32 * stor0.length) + 292] = address(ext_call.return_data[0])
        require ext_code.size(address(_2280))
        call address(_2280).0x70a08231 with:
             gas gas_remaining wei
            args address(ext_call.return_data[0])
        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)
        require arg3
        require (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)
        require 0 < stor0.length
        require ext_code.size(mem[300 len 20])
        call mem[300 len 20].0x313ce567 with:
             gas gas_remaining wei
        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 0 < stor0.length
        _2292 = 0, mem[292 len 28]
        require 2 < stor0.length
        _2294 = mem[352]
        require 0 < stor0.length
        require ext_code.size(mem[300 len 20])
        call mem[300 len 20].0x313ce567 with:
             gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 10^(-ext_call.return_data[0] + 18)
        mem[(32 * stor0.length) + 292] = mem[300 len 20]
        mem[(32 * stor0.length) + 324] = address(_2294)
        mem[(32 * stor0.length) + 356] = 10^18 * defaultAmount / arg3 / 10^(-ext_call.return_data[0] + 18)
        require ext_code.size(arg1)
        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args address(_2292), address(_2294), 10^18 * defaultAmount / arg3 / 10^(-ext_call.return_data[0] + 18)
        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 2 < stor0.length
        _2306 = mem[352]
        require 4 < stor0.length
        _2308 = mem[416]
        mem[(32 * stor0.length) + 324] = mem[428 len 20]
        mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
        require ext_code.size(stor3)
        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args address(_2306), address(_2308), ext_call.return_data[0]
        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 64
        if ext_call.return_data[0] <= defaultAmount:
            require ext_code.size(arg2)
            call arg2.0x70a08231 with:
                 gas gas_remaining wei
                args arg1
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(arg2)
            call arg2.0x70a08231 with:
                 gas gas_remaining wei
                args address(ext_call.return_data[0])
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
        require (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))
        require 0 < stor0.length
        require ext_code.size(mem[300 len 20])
        call mem[300 len 20].0x313ce567 with:
             gas gas_remaining wei
        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 0 < stor0.length
        _2331 = 0, mem[292 len 28]
        require 2 < stor0.length
        _2333 = mem[352]
        require 0 < stor0.length
        require ext_code.size(mem[300 len 20])
        call mem[300 len 20].0x313ce567 with:
             gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 10^(-ext_call.return_data[0] + 18)
        mem[(32 * stor0.length) + 292] = mem[300 len 20]
        mem[(32 * stor0.length) + 324] = address(_2333)
        mem[(32 * stor0.length) + 356] = (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
        require ext_code.size(arg1)
        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args address(_2331), address(_2333), (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 2 < stor0.length
        _2345 = mem[352]
        require 4 < stor0.length
        _2347 = mem[416]
        mem[(32 * stor0.length) + 324] = mem[428 len 20]
        mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
        require ext_code.size(stor3)
        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args address(_2345), address(_2347), ext_call.return_data[0]
        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 64
        require (1000 * eth.balance(ext_call.return_data[0])) + (997 * 11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10)
        require 0 < stor0.length
        require ext_code.size(mem[300 len 20])
        call mem[300 len 20].0x313ce567 with:
             gas gas_remaining wei
        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 0 < stor0.length
        if ext_call.return_data[0] <= 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount):
            _2367 = 0, mem[292 len 28]
            require 2 < stor0.length
            _2371 = mem[352]
            require 0 < stor0.length
            require ext_code.size(mem[300 len 20])
            call mem[300 len 20].0x313ce567 with:
                 gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 10^(-ext_call.return_data[0] + 18)
            mem[(32 * stor0.length) + 292] = mem[300 len 20]
            mem[(32 * stor0.length) + 324] = address(_2371)
            mem[(32 * stor0.length) + 356] = (997 * 11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
            require ext_code.size(arg1)
            call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(_2367), address(_2371), (997 * 11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 2 < stor0.length
            _2395 = mem[352]
            require 4 < stor0.length
            _2399 = mem[416]
            mem[(32 * stor0.length) + 324] = mem[428 len 20]
            mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
            require ext_code.size(stor3)
            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(_2395), address(_2399), ext_call.return_data[0]
            mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require (1000 * eth.balance(ext_call.return_data[0])) + (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10)
            require 0 < stor0.length
            require ext_code.size(mem[300 len 20])
            call mem[300 len 20].0x313ce567 with:
                 gas gas_remaining wei
            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 0 < stor0.length
            if ext_call.return_data[0] <= 11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10:
                _2439 = 0, mem[292 len 28]
                require 2 < stor0.length
                _2447 = mem[352]
                require 0 < stor0.length
                require ext_code.size(mem[300 len 20])
                call mem[300 len 20].0x313ce567 with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 10^(-ext_call.return_data[0] + 18)
                mem[(32 * stor0.length) + 292] = mem[300 len 20]
                mem[(32 * stor0.length) + 324] = address(_2447)
                mem[(32 * stor0.length) + 356] = (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                require ext_code.size(arg1)
                call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args address(_2439), address(_2447), (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < stor0.length
                _2495 = mem[352]
                require 4 < stor0.length
                _2503 = mem[416]
                mem[(32 * stor0.length) + 324] = mem[428 len 20]
                mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args address(_2495), address(_2503), ext_call.return_data[0]
                mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                if ext_call.return_data[0] <= 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10:
                    require (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < stor0.length
                    _2627 = 0, mem[292 len 28]
                    require 2 < stor0.length
                    _2649 = mem[352]
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_2649)
                    mem[(32 * stor0.length) + 356] = (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args address(_2627), address(_2649), (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args address(mem[352]), address(mem[416]), ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require ext_code.size(arg2)
                    call arg2.0x70a08231 with:
                         gas gas_remaining wei
                        args arg1
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(arg2)
                    call arg2.0x70a08231 with:
                         gas gas_remaining wei
                        args address(ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) <= 0:
                        return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    if ext_call.return_data[0] <= 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount):
                        return 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount), 
                               0,
                               address(ext_call.return_data[0]),
                               ext_call.return_data[0],
                               ext_call.return_data[0]
                    return 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount), 
                           ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)),
                           address(ext_call.return_data[0]),
                           ext_call.return_data[0],
                           ext_call.return_data[0]
                if ext_call.return_data[0] - (9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10) <= 0:
                    require (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < stor0.length
                    _2629 = 0, mem[292 len 28]
                    require 2 < stor0.length
                    _2651 = mem[352]
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_2651)
                    mem[(32 * stor0.length) + 356] = (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args address(_2629), address(_2651), (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args address(mem[352]), address(mem[416]), ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require ext_code.size(arg2)
                    call arg2.0x70a08231 with:
                         gas gas_remaining wei
                        args arg1
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(arg2)
                    call arg2.0x70a08231 with:
                         gas gas_remaining wei
                        args address(ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) <= 0:
                        return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    if ext_call.return_data[0] <= 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount):
                        return 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount), 
                               0,
                               address(ext_call.return_data[0]),
                               ext_call.return_data[0],
                               ext_call.return_data[0]
                    return 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount), 
                           ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)),
                           address(ext_call.return_data[0]),
                           ext_call.return_data[0],
                           ext_call.return_data[0]
                s = 9
                t = mem[(32 * stor0.length) + 288] - (9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10)
                u = 0
                v = 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)
                while t > u:
                    require (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < stor0.length
                    require 2 < stor0.length
                    _3610 = mem[352]
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_3610)
                    mem[(32 * stor0.length) + 356] = (997 * -(v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_3610), (997 * -(v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _4003 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    mem[(32 * stor0.length) + 324] = address(_4003)
                    mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_4003), ext_call.return_data[0]
                    mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    if ext_call.return_data[0] <= -(v * s / 10) + (s * v * s / 10) / 10:
                        s = s - 1
                        t = 0
                        u = t
                        v = v * s / 10
                        continue 
                    s = s - 1
                    t = ext_call.return_data[0] - (-(v * s / 10) + (s * v * s / 10) / 10)
                    u = t
                    v = v * s / 10
                    continue 
                require (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)
                require 0 < stor0.length
                require ext_code.size(mem[300 len 20])
                call mem[300 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 0 < stor0.length
                require 2 < stor0.length
                _3608 = mem[352]
                require 0 < stor0.length
                require ext_code.size(mem[300 len 20])
                call mem[300 len 20].0x313ce567 with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 10^(-ext_call.return_data[0] + 18)
                mem[(32 * stor0.length) + 292] = mem[300 len 20]
                mem[(32 * stor0.length) + 324] = address(_3608)
                mem[(32 * stor0.length) + 356] = (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                require ext_code.size(arg1)
                call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * stor0.length) + 292], address(_3608), (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < stor0.length
                require 4 < stor0.length
                _4000 = mem[416]
                mem[(32 * stor0.length) + 292] = mem[364 len 20]
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * stor0.length) + 292], address(_4000), ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require ext_code.size(arg2)
                call arg2.0x70a08231 with:
                     gas gas_remaining wei
                    args address(arg1)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(arg2)
                call arg2.0x70a08231 with:
                     gas gas_remaining wei
                    args address(ext_call.return_data[0])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if v <= 0:
                    return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                if ext_call.return_data[0] <= v:
                    return v, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                return v, ext_call.return_data[0] - v, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
            _2441 = 0, mem[292 len 28]
            require 2 < stor0.length
            _2449 = mem[352]
            require 0 < stor0.length
            require ext_code.size(mem[300 len 20])
            call mem[300 len 20].0x313ce567 with:
                 gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 10^(-ext_call.return_data[0] + 18)
            mem[(32 * stor0.length) + 292] = mem[300 len 20]
            mem[(32 * stor0.length) + 324] = address(_2449)
            mem[(32 * stor0.length) + 356] = (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
            require ext_code.size(arg1)
            call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(_2441), address(_2449), (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 2 < stor0.length
            _2497 = mem[352]
            require 4 < stor0.length
            _2506 = mem[416]
            mem[(32 * stor0.length) + 324] = mem[428 len 20]
            mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
            require ext_code.size(stor3)
            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(_2497), address(_2506), ext_call.return_data[0]
            mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            if ext_call.return_data[0] <= 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10:
                if ext_call.return_data[0] - (11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10) <= 0:
                    require (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < stor0.length
                    _2631 = 0, mem[292 len 28]
                    require 2 < stor0.length
                    _2654 = mem[352]
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_2654)
                    mem[(32 * stor0.length) + 356] = (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args address(_2631), address(_2654), (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args address(mem[352]), address(mem[416]), ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require ext_code.size(arg2)
                    call arg2.0x70a08231 with:
                         gas gas_remaining wei
                        args arg1
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(arg2)
                    call arg2.0x70a08231 with:
                         gas gas_remaining wei
                        args address(ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) <= 0:
                        return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    if ext_call.return_data[0] <= 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount):
                        return 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount), 
                               0,
                               address(ext_call.return_data[0]),
                               ext_call.return_data[0],
                               ext_call.return_data[0]
                    return 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount), 
                           ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)),
                           address(ext_call.return_data[0]),
                           ext_call.return_data[0],
                           ext_call.return_data[0]
                s = 11
                t = ext_call.return_data[0] - (11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10)
                u = 0
                v = 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)
                while t > u:
                    require (1000 * eth.balance(ext_call.return_data[0])) + (997 * (v * s / 10) + (s * v * s / 10) / 10)
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < stor0.length
                    require 2 < stor0.length
                    _3614 = mem[352]
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_3614)
                    mem[(32 * stor0.length) + 356] = (997 * (v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * (v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_3614), (997 * (v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * (v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _4008 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    mem[(32 * stor0.length) + 324] = address(_4008)
                    mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_4008), ext_call.return_data[0]
                    mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    if ext_call.return_data[0] <= (v * s / 10) + (s * v * s / 10) / 10:
                        s = s + 1
                        t = 0
                        u = t
                        v = v * s / 10
                        continue 
                    s = s + 1
                    t = ext_call.return_data[0] - ((v * s / 10) + (s * v * s / 10) / 10)
                    u = t
                    v = v * s / 10
                    continue 
                if 0 <= u:
                    require (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < stor0.length
                    require 2 < stor0.length
                    _3658 = mem[352]
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_3658)
                    mem[(32 * stor0.length) + 356] = (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_3658), (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _4060 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_4060), ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require ext_code.size(arg2)
                    call arg2.0x70a08231 with:
                         gas gas_remaining wei
                        args address(arg1)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(arg2)
                    call arg2.0x70a08231 with:
                         gas gas_remaining wei
                        args address(ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if v <= 0:
                        return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    if ext_call.return_data[0] <= v:
                        return v, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    return v, ext_call.return_data[0] - v, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                t = s - 1
                w = 0
                x = u
                y = v
                while w > x:
                    require (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < stor0.length
                    require 2 < stor0.length
                    _4772 = mem[352]
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_4772)
                    mem[(32 * stor0.length) + 356] = (997 * -(y * t / 10) + (t * y * t / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_4772), (997 * -(y * t / 10) + (t * y * t / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _4952 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    mem[(32 * stor0.length) + 324] = address(_4952)
                    mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_4952), ext_call.return_data[0]
                    mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    if ext_call.return_data[0] <= -(y * t / 10) + (t * y * t / 10) / 10:
                        t = t - 1
                        w = 0
                        x = w
                        y = y * t / 10
                        continue 
                    t = t - 1
                    w = ext_call.return_data[0] - (-(y * t / 10) + (t * y * t / 10) / 10)
                    x = w
                    y = y * t / 10
                    continue 
                require (1000 * eth.balance(ext_call.return_data[0])) + (997 * y)
                require 0 < stor0.length
                require ext_code.size(mem[300 len 20])
                call mem[300 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 0 < stor0.length
                require 2 < stor0.length
                _4770 = mem[352]
                require 0 < stor0.length
                require ext_code.size(mem[300 len 20])
                call mem[300 len 20].0x313ce567 with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 10^(-ext_call.return_data[0] + 18)
                mem[(32 * stor0.length) + 292] = mem[300 len 20]
                mem[(32 * stor0.length) + 324] = address(_4770)
                mem[(32 * stor0.length) + 356] = (997 * y * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * y)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                require ext_code.size(arg1)
                call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * stor0.length) + 292], address(_4770), (997 * y * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * y)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < stor0.length
                require 4 < stor0.length
                _4949 = mem[416]
                mem[(32 * stor0.length) + 292] = mem[364 len 20]
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * stor0.length) + 292], address(_4949), ext_call.return_data[0]
            else:
                if ext_call.return_data[0] - (11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10) <= 0:
                    if ext_call.return_data[0] - (9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10) <= 0:
                        require (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 0 < stor0.length
                        _2634 = 0, mem[292 len 28]
                        require 2 < stor0.length
                        _2658 = mem[352]
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_2658)
                        mem[(32 * stor0.length) + 356] = (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args address(_2634), address(_2658), (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args address(mem[352]), address(mem[416]), ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args arg1
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) <= 0:
                            return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        if ext_call.return_data[0] <= 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount):
                            return 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount), 
                                   0,
                                   address(ext_call.return_data[0]),
                                   ext_call.return_data[0],
                                   ext_call.return_data[0]
                        return 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount), 
                               ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)),
                               address(ext_call.return_data[0]),
                               ext_call.return_data[0],
                               ext_call.return_data[0]
                    s = 9
                    t = mem[(32 * stor0.length) + 288] - (9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10)
                    u = 0
                    v = 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)
                    while t > u:
                        require (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 0 < stor0.length
                        require 2 < stor0.length
                        _3618 = mem[352]
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_3618)
                        mem[(32 * stor0.length) + 356] = (997 * -(v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_3618), (997 * -(v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _4014 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        mem[(32 * stor0.length) + 324] = address(_4014)
                        mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_4014), ext_call.return_data[0]
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        if ext_call.return_data[0] <= -(v * s / 10) + (s * v * s / 10) / 10:
                            s = s - 1
                            t = 0
                            u = t
                            v = v * s / 10
                            continue 
                        s = s - 1
                        t = ext_call.return_data[0] - (-(v * s / 10) + (s * v * s / 10) / 10)
                        u = t
                        v = v * s / 10
                        continue 
                    require (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < stor0.length
                    require 2 < stor0.length
                    _3616 = mem[352]
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_3616)
                    mem[(32 * stor0.length) + 356] = (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_3616), (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _4011 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_4011), ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require ext_code.size(arg2)
                    call arg2.0x70a08231 with:
                         gas gas_remaining wei
                        args address(arg1)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(arg2)
                    call arg2.0x70a08231 with:
                         gas gas_remaining wei
                        args address(ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if v <= 0:
                        return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    if ext_call.return_data[0] <= v:
                        return v, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    return v, ext_call.return_data[0] - v, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                s = 11
                t = ext_call.return_data[0] - (11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10)
                u = 0
                v = 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)
                while t > u:
                    require (1000 * eth.balance(ext_call.return_data[0])) + (997 * (v * s / 10) + (s * v * s / 10) / 10)
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < stor0.length
                    require 2 < stor0.length
                    _3622 = mem[352]
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_3622)
                    mem[(32 * stor0.length) + 356] = (997 * (v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * (v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_3622), (997 * (v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * (v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _4019 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    mem[(32 * stor0.length) + 324] = address(_4019)
                    mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_4019), ext_call.return_data[0]
                    mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    if ext_call.return_data[0] <= (v * s / 10) + (s * v * s / 10) / 10:
                        s = s + 1
                        t = 0
                        u = t
                        v = v * s / 10
                        continue 
                    s = s + 1
                    t = ext_call.return_data[0] - ((v * s / 10) + (s * v * s / 10) / 10)
                    u = t
                    v = v * s / 10
                    continue 
                if ext_call.return_data[0] - (9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10) <= u:
                    require (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < stor0.length
                    require 2 < stor0.length
                    _3670 = mem[352]
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_3670)
                    mem[(32 * stor0.length) + 356] = (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_3670), (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _4064 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_4064), ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require ext_code.size(arg2)
                    call arg2.0x70a08231 with:
                         gas gas_remaining wei
                        args address(arg1)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(arg2)
                    call arg2.0x70a08231 with:
                         gas gas_remaining wei
                        args address(ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if v <= 0:
                        return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    if ext_call.return_data[0] <= v:
                        return v, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    return v, ext_call.return_data[0] - v, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                t = s - 1
                w = ext_call.return_data[0] - (9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10)
                x = u
                y = v
                while w > x:
                    require (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < stor0.length
                    require 2 < stor0.length
                    _4776 = mem[352]
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_4776)
                    mem[(32 * stor0.length) + 356] = (997 * -(y * t / 10) + (t * y * t / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_4776), (997 * -(y * t / 10) + (t * y * t / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _4958 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    mem[(32 * stor0.length) + 324] = address(_4958)
                    mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_4958), ext_call.return_data[0]
                    mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    if ext_call.return_data[0] <= -(y * t / 10) + (t * y * t / 10) / 10:
                        t = t - 1
                        w = 0
                        x = w
                        y = y * t / 10
                        continue 
                    t = t - 1
                    w = ext_call.return_data[0] - (-(y * t / 10) + (t * y * t / 10) / 10)
                    x = w
                    y = y * t / 10
                    continue 
                require (1000 * eth.balance(ext_call.return_data[0])) + (997 * y)
                require 0 < stor0.length
                require ext_code.size(mem[300 len 20])
                call mem[300 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 0 < stor0.length
                require 2 < stor0.length
                _4774 = mem[352]
                require 0 < stor0.length
                require ext_code.size(mem[300 len 20])
                call mem[300 len 20].0x313ce567 with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 10^(-ext_call.return_data[0] + 18)
                mem[(32 * stor0.length) + 292] = mem[300 len 20]
                mem[(32 * stor0.length) + 324] = address(_4774)
                mem[(32 * stor0.length) + 356] = (997 * y * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * y)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                require ext_code.size(arg1)
                call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * stor0.length) + 292], address(_4774), (997 * y * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * y)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < stor0.length
                require 4 < stor0.length
                _4955 = mem[416]
                mem[(32 * stor0.length) + 292] = mem[364 len 20]
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * stor0.length) + 292], address(_4955), ext_call.return_data[0]
        else:
            _2369 = 0, mem[292 len 28]
            require 2 < stor0.length
            _2373 = mem[352]
            require 0 < stor0.length
            require ext_code.size(mem[300 len 20])
            call mem[300 len 20].0x313ce567 with:
                 gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 10^(-ext_call.return_data[0] + 18)
            mem[(32 * stor0.length) + 292] = mem[300 len 20]
            mem[(32 * stor0.length) + 324] = address(_2373)
            mem[(32 * stor0.length) + 356] = (997 * 11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
            require ext_code.size(arg1)
            call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(_2369), address(_2373), (997 * 11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 2 < stor0.length
            _2397 = mem[352]
            require 4 < stor0.length
            _2402 = mem[416]
            mem[(32 * stor0.length) + 324] = mem[428 len 20]
            mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
            require ext_code.size(stor3)
            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(_2397), address(_2402), ext_call.return_data[0]
            mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require (1000 * eth.balance(ext_call.return_data[0])) + (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10)
            require 0 < stor0.length
            require ext_code.size(mem[300 len 20])
            call mem[300 len 20].0x313ce567 with:
                 gas gas_remaining wei
            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 0 < stor0.length
            if ext_call.return_data[0] <= 11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10:
                _2443 = 0, mem[292 len 28]
                require 2 < stor0.length
                _2451 = mem[352]
                require 0 < stor0.length
                require ext_code.size(mem[300 len 20])
                call mem[300 len 20].0x313ce567 with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 10^(-ext_call.return_data[0] + 18)
                mem[(32 * stor0.length) + 292] = mem[300 len 20]
                mem[(32 * stor0.length) + 324] = address(_2451)
                mem[(32 * stor0.length) + 356] = (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                require ext_code.size(arg1)
                call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args address(_2443), address(_2451), (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < stor0.length
                _2499 = mem[352]
                require 4 < stor0.length
                _2509 = mem[416]
                mem[(32 * stor0.length) + 324] = mem[428 len 20]
                mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args address(_2499), address(_2509), ext_call.return_data[0]
                mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                if ext_call.return_data[0] <= 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10:
                    if 0 <= ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)):
                        require (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 0 < stor0.length
                        _2637 = 0, mem[292 len 28]
                        require 2 < stor0.length
                        _2663 = mem[352]
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_2663)
                        mem[(32 * stor0.length) + 356] = (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args address(_2637), address(_2663), (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args address(mem[352]), address(mem[416]), ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args arg1
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) <= 0:
                            return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        if ext_call.return_data[0] <= 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount):
                            return 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount), 
                                   0,
                                   address(ext_call.return_data[0]),
                                   ext_call.return_data[0],
                                   ext_call.return_data[0]
                        return 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount), 
                               ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)),
                               address(ext_call.return_data[0]),
                               ext_call.return_data[0],
                               ext_call.return_data[0]
                    s = 11
                    t = 0
                    u = ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))
                    v = 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)
                    while t > u:
                        require (1000 * eth.balance(ext_call.return_data[0])) + (997 * (v * s / 10) + (s * v * s / 10) / 10)
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 0 < stor0.length
                        require 2 < stor0.length
                        _3626 = mem[352]
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_3626)
                        mem[(32 * stor0.length) + 356] = (997 * (v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * (v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_3626), (997 * (v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * (v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _4024 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        mem[(32 * stor0.length) + 324] = address(_4024)
                        mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_4024), ext_call.return_data[0]
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        if ext_call.return_data[0] <= (v * s / 10) + (s * v * s / 10) / 10:
                            s = s + 1
                            t = 0
                            u = t
                            v = v * s / 10
                            continue 
                        s = s + 1
                        t = ext_call.return_data[0] - ((v * s / 10) + (s * v * s / 10) / 10)
                        u = t
                        v = v * s / 10
                        continue 
                    if 0 <= u:
                        require (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 0 < stor0.length
                        require 2 < stor0.length
                        _3676 = mem[352]
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_3676)
                        mem[(32 * stor0.length) + 356] = (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_3676), (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _4068 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_4068), ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(arg1)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if v <= 0:
                            return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        if ext_call.return_data[0] <= v:
                            return v, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        return v, ext_call.return_data[0] - v, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    t = s - 1
                    w = 0
                    x = u
                    y = v
                    while w > x:
                        require (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 0 < stor0.length
                        require 2 < stor0.length
                        _4780 = mem[352]
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_4780)
                        mem[(32 * stor0.length) + 356] = (997 * -(y * t / 10) + (t * y * t / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_4780), (997 * -(y * t / 10) + (t * y * t / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _4964 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        mem[(32 * stor0.length) + 324] = address(_4964)
                        mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_4964), ext_call.return_data[0]
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        if ext_call.return_data[0] <= -(y * t / 10) + (t * y * t / 10) / 10:
                            t = t - 1
                            w = 0
                            x = w
                            y = y * t / 10
                            continue 
                        t = t - 1
                        w = ext_call.return_data[0] - (-(y * t / 10) + (t * y * t / 10) / 10)
                        x = w
                        y = y * t / 10
                        continue 
                    require (1000 * eth.balance(ext_call.return_data[0])) + (997 * y)
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < stor0.length
                    require 2 < stor0.length
                    _4778 = mem[352]
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_4778)
                    mem[(32 * stor0.length) + 356] = (997 * y * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * y)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_4778), (997 * y * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * y)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _4961 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_4961), ext_call.return_data[0]
                else:
                    if 0 <= ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)):
                        if -9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10 <= -997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount):
                            require (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))
                            require 0 < stor0.length
                            require ext_code.size(mem[300 len 20])
                            call mem[300 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 0 < stor0.length
                            _2640 = 0, mem[292 len 28]
                            require 2 < stor0.length
                            _2667 = mem[352]
                            require 0 < stor0.length
                            require ext_code.size(mem[300 len 20])
                            call mem[300 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[(32 * stor0.length) + 292] = mem[300 len 20]
                            mem[(32 * stor0.length) + 324] = address(_2667)
                            mem[(32 * stor0.length) + 356] = (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                            require ext_code.size(arg1)
                            call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args address(_2640), address(_2667), (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            require ext_code.size(stor3)
                            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args address(mem[352]), address(mem[416]), ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require ext_code.size(arg2)
                            call arg2.0x70a08231 with:
                                 gas gas_remaining wei
                                args arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(arg2)
                            call arg2.0x70a08231 with:
                                 gas gas_remaining wei
                                args address(ext_call.return_data[0])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) <= 0:
                                return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                            if ext_call.return_data[0] <= 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount):
                                return 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount), 
                                       0,
                                       address(ext_call.return_data[0]),
                                       ext_call.return_data[0],
                                       ext_call.return_data[0]
                            return 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount), 
                                   ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)),
                                   address(ext_call.return_data[0]),
                                   ext_call.return_data[0],
                                   ext_call.return_data[0]
                        s = 9
                        t = mem[(32 * stor0.length) + 288] - (9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10)
                        u = ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))
                        v = 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)
                        while t > u:
                            require (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)
                            require 0 < stor0.length
                            require ext_code.size(mem[300 len 20])
                            call mem[300 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 0 < stor0.length
                            require 2 < stor0.length
                            _3630 = mem[352]
                            require 0 < stor0.length
                            require ext_code.size(mem[300 len 20])
                            call mem[300 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[(32 * stor0.length) + 292] = mem[300 len 20]
                            mem[(32 * stor0.length) + 324] = address(_3630)
                            mem[(32 * stor0.length) + 356] = (997 * -(v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                            require ext_code.size(arg1)
                            call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[(32 * stor0.length) + 292], address(_3630), (997 * -(v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _4030 = mem[416]
                            mem[(32 * stor0.length) + 292] = mem[364 len 20]
                            mem[(32 * stor0.length) + 324] = address(_4030)
                            mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                            require ext_code.size(stor3)
                            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[(32 * stor0.length) + 292], address(_4030), ext_call.return_data[0]
                            mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            if ext_call.return_data[0] <= -(v * s / 10) + (s * v * s / 10) / 10:
                                s = s - 1
                                t = 0
                                u = t
                                v = v * s / 10
                                continue 
                            s = s - 1
                            t = ext_call.return_data[0] - (-(v * s / 10) + (s * v * s / 10) / 10)
                            u = t
                            v = v * s / 10
                            continue 
                        require (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 0 < stor0.length
                        require 2 < stor0.length
                        _3628 = mem[352]
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_3628)
                        mem[(32 * stor0.length) + 356] = (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_3628), (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _4027 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_4027), ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(arg1)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if v <= 0:
                            return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        if ext_call.return_data[0] <= v:
                            return v, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        return v, ext_call.return_data[0] - v, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    s = 11
                    t = 0
                    u = ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))
                    v = 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)
                    while t > u:
                        require (1000 * eth.balance(ext_call.return_data[0])) + (997 * (v * s / 10) + (s * v * s / 10) / 10)
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 0 < stor0.length
                        require 2 < stor0.length
                        _3634 = mem[352]
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_3634)
                        mem[(32 * stor0.length) + 356] = (997 * (v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * (v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_3634), (997 * (v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * (v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _4035 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        mem[(32 * stor0.length) + 324] = address(_4035)
                        mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_4035), ext_call.return_data[0]
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        if ext_call.return_data[0] <= (v * s / 10) + (s * v * s / 10) / 10:
                            s = s + 1
                            t = 0
                            u = t
                            v = v * s / 10
                            continue 
                        s = s + 1
                        t = ext_call.return_data[0] - ((v * s / 10) + (s * v * s / 10) / 10)
                        u = t
                        v = v * s / 10
                        continue 
                    if ext_call.return_data[0] - (9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10) <= u:
                        require (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 0 < stor0.length
                        require 2 < stor0.length
                        _3688 = mem[352]
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_3688)
                        mem[(32 * stor0.length) + 356] = (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_3688), (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _4072 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_4072), ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(arg1)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if v <= 0:
                            return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        if ext_call.return_data[0] <= v:
                            return v, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        return v, ext_call.return_data[0] - v, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    t = s - 1
                    w = ext_call.return_data[0] - (9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10)
                    x = u
                    y = v
                    while w > x:
                        require (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 0 < stor0.length
                        require 2 < stor0.length
                        _4784 = mem[352]
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_4784)
                        mem[(32 * stor0.length) + 356] = (997 * -(y * t / 10) + (t * y * t / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_4784), (997 * -(y * t / 10) + (t * y * t / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _4970 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        mem[(32 * stor0.length) + 324] = address(_4970)
                        mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_4970), ext_call.return_data[0]
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        if ext_call.return_data[0] <= -(y * t / 10) + (t * y * t / 10) / 10:
                            t = t - 1
                            w = 0
                            x = w
                            y = y * t / 10
                            continue 
                        t = t - 1
                        w = ext_call.return_data[0] - (-(y * t / 10) + (t * y * t / 10) / 10)
                        x = w
                        y = y * t / 10
                        continue 
                    require (1000 * eth.balance(ext_call.return_data[0])) + (997 * y)
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < stor0.length
                    require 2 < stor0.length
                    _4782 = mem[352]
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_4782)
                    mem[(32 * stor0.length) + 356] = (997 * y * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * y)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_4782), (997 * y * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * y)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _4967 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_4967), ext_call.return_data[0]
            else:
                _2445 = 0, mem[292 len 28]
                require 2 < stor0.length
                _2453 = mem[352]
                require 0 < stor0.length
                require ext_code.size(mem[300 len 20])
                call mem[300 len 20].0x313ce567 with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 10^(-ext_call.return_data[0] + 18)
                mem[(32 * stor0.length) + 292] = mem[300 len 20]
                mem[(32 * stor0.length) + 324] = address(_2453)
                mem[(32 * stor0.length) + 356] = (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                require ext_code.size(arg1)
                call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args address(_2445), address(_2453), (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < stor0.length
                _2501 = mem[352]
                require 4 < stor0.length
                _2512 = mem[416]
                mem[(32 * stor0.length) + 324] = mem[428 len 20]
                mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                require ext_code.size(stor3)
                call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args address(_2501), address(_2512), ext_call.return_data[0]
                mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                if ext_call.return_data[0] <= 9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10:
                    if -11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10 <= -997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount):
                        if 0 <= ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)):
                            require (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))
                            require 0 < stor0.length
                            require ext_code.size(mem[300 len 20])
                            call mem[300 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 0 < stor0.length
                            _2643 = 0, mem[292 len 28]
                            require 2 < stor0.length
                            _2672 = mem[352]
                            require 0 < stor0.length
                            require ext_code.size(mem[300 len 20])
                            call mem[300 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[(32 * stor0.length) + 292] = mem[300 len 20]
                            mem[(32 * stor0.length) + 324] = address(_2672)
                            mem[(32 * stor0.length) + 356] = (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                            require ext_code.size(arg1)
                            call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args address(_2643), address(_2672), (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            require ext_code.size(stor3)
                            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args address(mem[352]), address(mem[416]), ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require ext_code.size(arg2)
                            call arg2.0x70a08231 with:
                                 gas gas_remaining wei
                                args arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(arg2)
                            call arg2.0x70a08231 with:
                                 gas gas_remaining wei
                                args address(ext_call.return_data[0])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) <= 0:
                                return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                            if ext_call.return_data[0] <= 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount):
                                return 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount), 
                                       0,
                                       address(ext_call.return_data[0]),
                                       ext_call.return_data[0],
                                       ext_call.return_data[0]
                            return 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount), 
                                   ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)),
                                   address(ext_call.return_data[0]),
                                   ext_call.return_data[0],
                                   ext_call.return_data[0]
                        s = 9
                        t = 0
                        u = ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))
                        v = 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)
                        while t > u:
                            require (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)
                            require 0 < stor0.length
                            require ext_code.size(mem[300 len 20])
                            call mem[300 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 0 < stor0.length
                            require 2 < stor0.length
                            _3638 = mem[352]
                            require 0 < stor0.length
                            require ext_code.size(mem[300 len 20])
                            call mem[300 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[(32 * stor0.length) + 292] = mem[300 len 20]
                            mem[(32 * stor0.length) + 324] = address(_3638)
                            mem[(32 * stor0.length) + 356] = (997 * -(v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                            require ext_code.size(arg1)
                            call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[(32 * stor0.length) + 292], address(_3638), (997 * -(v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _4041 = mem[416]
                            mem[(32 * stor0.length) + 292] = mem[364 len 20]
                            mem[(32 * stor0.length) + 324] = address(_4041)
                            mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                            require ext_code.size(stor3)
                            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[(32 * stor0.length) + 292], address(_4041), ext_call.return_data[0]
                            mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            if ext_call.return_data[0] <= -(v * s / 10) + (s * v * s / 10) / 10:
                                s = s - 1
                                t = 0
                                u = t
                                v = v * s / 10
                                continue 
                            s = s - 1
                            t = ext_call.return_data[0] - (-(v * s / 10) + (s * v * s / 10) / 10)
                            u = t
                            v = v * s / 10
                            continue 
                        require (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 0 < stor0.length
                        require 2 < stor0.length
                        _3636 = mem[352]
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_3636)
                        mem[(32 * stor0.length) + 356] = (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_3636), (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _4038 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_4038), ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(arg1)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if v <= 0:
                            return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        if ext_call.return_data[0] <= v:
                            return v, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        return v, ext_call.return_data[0] - v, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    s = 11
                    t = ext_call.return_data[0] - (11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10)
                    u = ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))
                    v = 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)
                    while t > u:
                        require (1000 * eth.balance(ext_call.return_data[0])) + (997 * (v * s / 10) + (s * v * s / 10) / 10)
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 0 < stor0.length
                        require 2 < stor0.length
                        _3642 = mem[352]
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_3642)
                        mem[(32 * stor0.length) + 356] = (997 * (v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * (v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_3642), (997 * (v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * (v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _4046 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        mem[(32 * stor0.length) + 324] = address(_4046)
                        mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_4046), ext_call.return_data[0]
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        if ext_call.return_data[0] <= (v * s / 10) + (s * v * s / 10) / 10:
                            s = s + 1
                            t = 0
                            u = t
                            v = v * s / 10
                            continue 
                        s = s + 1
                        t = ext_call.return_data[0] - ((v * s / 10) + (s * v * s / 10) / 10)
                        u = t
                        v = v * s / 10
                        continue 
                    if 0 <= u:
                        require (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 0 < stor0.length
                        require 2 < stor0.length
                        _3700 = mem[352]
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_3700)
                        mem[(32 * stor0.length) + 356] = (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_3700), (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _4076 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_4076), ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(arg1)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if v <= 0:
                            return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        if ext_call.return_data[0] <= v:
                            return v, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        return v, ext_call.return_data[0] - v, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    t = s - 1
                    w = 0
                    x = u
                    y = v
                    while w > x:
                        require (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 0 < stor0.length
                        require 2 < stor0.length
                        _4788 = mem[352]
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_4788)
                        mem[(32 * stor0.length) + 356] = (997 * -(y * t / 10) + (t * y * t / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_4788), (997 * -(y * t / 10) + (t * y * t / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _4976 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        mem[(32 * stor0.length) + 324] = address(_4976)
                        mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_4976), ext_call.return_data[0]
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        if ext_call.return_data[0] <= -(y * t / 10) + (t * y * t / 10) / 10:
                            t = t - 1
                            w = 0
                            x = w
                            y = y * t / 10
                            continue 
                        t = t - 1
                        w = ext_call.return_data[0] - (-(y * t / 10) + (t * y * t / 10) / 10)
                        x = w
                        y = y * t / 10
                        continue 
                    require (1000 * eth.balance(ext_call.return_data[0])) + (997 * y)
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < stor0.length
                    require 2 < stor0.length
                    _4786 = mem[352]
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_4786)
                    mem[(32 * stor0.length) + 356] = (997 * y * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * y)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_4786), (997 * y * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * y)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _4973 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_4973), ext_call.return_data[0]
                else:
                    if -11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10 <= -997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount):
                        if -9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10 <= -997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount):
                            require (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))
                            require 0 < stor0.length
                            require ext_code.size(mem[300 len 20])
                            call mem[300 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 0 < stor0.length
                            _2646 = 0, mem[292 len 28]
                            require 2 < stor0.length
                            _2677 = mem[352]
                            require 0 < stor0.length
                            require ext_code.size(mem[300 len 20])
                            call mem[300 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[(32 * stor0.length) + 292] = mem[300 len 20]
                            mem[(32 * stor0.length) + 324] = address(_2677)
                            mem[(32 * stor0.length) + 356] = (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                            require ext_code.size(arg1)
                            call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args address(_2646), address(_2677), (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            require ext_code.size(stor3)
                            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args address(mem[352]), address(mem[416]), ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require ext_code.size(arg2)
                            call arg2.0x70a08231 with:
                                 gas gas_remaining wei
                                args arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(arg2)
                            call arg2.0x70a08231 with:
                                 gas gas_remaining wei
                                args address(ext_call.return_data[0])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) <= 0:
                                return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                            if ext_call.return_data[0] <= 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount):
                                return 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount), 
                                       0,
                                       address(ext_call.return_data[0]),
                                       ext_call.return_data[0],
                                       ext_call.return_data[0]
                            return 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount), 
                                   ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)),
                                   address(ext_call.return_data[0]),
                                   ext_call.return_data[0],
                                   ext_call.return_data[0]
                        s = 9
                        t = mem[(32 * stor0.length) + 288] - (9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10)
                        u = ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))
                        v = 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)
                        while t > u:
                            require (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)
                            require 0 < stor0.length
                            require ext_code.size(mem[300 len 20])
                            call mem[300 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 0 < stor0.length
                            require 2 < stor0.length
                            _3646 = mem[352]
                            require 0 < stor0.length
                            require ext_code.size(mem[300 len 20])
                            call mem[300 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[(32 * stor0.length) + 292] = mem[300 len 20]
                            mem[(32 * stor0.length) + 324] = address(_3646)
                            mem[(32 * stor0.length) + 356] = (997 * -(v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                            require ext_code.size(arg1)
                            call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[(32 * stor0.length) + 292], address(_3646), (997 * -(v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                            mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _4052 = mem[416]
                            mem[(32 * stor0.length) + 292] = mem[364 len 20]
                            mem[(32 * stor0.length) + 324] = address(_4052)
                            mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                            require ext_code.size(stor3)
                            call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[(32 * stor0.length) + 292], address(_4052), ext_call.return_data[0]
                            mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            if ext_call.return_data[0] <= -(v * s / 10) + (s * v * s / 10) / 10:
                                s = s - 1
                                t = 0
                                u = t
                                v = v * s / 10
                                continue 
                            s = s - 1
                            t = ext_call.return_data[0] - (-(v * s / 10) + (s * v * s / 10) / 10)
                            u = t
                            v = v * s / 10
                            continue 
                        require (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 0 < stor0.length
                        require 2 < stor0.length
                        _3644 = mem[352]
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_3644)
                        mem[(32 * stor0.length) + 356] = (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_3644), (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _4049 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_4049), ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(arg1)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if v <= 0:
                            return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        if ext_call.return_data[0] <= v:
                            return v, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        return v, ext_call.return_data[0] - v, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    s = 11
                    t = ext_call.return_data[0] - (11 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10)
                    u = ext_call.return_data[0] - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount))
                    v = 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)
                    while t > u:
                        require (1000 * eth.balance(ext_call.return_data[0])) + (997 * (v * s / 10) + (s * v * s / 10) / 10)
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 0 < stor0.length
                        require 2 < stor0.length
                        _3650 = mem[352]
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_3650)
                        mem[(32 * stor0.length) + 356] = (997 * (v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * (v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_3650), (997 * (v * s / 10) + (s * v * s / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * (v * s / 10) + (s * v * s / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _4057 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        mem[(32 * stor0.length) + 324] = address(_4057)
                        mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_4057), ext_call.return_data[0]
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        if ext_call.return_data[0] <= (v * s / 10) + (s * v * s / 10) / 10:
                            s = s + 1
                            t = 0
                            u = t
                            v = v * s / 10
                            continue 
                        s = s + 1
                        t = ext_call.return_data[0] - ((v * s / 10) + (s * v * s / 10) / 10)
                        u = t
                        v = v * s / 10
                        continue 
                    if ext_call.return_data[0] - (9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10) <= u:
                        require (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 0 < stor0.length
                        require 2 < stor0.length
                        _3712 = mem[352]
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_3712)
                        mem[(32 * stor0.length) + 356] = (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_3712), (997 * v * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * v)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _4080 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_4080), ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(arg1)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if v <= 0:
                            return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        if ext_call.return_data[0] <= v:
                            return v, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                        return v, ext_call.return_data[0] - v, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
                    t = s - 1
                    w = ext_call.return_data[0] - (9 * 997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount) / 10)
                    x = u
                    y = v
                    while w > x:
                        require (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 0 < stor0.length
                        require 2 < stor0.length
                        _4792 = mem[352]
                        require 0 < stor0.length
                        require ext_code.size(mem[300 len 20])
                        call mem[300 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 292] = mem[300 len 20]
                        mem[(32 * stor0.length) + 324] = address(_4792)
                        mem[(32 * stor0.length) + 356] = (997 * -(y * t / 10) + (t * y * t / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        require ext_code.size(arg1)
                        call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_4792), (997 * -(y * t / 10) + (t * y * t / 10) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * -(y * t / 10) + (t * y * t / 10) / 10)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _4982 = mem[416]
                        mem[(32 * stor0.length) + 292] = mem[364 len 20]
                        mem[(32 * stor0.length) + 324] = address(_4982)
                        mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
                        require ext_code.size(stor3)
                        call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[(32 * stor0.length) + 292], address(_4982), ext_call.return_data[0]
                        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        if ext_call.return_data[0] <= -(y * t / 10) + (t * y * t / 10) / 10:
                            t = t - 1
                            w = 0
                            x = w
                            y = y * t / 10
                            continue 
                        t = t - 1
                        w = ext_call.return_data[0] - (-(y * t / 10) + (t * y * t / 10) / 10)
                        x = w
                        y = y * t / 10
                        continue 
                    require (1000 * eth.balance(ext_call.return_data[0])) + (997 * y)
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < stor0.length
                    require 2 < stor0.length
                    _4790 = mem[352]
                    require 0 < stor0.length
                    require ext_code.size(mem[300 len 20])
                    call mem[300 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 292] = mem[300 len 20]
                    mem[(32 * stor0.length) + 324] = address(_4790)
                    mem[(32 * stor0.length) + 356] = (997 * y * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * y)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    require ext_code.size(arg1)
                    call arg1.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_4790), (997 * y * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * y)) + (10^18 * defaultAmount / arg3) - (997 * defaultAmount * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) / (1000 * eth.balance(ext_call.return_data[0])) + (997 * defaultAmount)) / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _4979 = mem[416]
                    mem[(32 * stor0.length) + 292] = mem[364 len 20]
                    require ext_code.size(stor3)
                    call stor3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * stor0.length) + 292], address(_4979), ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    require ext_code.size(arg2)
    call arg2.0x70a08231 with:
         gas gas_remaining wei
        args address(arg1)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(arg2)
    call arg2.0x70a08231 with:
         gas gas_remaining wei
        args address(ext_call.return_data[0])
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if y <= 0:
        return 0, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
    if ext_call.return_data[0] <= y:
        return y, 0, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
    return y, ext_call.return_data[0] - y, address(ext_call.return_data[0]), ext_call.return_data[0], ext_call.return_data[0]
}



}
