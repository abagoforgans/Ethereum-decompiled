contract main {




// =====================  Runtime code  =====================


#
#  - sub_3c3419e6(?)
#
address sub_58fb58d8Address;
uint256 sub_dd840951;
array of uint256 stor16;
uint256 sub_9b458bd3;
uint256 sub_33d47a5b;
uint256 sub_78463323;
mapping of struct stor5;
mapping of uint256 sub_ccc8efcc;

function sub_0b543372(?) {
    return sub_33d47a5b
}

function sub_33d47a5b(?) {
    return sub_33d47a5b
}

function sub_58fb58d8(?) {
    return sub_58fb58d8Address
}

function sub_5b1c48cb(?) {
    return sub_78463323
}

function sub_5ea431b2(?) {
    return sub_dd840951
}

function sub_668b0daf(?) {
    return sub_9b458bd3
}

function sub_78463323(?) {
    return sub_78463323
}

function sub_9b458bd3(?) {
    return sub_9b458bd3
}

function sub_ccc8efcc(?) {
    require calldata.size - 4 >= 32
    return sub_ccc8efcc[address(arg1)]
}

function sub_dd840951(?) {
    return sub_dd840951
}

function _fallback() payable {
    revert
}

function sub_876148ac(?) {
    require calldata.size - 4 >= 32
    if sub_58fb58d8Address != msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Only allow contract owner to oprate!'
    sub_33d47a5b = arg1
}

function SetRoundPeriod(uint256 arg1) {
    require calldata.size - 4 >= 32
    if sub_58fb58d8Address != msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Only allow contract owner to oprate!'
    sub_78463323 = arg1
}

function sub_8a427002(?) {
    require calldata.size - 4 >= 32
    if sub_58fb58d8Address != msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Only allow contract owner to oprate!'
    if arg1 >= 10000:
        revert with 0, 'Cannot exceed profit UNIT!'
    sub_9b458bd3 = arg1
}

function sub_b076650a(?) {
    require calldata.size - 4 >= 64
    require arg1 > 0
    require arg2 > 0
    if stor5[arg1][19][arg2].field_1792:
        mem[128] = uint32(stor5[arg1][19][arg2][7].field_0)
        idx = 128
        s = 0
        while (32 * stor5[arg1][19][arg2].field_1792) + 96 > idx:
            mem[idx + 32] = uint32(stor5[arg1][19][arg2][7].field_8 * (4 * -(s + 7 / 32) + 1) + s - (s + 7 / 32 * s))
            idx = idx + 32
            s = (4 * -(s + 7 / 32) + 1) + s - (s + 7 / 32 * s)
            continue 
    mem[(32 * stor5[arg1][19][arg2].field_1792) + 384 len floor32(stor5[arg1][19][arg2].field_1792)] = mem[128 len floor32(stor5[arg1][19][arg2].field_1792)]
    return address(stor5[arg1][19][arg2].field_0), 
           stor5[arg1][19][arg2].field_256,
           stor5[arg1][19][arg2].field_768,
           stor5[arg1][19][arg2].field_1280,
           uint8(stor5[arg1][19][arg2].field_1536),
           bool(uint8(stor5[arg1][19][arg2].field_1544)),
           Array(len=stor5[arg1][19][arg2].field_1792, data=mem[128 len floor32(stor5[arg1][19][arg2].field_1792)], mem[(32 * stor5[arg1][19][arg2].field_1792) + floor32(stor5[arg1][19][arg2].field_1792) + 384 len (32 * stor5[arg1][19][arg2].field_1792) - floor32(stor5[arg1][19][arg2].field_1792)])
}

function sub_c2ee9822(?) payable {
    require calldata.size - 4 >= 96
    if sub_58fb58d8Address != msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Only allow contract owner to oprate!'
    require arg2 > 0
    require arg3
    if arg2 > sub_ccc8efcc[address(arg1)]:
        revert with 0, 'Withdraw profit over money!'
    if not arg1:
        if arg2 > eth.balance(this.address):
            revert with 0, 'Not enough ether :(!'
    else:
        require ext_code.size(arg1)
        staticcall arg1.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0] < arg2:
            revert with 0, 'Not enough token :(!'
    require arg2 <= sub_ccc8efcc[address(arg1)]
    sub_ccc8efcc[address(arg1)] -= arg2
    if not arg1:
        call arg3 with:
           value arg2 wei
             gas 2300 * is_zero(value) wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
    else:
        require ext_code.size(arg1)
        call arg1.0xa9059cbb with:
             gas gas_remaining wei
            args address(arg3), arg2
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
}

function Withdraw(uint256 arg1, uint256 arg2, address arg3) payable {
    require calldata.size - 4 >= 96
    require arg1 > 0
    if address(stor5[arg1].field_0) != msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Only allow room owner to withdraw money!'
    if arg2 > stor5[arg1].field_4608 - stor5[arg1].field_4352:
        revert with 0, 'Withdraw over money!'
    if stor5[arg1].field_4608 > 0:
        if not address(stor5[arg1].field_256):
            if arg2 > eth.balance(this.address):
                revert with 0, 'Not enough ether :(!'
        else:
            require ext_code.size(address(stor5[arg1].field_256))
            staticcall address(stor5[arg1].field_256).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] < arg2:
                revert with 0, 'Not enough token :(!'
        require arg2 <= stor5[arg1].field_4608
        stor5[arg1].field_4608 -= arg2
        if not address(stor5[arg1].field_256):
            call arg3 with:
               value arg2 wei
                 gas 2300 * is_zero(value) wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
        else:
            require ext_code.size(address(stor5[arg1].field_256))
            call address(stor5[arg1].field_256).0xa9059cbb with:
                 gas gas_remaining wei
                args address(arg3), arg2
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
    emit 0xe492f03a: arg1, arg2, stor5[arg1].field_4608
}

function Deposit(uint256 arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 > 0
    require arg2 > 0
    if address(stor5[arg1].field_256):
        require ext_code.size(address(stor5[arg1].field_256))
        staticcall address(stor5[arg1].field_256).0x70a08231 with:
                gas gas_remaining wei
               args msg.sender
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        else:
            require return_data.size >= 32
            if arg2 > ext_call.return_data[0]:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Cannot above current token holdings!'
            else:
                require ext_code.size(address(stor5[arg1].field_256))
                staticcall address(stor5[arg1].field_256).0xdd62ed3e with:
                        gas gas_remaining wei
                       args msg.sender, this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                else:
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        if ext_call.return_data[0] < arg2:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Must approve locked tokens before.'
                        else:
                            require arg2 + stor5[arg1].field_4608 >= stor5[arg1].field_4608
                            stor5[arg1].field_4608 += arg2
                            if not address(stor5[arg1].field_256):
                                emit 0x1ca60682: arg1, arg2, stor5[arg1].field_4608
                            else:
                                require ext_code.size(address(stor5[arg1].field_256))
                                call address(stor5[arg1].field_256).0x23b872dd with:
                                     gas gas_remaining wei
                                    args msg.sender, address(this.address), arg2
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require return_data.size >= 32
                                    emit 0x1ca60682: arg1, arg2, stor5[arg1].field_4608
                    else:
                        if ext_call.return_data[0] < ext_call.return_data[0]:
                            if ext_call.return_data[0] < arg2:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Must approve locked tokens before.'
                            else:
                                require arg2 + stor5[arg1].field_4608 >= stor5[arg1].field_4608
                                stor5[arg1].field_4608 += arg2
                                if not address(stor5[arg1].field_256):
                                    emit 0x1ca60682: arg1, arg2, stor5[arg1].field_4608
                                else:
                                    require ext_code.size(address(stor5[arg1].field_256))
                                    call address(stor5[arg1].field_256).0x23b872dd with:
                                         gas gas_remaining wei
                                        args msg.sender, address(this.address), arg2
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require return_data.size >= 32
                                        emit 0x1ca60682: arg1, arg2, stor5[arg1].field_4608
                        else:
                            if ext_call.return_data[0] < arg2:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Must approve locked tokens before.'
                            else:
                                require arg2 + stor5[arg1].field_4608 >= stor5[arg1].field_4608
                                stor5[arg1].field_4608 += arg2
                                if not address(stor5[arg1].field_256):
                                    emit 0x1ca60682: arg1, arg2, stor5[arg1].field_4608
                                else:
                                    require ext_code.size(address(stor5[arg1].field_256))
                                    call address(stor5[arg1].field_256).0x23b872dd with:
                                         gas gas_remaining wei
                                        args msg.sender, address(this.address), arg2
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require return_data.size >= 32
                                        emit 0x1ca60682: arg1, arg2, stor5[arg1].field_4608
    else:
        if arg2 > msg.value:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Cannot above current ether holdings!'
        else:
            require arg2 + stor5[arg1].field_4608 >= stor5[arg1].field_4608
            stor5[arg1].field_4608 += arg2
            if not address(stor5[arg1].field_256):
                emit 0x1ca60682: arg1, arg2, stor5[arg1].field_4608
            else:
                require ext_code.size(address(stor5[arg1].field_256))
                call address(stor5[arg1].field_256).0x23b872dd with:
                     gas gas_remaining wei
                    args msg.sender, address(this.address), arg2
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                else:
                    require return_data.size >= 32
                    emit 0x1ca60682: arg1, arg2, stor5[arg1].field_4608
}

function sub_f39e5af9(?) payable {
    require calldata.size - 4 >= 416
    require arg2 <= 4294967296
    require arg2 + 36 <= calldata.size
    require arg2.length <= 4294967296 and arg2 + arg2.length + 36 <= calldata.size
    mem[96] = arg2.length
    mem[128 len arg2.length] = arg2[all]
    mem[arg2.length + 128] = 0
    require arg5 <= 4294967296
    require arg5 + 36 <= calldata.size
    require arg5.length <= 4294967296 and arg5 + arg5.length + 36 <= calldata.size
    mem[ceil32(arg2.length) + 128] = arg5.length
    mem[ceil32(arg2.length) + 160 len arg5.length] = arg5[all]
    mem[ceil32(arg2.length) + arg5.length + 160] = 0
    mem[ceil32(arg2.length) + ceil32(arg5.length) + 160 len 128] = call.data[164 len 128]
    mem[ceil32(arg2.length) + ceil32(arg5.length) + 288 len 128] = call.data[292 len 128]
    mem[ceil32(arg2.length) + ceil32(arg5.length) + 416] = 0
    require arg3 > 0
    require arg4 > 0
    idx = 0
    while idx < 4:
        require mem[(32 * idx) + ceil32(arg2.length) + ceil32(arg5.length) + 160] > 0
        require idx < 4
        require mem[(32 * idx) + ceil32(arg2.length) + ceil32(arg5.length) + 160] <= mem[(32 * idx) + ceil32(arg2.length) + ceil32(arg5.length) + 288]
        idx = idx + 1
        continue 
    if arg1:
        require ext_code.size(arg1)
        staticcall arg1.0x70a08231 with:
                gas gas_remaining wei
               args msg.sender
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        else:
            require return_data.size >= 32
            if arg3 > ext_call.return_data[0]:
                revert with 0, 'Cannot above current token holdings!'
            else:
                require ext_code.size(arg1)
                staticcall arg1.0xdd62ed3e with:
                        gas gas_remaining wei
                       args msg.sender, this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                else:
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        if ext_call.return_data[0] < arg3:
                            revert with 0, 'Must approve locked tokens before.'
                        else:
                            require sub_dd840951 + 1 >= sub_dd840951
                            sub_dd840951++
                            mem[ceil32(arg2.length) + ceil32(arg5.length) + 1024 len 128] = code.data[14539 len 128]
                            mem[64] = ceil32(arg2.length) + ceil32(arg5.length) + 1280
                            mem[ceil32(arg2.length) + ceil32(arg5.length) + 1152 len 128] = code.data[14539 len 128]
                            mem[ceil32(arg2.length) + ceil32(arg5.length) + 416] = msg.sender
                            mem[ceil32(arg2.length) + ceil32(arg5.length) + 544] = sub_dd840951
                            mem[ceil32(arg2.length) + ceil32(arg5.length) + 480] = 96
                            mem[ceil32(arg2.length) + ceil32(arg5.length) + 448] = arg1
                            mem[ceil32(arg2.length) + ceil32(arg5.length) + 512] = ceil32(arg2.length) + 128
                            mem[ceil32(arg2.length) + ceil32(arg5.length) + 576] = ceil32(arg2.length) + ceil32(arg5.length) + 160
                            mem[ceil32(arg2.length) + ceil32(arg5.length) + 608] = ceil32(arg2.length) + ceil32(arg5.length) + 288
                            mem[ceil32(arg2.length) + ceil32(arg5.length) + 768] = 0
                            mem[ceil32(arg2.length) + ceil32(arg5.length) + 800] = arg3
                            mem[ceil32(arg2.length) + ceil32(arg5.length) + 640] = 1
                            mem[ceil32(arg2.length) + ceil32(arg5.length) + 672] = arg4
                            mem[ceil32(arg2.length) + ceil32(arg5.length) + 704] = 0
                            mem[ceil32(arg2.length) + ceil32(arg5.length) + 736] = 0
                            mem[32] = 5
                            address(stor5[stor1].field_0) = msg.sender
                            address(stor5[stor1].field_256) = arg1
                            stor5[stor1][2][].field_0 = Array(len=arg2.length, data=arg2[all])
                            mem[0] = sha3(sub_dd840951, 5) + 3
                            stor5[stor1][3][].field_0 = Array(len=Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)], data=mem[ceil32(arg2.length) + 160 len Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]])
                            stor5[stor1].field_1024 = sub_dd840951
                            stor5[stor1].field_1280 = Mask(8 * -ceil32(arg5.length) + arg5.length + 32, 0, 0), call.data[arg5.length + -ceil32(arg5.length) + 196 len -arg5.length + ceil32(arg5.length)]
                            s = 6
                            idx = ceil32(arg2.length) + ceil32(arg5.length) + 192
                            while ceil32(arg2.length) + ceil32(arg5.length) + 288 > idx:
                                stor5[stor1][s].field_0 = mem[idx]
                                s = s + 1
                                idx = idx + 32
                                continue 
                            idx = 9
                            while 9 > idx:
                                stor5[stor1][idx].field_0 = 0
                                idx = idx + 1
                                continue 
                            stor5[stor1].field_2304 = call.data[292]
                            s = 10
                            idx = ceil32(arg2.length) + ceil32(arg5.length) + 320
                            while ceil32(arg2.length) + ceil32(arg5.length) + 416 > idx:
                                stor5[stor1][s].field_0 = mem[idx]
                                s = s + 1
                                idx = idx + 32
                                continue 
                            idx = 13
                            while 13 > idx:
                                stor5[stor1][idx].field_0 = 0
                                idx = idx + 1
                                continue 
                            uint8(stor5[stor1].field_3328) = 1
                            stor5[stor1].field_3584 = arg4
                            stor5[stor1].field_3840 = 0
                            stor5[stor1].field_4096 = 0
                            stor5[stor1].field_4352 = 0
                            stor5[stor1].field_4608 = arg3
                            if not arg1:
                                mem[ceil32(arg2.length) + ceil32(arg5.length) + 1280] = msg.sender
                                mem[ceil32(arg2.length) + ceil32(arg5.length) + 1312] = arg1
                                mem[ceil32(arg2.length) + ceil32(arg5.length) + 1408] = sub_dd840951
                                mem[ceil32(arg2.length) + ceil32(arg5.length) + 1440] = arg4
                                mem[ceil32(arg2.length) + ceil32(arg5.length) + 1472] = arg3
                                mem[ceil32(arg2.length) + ceil32(arg5.length) + 1344] = 224
                                mem[ceil32(arg2.length) + ceil32(arg5.length) + 1504] = arg2.length
                                mem[ceil32(arg2.length) + ceil32(arg5.length) + 1536 len ceil32(arg2.length)] = arg2[all], mem[arg2.length + 128 len ceil32(arg2.length) - arg2.length]
                                if not arg2.length % 32:
                                    mem[ceil32(arg2.length) + ceil32(arg5.length) + 1376] = arg2.length + 256
                                    mem[arg2.length + ceil32(arg2.length) + ceil32(arg5.length) + 1536] = Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]
                                    mem[arg2.length + ceil32(arg2.length) + ceil32(arg5.length) + 1568 len ceil32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)])] = mem[ceil32(arg2.length) + 160 len ceil32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)])]
                                    if not Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] % 32:
                                        emit 0x2000b971: mem[ceil32(arg2.length) + ceil32(arg5.length) + 1280 len Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] + arg2.length + 288]
                                        return sub_dd840951
                                    else:
                                        mem[floor32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]) + arg2.length + ceil32(arg2.length) + ceil32(arg5.length) + 1568] = mem[floor32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]) + arg2.length + ceil32(arg2.length) + ceil32(arg5.length) + -(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] % 32) + 1600 len Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] % 32]
                                        emit 0x2000b971: mem[ceil32(arg2.length) + ceil32(arg5.length) + 1280 len floor32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]) + arg2.length + 320]
                                        return sub_dd840951
                                else:
                                    mem[floor32(arg2.length) + ceil32(arg2.length) + ceil32(arg5.length) + 1536] = mem[floor32(arg2.length) + ceil32(arg2.length) + ceil32(arg5.length) + -(arg2.length % 32) + 1568 len arg2.length % 32]
                                    mem[ceil32(arg2.length) + ceil32(arg5.length) + 1376] = floor32(arg2.length) + 288
                                    mem[floor32(arg2.length) + ceil32(arg2.length) + ceil32(arg5.length) + 1568] = Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]
                                    mem[floor32(arg2.length) + ceil32(arg2.length) + ceil32(arg5.length) + 1600 len ceil32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)])] = mem[ceil32(arg2.length) + 160 len ceil32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)])]
                                    if not Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] % 32:
                                        emit 0x2000b971: mem[ceil32(arg2.length) + ceil32(arg5.length) + 1280 len Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] + floor32(arg2.length) + 320]
                                        return sub_dd840951
                                    else:
                                        mem[floor32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]) + floor32(arg2.length) + ceil32(arg2.length) + ceil32(arg5.length) + 1600] = mem[floor32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]) + floor32(arg2.length) + ceil32(arg2.length) + ceil32(arg5.length) + -(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] % 32) + 1632 len Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] % 32]
                                        emit 0x2000b971: mem[ceil32(arg2.length) + ceil32(arg5.length) + 1280 len floor32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]) + floor32(arg2.length) + 352]
                                        return sub_dd840951
                            else:
                                require ext_code.size(arg1)
                                call arg1.0x23b872dd with:
                                     gas gas_remaining wei
                                    args msg.sender, address(this.address), arg3
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require return_data.size >= 32
                                    mem[ceil32(arg2.length) + ceil32(arg5.length) + 1280] = msg.sender
                                    mem[ceil32(arg2.length) + ceil32(arg5.length) + 1312] = arg1
                                    mem[ceil32(arg2.length) + ceil32(arg5.length) + 1408] = sub_dd840951
                                    mem[ceil32(arg2.length) + ceil32(arg5.length) + 1440] = arg4
                                    mem[ceil32(arg2.length) + ceil32(arg5.length) + 1472] = arg3
                                    mem[ceil32(arg2.length) + ceil32(arg5.length) + 1344] = 224
                                    mem[ceil32(arg2.length) + ceil32(arg5.length) + 1504] = arg2.length
                                    mem[ceil32(arg2.length) + ceil32(arg5.length) + 1536 len ceil32(arg2.length)] = arg2[all], mem[arg2.length + 128 len ceil32(arg2.length) - arg2.length]
                                    if not arg2.length % 32:
                                        mem[ceil32(arg2.length) + ceil32(arg5.length) + 1376] = arg2.length + 256
                                        mem[arg2.length + ceil32(arg2.length) + ceil32(arg5.length) + 1536] = Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]
                                        mem[arg2.length + ceil32(arg2.length) + ceil32(arg5.length) + 1568 len ceil32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)])] = mem[ceil32(arg2.length) + 160 len ceil32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)])]
                                        if not Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] % 32:
                                            emit 0x2000b971: mem[ceil32(arg2.length) + ceil32(arg5.length) + 1280 len Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] + arg2.length + 288]
                                            return sub_dd840951
                                        else:
                                            mem[floor32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]) + arg2.length + ceil32(arg2.length) + ceil32(arg5.length) + 1568] = mem[floor32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]) + arg2.length + ceil32(arg2.length) + ceil32(arg5.length) + -(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] % 32) + 1600 len Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] % 32]
                                            emit 0x2000b971: mem[ceil32(arg2.length) + ceil32(arg5.length) + 1280 len floor32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]) + arg2.length + 320]
                                            return sub_dd840951
                                    else:
                                        mem[floor32(arg2.length) + ceil32(arg2.length) + ceil32(arg5.length) + 1536] = mem[floor32(arg2.length) + ceil32(arg2.length) + ceil32(arg5.length) + -(arg2.length % 32) + 1568 len arg2.length % 32]
                                        mem[ceil32(arg2.length) + ceil32(arg5.length) + 1376] = floor32(arg2.length) + 288
                                        mem[floor32(arg2.length) + ceil32(arg2.length) + ceil32(arg5.length) + 1568] = Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]
                                        mem[floor32(arg2.length) + ceil32(arg2.length) + ceil32(arg5.length) + 1600 len ceil32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)])] = mem[ceil32(arg2.length) + 160 len ceil32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)])]
                                        if not Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] % 32:
                                            emit 0x2000b971: mem[ceil32(arg2.length) + ceil32(arg5.length) + 1280 len Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] + floor32(arg2.length) + 320]
                                            return sub_dd840951
                                        else:
                                            mem[floor32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]) + floor32(arg2.length) + ceil32(arg2.length) + ceil32(arg5.length) + 1600] = mem[floor32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]) + floor32(arg2.length) + ceil32(arg2.length) + ceil32(arg5.length) + -(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] % 32) + 1632 len Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] % 32]
                                            emit 0x2000b971: mem[ceil32(arg2.length) + ceil32(arg5.length) + 1280 len floor32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]) + floor32(arg2.length) + 352]
                                            return sub_dd840951
                    else:
                        if ext_call.return_data[0] < ext_call.return_data[0]:
                            if ext_call.return_data[0] < arg3:
                                revert with 0, 'Must approve locked tokens before.'
                            else:
                                require sub_dd840951 + 1 >= sub_dd840951
                                sub_dd840951++
                                mem[ceil32(arg2.length) + ceil32(arg5.length) + 1024 len 128] = code.data[14539 len 128]
                                mem[64] = ceil32(arg2.length) + ceil32(arg5.length) + 1280
                                mem[ceil32(arg2.length) + ceil32(arg5.length) + 1152 len 128] = code.data[14539 len 128]
                                mem[ceil32(arg2.length) + ceil32(arg5.length) + 416] = msg.sender
                                mem[ceil32(arg2.length) + ceil32(arg5.length) + 544] = sub_dd840951
                                mem[ceil32(arg2.length) + ceil32(arg5.length) + 480] = 96
                                mem[ceil32(arg2.length) + ceil32(arg5.length) + 448] = arg1
                                mem[ceil32(arg2.length) + ceil32(arg5.length) + 512] = ceil32(arg2.length) + 128
                                mem[ceil32(arg2.length) + ceil32(arg5.length) + 576] = ceil32(arg2.length) + ceil32(arg5.length) + 160
                                mem[ceil32(arg2.length) + ceil32(arg5.length) + 608] = ceil32(arg2.length) + ceil32(arg5.length) + 288
                                mem[ceil32(arg2.length) + ceil32(arg5.length) + 768] = 0
                                mem[ceil32(arg2.length) + ceil32(arg5.length) + 800] = arg3
                                mem[ceil32(arg2.length) + ceil32(arg5.length) + 640] = 1
                                mem[ceil32(arg2.length) + ceil32(arg5.length) + 672] = arg4
                                mem[ceil32(arg2.length) + ceil32(arg5.length) + 704] = 0
                                mem[ceil32(arg2.length) + ceil32(arg5.length) + 736] = 0
                                mem[32] = 5
                                address(stor5[stor1].field_0) = msg.sender
                                address(stor5[stor1].field_256) = arg1
                                stor5[stor1][2][].field_0 = Array(len=arg2.length, data=arg2[all])
                                mem[0] = sha3(sub_dd840951, 5) + 3
                                stor5[stor1][3][].field_0 = Array(len=Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)], data=mem[ceil32(arg2.length) + 160 len Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]])
                                stor5[stor1].field_1024 = sub_dd840951
                                stor5[stor1].field_1280 = Mask(8 * -ceil32(arg5.length) + arg5.length + 32, 0, 0), call.data[arg5.length + -ceil32(arg5.length) + 196 len -arg5.length + ceil32(arg5.length)]
                                s = 6
                                idx = ceil32(arg2.length) + ceil32(arg5.length) + 192
                                while ceil32(arg2.length) + ceil32(arg5.length) + 288 > idx:
                                    stor5[stor1][s].field_0 = mem[idx]
                                    s = s + 1
                                    idx = idx + 32
                                    continue 
                                idx = 9
                                while 9 > idx:
                                    stor5[stor1][idx].field_0 = 0
                                    idx = idx + 1
                                    continue 
                                stor5[stor1].field_2304 = call.data[292]
                                s = 10
                                idx = ceil32(arg2.length) + ceil32(arg5.length) + 320
                                while ceil32(arg2.length) + ceil32(arg5.length) + 416 > idx:
                                    stor5[stor1][s].field_0 = mem[idx]
                                    s = s + 1
                                    idx = idx + 32
                                    continue 
                                idx = 13
                                while 13 > idx:
                                    stor5[stor1][idx].field_0 = 0
                                    idx = idx + 1
                                    continue 
                                uint8(stor5[stor1].field_3328) = 1
                                stor5[stor1].field_3584 = arg4
                                stor5[stor1].field_3840 = 0
                                stor5[stor1].field_4096 = 0
                                stor5[stor1].field_4352 = 0
                                stor5[stor1].field_4608 = arg3
                                if not arg1:
                                    mem[ceil32(arg2.length) + ceil32(arg5.length) + 1280] = msg.sender
                                    mem[ceil32(arg2.length) + ceil32(arg5.length) + 1312] = arg1
                                    mem[ceil32(arg2.length) + ceil32(arg5.length) + 1408] = sub_dd840951
                                    mem[ceil32(arg2.length) + ceil32(arg5.length) + 1440] = arg4
                                    mem[ceil32(arg2.length) + ceil32(arg5.length) + 1472] = arg3
                                    mem[ceil32(arg2.length) + ceil32(arg5.length) + 1344] = 224
                                    mem[ceil32(arg2.length) + ceil32(arg5.length) + 1504] = arg2.length
                                    mem[ceil32(arg2.length) + ceil32(arg5.length) + 1536 len ceil32(arg2.length)] = arg2[all], mem[arg2.length + 128 len ceil32(arg2.length) - arg2.length]
                                    if not arg2.length % 32:
                                        mem[ceil32(arg2.length) + ceil32(arg5.length) + 1376] = arg2.length + 256
                                        mem[arg2.length + ceil32(arg2.length) + ceil32(arg5.length) + 1536] = Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]
                                        mem[arg2.length + ceil32(arg2.length) + ceil32(arg5.length) + 1568 len ceil32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)])] = mem[ceil32(arg2.length) + 160 len ceil32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)])]
                                        if not Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] % 32:
                                            emit 0x2000b971: mem[ceil32(arg2.length) + ceil32(arg5.length) + 1280 len Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] + arg2.length + 288]
                                            return sub_dd840951
                                        else:
                                            mem[floor32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]) + arg2.length + ceil32(arg2.length) + ceil32(arg5.length) + 1568] = mem[floor32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]) + arg2.length + ceil32(arg2.length) + ceil32(arg5.length) + -(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] % 32) + 1600 len Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] % 32]
                                            emit 0x2000b971: mem[ceil32(arg2.length) + ceil32(arg5.length) + 1280 len floor32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]) + arg2.length + 320]
                                            return sub_dd840951
                                    else:
                                        mem[floor32(arg2.length) + ceil32(arg2.length) + ceil32(arg5.length) + 1536] = mem[floor32(arg2.length) + ceil32(arg2.length) + ceil32(arg5.length) + -(arg2.length % 32) + 1568 len arg2.length % 32]
                                        mem[ceil32(arg2.length) + ceil32(arg5.length) + 1376] = floor32(arg2.length) + 288
                                        mem[floor32(arg2.length) + ceil32(arg2.length) + ceil32(arg5.length) + 1568] = Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]
                                        mem[floor32(arg2.length) + ceil32(arg2.length) + ceil32(arg5.length) + 1600 len ceil32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)])] = mem[ceil32(arg2.length) + 160 len ceil32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)])]
                                        if not Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] % 32:
                                            emit 0x2000b971: mem[ceil32(arg2.length) + ceil32(arg5.length) + 1280 len Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] + floor32(arg2.length) + 320]
                                            return sub_dd840951
                                        else:
                                            mem[floor32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]) + floor32(arg2.length) + ceil32(arg2.length) + ceil32(arg5.length) + 1600] = mem[floor32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]) + floor32(arg2.length) + ceil32(arg2.length) + ceil32(arg5.length) + -(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] % 32) + 1632 len Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] % 32]
                                            emit 0x2000b971: mem[ceil32(arg2.length) + ceil32(arg5.length) + 1280 len floor32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]) + floor32(arg2.length) + 352]
                                            return sub_dd840951
                                else:
                                    require ext_code.size(arg1)
                                    call arg1.0x23b872dd with:
                                         gas gas_remaining wei
                                        args msg.sender, address(this.address), arg3
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require return_data.size >= 32
                                        mem[ceil32(arg2.length) + ceil32(arg5.length) + 1280] = msg.sender
                                        mem[ceil32(arg2.length) + ceil32(arg5.length) + 1312] = arg1
                                        mem[ceil32(arg2.length) + ceil32(arg5.length) + 1408] = sub_dd840951
                                        mem[ceil32(arg2.length) + ceil32(arg5.length) + 1440] = arg4
                                        mem[ceil32(arg2.length) + ceil32(arg5.length) + 1472] = arg3
                                        mem[ceil32(arg2.length) + ceil32(arg5.length) + 1344] = 224
                                        mem[ceil32(arg2.length) + ceil32(arg5.length) + 1504] = arg2.length
                                        mem[ceil32(arg2.length) + ceil32(arg5.length) + 1536 len ceil32(arg2.length)] = arg2[all], mem[arg2.length + 128 len ceil32(arg2.length) - arg2.length]
                                        if not arg2.length % 32:
                                            mem[ceil32(arg2.length) + ceil32(arg5.length) + 1376] = arg2.length + 256
                                            mem[arg2.length + ceil32(arg2.length) + ceil32(arg5.length) + 1536] = Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]
                                            mem[arg2.length + ceil32(arg2.length) + ceil32(arg5.length) + 1568 len ceil32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)])] = mem[ceil32(arg2.length) + 160 len ceil32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)])]
                                            if not Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] % 32:
                                                emit 0x2000b971: mem[ceil32(arg2.length) + ceil32(arg5.length) + 1280 len Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] + arg2.length + 288]
                                                return sub_dd840951
                                            else:
                                                mem[floor32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]) + arg2.length + ceil32(arg2.length) + ceil32(arg5.length) + 1568] = mem[floor32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]) + arg2.length + ceil32(arg2.length) + ceil32(arg5.length) + -(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] % 32) + 1600 len Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] % 32]
                                                emit 0x2000b971: mem[ceil32(arg2.length) + ceil32(arg5.length) + 1280 len floor32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]) + arg2.length + 320]
                                                return sub_dd840951
                                        else:
                                            mem[floor32(arg2.length) + ceil32(arg2.length) + ceil32(arg5.length) + 1536] = mem[floor32(arg2.length) + ceil32(arg2.length) + ceil32(arg5.length) + -(arg2.length % 32) + 1568 len arg2.length % 32]
                                            mem[ceil32(arg2.length) + ceil32(arg5.length) + 1376] = floor32(arg2.length) + 288
                                            mem[floor32(arg2.length) + ceil32(arg2.length) + ceil32(arg5.length) + 1568] = Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]
                                            mem[floor32(arg2.length) + ceil32(arg2.length) + ceil32(arg5.length) + 1600 len ceil32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)])] = mem[ceil32(arg2.length) + 160 len ceil32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)])]
                                            if not Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] % 32:
                                                emit 0x2000b971: mem[ceil32(arg2.length) + ceil32(arg5.length) + 1280 len Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] + floor32(arg2.length) + 320]
                                                return sub_dd840951
                                            else:
                                                mem[floor32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]) + floor32(arg2.length) + ceil32(arg2.length) + ceil32(arg5.length) + 1600] = mem[floor32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]) + floor32(arg2.length) + ceil32(arg2.length) + ceil32(arg5.length) + -(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] % 32) + 1632 len Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] % 32]
                                                emit 0x2000b971: mem[ceil32(arg2.length) + ceil32(arg5.length) + 1280 len floor32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]) + floor32(arg2.length) + 352]
                                                return sub_dd840951
                        else:
                            if ext_call.return_data[0] < arg3:
                                revert with 0, 'Must approve locked tokens before.'
                            else:
                                require sub_dd840951 + 1 >= sub_dd840951
                                sub_dd840951++
                                mem[ceil32(arg2.length) + ceil32(arg5.length) + 1024 len 128] = code.data[14539 len 128]
                                mem[64] = ceil32(arg2.length) + ceil32(arg5.length) + 1280
                                mem[ceil32(arg2.length) + ceil32(arg5.length) + 1152 len 128] = code.data[14539 len 128]
                                mem[ceil32(arg2.length) + ceil32(arg5.length) + 416] = msg.sender
                                mem[ceil32(arg2.length) + ceil32(arg5.length) + 544] = sub_dd840951
                                mem[ceil32(arg2.length) + ceil32(arg5.length) + 480] = 96
                                mem[ceil32(arg2.length) + ceil32(arg5.length) + 448] = arg1
                                mem[ceil32(arg2.length) + ceil32(arg5.length) + 512] = ceil32(arg2.length) + 128
                                mem[ceil32(arg2.length) + ceil32(arg5.length) + 576] = ceil32(arg2.length) + ceil32(arg5.length) + 160
                                mem[ceil32(arg2.length) + ceil32(arg5.length) + 608] = ceil32(arg2.length) + ceil32(arg5.length) + 288
                                mem[ceil32(arg2.length) + ceil32(arg5.length) + 768] = 0
                                mem[ceil32(arg2.length) + ceil32(arg5.length) + 800] = arg3
                                mem[ceil32(arg2.length) + ceil32(arg5.length) + 640] = 1
                                mem[ceil32(arg2.length) + ceil32(arg5.length) + 672] = arg4
                                mem[ceil32(arg2.length) + ceil32(arg5.length) + 704] = 0
                                mem[ceil32(arg2.length) + ceil32(arg5.length) + 736] = 0
                                mem[32] = 5
                                address(stor5[stor1].field_0) = msg.sender
                                address(stor5[stor1].field_256) = arg1
                                stor5[stor1][2][].field_0 = Array(len=arg2.length, data=arg2[all])
                                mem[0] = sha3(sub_dd840951, 5) + 3
                                stor5[stor1][3][].field_0 = Array(len=Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)], data=mem[ceil32(arg2.length) + 160 len Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]])
                                stor5[stor1].field_1024 = sub_dd840951
                                stor5[stor1].field_1280 = Mask(8 * -ceil32(arg5.length) + arg5.length + 32, 0, 0), call.data[arg5.length + -ceil32(arg5.length) + 196 len -arg5.length + ceil32(arg5.length)]
                                s = 6
                                idx = ceil32(arg2.length) + ceil32(arg5.length) + 192
                                while ceil32(arg2.length) + ceil32(arg5.length) + 288 > idx:
                                    stor5[stor1][s].field_0 = mem[idx]
                                    s = s + 1
                                    idx = idx + 32
                                    continue 
                                idx = 9
                                while 9 > idx:
                                    stor5[stor1][idx].field_0 = 0
                                    idx = idx + 1
                                    continue 
                                stor5[stor1].field_2304 = call.data[292]
                                s = 10
                                idx = ceil32(arg2.length) + ceil32(arg5.length) + 320
                                while ceil32(arg2.length) + ceil32(arg5.length) + 416 > idx:
                                    stor5[stor1][s].field_0 = mem[idx]
                                    s = s + 1
                                    idx = idx + 32
                                    continue 
                                idx = 13
                                while 13 > idx:
                                    stor5[stor1][idx].field_0 = 0
                                    idx = idx + 1
                                    continue 
                                uint8(stor5[stor1].field_3328) = 1
                                stor5[stor1].field_3584 = arg4
                                stor5[stor1].field_3840 = 0
                                stor5[stor1].field_4096 = 0
                                stor5[stor1].field_4352 = 0
                                stor5[stor1].field_4608 = arg3
                                if not arg1:
                                    mem[ceil32(arg2.length) + ceil32(arg5.length) + 1280] = msg.sender
                                    mem[ceil32(arg2.length) + ceil32(arg5.length) + 1312] = arg1
                                    mem[ceil32(arg2.length) + ceil32(arg5.length) + 1408] = sub_dd840951
                                    mem[ceil32(arg2.length) + ceil32(arg5.length) + 1440] = arg4
                                    mem[ceil32(arg2.length) + ceil32(arg5.length) + 1472] = arg3
                                    mem[ceil32(arg2.length) + ceil32(arg5.length) + 1344] = 224
                                    mem[ceil32(arg2.length) + ceil32(arg5.length) + 1504] = arg2.length
                                    mem[ceil32(arg2.length) + ceil32(arg5.length) + 1536 len ceil32(arg2.length)] = arg2[all], mem[arg2.length + 128 len ceil32(arg2.length) - arg2.length]
                                    if not arg2.length % 32:
                                        mem[ceil32(arg2.length) + ceil32(arg5.length) + 1376] = arg2.length + 256
                                        mem[arg2.length + ceil32(arg2.length) + ceil32(arg5.length) + 1536] = Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]
                                        mem[arg2.length + ceil32(arg2.length) + ceil32(arg5.length) + 1568 len ceil32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)])] = mem[ceil32(arg2.length) + 160 len ceil32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)])]
                                        if not Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] % 32:
                                            emit 0x2000b971: mem[ceil32(arg2.length) + ceil32(arg5.length) + 1280 len Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] + arg2.length + 288]
                                            return sub_dd840951
                                        else:
                                            mem[floor32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]) + arg2.length + ceil32(arg2.length) + ceil32(arg5.length) + 1568] = mem[floor32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]) + arg2.length + ceil32(arg2.length) + ceil32(arg5.length) + -(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] % 32) + 1600 len Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] % 32]
                                            emit 0x2000b971: mem[ceil32(arg2.length) + ceil32(arg5.length) + 1280 len floor32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]) + arg2.length + 320]
                                            return sub_dd840951
                                    else:
                                        mem[floor32(arg2.length) + ceil32(arg2.length) + ceil32(arg5.length) + 1536] = mem[floor32(arg2.length) + ceil32(arg2.length) + ceil32(arg5.length) + -(arg2.length % 32) + 1568 len arg2.length % 32]
                                        mem[ceil32(arg2.length) + ceil32(arg5.length) + 1376] = floor32(arg2.length) + 288
                                        mem[floor32(arg2.length) + ceil32(arg2.length) + ceil32(arg5.length) + 1568] = Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]
                                        mem[floor32(arg2.length) + ceil32(arg2.length) + ceil32(arg5.length) + 1600 len ceil32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)])] = mem[ceil32(arg2.length) + 160 len ceil32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)])]
                                        if not Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] % 32:
                                            emit 0x2000b971: mem[ceil32(arg2.length) + ceil32(arg5.length) + 1280 len Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] + floor32(arg2.length) + 320]
                                            return sub_dd840951
                                        else:
                                            mem[floor32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]) + floor32(arg2.length) + ceil32(arg2.length) + ceil32(arg5.length) + 1600] = mem[floor32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]) + floor32(arg2.length) + ceil32(arg2.length) + ceil32(arg5.length) + -(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] % 32) + 1632 len Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] % 32]
                                            emit 0x2000b971: mem[ceil32(arg2.length) + ceil32(arg5.length) + 1280 len floor32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]) + floor32(arg2.length) + 352]
                                            return sub_dd840951
                                else:
                                    require ext_code.size(arg1)
                                    call arg1.0x23b872dd with:
                                         gas gas_remaining wei
                                        args msg.sender, address(this.address), arg3
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require return_data.size >= 32
                                        mem[ceil32(arg2.length) + ceil32(arg5.length) + 1280] = msg.sender
                                        mem[ceil32(arg2.length) + ceil32(arg5.length) + 1312] = arg1
                                        mem[ceil32(arg2.length) + ceil32(arg5.length) + 1408] = sub_dd840951
                                        mem[ceil32(arg2.length) + ceil32(arg5.length) + 1440] = arg4
                                        mem[ceil32(arg2.length) + ceil32(arg5.length) + 1472] = arg3
                                        mem[ceil32(arg2.length) + ceil32(arg5.length) + 1344] = 224
                                        mem[ceil32(arg2.length) + ceil32(arg5.length) + 1504] = arg2.length
                                        mem[ceil32(arg2.length) + ceil32(arg5.length) + 1536 len ceil32(arg2.length)] = arg2[all], mem[arg2.length + 128 len ceil32(arg2.length) - arg2.length]
                                        if not arg2.length % 32:
                                            mem[ceil32(arg2.length) + ceil32(arg5.length) + 1376] = arg2.length + 256
                                            mem[arg2.length + ceil32(arg2.length) + ceil32(arg5.length) + 1536] = Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]
                                            mem[arg2.length + ceil32(arg2.length) + ceil32(arg5.length) + 1568 len ceil32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)])] = mem[ceil32(arg2.length) + 160 len ceil32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)])]
                                            if not Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] % 32:
                                                emit 0x2000b971: mem[ceil32(arg2.length) + ceil32(arg5.length) + 1280 len Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] + arg2.length + 288]
                                                return sub_dd840951
                                            else:
                                                mem[floor32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]) + arg2.length + ceil32(arg2.length) + ceil32(arg5.length) + 1568] = mem[floor32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]) + arg2.length + ceil32(arg2.length) + ceil32(arg5.length) + -(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] % 32) + 1600 len Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] % 32]
                                                emit 0x2000b971: mem[ceil32(arg2.length) + ceil32(arg5.length) + 1280 len floor32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]) + arg2.length + 320]
                                                return sub_dd840951
                                        else:
                                            mem[floor32(arg2.length) + ceil32(arg2.length) + ceil32(arg5.length) + 1536] = mem[floor32(arg2.length) + ceil32(arg2.length) + ceil32(arg5.length) + -(arg2.length % 32) + 1568 len arg2.length % 32]
                                            mem[ceil32(arg2.length) + ceil32(arg5.length) + 1376] = floor32(arg2.length) + 288
                                            mem[floor32(arg2.length) + ceil32(arg2.length) + ceil32(arg5.length) + 1568] = Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]
                                            mem[floor32(arg2.length) + ceil32(arg2.length) + ceil32(arg5.length) + 1600 len ceil32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)])] = mem[ceil32(arg2.length) + 160 len ceil32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)])]
                                            if not Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] % 32:
                                                emit 0x2000b971: mem[ceil32(arg2.length) + ceil32(arg5.length) + 1280 len Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] + floor32(arg2.length) + 320]
                                                return sub_dd840951
                                            else:
                                                mem[floor32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]) + floor32(arg2.length) + ceil32(arg2.length) + ceil32(arg5.length) + 1600] = mem[floor32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]) + floor32(arg2.length) + ceil32(arg2.length) + ceil32(arg5.length) + -(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] % 32) + 1632 len Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] % 32]
                                                emit 0x2000b971: mem[ceil32(arg2.length) + ceil32(arg5.length) + 1280 len floor32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]) + floor32(arg2.length) + 352]
                                                return sub_dd840951
    else:
        if arg3 > msg.value:
            revert with 0, 'Cannot above current ether holdings!'
        else:
            require sub_dd840951 + 1 >= sub_dd840951
            sub_dd840951++
            mem[ceil32(arg2.length) + ceil32(arg5.length) + 1024 len 128] = code.data[14539 len 128]
            mem[64] = ceil32(arg2.length) + ceil32(arg5.length) + 1280
            mem[ceil32(arg2.length) + ceil32(arg5.length) + 1152 len 128] = code.data[14539 len 128]
            mem[ceil32(arg2.length) + ceil32(arg5.length) + 416] = msg.sender
            mem[ceil32(arg2.length) + ceil32(arg5.length) + 544] = sub_dd840951
            mem[ceil32(arg2.length) + ceil32(arg5.length) + 480] = 96
            mem[ceil32(arg2.length) + ceil32(arg5.length) + 448] = arg1
            mem[ceil32(arg2.length) + ceil32(arg5.length) + 512] = ceil32(arg2.length) + 128
            mem[ceil32(arg2.length) + ceil32(arg5.length) + 576] = ceil32(arg2.length) + ceil32(arg5.length) + 160
            mem[ceil32(arg2.length) + ceil32(arg5.length) + 608] = ceil32(arg2.length) + ceil32(arg5.length) + 288
            mem[ceil32(arg2.length) + ceil32(arg5.length) + 768] = 0
            mem[ceil32(arg2.length) + ceil32(arg5.length) + 800] = arg3
            mem[ceil32(arg2.length) + ceil32(arg5.length) + 640] = 1
            mem[ceil32(arg2.length) + ceil32(arg5.length) + 672] = arg4
            mem[ceil32(arg2.length) + ceil32(arg5.length) + 704] = 0
            mem[ceil32(arg2.length) + ceil32(arg5.length) + 736] = 0
            mem[32] = 5
            address(stor5[stor1].field_0) = msg.sender
            address(stor5[stor1].field_256) = arg1
            stor5[stor1][2][].field_0 = Array(len=arg2.length, data=arg2[all])
            mem[0] = sha3(sub_dd840951, 5) + 3
            stor5[stor1][3][].field_0 = Array(len=Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)], data=mem[ceil32(arg2.length) + 160 len Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]])
            stor5[stor1].field_1024 = sub_dd840951
            stor5[stor1].field_1280 = Mask(8 * -ceil32(arg5.length) + arg5.length + 32, 0, 0), call.data[arg5.length + -ceil32(arg5.length) + 196 len -arg5.length + ceil32(arg5.length)]
            s = 6
            idx = ceil32(arg2.length) + ceil32(arg5.length) + 192
            while ceil32(arg2.length) + ceil32(arg5.length) + 288 > idx:
                stor5[stor1][s].field_0 = mem[idx]
                s = s + 1
                idx = idx + 32
                continue 
            idx = 9
            while 9 > idx:
                stor5[stor1][idx].field_0 = 0
                idx = idx + 1
                continue 
            stor5[stor1].field_2304 = call.data[292]
            s = 10
            idx = ceil32(arg2.length) + ceil32(arg5.length) + 320
            while ceil32(arg2.length) + ceil32(arg5.length) + 416 > idx:
                stor5[stor1][s].field_0 = mem[idx]
                s = s + 1
                idx = idx + 32
                continue 
            idx = 13
            while 13 > idx:
                stor5[stor1][idx].field_0 = 0
                idx = idx + 1
                continue 
            uint8(stor5[stor1].field_3328) = 1
            stor5[stor1].field_3584 = arg4
            stor5[stor1].field_3840 = 0
            stor5[stor1].field_4096 = 0
            stor5[stor1].field_4352 = 0
            stor5[stor1].field_4608 = arg3
            if not arg1:
                mem[ceil32(arg2.length) + ceil32(arg5.length) + 1280] = msg.sender
                mem[ceil32(arg2.length) + ceil32(arg5.length) + 1312] = arg1
                mem[ceil32(arg2.length) + ceil32(arg5.length) + 1408] = sub_dd840951
                mem[ceil32(arg2.length) + ceil32(arg5.length) + 1440] = arg4
                mem[ceil32(arg2.length) + ceil32(arg5.length) + 1472] = arg3
                mem[ceil32(arg2.length) + ceil32(arg5.length) + 1344] = 224
                mem[ceil32(arg2.length) + ceil32(arg5.length) + 1504] = arg2.length
                mem[ceil32(arg2.length) + ceil32(arg5.length) + 1536 len ceil32(arg2.length)] = arg2[all], mem[arg2.length + 128 len ceil32(arg2.length) - arg2.length]
                if not arg2.length % 32:
                    mem[ceil32(arg2.length) + ceil32(arg5.length) + 1376] = arg2.length + 256
                    mem[arg2.length + ceil32(arg2.length) + ceil32(arg5.length) + 1536] = Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]
                    mem[arg2.length + ceil32(arg2.length) + ceil32(arg5.length) + 1568 len ceil32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)])] = mem[ceil32(arg2.length) + 160 len ceil32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)])]
                    if not Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] % 32:
                        emit 0x2000b971: mem[ceil32(arg2.length) + ceil32(arg5.length) + 1280 len Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] + arg2.length + 288]
                        return sub_dd840951
                    else:
                        mem[floor32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]) + arg2.length + ceil32(arg2.length) + ceil32(arg5.length) + 1568] = mem[floor32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]) + arg2.length + ceil32(arg2.length) + ceil32(arg5.length) + -(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] % 32) + 1600 len Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] % 32]
                        emit 0x2000b971: mem[ceil32(arg2.length) + ceil32(arg5.length) + 1280 len floor32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]) + arg2.length + 320]
                        return sub_dd840951
                else:
                    mem[floor32(arg2.length) + ceil32(arg2.length) + ceil32(arg5.length) + 1536] = mem[floor32(arg2.length) + ceil32(arg2.length) + ceil32(arg5.length) + -(arg2.length % 32) + 1568 len arg2.length % 32]
                    mem[ceil32(arg2.length) + ceil32(arg5.length) + 1376] = floor32(arg2.length) + 288
                    mem[floor32(arg2.length) + ceil32(arg2.length) + ceil32(arg5.length) + 1568] = Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]
                    mem[floor32(arg2.length) + ceil32(arg2.length) + ceil32(arg5.length) + 1600 len ceil32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)])] = mem[ceil32(arg2.length) + 160 len ceil32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)])]
                    if not Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] % 32:
                        emit 0x2000b971: mem[ceil32(arg2.length) + ceil32(arg5.length) + 1280 len Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] + floor32(arg2.length) + 320]
                        return sub_dd840951
                    else:
                        mem[floor32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]) + floor32(arg2.length) + ceil32(arg2.length) + ceil32(arg5.length) + 1600] = mem[floor32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]) + floor32(arg2.length) + ceil32(arg2.length) + ceil32(arg5.length) + -(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] % 32) + 1632 len Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] % 32]
                        emit 0x2000b971: mem[ceil32(arg2.length) + ceil32(arg5.length) + 1280 len floor32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]) + floor32(arg2.length) + 352]
                        return sub_dd840951
            else:
                require ext_code.size(arg1)
                call arg1.0x23b872dd with:
                     gas gas_remaining wei
                    args msg.sender, address(this.address), arg3
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                else:
                    require return_data.size >= 32
                    mem[ceil32(arg2.length) + ceil32(arg5.length) + 1280] = msg.sender
                    mem[ceil32(arg2.length) + ceil32(arg5.length) + 1312] = arg1
                    mem[ceil32(arg2.length) + ceil32(arg5.length) + 1408] = sub_dd840951
                    mem[ceil32(arg2.length) + ceil32(arg5.length) + 1440] = arg4
                    mem[ceil32(arg2.length) + ceil32(arg5.length) + 1472] = arg3
                    mem[ceil32(arg2.length) + ceil32(arg5.length) + 1344] = 224
                    mem[ceil32(arg2.length) + ceil32(arg5.length) + 1504] = arg2.length
                    mem[ceil32(arg2.length) + ceil32(arg5.length) + 1536 len ceil32(arg2.length)] = arg2[all], mem[arg2.length + 128 len ceil32(arg2.length) - arg2.length]
                    if not arg2.length % 32:
                        mem[ceil32(arg2.length) + ceil32(arg5.length) + 1376] = arg2.length + 256
                        mem[arg2.length + ceil32(arg2.length) + ceil32(arg5.length) + 1536] = Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]
                        mem[arg2.length + ceil32(arg2.length) + ceil32(arg5.length) + 1568 len ceil32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)])] = mem[ceil32(arg2.length) + 160 len ceil32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)])]
                        if not Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] % 32:
                            emit 0x2000b971: mem[ceil32(arg2.length) + ceil32(arg5.length) + 1280 len Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] + arg2.length + 288]
                            return sub_dd840951
                        else:
                            mem[floor32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]) + arg2.length + ceil32(arg2.length) + ceil32(arg5.length) + 1568] = mem[floor32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]) + arg2.length + ceil32(arg2.length) + ceil32(arg5.length) + -(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] % 32) + 1600 len Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] % 32]
                            emit 0x2000b971: mem[ceil32(arg2.length) + ceil32(arg5.length) + 1280 len floor32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]) + arg2.length + 320]
                            return sub_dd840951
                    else:
                        mem[floor32(arg2.length) + ceil32(arg2.length) + ceil32(arg5.length) + 1536] = mem[floor32(arg2.length) + ceil32(arg2.length) + ceil32(arg5.length) + -(arg2.length % 32) + 1568 len arg2.length % 32]
                        mem[ceil32(arg2.length) + ceil32(arg5.length) + 1376] = floor32(arg2.length) + 288
                        mem[floor32(arg2.length) + ceil32(arg2.length) + ceil32(arg5.length) + 1568] = Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]
                        mem[floor32(arg2.length) + ceil32(arg2.length) + ceil32(arg5.length) + 1600 len ceil32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)])] = mem[ceil32(arg2.length) + 160 len ceil32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)])]
                        if not Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] % 32:
                            emit 0x2000b971: mem[ceil32(arg2.length) + ceil32(arg5.length) + 1280 len Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] + floor32(arg2.length) + 320]
                            return sub_dd840951
                        else:
                            mem[floor32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]) + floor32(arg2.length) + ceil32(arg2.length) + ceil32(arg5.length) + 1600] = mem[floor32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]) + floor32(arg2.length) + ceil32(arg2.length) + ceil32(arg5.length) + -(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] % 32) + 1632 len Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)] % 32]
                            emit 0x2000b971: mem[ceil32(arg2.length) + ceil32(arg5.length) + 1280 len floor32(Mask(8 * -ceil32(arg2.length) + arg2.length + 32, 0, 0), mem[arg2.length + 160 len -arg2.length + ceil32(arg2.length)]) + floor32(arg2.length) + 352]
                            return sub_dd840951
}

function sub_722dd1c6(?) payable {
    require calldata.size - 4 >= 96
    require arg3 <= 4294967296
    require arg3 + 36 <= calldata.size
    require arg3.length <= 4294967296 and arg3 + (32 * arg3.length) + 36 <= calldata.size
    mem[128 len 32 * arg3.length] = call.data[arg3 + 36 len 32 * arg3.length]
    mem[(32 * arg3.length) + 128] = 0
    require arg1 > 0
    if arg2:
        if arg2 < block.number + sub_33d47a5b:
            revert with 0, 'startBlock is too small!'
        else:
            if not uint8(stor5[arg1].field_3328):
                revert with 0, 32, 24, 0xfe54686520726f6f6d206973206e6f7420616374697665642100000000000000
            else:
                if arg3.length != 19:
                    revert with 0, 'betValue length must be exactly 19!'
                else:
                    idx = 0
                    s = 1
                    t = 1
                    u = 0
                    v = 0
                    while uint8(idx) < 3:
                        require uint8(idx) < arg3.length
                        if mem[(32 * uint8(idx)) + 156 len 4] <= 0:
                            idx = idx + 1
                            s = s
                            t = t
                            u = u
                            v = v
                            continue 
                        else:
                            require uint8(idx) < 4
                            require uint8(idx) < arg3.length
                            require stor5[arg1][uint8(idx)].field_1280
                            require (mem[(32 * uint8(idx)) + 156 len 4] * sub_78463323 * stor5[arg1][uint8(idx)].field_2304 / stor5[arg1][uint8(idx)].field_1280) + u >= u
                            require uint8(idx) < arg3.length
                            require (mem[(32 * uint8(idx)) + 156 len 4] * sub_78463323) + v >= v
                            idx = idx + 1
                            s = stor5[arg1][uint8(idx)].field_2304
                            t = stor5[arg1][uint8(idx)].field_1280
                            u = (mem[(32 * uint8(idx)) + 156 len 4] * sub_78463323 * stor5[arg1][uint8(idx)].field_2304 / stor5[arg1][uint8(idx)].field_1280) + u
                            v = (mem[(32 * uint8(idx)) + 156 len 4] * sub_78463323) + v
                            continue 
                    idx = 3
                    s = u
                    t = v
                    while uint8(idx) < 19:
                        require uint8(idx) < arg3.length
                        if mem[(32 * uint8(idx)) + 156 len 4] <= 0:
                            idx = idx + 1
                            s = s
                            t = t
                            continue 
                        else:
                            require uint8(idx) < arg3.length
                            require stor5[arg1].field_2048
                            require (mem[(32 * uint8(idx)) + 156 len 4] * sub_78463323 * stor5[arg1].field_3072 / stor5[arg1].field_2048) + s >= s
                            require uint8(idx) < arg3.length
                            require (mem[(32 * uint8(idx)) + 156 len 4] * sub_78463323) + t >= t
                            idx = idx + 1
                            s = (mem[(32 * uint8(idx)) + 156 len 4] * sub_78463323 * stor5[arg1].field_3072 / stor5[arg1].field_2048) + s
                            t = (mem[(32 * uint8(idx)) + 156 len 4] * sub_78463323) + t
                            continue 
                    if not t:
                        revert with 0, 'Must bet something!'
                    else:
                        require stor5[arg1].field_3584 * t / t == stor5[arg1].field_3584
                        if stor5[arg1].field_3584 * t <= 0:
                            revert with 0, 'Must bet something!'
                        else:
                            if s:
                                require stor5[arg1].field_3584 * s / s == stor5[arg1].field_3584
                                if stor5[arg1].field_3584 * s > stor5[arg1].field_4608 - stor5[arg1].field_4352:
                                    revert with 0, 'Cannot bet over compensate!'
                                else:
                                    if address(stor5[arg1].field_256):
                                        require ext_code.size(address(stor5[arg1].field_256))
                                        staticcall address(stor5[arg1].field_256).0x70a08231 with:
                                                gas gas_remaining wei
                                               args msg.sender
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require return_data.size >= 32
                                            if stor5[arg1].field_3584 * t > ext_call.return_data[0]:
                                                revert with 0, 'Cannot above current token holdings!'
                                            else:
                                                require ext_code.size(address(stor5[arg1].field_256))
                                                staticcall address(stor5[arg1].field_256).0xdd62ed3e with:
                                                        gas gas_remaining wei
                                                       args msg.sender, this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    if not ext_call.return_data[0]:
                                                        if ext_call.return_data[0] < stor5[arg1].field_3584 * t:
                                                            revert with 0, 'Must approve locked tokens before.'
                                                        else:
                                                            require (stor5[arg1].field_3584 * s) + stor5[arg1].field_4352 >= stor5[arg1].field_4352
                                                            stor5[arg1].field_4352 += stor5[arg1].field_3584 * s
                                                            require stor5[arg1].field_3840 + 1 >= stor5[arg1].field_3840
                                                            stor5[arg1].field_3840++
                                                            mem[(32 * arg3.length) + 128] = msg.sender
                                                            address(stor5[arg1][19][stor5[arg1].field_3840].field_0) = msg.sender
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_256 = arg2
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_512 = stor5[arg1].field_3840
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_768 = stor5[arg1].field_3584 * t
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1024 = stor5[arg1].field_3584 * s
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1280 = 0
                                                            uint8(stor5[arg1][19][stor5[arg1].field_3840].field_1536) = 0
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1792 % 1 = 0
                                                            Mask(248, 0, stor5[arg1][19][stor5[arg1].field_3840].field_1544) = 0
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1792 = arg3.length
                                                            if not arg3.length:
                                                                idx = 0
                                                                while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                    uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                    idx = idx + 1
                                                                    continue 
                                                                if not address(stor5[arg1].field_256):
                                                                    emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                                    return stor5[arg1].field_3840
                                                                else:
                                                                    require ext_code.size(address(stor5[arg1].field_256))
                                                                    call address(stor5[arg1].field_256).0x23b872dd with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(this.address), stor5[arg1].field_3584 * t
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                                        require return_data.size >= 32
                                                                        emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                                        return stor5[arg1].field_3840
                                                            else:
                                                                s = 0
                                                                idx = 128
                                                                while (32 * arg3.length) + 128 > idx:
                                                                    stor5[arg1][19][stor5[arg1].field_3840][7].field_0 = mem[idx + 28 len 4] * 256^s or !(test266151307() * 256^s) and stor5[arg1][19][stor5[arg1].field_3840][7].field_0
                                                                    s = s + (4 * -s + 7 / 32) + (-1 * s * s + 7 / 32) + 4
                                                                    idx = idx + 32
                                                                    continue 
                                                                idx = floor32(arg3.length) >> 3
                                                                s = sha3(sha3(stor5[arg1].field_3840, sha3(arg1, 5) + 19) + 7)
                                                                while idx:
                                                                    stor[s] = !(test266151307() * 256^idx) and stor[s]
                                                                    idx = idx + (4 * -idx + 7 / 32) + (-1 * idx * idx + 7 / 32) + 4
                                                                    s = (idx + 7 / 32) + s
                                                                    continue 
                                                                idx = (floor32(arg3.length) >> 3) + Mask(252, 2, None + -(floor32(arg3.length) >> 3) + 5) + 7 / 32 * Mask(254, 0, None + -(floor32(arg3.length) >> 3) + 5) >> 2
                                                                while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                    uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                    idx = idx + 1
                                                                    continue 
                                                                if not address(stor5[arg1].field_256):
                                                                    emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                                    return stor5[arg1].field_3840
                                                                else:
                                                                    require ext_code.size(address(stor5[arg1].field_256))
                                                                    call address(stor5[arg1].field_256).0x23b872dd with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(this.address), stor5[arg1].field_3584 * t
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                                        require return_data.size >= 32
                                                                        emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                                        return stor5[arg1].field_3840
                                                    else:
                                                        if ext_call.return_data[0] < ext_call.return_data[0]:
                                                            if ext_call.return_data[0] < stor5[arg1].field_3584 * t:
                                                                revert with 0, 'Must approve locked tokens before.'
                                                            else:
                                                                require (stor5[arg1].field_3584 * s) + stor5[arg1].field_4352 >= stor5[arg1].field_4352
                                                                stor5[arg1].field_4352 += stor5[arg1].field_3584 * s
                                                                require stor5[arg1].field_3840 + 1 >= stor5[arg1].field_3840
                                                                stor5[arg1].field_3840++
                                                                mem[(32 * arg3.length) + 128] = msg.sender
                                                                address(stor5[arg1][19][stor5[arg1].field_3840].field_0) = msg.sender
                                                                stor5[arg1][19][stor5[arg1].field_3840].field_256 = arg2
                                                                stor5[arg1][19][stor5[arg1].field_3840].field_512 = stor5[arg1].field_3840
                                                                stor5[arg1][19][stor5[arg1].field_3840].field_768 = stor5[arg1].field_3584 * t
                                                                stor5[arg1][19][stor5[arg1].field_3840].field_1024 = stor5[arg1].field_3584 * s
                                                                stor5[arg1][19][stor5[arg1].field_3840].field_1280 = 0
                                                                uint8(stor5[arg1][19][stor5[arg1].field_3840].field_1536) = 0
                                                                stor5[arg1][19][stor5[arg1].field_3840].field_1792 % 1 = 0
                                                                Mask(248, 0, stor5[arg1][19][stor5[arg1].field_3840].field_1544) = 0
                                                                stor5[arg1][19][stor5[arg1].field_3840].field_1792 = arg3.length
                                                                if not arg3.length:
                                                                    idx = 0
                                                                    while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                        uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                        idx = idx + 1
                                                                        continue 
                                                                    if not address(stor5[arg1].field_256):
                                                                        emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                                        return stor5[arg1].field_3840
                                                                    else:
                                                                        require ext_code.size(address(stor5[arg1].field_256))
                                                                        call address(stor5[arg1].field_256).0x23b872dd with:
                                                                             gas gas_remaining wei
                                                                            args msg.sender, address(this.address), stor5[arg1].field_3584 * t
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        else:
                                                                            require return_data.size >= 32
                                                                            emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                                            return stor5[arg1].field_3840
                                                                else:
                                                                    s = 0
                                                                    idx = 128
                                                                    while (32 * arg3.length) + 128 > idx:
                                                                        stor5[arg1][19][stor5[arg1].field_3840][7].field_0 = mem[idx + 28 len 4] * 256^s or !(test266151307() * 256^s) and stor5[arg1][19][stor5[arg1].field_3840][7].field_0
                                                                        s = s + (4 * -s + 7 / 32) + (-1 * s * s + 7 / 32) + 4
                                                                        idx = idx + 32
                                                                        continue 
                                                                    idx = floor32(arg3.length) >> 3
                                                                    s = sha3(sha3(stor5[arg1].field_3840, sha3(arg1, 5) + 19) + 7)
                                                                    while idx:
                                                                        stor[s] = !(test266151307() * 256^idx) and stor[s]
                                                                        idx = idx + (4 * -idx + 7 / 32) + (-1 * idx * idx + 7 / 32) + 4
                                                                        s = (idx + 7 / 32) + s
                                                                        continue 
                                                                    idx = (floor32(arg3.length) >> 3) + Mask(252, 2, None + -(floor32(arg3.length) >> 3) + 5) + 7 / 32 * Mask(254, 0, None + -(floor32(arg3.length) >> 3) + 5) >> 2
                                                                    while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                        uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                        idx = idx + 1
                                                                        continue 
                                                                    if not address(stor5[arg1].field_256):
                                                                        emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                                        return stor5[arg1].field_3840
                                                                    else:
                                                                        require ext_code.size(address(stor5[arg1].field_256))
                                                                        call address(stor5[arg1].field_256).0x23b872dd with:
                                                                             gas gas_remaining wei
                                                                            args msg.sender, address(this.address), stor5[arg1].field_3584 * t
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        else:
                                                                            require return_data.size >= 32
                                                                            emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                                            return stor5[arg1].field_3840
                                                        else:
                                                            if ext_call.return_data[0] < stor5[arg1].field_3584 * t:
                                                                revert with 0, 'Must approve locked tokens before.'
                                                            else:
                                                                require (stor5[arg1].field_3584 * s) + stor5[arg1].field_4352 >= stor5[arg1].field_4352
                                                                stor5[arg1].field_4352 += stor5[arg1].field_3584 * s
                                                                require stor5[arg1].field_3840 + 1 >= stor5[arg1].field_3840
                                                                stor5[arg1].field_3840++
                                                                mem[(32 * arg3.length) + 128] = msg.sender
                                                                address(stor5[arg1][19][stor5[arg1].field_3840].field_0) = msg.sender
                                                                stor5[arg1][19][stor5[arg1].field_3840].field_256 = arg2
                                                                stor5[arg1][19][stor5[arg1].field_3840].field_512 = stor5[arg1].field_3840
                                                                stor5[arg1][19][stor5[arg1].field_3840].field_768 = stor5[arg1].field_3584 * t
                                                                stor5[arg1][19][stor5[arg1].field_3840].field_1024 = stor5[arg1].field_3584 * s
                                                                stor5[arg1][19][stor5[arg1].field_3840].field_1280 = 0
                                                                uint8(stor5[arg1][19][stor5[arg1].field_3840].field_1536) = 0
                                                                stor5[arg1][19][stor5[arg1].field_3840].field_1792 % 1 = 0
                                                                Mask(248, 0, stor5[arg1][19][stor5[arg1].field_3840].field_1544) = 0
                                                                stor5[arg1][19][stor5[arg1].field_3840].field_1792 = arg3.length
                                                                if not arg3.length:
                                                                    idx = 0
                                                                    while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                        uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                        idx = idx + 1
                                                                        continue 
                                                                    if not address(stor5[arg1].field_256):
                                                                        emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                                        return stor5[arg1].field_3840
                                                                    else:
                                                                        require ext_code.size(address(stor5[arg1].field_256))
                                                                        call address(stor5[arg1].field_256).0x23b872dd with:
                                                                             gas gas_remaining wei
                                                                            args msg.sender, address(this.address), stor5[arg1].field_3584 * t
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        else:
                                                                            require return_data.size >= 32
                                                                            emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                                            return stor5[arg1].field_3840
                                                                else:
                                                                    s = 0
                                                                    idx = 128
                                                                    while (32 * arg3.length) + 128 > idx:
                                                                        stor5[arg1][19][stor5[arg1].field_3840][7].field_0 = mem[idx + 28 len 4] * 256^s or !(test266151307() * 256^s) and stor5[arg1][19][stor5[arg1].field_3840][7].field_0
                                                                        s = s + (4 * -s + 7 / 32) + (-1 * s * s + 7 / 32) + 4
                                                                        idx = idx + 32
                                                                        continue 
                                                                    idx = floor32(arg3.length) >> 3
                                                                    s = sha3(sha3(stor5[arg1].field_3840, sha3(arg1, 5) + 19) + 7)
                                                                    while idx:
                                                                        stor[s] = !(test266151307() * 256^idx) and stor[s]
                                                                        idx = idx + (4 * -idx + 7 / 32) + (-1 * idx * idx + 7 / 32) + 4
                                                                        s = (idx + 7 / 32) + s
                                                                        continue 
                                                                    idx = (floor32(arg3.length) >> 3) + Mask(252, 2, None + -(floor32(arg3.length) >> 3) + 5) + 7 / 32 * Mask(254, 0, None + -(floor32(arg3.length) >> 3) + 5) >> 2
                                                                    while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                        uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                        idx = idx + 1
                                                                        continue 
                                                                    if not address(stor5[arg1].field_256):
                                                                        emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                                        return stor5[arg1].field_3840
                                                                    else:
                                                                        require ext_code.size(address(stor5[arg1].field_256))
                                                                        call address(stor5[arg1].field_256).0x23b872dd with:
                                                                             gas gas_remaining wei
                                                                            args msg.sender, address(this.address), stor5[arg1].field_3584 * t
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        else:
                                                                            require return_data.size >= 32
                                                                            emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                                            return stor5[arg1].field_3840
                                    else:
                                        if stor5[arg1].field_3584 * t > msg.value:
                                            revert with 0, 'Cannot above current ether holdings!'
                                        else:
                                            require (stor5[arg1].field_3584 * s) + stor5[arg1].field_4352 >= stor5[arg1].field_4352
                                            stor5[arg1].field_4352 += stor5[arg1].field_3584 * s
                                            require stor5[arg1].field_3840 + 1 >= stor5[arg1].field_3840
                                            stor5[arg1].field_3840++
                                            mem[(32 * arg3.length) + 128] = msg.sender
                                            address(stor5[arg1][19][stor5[arg1].field_3840].field_0) = msg.sender
                                            stor5[arg1][19][stor5[arg1].field_3840].field_256 = arg2
                                            stor5[arg1][19][stor5[arg1].field_3840].field_512 = stor5[arg1].field_3840
                                            stor5[arg1][19][stor5[arg1].field_3840].field_768 = stor5[arg1].field_3584 * t
                                            stor5[arg1][19][stor5[arg1].field_3840].field_1024 = stor5[arg1].field_3584 * s
                                            stor5[arg1][19][stor5[arg1].field_3840].field_1280 = 0
                                            uint8(stor5[arg1][19][stor5[arg1].field_3840].field_1536) = 0
                                            stor5[arg1][19][stor5[arg1].field_3840].field_1792 % 1 = 0
                                            Mask(248, 0, stor5[arg1][19][stor5[arg1].field_3840].field_1544) = 0
                                            stor5[arg1][19][stor5[arg1].field_3840].field_1792 = arg3.length
                                            if not arg3.length:
                                                idx = 0
                                                while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                    uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                    idx = idx + 1
                                                    continue 
                                                if not address(stor5[arg1].field_256):
                                                    emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                    return stor5[arg1].field_3840
                                                else:
                                                    require ext_code.size(address(stor5[arg1].field_256))
                                                    call address(stor5[arg1].field_256).0x23b872dd with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(this.address), stor5[arg1].field_3584 * t
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                        return stor5[arg1].field_3840
                                            else:
                                                s = 0
                                                idx = 128
                                                while (32 * arg3.length) + 128 > idx:
                                                    stor5[arg1][19][stor5[arg1].field_3840][7].field_0 = mem[idx + 28 len 4] * 256^s or !(test266151307() * 256^s) and stor5[arg1][19][stor5[arg1].field_3840][7].field_0
                                                    s = s + (4 * -s + 7 / 32) + (-1 * s * s + 7 / 32) + 4
                                                    idx = idx + 32
                                                    continue 
                                                idx = floor32(arg3.length) >> 3
                                                s = sha3(sha3(stor5[arg1].field_3840, sha3(arg1, 5) + 19) + 7)
                                                while idx:
                                                    stor[s] = !(test266151307() * 256^idx) and stor[s]
                                                    idx = idx + (4 * -idx + 7 / 32) + (-1 * idx * idx + 7 / 32) + 4
                                                    s = (idx + 7 / 32) + s
                                                    continue 
                                                idx = (floor32(arg3.length) >> 3) + Mask(252, 2, None + -(floor32(arg3.length) >> 3) + 5) + 7 / 32 * Mask(254, 0, None + -(floor32(arg3.length) >> 3) + 5) >> 2
                                                while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                    uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                    idx = idx + 1
                                                    continue 
                                                if not address(stor5[arg1].field_256):
                                                    emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                    return stor5[arg1].field_3840
                                                else:
                                                    require ext_code.size(address(stor5[arg1].field_256))
                                                    call address(stor5[arg1].field_256).0x23b872dd with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(this.address), stor5[arg1].field_3584 * t
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                        return stor5[arg1].field_3840
                            else:
                                if 0 > stor5[arg1].field_4608 - stor5[arg1].field_4352:
                                    revert with 0, 'Cannot bet over compensate!'
                                else:
                                    if address(stor5[arg1].field_256):
                                        require ext_code.size(address(stor5[arg1].field_256))
                                        staticcall address(stor5[arg1].field_256).0x70a08231 with:
                                                gas gas_remaining wei
                                               args msg.sender
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require return_data.size >= 32
                                            if stor5[arg1].field_3584 * t > ext_call.return_data[0]:
                                                revert with 0, 'Cannot above current token holdings!'
                                            else:
                                                require ext_code.size(address(stor5[arg1].field_256))
                                                staticcall address(stor5[arg1].field_256).0xdd62ed3e with:
                                                        gas gas_remaining wei
                                                       args msg.sender, this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    if not ext_call.return_data[0]:
                                                        if ext_call.return_data[0] < stor5[arg1].field_3584 * t:
                                                            revert with 0, 'Must approve locked tokens before.'
                                                        else:
                                                            require stor5[arg1].field_4352 >= stor5[arg1].field_4352
                                                            require stor5[arg1].field_3840 + 1 >= stor5[arg1].field_3840
                                                            stor5[arg1].field_3840++
                                                            mem[(32 * arg3.length) + 128] = msg.sender
                                                            address(stor5[arg1][19][stor5[arg1].field_3840].field_0) = msg.sender
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_256 = arg2
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_512 = stor5[arg1].field_3840
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_768 = stor5[arg1].field_3584 * t
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1024 = 0
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1280 = 0
                                                            uint8(stor5[arg1][19][stor5[arg1].field_3840].field_1536) = 0
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1792 % 1 = 0
                                                            Mask(248, 0, stor5[arg1][19][stor5[arg1].field_3840].field_1544) = 0
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1792 = arg3.length
                                                            if not arg3.length:
                                                                idx = 0
                                                                while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                    uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                    idx = idx + 1
                                                                    continue 
                                                                if not address(stor5[arg1].field_256):
                                                                    emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                                    return stor5[arg1].field_3840
                                                                else:
                                                                    require ext_code.size(address(stor5[arg1].field_256))
                                                                    call address(stor5[arg1].field_256).0x23b872dd with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(this.address), stor5[arg1].field_3584 * t
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                                        require return_data.size >= 32
                                                                        emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                                        return stor5[arg1].field_3840
                                                            else:
                                                                s = 0
                                                                idx = 128
                                                                while (32 * arg3.length) + 128 > idx:
                                                                    stor5[arg1][19][stor5[arg1].field_3840][7].field_0 = mem[idx + 28 len 4] * 256^s or !(test266151307() * 256^s) and stor5[arg1][19][stor5[arg1].field_3840][7].field_0
                                                                    s = s + (4 * -s + 7 / 32) + (-1 * s * s + 7 / 32) + 4
                                                                    idx = idx + 32
                                                                    continue 
                                                                idx = floor32(arg3.length) >> 3
                                                                s = sha3(sha3(stor5[arg1].field_3840, sha3(arg1, 5) + 19) + 7)
                                                                while idx:
                                                                    stor[s] = !(test266151307() * 256^idx) and stor[s]
                                                                    idx = idx + (4 * -idx + 7 / 32) + (-1 * idx * idx + 7 / 32) + 4
                                                                    s = (idx + 7 / 32) + s
                                                                    continue 
                                                                idx = (floor32(arg3.length) >> 3) + Mask(252, 2, None + -(floor32(arg3.length) >> 3) + 5) + 7 / 32 * Mask(254, 0, None + -(floor32(arg3.length) >> 3) + 5) >> 2
                                                                while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                    uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                    idx = idx + 1
                                                                    continue 
                                                                if not address(stor5[arg1].field_256):
                                                                    emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                                    return stor5[arg1].field_3840
                                                                else:
                                                                    require ext_code.size(address(stor5[arg1].field_256))
                                                                    call address(stor5[arg1].field_256).0x23b872dd with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(this.address), stor5[arg1].field_3584 * t
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                                        require return_data.size >= 32
                                                                        emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                                        return stor5[arg1].field_3840
                                                    else:
                                                        if ext_call.return_data[0] < ext_call.return_data[0]:
                                                            if ext_call.return_data[0] < stor5[arg1].field_3584 * t:
                                                                revert with 0, 'Must approve locked tokens before.'
                                                            else:
                                                                require stor5[arg1].field_4352 >= stor5[arg1].field_4352
                                                                require stor5[arg1].field_3840 + 1 >= stor5[arg1].field_3840
                                                                stor5[arg1].field_3840++
                                                                mem[(32 * arg3.length) + 128] = msg.sender
                                                                address(stor5[arg1][19][stor5[arg1].field_3840].field_0) = msg.sender
                                                                stor5[arg1][19][stor5[arg1].field_3840].field_256 = arg2
                                                                stor5[arg1][19][stor5[arg1].field_3840].field_512 = stor5[arg1].field_3840
                                                                stor5[arg1][19][stor5[arg1].field_3840].field_768 = stor5[arg1].field_3584 * t
                                                                stor5[arg1][19][stor5[arg1].field_3840].field_1024 = 0
                                                                stor5[arg1][19][stor5[arg1].field_3840].field_1280 = 0
                                                                uint8(stor5[arg1][19][stor5[arg1].field_3840].field_1536) = 0
                                                                stor5[arg1][19][stor5[arg1].field_3840].field_1792 % 1 = 0
                                                                Mask(248, 0, stor5[arg1][19][stor5[arg1].field_3840].field_1544) = 0
                                                                stor5[arg1][19][stor5[arg1].field_3840].field_1792 = arg3.length
                                                                if not arg3.length:
                                                                    idx = 0
                                                                    while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                        uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                        idx = idx + 1
                                                                        continue 
                                                                    if not address(stor5[arg1].field_256):
                                                                        emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                                        return stor5[arg1].field_3840
                                                                    else:
                                                                        require ext_code.size(address(stor5[arg1].field_256))
                                                                        call address(stor5[arg1].field_256).0x23b872dd with:
                                                                             gas gas_remaining wei
                                                                            args msg.sender, address(this.address), stor5[arg1].field_3584 * t
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        else:
                                                                            require return_data.size >= 32
                                                                            emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                                            return stor5[arg1].field_3840
                                                                else:
                                                                    s = 0
                                                                    idx = 128
                                                                    while (32 * arg3.length) + 128 > idx:
                                                                        stor5[arg1][19][stor5[arg1].field_3840][7].field_0 = mem[idx + 28 len 4] * 256^s or !(test266151307() * 256^s) and stor5[arg1][19][stor5[arg1].field_3840][7].field_0
                                                                        s = s + (4 * -s + 7 / 32) + (-1 * s * s + 7 / 32) + 4
                                                                        idx = idx + 32
                                                                        continue 
                                                                    idx = floor32(arg3.length) >> 3
                                                                    s = sha3(sha3(stor5[arg1].field_3840, sha3(arg1, 5) + 19) + 7)
                                                                    while idx:
                                                                        stor[s] = !(test266151307() * 256^idx) and stor[s]
                                                                        idx = idx + (4 * -idx + 7 / 32) + (-1 * idx * idx + 7 / 32) + 4
                                                                        s = (idx + 7 / 32) + s
                                                                        continue 
                                                                    idx = (floor32(arg3.length) >> 3) + Mask(252, 2, None + -(floor32(arg3.length) >> 3) + 5) + 7 / 32 * Mask(254, 0, None + -(floor32(arg3.length) >> 3) + 5) >> 2
                                                                    while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                        uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                        idx = idx + 1
                                                                        continue 
                                                                    if not address(stor5[arg1].field_256):
                                                                        emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                                        return stor5[arg1].field_3840
                                                                    else:
                                                                        require ext_code.size(address(stor5[arg1].field_256))
                                                                        call address(stor5[arg1].field_256).0x23b872dd with:
                                                                             gas gas_remaining wei
                                                                            args msg.sender, address(this.address), stor5[arg1].field_3584 * t
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        else:
                                                                            require return_data.size >= 32
                                                                            emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                                            return stor5[arg1].field_3840
                                                        else:
                                                            if ext_call.return_data[0] < stor5[arg1].field_3584 * t:
                                                                revert with 0, 'Must approve locked tokens before.'
                                                            else:
                                                                require stor5[arg1].field_4352 >= stor5[arg1].field_4352
                                                                require stor5[arg1].field_3840 + 1 >= stor5[arg1].field_3840
                                                                stor5[arg1].field_3840++
                                                                mem[(32 * arg3.length) + 128] = msg.sender
                                                                address(stor5[arg1][19][stor5[arg1].field_3840].field_0) = msg.sender
                                                                stor5[arg1][19][stor5[arg1].field_3840].field_256 = arg2
                                                                stor5[arg1][19][stor5[arg1].field_3840].field_512 = stor5[arg1].field_3840
                                                                stor5[arg1][19][stor5[arg1].field_3840].field_768 = stor5[arg1].field_3584 * t
                                                                stor5[arg1][19][stor5[arg1].field_3840].field_1024 = 0
                                                                stor5[arg1][19][stor5[arg1].field_3840].field_1280 = 0
                                                                uint8(stor5[arg1][19][stor5[arg1].field_3840].field_1536) = 0
                                                                stor5[arg1][19][stor5[arg1].field_3840].field_1792 % 1 = 0
                                                                Mask(248, 0, stor5[arg1][19][stor5[arg1].field_3840].field_1544) = 0
                                                                stor5[arg1][19][stor5[arg1].field_3840].field_1792 = arg3.length
                                                                if not arg3.length:
                                                                    idx = 0
                                                                    while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                        uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                        idx = idx + 1
                                                                        continue 
                                                                    if not address(stor5[arg1].field_256):
                                                                        emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                                        return stor5[arg1].field_3840
                                                                    else:
                                                                        require ext_code.size(address(stor5[arg1].field_256))
                                                                        call address(stor5[arg1].field_256).0x23b872dd with:
                                                                             gas gas_remaining wei
                                                                            args msg.sender, address(this.address), stor5[arg1].field_3584 * t
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        else:
                                                                            require return_data.size >= 32
                                                                            emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                                            return stor5[arg1].field_3840
                                                                else:
                                                                    s = 0
                                                                    idx = 128
                                                                    while (32 * arg3.length) + 128 > idx:
                                                                        stor5[arg1][19][stor5[arg1].field_3840][7].field_0 = mem[idx + 28 len 4] * 256^s or !(test266151307() * 256^s) and stor5[arg1][19][stor5[arg1].field_3840][7].field_0
                                                                        s = s + (4 * -s + 7 / 32) + (-1 * s * s + 7 / 32) + 4
                                                                        idx = idx + 32
                                                                        continue 
                                                                    idx = floor32(arg3.length) >> 3
                                                                    s = sha3(sha3(stor5[arg1].field_3840, sha3(arg1, 5) + 19) + 7)
                                                                    while idx:
                                                                        stor[s] = !(test266151307() * 256^idx) and stor[s]
                                                                        idx = idx + (4 * -idx + 7 / 32) + (-1 * idx * idx + 7 / 32) + 4
                                                                        s = (idx + 7 / 32) + s
                                                                        continue 
                                                                    idx = (floor32(arg3.length) >> 3) + Mask(252, 2, None + -(floor32(arg3.length) >> 3) + 5) + 7 / 32 * Mask(254, 0, None + -(floor32(arg3.length) >> 3) + 5) >> 2
                                                                    while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                        uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                        idx = idx + 1
                                                                        continue 
                                                                    if not address(stor5[arg1].field_256):
                                                                        emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                                        return stor5[arg1].field_3840
                                                                    else:
                                                                        require ext_code.size(address(stor5[arg1].field_256))
                                                                        call address(stor5[arg1].field_256).0x23b872dd with:
                                                                             gas gas_remaining wei
                                                                            args msg.sender, address(this.address), stor5[arg1].field_3584 * t
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        else:
                                                                            require return_data.size >= 32
                                                                            emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                                            return stor5[arg1].field_3840
                                    else:
                                        if stor5[arg1].field_3584 * t > msg.value:
                                            revert with 0, 'Cannot above current ether holdings!'
                                        else:
                                            require stor5[arg1].field_4352 >= stor5[arg1].field_4352
                                            require stor5[arg1].field_3840 + 1 >= stor5[arg1].field_3840
                                            stor5[arg1].field_3840++
                                            mem[(32 * arg3.length) + 128] = msg.sender
                                            address(stor5[arg1][19][stor5[arg1].field_3840].field_0) = msg.sender
                                            stor5[arg1][19][stor5[arg1].field_3840].field_256 = arg2
                                            stor5[arg1][19][stor5[arg1].field_3840].field_512 = stor5[arg1].field_3840
                                            stor5[arg1][19][stor5[arg1].field_3840].field_768 = stor5[arg1].field_3584 * t
                                            stor5[arg1][19][stor5[arg1].field_3840].field_1024 = 0
                                            stor5[arg1][19][stor5[arg1].field_3840].field_1280 = 0
                                            uint8(stor5[arg1][19][stor5[arg1].field_3840].field_1536) = 0
                                            stor5[arg1][19][stor5[arg1].field_3840].field_1792 % 1 = 0
                                            Mask(248, 0, stor5[arg1][19][stor5[arg1].field_3840].field_1544) = 0
                                            stor5[arg1][19][stor5[arg1].field_3840].field_1792 = arg3.length
                                            if not arg3.length:
                                                idx = 0
                                                while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                    uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                    idx = idx + 1
                                                    continue 
                                                if not address(stor5[arg1].field_256):
                                                    emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                    return stor5[arg1].field_3840
                                                else:
                                                    require ext_code.size(address(stor5[arg1].field_256))
                                                    call address(stor5[arg1].field_256).0x23b872dd with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(this.address), stor5[arg1].field_3584 * t
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                        return stor5[arg1].field_3840
                                            else:
                                                s = 0
                                                idx = 128
                                                while (32 * arg3.length) + 128 > idx:
                                                    stor5[arg1][19][stor5[arg1].field_3840][7].field_0 = mem[idx + 28 len 4] * 256^s or !(test266151307() * 256^s) and stor5[arg1][19][stor5[arg1].field_3840][7].field_0
                                                    s = s + (4 * -s + 7 / 32) + (-1 * s * s + 7 / 32) + 4
                                                    idx = idx + 32
                                                    continue 
                                                idx = floor32(arg3.length) >> 3
                                                s = sha3(sha3(stor5[arg1].field_3840, sha3(arg1, 5) + 19) + 7)
                                                while idx:
                                                    stor[s] = !(test266151307() * 256^idx) and stor[s]
                                                    idx = idx + (4 * -idx + 7 / 32) + (-1 * idx * idx + 7 / 32) + 4
                                                    s = (idx + 7 / 32) + s
                                                    continue 
                                                idx = (floor32(arg3.length) >> 3) + Mask(252, 2, None + -(floor32(arg3.length) >> 3) + 5) + 7 / 32 * Mask(254, 0, None + -(floor32(arg3.length) >> 3) + 5) >> 2
                                                while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                    uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                    idx = idx + 1
                                                    continue 
                                                if not address(stor5[arg1].field_256):
                                                    emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                    return stor5[arg1].field_3840
                                                else:
                                                    require ext_code.size(address(stor5[arg1].field_256))
                                                    call address(stor5[arg1].field_256).0x23b872dd with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(this.address), stor5[arg1].field_3584 * t
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                        return stor5[arg1].field_3840
    else:
        if not uint8(stor5[arg1].field_3328):
            revert with 0, 32, 24, 0xfe54686520726f6f6d206973206e6f7420616374697665642100000000000000
        else:
            if arg3.length != 19:
                revert with 0, 'betValue length must be exactly 19!'
            else:
                idx = 0
                s = 1
                t = 1
                u = 0
                v = 0
                while uint8(idx) < 3:
                    require uint8(idx) < arg3.length
                    if mem[(32 * uint8(idx)) + 156 len 4] <= 0:
                        idx = idx + 1
                        s = s
                        t = t
                        u = u
                        v = v
                        continue 
                    else:
                        require uint8(idx) < 4
                        require uint8(idx) < arg3.length
                        require stor5[arg1][uint8(idx)].field_1280
                        require (mem[(32 * uint8(idx)) + 156 len 4] * sub_78463323 * stor5[arg1][uint8(idx)].field_2304 / stor5[arg1][uint8(idx)].field_1280) + u >= u
                        require uint8(idx) < arg3.length
                        require (mem[(32 * uint8(idx)) + 156 len 4] * sub_78463323) + v >= v
                        idx = idx + 1
                        s = stor5[arg1][uint8(idx)].field_2304
                        t = stor5[arg1][uint8(idx)].field_1280
                        u = (mem[(32 * uint8(idx)) + 156 len 4] * sub_78463323 * stor5[arg1][uint8(idx)].field_2304 / stor5[arg1][uint8(idx)].field_1280) + u
                        v = (mem[(32 * uint8(idx)) + 156 len 4] * sub_78463323) + v
                        continue 
                idx = 3
                s = u
                t = v
                while uint8(idx) < 19:
                    require uint8(idx) < arg3.length
                    if mem[(32 * uint8(idx)) + 156 len 4] <= 0:
                        idx = idx + 1
                        s = s
                        t = t
                        continue 
                    else:
                        require uint8(idx) < arg3.length
                        require stor5[arg1].field_2048
                        require (mem[(32 * uint8(idx)) + 156 len 4] * sub_78463323 * stor5[arg1].field_3072 / stor5[arg1].field_2048) + s >= s
                        require uint8(idx) < arg3.length
                        require (mem[(32 * uint8(idx)) + 156 len 4] * sub_78463323) + t >= t
                        idx = idx + 1
                        s = (mem[(32 * uint8(idx)) + 156 len 4] * sub_78463323 * stor5[arg1].field_3072 / stor5[arg1].field_2048) + s
                        t = (mem[(32 * uint8(idx)) + 156 len 4] * sub_78463323) + t
                        continue 
                if not t:
                    revert with 0, 'Must bet something!'
                else:
                    require stor5[arg1].field_3584 * t / t == stor5[arg1].field_3584
                    if stor5[arg1].field_3584 * t <= 0:
                        revert with 0, 'Must bet something!'
                    else:
                        if s:
                            require stor5[arg1].field_3584 * s / s == stor5[arg1].field_3584
                            if stor5[arg1].field_3584 * s > stor5[arg1].field_4608 - stor5[arg1].field_4352:
                                revert with 0, 'Cannot bet over compensate!'
                            else:
                                if address(stor5[arg1].field_256):
                                    require ext_code.size(address(stor5[arg1].field_256))
                                    staticcall address(stor5[arg1].field_256).0x70a08231 with:
                                            gas gas_remaining wei
                                           args msg.sender
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require return_data.size >= 32
                                        if stor5[arg1].field_3584 * t > ext_call.return_data[0]:
                                            revert with 0, 'Cannot above current token holdings!'
                                        else:
                                            require ext_code.size(address(stor5[arg1].field_256))
                                            staticcall address(stor5[arg1].field_256).0xdd62ed3e with:
                                                    gas gas_remaining wei
                                                   args msg.sender, this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if ext_call.return_data[0] < stor5[arg1].field_3584 * t:
                                                        revert with 0, 'Must approve locked tokens before.'
                                                    else:
                                                        require (stor5[arg1].field_3584 * s) + stor5[arg1].field_4352 >= stor5[arg1].field_4352
                                                        stor5[arg1].field_4352 += stor5[arg1].field_3584 * s
                                                        require stor5[arg1].field_3840 + 1 >= stor5[arg1].field_3840
                                                        stor5[arg1].field_3840++
                                                        mem[(32 * arg3.length) + 128] = msg.sender
                                                        address(stor5[arg1][19][stor5[arg1].field_3840].field_0) = msg.sender
                                                        stor5[arg1][19][stor5[arg1].field_3840].field_256 = block.number + sub_33d47a5b
                                                        stor5[arg1][19][stor5[arg1].field_3840].field_512 = stor5[arg1].field_3840
                                                        stor5[arg1][19][stor5[arg1].field_3840].field_768 = stor5[arg1].field_3584 * t
                                                        stor5[arg1][19][stor5[arg1].field_3840].field_1024 = stor5[arg1].field_3584 * s
                                                        stor5[arg1][19][stor5[arg1].field_3840].field_1280 = 0
                                                        uint8(stor5[arg1][19][stor5[arg1].field_3840].field_1536) = 0
                                                        stor5[arg1][19][stor5[arg1].field_3840].field_1792 % 1 = 0
                                                        Mask(248, 0, stor5[arg1][19][stor5[arg1].field_3840].field_1544) = 0
                                                        stor5[arg1][19][stor5[arg1].field_3840].field_1792 = arg3.length
                                                        if not arg3.length:
                                                            idx = 0
                                                            while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                idx = idx + 1
                                                                continue 
                                                            if not address(stor5[arg1].field_256):
                                                                emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                                return stor5[arg1].field_3840
                                                            else:
                                                                require ext_code.size(address(stor5[arg1].field_256))
                                                                call address(stor5[arg1].field_256).0x23b872dd with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(this.address), stor5[arg1].field_3584 * t
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    require return_data.size >= 32
                                                                    emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                                    return stor5[arg1].field_3840
                                                        else:
                                                            s = 0
                                                            idx = 128
                                                            while (32 * arg3.length) + 128 > idx:
                                                                stor5[arg1][19][stor5[arg1].field_3840][7].field_0 = mem[idx + 28 len 4] * 256^s or !(test266151307() * 256^s) and stor5[arg1][19][stor5[arg1].field_3840][7].field_0
                                                                s = s + (4 * -s + 7 / 32) + (-1 * s * s + 7 / 32) + 4
                                                                idx = idx + 32
                                                                continue 
                                                            idx = floor32(arg3.length) >> 3
                                                            s = sha3(sha3(stor5[arg1].field_3840, sha3(arg1, 5) + 19) + 7)
                                                            while idx:
                                                                stor[s] = !(test266151307() * 256^idx) and stor[s]
                                                                idx = idx + (4 * -idx + 7 / 32) + (-1 * idx * idx + 7 / 32) + 4
                                                                s = (idx + 7 / 32) + s
                                                                continue 
                                                            idx = (floor32(arg3.length) >> 3) + Mask(252, 2, None + -(floor32(arg3.length) >> 3) + 5) + 7 / 32 * Mask(254, 0, None + -(floor32(arg3.length) >> 3) + 5) >> 2
                                                            while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                idx = idx + 1
                                                                continue 
                                                            if not address(stor5[arg1].field_256):
                                                                emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                                return stor5[arg1].field_3840
                                                            else:
                                                                require ext_code.size(address(stor5[arg1].field_256))
                                                                call address(stor5[arg1].field_256).0x23b872dd with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(this.address), stor5[arg1].field_3584 * t
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    require return_data.size >= 32
                                                                    emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                                    return stor5[arg1].field_3840
                                                else:
                                                    if ext_call.return_data[0] < ext_call.return_data[0]:
                                                        if ext_call.return_data[0] < stor5[arg1].field_3584 * t:
                                                            revert with 0, 'Must approve locked tokens before.'
                                                        else:
                                                            require (stor5[arg1].field_3584 * s) + stor5[arg1].field_4352 >= stor5[arg1].field_4352
                                                            stor5[arg1].field_4352 += stor5[arg1].field_3584 * s
                                                            require stor5[arg1].field_3840 + 1 >= stor5[arg1].field_3840
                                                            stor5[arg1].field_3840++
                                                            mem[(32 * arg3.length) + 128] = msg.sender
                                                            address(stor5[arg1][19][stor5[arg1].field_3840].field_0) = msg.sender
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_256 = block.number + sub_33d47a5b
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_512 = stor5[arg1].field_3840
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_768 = stor5[arg1].field_3584 * t
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1024 = stor5[arg1].field_3584 * s
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1280 = 0
                                                            uint8(stor5[arg1][19][stor5[arg1].field_3840].field_1536) = 0
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1792 % 1 = 0
                                                            Mask(248, 0, stor5[arg1][19][stor5[arg1].field_3840].field_1544) = 0
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1792 = arg3.length
                                                            if not arg3.length:
                                                                idx = 0
                                                                while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                    uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                    idx = idx + 1
                                                                    continue 
                                                                if not address(stor5[arg1].field_256):
                                                                    emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                                    return stor5[arg1].field_3840
                                                                else:
                                                                    require ext_code.size(address(stor5[arg1].field_256))
                                                                    call address(stor5[arg1].field_256).0x23b872dd with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(this.address), stor5[arg1].field_3584 * t
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                                        require return_data.size >= 32
                                                                        emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                                        return stor5[arg1].field_3840
                                                            else:
                                                                s = 0
                                                                idx = 128
                                                                while (32 * arg3.length) + 128 > idx:
                                                                    stor5[arg1][19][stor5[arg1].field_3840][7].field_0 = mem[idx + 28 len 4] * 256^s or !(test266151307() * 256^s) and stor5[arg1][19][stor5[arg1].field_3840][7].field_0
                                                                    s = s + (4 * -s + 7 / 32) + (-1 * s * s + 7 / 32) + 4
                                                                    idx = idx + 32
                                                                    continue 
                                                                idx = floor32(arg3.length) >> 3
                                                                s = sha3(sha3(stor5[arg1].field_3840, sha3(arg1, 5) + 19) + 7)
                                                                while idx:
                                                                    stor[s] = !(test266151307() * 256^idx) and stor[s]
                                                                    idx = idx + (4 * -idx + 7 / 32) + (-1 * idx * idx + 7 / 32) + 4
                                                                    s = (idx + 7 / 32) + s
                                                                    continue 
                                                                idx = (floor32(arg3.length) >> 3) + Mask(252, 2, None + -(floor32(arg3.length) >> 3) + 5) + 7 / 32 * Mask(254, 0, None + -(floor32(arg3.length) >> 3) + 5) >> 2
                                                                while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                    uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                    idx = idx + 1
                                                                    continue 
                                                                if not address(stor5[arg1].field_256):
                                                                    emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                                    return stor5[arg1].field_3840
                                                                else:
                                                                    require ext_code.size(address(stor5[arg1].field_256))
                                                                    call address(stor5[arg1].field_256).0x23b872dd with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(this.address), stor5[arg1].field_3584 * t
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                                        require return_data.size >= 32
                                                                        emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                                        return stor5[arg1].field_3840
                                                    else:
                                                        if ext_call.return_data[0] < stor5[arg1].field_3584 * t:
                                                            revert with 0, 'Must approve locked tokens before.'
                                                        else:
                                                            require (stor5[arg1].field_3584 * s) + stor5[arg1].field_4352 >= stor5[arg1].field_4352
                                                            stor5[arg1].field_4352 += stor5[arg1].field_3584 * s
                                                            require stor5[arg1].field_3840 + 1 >= stor5[arg1].field_3840
                                                            stor5[arg1].field_3840++
                                                            mem[(32 * arg3.length) + 128] = msg.sender
                                                            address(stor5[arg1][19][stor5[arg1].field_3840].field_0) = msg.sender
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_256 = block.number + sub_33d47a5b
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_512 = stor5[arg1].field_3840
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_768 = stor5[arg1].field_3584 * t
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1024 = stor5[arg1].field_3584 * s
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1280 = 0
                                                            uint8(stor5[arg1][19][stor5[arg1].field_3840].field_1536) = 0
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1792 % 1 = 0
                                                            Mask(248, 0, stor5[arg1][19][stor5[arg1].field_3840].field_1544) = 0
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1792 = arg3.length
                                                            if not arg3.length:
                                                                idx = 0
                                                                while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                    uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                    idx = idx + 1
                                                                    continue 
                                                                if not address(stor5[arg1].field_256):
                                                                    emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                                    return stor5[arg1].field_3840
                                                                else:
                                                                    require ext_code.size(address(stor5[arg1].field_256))
                                                                    call address(stor5[arg1].field_256).0x23b872dd with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(this.address), stor5[arg1].field_3584 * t
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                                        require return_data.size >= 32
                                                                        emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                                        return stor5[arg1].field_3840
                                                            else:
                                                                s = 0
                                                                idx = 128
                                                                while (32 * arg3.length) + 128 > idx:
                                                                    stor5[arg1][19][stor5[arg1].field_3840][7].field_0 = mem[idx + 28 len 4] * 256^s or !(test266151307() * 256^s) and stor5[arg1][19][stor5[arg1].field_3840][7].field_0
                                                                    s = s + (4 * -s + 7 / 32) + (-1 * s * s + 7 / 32) + 4
                                                                    idx = idx + 32
                                                                    continue 
                                                                idx = floor32(arg3.length) >> 3
                                                                s = sha3(sha3(stor5[arg1].field_3840, sha3(arg1, 5) + 19) + 7)
                                                                while idx:
                                                                    stor[s] = !(test266151307() * 256^idx) and stor[s]
                                                                    idx = idx + (4 * -idx + 7 / 32) + (-1 * idx * idx + 7 / 32) + 4
                                                                    s = (idx + 7 / 32) + s
                                                                    continue 
                                                                idx = (floor32(arg3.length) >> 3) + Mask(252, 2, None + -(floor32(arg3.length) >> 3) + 5) + 7 / 32 * Mask(254, 0, None + -(floor32(arg3.length) >> 3) + 5) >> 2
                                                                while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                    uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                    idx = idx + 1
                                                                    continue 
                                                                if not address(stor5[arg1].field_256):
                                                                    emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                                    return stor5[arg1].field_3840
                                                                else:
                                                                    require ext_code.size(address(stor5[arg1].field_256))
                                                                    call address(stor5[arg1].field_256).0x23b872dd with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(this.address), stor5[arg1].field_3584 * t
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                                        require return_data.size >= 32
                                                                        emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                                        return stor5[arg1].field_3840
                                else:
                                    if stor5[arg1].field_3584 * t > msg.value:
                                        revert with 0, 'Cannot above current ether holdings!'
                                    else:
                                        require (stor5[arg1].field_3584 * s) + stor5[arg1].field_4352 >= stor5[arg1].field_4352
                                        stor5[arg1].field_4352 += stor5[arg1].field_3584 * s
                                        require stor5[arg1].field_3840 + 1 >= stor5[arg1].field_3840
                                        stor5[arg1].field_3840++
                                        mem[(32 * arg3.length) + 128] = msg.sender
                                        address(stor5[arg1][19][stor5[arg1].field_3840].field_0) = msg.sender
                                        stor5[arg1][19][stor5[arg1].field_3840].field_256 = block.number + sub_33d47a5b
                                        stor5[arg1][19][stor5[arg1].field_3840].field_512 = stor5[arg1].field_3840
                                        stor5[arg1][19][stor5[arg1].field_3840].field_768 = stor5[arg1].field_3584 * t
                                        stor5[arg1][19][stor5[arg1].field_3840].field_1024 = stor5[arg1].field_3584 * s
                                        stor5[arg1][19][stor5[arg1].field_3840].field_1280 = 0
                                        uint8(stor5[arg1][19][stor5[arg1].field_3840].field_1536) = 0
                                        stor5[arg1][19][stor5[arg1].field_3840].field_1792 % 1 = 0
                                        Mask(248, 0, stor5[arg1][19][stor5[arg1].field_3840].field_1544) = 0
                                        stor5[arg1][19][stor5[arg1].field_3840].field_1792 = arg3.length
                                        if not arg3.length:
                                            idx = 0
                                            while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                idx = idx + 1
                                                continue 
                                            if not address(stor5[arg1].field_256):
                                                emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                return stor5[arg1].field_3840
                                            else:
                                                require ext_code.size(address(stor5[arg1].field_256))
                                                call address(stor5[arg1].field_256).0x23b872dd with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(this.address), stor5[arg1].field_3584 * t
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                    return stor5[arg1].field_3840
                                        else:
                                            s = 0
                                            idx = 128
                                            while (32 * arg3.length) + 128 > idx:
                                                stor5[arg1][19][stor5[arg1].field_3840][7].field_0 = mem[idx + 28 len 4] * 256^s or !(test266151307() * 256^s) and stor5[arg1][19][stor5[arg1].field_3840][7].field_0
                                                s = s + (4 * -s + 7 / 32) + (-1 * s * s + 7 / 32) + 4
                                                idx = idx + 32
                                                continue 
                                            idx = floor32(arg3.length) >> 3
                                            s = sha3(sha3(stor5[arg1].field_3840, sha3(arg1, 5) + 19) + 7)
                                            while idx:
                                                stor[s] = !(test266151307() * 256^idx) and stor[s]
                                                idx = idx + (4 * -idx + 7 / 32) + (-1 * idx * idx + 7 / 32) + 4
                                                s = (idx + 7 / 32) + s
                                                continue 
                                            idx = (floor32(arg3.length) >> 3) + Mask(252, 2, None + -(floor32(arg3.length) >> 3) + 5) + 7 / 32 * Mask(254, 0, None + -(floor32(arg3.length) >> 3) + 5) >> 2
                                            while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                idx = idx + 1
                                                continue 
                                            if not address(stor5[arg1].field_256):
                                                emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                return stor5[arg1].field_3840
                                            else:
                                                require ext_code.size(address(stor5[arg1].field_256))
                                                call address(stor5[arg1].field_256).0x23b872dd with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(this.address), stor5[arg1].field_3584 * t
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                    return stor5[arg1].field_3840
                        else:
                            if 0 > stor5[arg1].field_4608 - stor5[arg1].field_4352:
                                revert with 0, 'Cannot bet over compensate!'
                            else:
                                if address(stor5[arg1].field_256):
                                    require ext_code.size(address(stor5[arg1].field_256))
                                    staticcall address(stor5[arg1].field_256).0x70a08231 with:
                                            gas gas_remaining wei
                                           args msg.sender
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require return_data.size >= 32
                                        if stor5[arg1].field_3584 * t > ext_call.return_data[0]:
                                            revert with 0, 'Cannot above current token holdings!'
                                        else:
                                            require ext_code.size(address(stor5[arg1].field_256))
                                            staticcall address(stor5[arg1].field_256).0xdd62ed3e with:
                                                    gas gas_remaining wei
                                                   args msg.sender, this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                require return_data.size >= 32
                                                if not ext_call.return_data[0]:
                                                    if ext_call.return_data[0] < stor5[arg1].field_3584 * t:
                                                        revert with 0, 'Must approve locked tokens before.'
                                                    else:
                                                        require stor5[arg1].field_4352 >= stor5[arg1].field_4352
                                                        require stor5[arg1].field_3840 + 1 >= stor5[arg1].field_3840
                                                        stor5[arg1].field_3840++
                                                        mem[(32 * arg3.length) + 128] = msg.sender
                                                        address(stor5[arg1][19][stor5[arg1].field_3840].field_0) = msg.sender
                                                        stor5[arg1][19][stor5[arg1].field_3840].field_256 = block.number + sub_33d47a5b
                                                        stor5[arg1][19][stor5[arg1].field_3840].field_512 = stor5[arg1].field_3840
                                                        stor5[arg1][19][stor5[arg1].field_3840].field_768 = stor5[arg1].field_3584 * t
                                                        stor5[arg1][19][stor5[arg1].field_3840].field_1024 = 0
                                                        stor5[arg1][19][stor5[arg1].field_3840].field_1280 = 0
                                                        uint8(stor5[arg1][19][stor5[arg1].field_3840].field_1536) = 0
                                                        stor5[arg1][19][stor5[arg1].field_3840].field_1792 % 1 = 0
                                                        Mask(248, 0, stor5[arg1][19][stor5[arg1].field_3840].field_1544) = 0
                                                        stor5[arg1][19][stor5[arg1].field_3840].field_1792 = arg3.length
                                                        if not arg3.length:
                                                            idx = 0
                                                            while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                idx = idx + 1
                                                                continue 
                                                            if not address(stor5[arg1].field_256):
                                                                emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                                return stor5[arg1].field_3840
                                                            else:
                                                                require ext_code.size(address(stor5[arg1].field_256))
                                                                call address(stor5[arg1].field_256).0x23b872dd with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(this.address), stor5[arg1].field_3584 * t
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    require return_data.size >= 32
                                                                    emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                                    return stor5[arg1].field_3840
                                                        else:
                                                            s = 0
                                                            idx = 128
                                                            while (32 * arg3.length) + 128 > idx:
                                                                stor5[arg1][19][stor5[arg1].field_3840][7].field_0 = mem[idx + 28 len 4] * 256^s or !(test266151307() * 256^s) and stor5[arg1][19][stor5[arg1].field_3840][7].field_0
                                                                s = s + (4 * -s + 7 / 32) + (-1 * s * s + 7 / 32) + 4
                                                                idx = idx + 32
                                                                continue 
                                                            idx = floor32(arg3.length) >> 3
                                                            s = sha3(sha3(stor5[arg1].field_3840, sha3(arg1, 5) + 19) + 7)
                                                            while idx:
                                                                stor[s] = !(test266151307() * 256^idx) and stor[s]
                                                                idx = idx + (4 * -idx + 7 / 32) + (-1 * idx * idx + 7 / 32) + 4
                                                                s = (idx + 7 / 32) + s
                                                                continue 
                                                            idx = (floor32(arg3.length) >> 3) + Mask(252, 2, None + -(floor32(arg3.length) >> 3) + 5) + 7 / 32 * Mask(254, 0, None + -(floor32(arg3.length) >> 3) + 5) >> 2
                                                            while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                idx = idx + 1
                                                                continue 
                                                            if not address(stor5[arg1].field_256):
                                                                emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                                return stor5[arg1].field_3840
                                                            else:
                                                                require ext_code.size(address(stor5[arg1].field_256))
                                                                call address(stor5[arg1].field_256).0x23b872dd with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(this.address), stor5[arg1].field_3584 * t
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    require return_data.size >= 32
                                                                    emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                                    return stor5[arg1].field_3840
                                                else:
                                                    if ext_call.return_data[0] < ext_call.return_data[0]:
                                                        if ext_call.return_data[0] < stor5[arg1].field_3584 * t:
                                                            revert with 0, 'Must approve locked tokens before.'
                                                        else:
                                                            require stor5[arg1].field_4352 >= stor5[arg1].field_4352
                                                            require stor5[arg1].field_3840 + 1 >= stor5[arg1].field_3840
                                                            stor5[arg1].field_3840++
                                                            mem[(32 * arg3.length) + 128] = msg.sender
                                                            address(stor5[arg1][19][stor5[arg1].field_3840].field_0) = msg.sender
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_256 = block.number + sub_33d47a5b
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_512 = stor5[arg1].field_3840
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_768 = stor5[arg1].field_3584 * t
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1024 = 0
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1280 = 0
                                                            uint8(stor5[arg1][19][stor5[arg1].field_3840].field_1536) = 0
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1792 % 1 = 0
                                                            Mask(248, 0, stor5[arg1][19][stor5[arg1].field_3840].field_1544) = 0
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1792 = arg3.length
                                                            if not arg3.length:
                                                                idx = 0
                                                                while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                    uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                    idx = idx + 1
                                                                    continue 
                                                                if not address(stor5[arg1].field_256):
                                                                    emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                                    return stor5[arg1].field_3840
                                                                else:
                                                                    require ext_code.size(address(stor5[arg1].field_256))
                                                                    call address(stor5[arg1].field_256).0x23b872dd with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(this.address), stor5[arg1].field_3584 * t
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                                        require return_data.size >= 32
                                                                        emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                                        return stor5[arg1].field_3840
                                                            else:
                                                                s = 0
                                                                idx = 128
                                                                while (32 * arg3.length) + 128 > idx:
                                                                    stor5[arg1][19][stor5[arg1].field_3840][7].field_0 = mem[idx + 28 len 4] * 256^s or !(test266151307() * 256^s) and stor5[arg1][19][stor5[arg1].field_3840][7].field_0
                                                                    s = s + (4 * -s + 7 / 32) + (-1 * s * s + 7 / 32) + 4
                                                                    idx = idx + 32
                                                                    continue 
                                                                idx = floor32(arg3.length) >> 3
                                                                s = sha3(sha3(stor5[arg1].field_3840, sha3(arg1, 5) + 19) + 7)
                                                                while idx:
                                                                    stor[s] = !(test266151307() * 256^idx) and stor[s]
                                                                    idx = idx + (4 * -idx + 7 / 32) + (-1 * idx * idx + 7 / 32) + 4
                                                                    s = (idx + 7 / 32) + s
                                                                    continue 
                                                                idx = (floor32(arg3.length) >> 3) + Mask(252, 2, None + -(floor32(arg3.length) >> 3) + 5) + 7 / 32 * Mask(254, 0, None + -(floor32(arg3.length) >> 3) + 5) >> 2
                                                                while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                    uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                    idx = idx + 1
                                                                    continue 
                                                                if not address(stor5[arg1].field_256):
                                                                    emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                                    return stor5[arg1].field_3840
                                                                else:
                                                                    require ext_code.size(address(stor5[arg1].field_256))
                                                                    call address(stor5[arg1].field_256).0x23b872dd with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(this.address), stor5[arg1].field_3584 * t
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                                        require return_data.size >= 32
                                                                        emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                                        return stor5[arg1].field_3840
                                                    else:
                                                        if ext_call.return_data[0] < stor5[arg1].field_3584 * t:
                                                            revert with 0, 'Must approve locked tokens before.'
                                                        else:
                                                            require stor5[arg1].field_4352 >= stor5[arg1].field_4352
                                                            require stor5[arg1].field_3840 + 1 >= stor5[arg1].field_3840
                                                            stor5[arg1].field_3840++
                                                            mem[(32 * arg3.length) + 128] = msg.sender
                                                            address(stor5[arg1][19][stor5[arg1].field_3840].field_0) = msg.sender
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_256 = block.number + sub_33d47a5b
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_512 = stor5[arg1].field_3840
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_768 = stor5[arg1].field_3584 * t
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1024 = 0
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1280 = 0
                                                            uint8(stor5[arg1][19][stor5[arg1].field_3840].field_1536) = 0
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1792 % 1 = 0
                                                            Mask(248, 0, stor5[arg1][19][stor5[arg1].field_3840].field_1544) = 0
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1792 = arg3.length
                                                            if not arg3.length:
                                                                idx = 0
                                                                while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                    uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                    idx = idx + 1
                                                                    continue 
                                                                if not address(stor5[arg1].field_256):
                                                                    emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                                    return stor5[arg1].field_3840
                                                                else:
                                                                    require ext_code.size(address(stor5[arg1].field_256))
                                                                    call address(stor5[arg1].field_256).0x23b872dd with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(this.address), stor5[arg1].field_3584 * t
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                                        require return_data.size >= 32
                                                                        emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                                        return stor5[arg1].field_3840
                                                            else:
                                                                s = 0
                                                                idx = 128
                                                                while (32 * arg3.length) + 128 > idx:
                                                                    stor5[arg1][19][stor5[arg1].field_3840][7].field_0 = mem[idx + 28 len 4] * 256^s or !(test266151307() * 256^s) and stor5[arg1][19][stor5[arg1].field_3840][7].field_0
                                                                    s = s + (4 * -s + 7 / 32) + (-1 * s * s + 7 / 32) + 4
                                                                    idx = idx + 32
                                                                    continue 
                                                                idx = floor32(arg3.length) >> 3
                                                                s = sha3(sha3(stor5[arg1].field_3840, sha3(arg1, 5) + 19) + 7)
                                                                while idx:
                                                                    stor[s] = !(test266151307() * 256^idx) and stor[s]
                                                                    idx = idx + (4 * -idx + 7 / 32) + (-1 * idx * idx + 7 / 32) + 4
                                                                    s = (idx + 7 / 32) + s
                                                                    continue 
                                                                idx = (floor32(arg3.length) >> 3) + Mask(252, 2, None + -(floor32(arg3.length) >> 3) + 5) + 7 / 32 * Mask(254, 0, None + -(floor32(arg3.length) >> 3) + 5) >> 2
                                                                while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                    uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                    idx = idx + 1
                                                                    continue 
                                                                if not address(stor5[arg1].field_256):
                                                                    emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                                    return stor5[arg1].field_3840
                                                                else:
                                                                    require ext_code.size(address(stor5[arg1].field_256))
                                                                    call address(stor5[arg1].field_256).0x23b872dd with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(this.address), stor5[arg1].field_3584 * t
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                                        require return_data.size >= 32
                                                                        emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                                        return stor5[arg1].field_3840
                                else:
                                    if stor5[arg1].field_3584 * t > msg.value:
                                        revert with 0, 'Cannot above current ether holdings!'
                                    else:
                                        require stor5[arg1].field_4352 >= stor5[arg1].field_4352
                                        require stor5[arg1].field_3840 + 1 >= stor5[arg1].field_3840
                                        stor5[arg1].field_3840++
                                        mem[(32 * arg3.length) + 128] = msg.sender
                                        address(stor5[arg1][19][stor5[arg1].field_3840].field_0) = msg.sender
                                        stor5[arg1][19][stor5[arg1].field_3840].field_256 = block.number + sub_33d47a5b
                                        stor5[arg1][19][stor5[arg1].field_3840].field_512 = stor5[arg1].field_3840
                                        stor5[arg1][19][stor5[arg1].field_3840].field_768 = stor5[arg1].field_3584 * t
                                        stor5[arg1][19][stor5[arg1].field_3840].field_1024 = 0
                                        stor5[arg1][19][stor5[arg1].field_3840].field_1280 = 0
                                        uint8(stor5[arg1][19][stor5[arg1].field_3840].field_1536) = 0
                                        stor5[arg1][19][stor5[arg1].field_3840].field_1792 % 1 = 0
                                        Mask(248, 0, stor5[arg1][19][stor5[arg1].field_3840].field_1544) = 0
                                        stor5[arg1][19][stor5[arg1].field_3840].field_1792 = arg3.length
                                        if not arg3.length:
                                            idx = 0
                                            while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                idx = idx + 1
                                                continue 
                                            if not address(stor5[arg1].field_256):
                                                emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                return stor5[arg1].field_3840
                                            else:
                                                require ext_code.size(address(stor5[arg1].field_256))
                                                call address(stor5[arg1].field_256).0x23b872dd with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(this.address), stor5[arg1].field_3584 * t
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                    return stor5[arg1].field_3840
                                        else:
                                            s = 0
                                            idx = 128
                                            while (32 * arg3.length) + 128 > idx:
                                                stor5[arg1][19][stor5[arg1].field_3840][7].field_0 = mem[idx + 28 len 4] * 256^s or !(test266151307() * 256^s) and stor5[arg1][19][stor5[arg1].field_3840][7].field_0
                                                s = s + (4 * -s + 7 / 32) + (-1 * s * s + 7 / 32) + 4
                                                idx = idx + 32
                                                continue 
                                            idx = floor32(arg3.length) >> 3
                                            s = sha3(sha3(stor5[arg1].field_3840, sha3(arg1, 5) + 19) + 7)
                                            while idx:
                                                stor[s] = !(test266151307() * 256^idx) and stor[s]
                                                idx = idx + (4 * -idx + 7 / 32) + (-1 * idx * idx + 7 / 32) + 4
                                                s = (idx + 7 / 32) + s
                                                continue 
                                            idx = (floor32(arg3.length) >> 3) + Mask(252, 2, None + -(floor32(arg3.length) >> 3) + 5) + 7 / 32 * Mask(254, 0, None + -(floor32(arg3.length) >> 3) + 5) >> 2
                                            while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                idx = idx + 1
                                                continue 
                                            if not address(stor5[arg1].field_256):
                                                emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                return stor5[arg1].field_3840
                                            else:
                                                require ext_code.size(address(stor5[arg1].field_256))
                                                call address(stor5[arg1].field_256).0x23b872dd with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(this.address), stor5[arg1].field_3584 * t
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * t
                                                    return stor5[arg1].field_3840
}

function sub_2c412f6f(?) payable {
    require calldata.size - 4 >= 128
    require arg4 <= 4294967296
    require arg4 + 36 <= calldata.size
    require arg4.length <= 4294967296 and arg4 + (32 * arg4.length) + 36 <= calldata.size
    mem[128 len 32 * arg4.length] = call.data[arg4 + 36 len 32 * arg4.length]
    mem[(32 * arg4.length) + 128] = 0
    require arg1 > 0
    if arg2:
        if arg2 < block.number + sub_33d47a5b:
            revert with 0, 'startBlock is too small!'
        else:
            if not arg3 % 16:
                revert with 0, 'Invalid type!'
            else:
                if not uint8(stor5[arg1].field_3328):
                    revert with 0, 32, 24, 0xfe54686520726f6f6d206973206e6f7420616374697665642100000000000000
                else:
                    idx = 0
                    s = 1
                    t = 1
                    u = 0
                    while uint8(idx) < 3:
                        if not uint8(arg3 % 16 and 2^uint8(idx)):
                            idx = idx + 1
                            s = s
                            t = t
                            u = u
                            continue 
                        else:
                            if sub_78463323 + (u * sub_78463323) > arg4.length:
                                revert with 0, 'Missing bet values!'
                            else:
                                require uint8(idx) < 4
                                s = 0
                                t = 0
                                v = 0
                                while uint8(s) < sub_78463323:
                                    require (u * sub_78463323) + uint8(s) < arg4.length
                                    require stor5[arg1][uint8(idx)].field_1280
                                    require (mem[(32 * (u * sub_78463323) + uint8(s)) + 156 len 4] * stor5[arg1][uint8(idx)].field_2304 / stor5[arg1][uint8(idx)].field_1280) + t >= t
                                    require (u * sub_78463323) + uint8(s) < arg4.length
                                    require mem[(32 * (u * sub_78463323) + uint8(s)) + 156 len 4] + v >= v
                                    s = s + 1
                                    t = (mem[(32 * (u * sub_78463323) + uint8(s)) + 156 len 4] * stor5[arg1][uint8(idx)].field_2304 / stor5[arg1][uint8(idx)].field_1280) + t
                                    v = mem[(32 * (u * sub_78463323) + uint8(s)) + 156 len 4] + v
                                    continue 
                                idx = idx + 1
                                s = stor5[arg1][uint8(idx)].field_2304
                                t = stor5[arg1][uint8(idx)].field_1280
                                u = u + 1
                                continue 
                    if sub_78463323 * u > arg4.length:
                        revert with 0, 'Missing bet values!'
                    else:
                        if Mask(1, 3, arg3) != 8:
                            revert with 0, 'Must bet something!'
                        else:
                            if arg4.length <= sub_78463323 * u:
                                revert with 0, 'Must bet something!'
                            else:
                                require sub_78463323 * u < arg4.length
                                if arg4.length < (sub_78463323 * u) + (2 * mem[(32 * sub_78463323 * u) + 128] % 2147483648) + 1:
                                    revert with 0, 'betTailInfo format wrong!'
                                else:
                                    s = 0
                                    t = 0
                                    v = (sub_78463323 * u) + 1
                                    w = 0
                                    while uint32(s) < mem[(32 * sub_78463323 * u) + 156 len 4]:
                                        require v + 1 < arg4.length
                                        require stor5[arg1].field_2048
                                        require (mem[(32 * v + 1) + 156 len 4] * sub_78463323 * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t >= t
                                        require (mem[(32 * v + 1) + 156 len 4] * sub_78463323) + w >= w
                                        s = s + 1
                                        t = (mem[(32 * v + 1) + 156 len 4] * sub_78463323 * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t
                                        v = v + 2
                                        w = (mem[(32 * v + 1) + 156 len 4] * sub_78463323) + w
                                        continue 
                                    if not w:
                                        revert with 0, 'Must bet something!'
                                    else:
                                        require stor5[arg1].field_3584 * w / w == stor5[arg1].field_3584
                                        if stor5[arg1].field_3584 * w <= 0:
                                            revert with 0, 'Must bet something!'
                                        else:
                                            if t:
                                                require stor5[arg1].field_3584 * t / t == stor5[arg1].field_3584
                                                if stor5[arg1].field_3584 * t > stor5[arg1].field_4608 - stor5[arg1].field_4352:
                                                    revert with 0, 'Cannot bet over compensate!'
                                                else:
                                                    if address(stor5[arg1].field_256):
                                                        require ext_code.size(address(stor5[arg1].field_256))
                                                        staticcall address(stor5[arg1].field_256).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args msg.sender
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            require return_data.size >= 32
                                                            if stor5[arg1].field_3584 * w > ext_call.return_data[0]:
                                                                revert with 0, 'Cannot above current token holdings!'
                                                            else:
                                                                require ext_code.size(address(stor5[arg1].field_256))
                                                                staticcall address(stor5[arg1].field_256).0xdd62ed3e with:
                                                                        gas gas_remaining wei
                                                                       args msg.sender, this.address
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    require return_data.size >= 32
                                                                    if not ext_call.return_data[0]:
                                                                        if ext_call.return_data[0] < stor5[arg1].field_3584 * w:
                                                                            revert with 0, 'Must approve locked tokens before.'
                                                                        else:
                                                                            require (stor5[arg1].field_3584 * t) + stor5[arg1].field_4352 >= stor5[arg1].field_4352
                                                                            stor5[arg1].field_4352 += stor5[arg1].field_3584 * t
                                                                            require stor5[arg1].field_3840 + 1 >= stor5[arg1].field_3840
                                                                            stor5[arg1].field_3840++
                                                                            mem[(32 * arg4.length) + 128] = msg.sender
                                                                            address(stor5[arg1][19][stor5[arg1].field_3840].field_0) = msg.sender
                                                                            stor5[arg1][19][stor5[arg1].field_3840].field_256 = arg2
                                                                            stor5[arg1][19][stor5[arg1].field_3840].field_512 = stor5[arg1].field_3840
                                                                            stor5[arg1][19][stor5[arg1].field_3840].field_768 = stor5[arg1].field_3584 * w
                                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1024 = stor5[arg1].field_3584 * t
                                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1280 = 0
                                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1536 % 16 = arg3 % 16
                                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1540 % 16 = 0
                                                                            Mask(248, 0, stor5[arg1][19][stor5[arg1].field_3840].field_1544) = 0
                                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1792 = arg4.length
                                                                            if not arg4.length:
                                                                                idx = 0
                                                                                while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                                    uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                                    idx = idx + 1
                                                                                    continue 
                                                                                if not address(stor5[arg1].field_256):
                                                                                    emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                                    return stor5[arg1].field_3840
                                                                                else:
                                                                                    require ext_code.size(address(stor5[arg1].field_256))
                                                                                    call address(stor5[arg1].field_256).0x23b872dd with:
                                                                                         gas gas_remaining wei
                                                                                        args msg.sender, address(this.address), stor5[arg1].field_3584 * w
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    else:
                                                                                        require return_data.size >= 32
                                                                                        emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                                        return stor5[arg1].field_3840
                                                                            else:
                                                                                s = 0
                                                                                idx = 128
                                                                                while (32 * arg4.length) + 128 > idx:
                                                                                    stor5[arg1][19][stor5[arg1].field_3840][7].field_0 = mem[idx + 28 len 4] * 256^s or !(test266151307() * 256^s) and stor5[arg1][19][stor5[arg1].field_3840][7].field_0
                                                                                    s = s + (4 * -s + 7 / 32) + (-1 * s * s + 7 / 32) + 4
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                idx = floor32(arg4.length) >> 3
                                                                                s = sha3(sha3(stor5[arg1].field_3840, sha3(arg1, 5) + 19) + 7)
                                                                                while idx:
                                                                                    stor[s] = !(test266151307() * 256^idx) and stor[s]
                                                                                    idx = idx + (4 * -idx + 7 / 32) + (-1 * idx * idx + 7 / 32) + 4
                                                                                    s = (idx + 7 / 32) + s
                                                                                    continue 
                                                                                idx = (floor32(arg4.length) >> 3) + Mask(252, 2, None + -(floor32(arg4.length) >> 3) + 5) + 7 / 32 * Mask(254, 0, None + -(floor32(arg4.length) >> 3) + 5) >> 2
                                                                                while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                                    uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                                    idx = idx + 1
                                                                                    continue 
                                                                                if not address(stor5[arg1].field_256):
                                                                                    emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                                    return stor5[arg1].field_3840
                                                                                else:
                                                                                    require ext_code.size(address(stor5[arg1].field_256))
                                                                                    call address(stor5[arg1].field_256).0x23b872dd with:
                                                                                         gas gas_remaining wei
                                                                                        args msg.sender, address(this.address), stor5[arg1].field_3584 * w
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    else:
                                                                                        require return_data.size >= 32
                                                                                        emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                                        return stor5[arg1].field_3840
                                                                    else:
                                                                        if ext_call.return_data[0] < ext_call.return_data[0]:
                                                                            if ext_call.return_data[0] < stor5[arg1].field_3584 * w:
                                                                                revert with 0, 'Must approve locked tokens before.'
                                                                            else:
                                                                                require (stor5[arg1].field_3584 * t) + stor5[arg1].field_4352 >= stor5[arg1].field_4352
                                                                                stor5[arg1].field_4352 += stor5[arg1].field_3584 * t
                                                                                require stor5[arg1].field_3840 + 1 >= stor5[arg1].field_3840
                                                                                stor5[arg1].field_3840++
                                                                                mem[(32 * arg4.length) + 128] = msg.sender
                                                                                address(stor5[arg1][19][stor5[arg1].field_3840].field_0) = msg.sender
                                                                                stor5[arg1][19][stor5[arg1].field_3840].field_256 = arg2
                                                                                stor5[arg1][19][stor5[arg1].field_3840].field_512 = stor5[arg1].field_3840
                                                                                stor5[arg1][19][stor5[arg1].field_3840].field_768 = stor5[arg1].field_3584 * w
                                                                                stor5[arg1][19][stor5[arg1].field_3840].field_1024 = stor5[arg1].field_3584 * t
                                                                                stor5[arg1][19][stor5[arg1].field_3840].field_1280 = 0
                                                                                stor5[arg1][19][stor5[arg1].field_3840].field_1536 % 16 = arg3 % 16
                                                                                stor5[arg1][19][stor5[arg1].field_3840].field_1540 % 16 = 0
                                                                                Mask(248, 0, stor5[arg1][19][stor5[arg1].field_3840].field_1544) = 0
                                                                                stor5[arg1][19][stor5[arg1].field_3840].field_1792 = arg4.length
                                                                                if not arg4.length:
                                                                                    idx = 0
                                                                                    while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                                        uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                                        idx = idx + 1
                                                                                        continue 
                                                                                    if not address(stor5[arg1].field_256):
                                                                                        emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                                        return stor5[arg1].field_3840
                                                                                    else:
                                                                                        require ext_code.size(address(stor5[arg1].field_256))
                                                                                        call address(stor5[arg1].field_256).0x23b872dd with:
                                                                                             gas gas_remaining wei
                                                                                            args msg.sender, address(this.address), stor5[arg1].field_3584 * w
                                                                                        if not ext_call.success:
                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                        else:
                                                                                            require return_data.size >= 32
                                                                                            emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                                            return stor5[arg1].field_3840
                                                                                else:
                                                                                    s = 0
                                                                                    idx = 128
                                                                                    while (32 * arg4.length) + 128 > idx:
                                                                                        stor5[arg1][19][stor5[arg1].field_3840][7].field_0 = mem[idx + 28 len 4] * 256^s or !(test266151307() * 256^s) and stor5[arg1][19][stor5[arg1].field_3840][7].field_0
                                                                                        s = s + (4 * -s + 7 / 32) + (-1 * s * s + 7 / 32) + 4
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    idx = floor32(arg4.length) >> 3
                                                                                    s = sha3(sha3(stor5[arg1].field_3840, sha3(arg1, 5) + 19) + 7)
                                                                                    while idx:
                                                                                        stor[s] = !(test266151307() * 256^idx) and stor[s]
                                                                                        idx = idx + (4 * -idx + 7 / 32) + (-1 * idx * idx + 7 / 32) + 4
                                                                                        s = (idx + 7 / 32) + s
                                                                                        continue 
                                                                                    idx = (floor32(arg4.length) >> 3) + Mask(252, 2, None + -(floor32(arg4.length) >> 3) + 5) + 7 / 32 * Mask(254, 0, None + -(floor32(arg4.length) >> 3) + 5) >> 2
                                                                                    while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                                        uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                                        idx = idx + 1
                                                                                        continue 
                                                                                    if not address(stor5[arg1].field_256):
                                                                                        emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                                        return stor5[arg1].field_3840
                                                                                    else:
                                                                                        require ext_code.size(address(stor5[arg1].field_256))
                                                                                        call address(stor5[arg1].field_256).0x23b872dd with:
                                                                                             gas gas_remaining wei
                                                                                            args msg.sender, address(this.address), stor5[arg1].field_3584 * w
                                                                                        if not ext_call.success:
                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                        else:
                                                                                            require return_data.size >= 32
                                                                                            emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                                            return stor5[arg1].field_3840
                                                                        else:
                                                                            if ext_call.return_data[0] < stor5[arg1].field_3584 * w:
                                                                                revert with 0, 'Must approve locked tokens before.'
                                                                            else:
                                                                                require (stor5[arg1].field_3584 * t) + stor5[arg1].field_4352 >= stor5[arg1].field_4352
                                                                                stor5[arg1].field_4352 += stor5[arg1].field_3584 * t
                                                                                require stor5[arg1].field_3840 + 1 >= stor5[arg1].field_3840
                                                                                stor5[arg1].field_3840++
                                                                                mem[(32 * arg4.length) + 128] = msg.sender
                                                                                address(stor5[arg1][19][stor5[arg1].field_3840].field_0) = msg.sender
                                                                                stor5[arg1][19][stor5[arg1].field_3840].field_256 = arg2
                                                                                stor5[arg1][19][stor5[arg1].field_3840].field_512 = stor5[arg1].field_3840
                                                                                stor5[arg1][19][stor5[arg1].field_3840].field_768 = stor5[arg1].field_3584 * w
                                                                                stor5[arg1][19][stor5[arg1].field_3840].field_1024 = stor5[arg1].field_3584 * t
                                                                                stor5[arg1][19][stor5[arg1].field_3840].field_1280 = 0
                                                                                stor5[arg1][19][stor5[arg1].field_3840].field_1536 % 16 = arg3 % 16
                                                                                stor5[arg1][19][stor5[arg1].field_3840].field_1540 % 16 = 0
                                                                                Mask(248, 0, stor5[arg1][19][stor5[arg1].field_3840].field_1544) = 0
                                                                                stor5[arg1][19][stor5[arg1].field_3840].field_1792 = arg4.length
                                                                                if not arg4.length:
                                                                                    idx = 0
                                                                                    while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                                        uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                                        idx = idx + 1
                                                                                        continue 
                                                                                    if not address(stor5[arg1].field_256):
                                                                                        emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                                        return stor5[arg1].field_3840
                                                                                    else:
                                                                                        require ext_code.size(address(stor5[arg1].field_256))
                                                                                        call address(stor5[arg1].field_256).0x23b872dd with:
                                                                                             gas gas_remaining wei
                                                                                            args msg.sender, address(this.address), stor5[arg1].field_3584 * w
                                                                                        if not ext_call.success:
                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                        else:
                                                                                            require return_data.size >= 32
                                                                                            emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                                            return stor5[arg1].field_3840
                                                                                else:
                                                                                    s = 0
                                                                                    idx = 128
                                                                                    while (32 * arg4.length) + 128 > idx:
                                                                                        stor5[arg1][19][stor5[arg1].field_3840][7].field_0 = mem[idx + 28 len 4] * 256^s or !(test266151307() * 256^s) and stor5[arg1][19][stor5[arg1].field_3840][7].field_0
                                                                                        s = s + (4 * -s + 7 / 32) + (-1 * s * s + 7 / 32) + 4
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    idx = floor32(arg4.length) >> 3
                                                                                    s = sha3(sha3(stor5[arg1].field_3840, sha3(arg1, 5) + 19) + 7)
                                                                                    while idx:
                                                                                        stor[s] = !(test266151307() * 256^idx) and stor[s]
                                                                                        idx = idx + (4 * -idx + 7 / 32) + (-1 * idx * idx + 7 / 32) + 4
                                                                                        s = (idx + 7 / 32) + s
                                                                                        continue 
                                                                                    idx = (floor32(arg4.length) >> 3) + Mask(252, 2, None + -(floor32(arg4.length) >> 3) + 5) + 7 / 32 * Mask(254, 0, None + -(floor32(arg4.length) >> 3) + 5) >> 2
                                                                                    while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                                        uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                                        idx = idx + 1
                                                                                        continue 
                                                                                    if not address(stor5[arg1].field_256):
                                                                                        emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                                        return stor5[arg1].field_3840
                                                                                    else:
                                                                                        require ext_code.size(address(stor5[arg1].field_256))
                                                                                        call address(stor5[arg1].field_256).0x23b872dd with:
                                                                                             gas gas_remaining wei
                                                                                            args msg.sender, address(this.address), stor5[arg1].field_3584 * w
                                                                                        if not ext_call.success:
                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                        else:
                                                                                            require return_data.size >= 32
                                                                                            emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                                            return stor5[arg1].field_3840
                                                    else:
                                                        if stor5[arg1].field_3584 * w > msg.value:
                                                            revert with 0, 'Cannot above current ether holdings!'
                                                        else:
                                                            require (stor5[arg1].field_3584 * t) + stor5[arg1].field_4352 >= stor5[arg1].field_4352
                                                            stor5[arg1].field_4352 += stor5[arg1].field_3584 * t
                                                            require stor5[arg1].field_3840 + 1 >= stor5[arg1].field_3840
                                                            stor5[arg1].field_3840++
                                                            mem[(32 * arg4.length) + 128] = msg.sender
                                                            address(stor5[arg1][19][stor5[arg1].field_3840].field_0) = msg.sender
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_256 = arg2
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_512 = stor5[arg1].field_3840
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_768 = stor5[arg1].field_3584 * w
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1024 = stor5[arg1].field_3584 * t
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1280 = 0
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1536 % 16 = arg3 % 16
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1540 % 16 = 0
                                                            Mask(248, 0, stor5[arg1][19][stor5[arg1].field_3840].field_1544) = 0
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1792 = arg4.length
                                                            if not arg4.length:
                                                                idx = 0
                                                                while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                    uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                    idx = idx + 1
                                                                    continue 
                                                                if not address(stor5[arg1].field_256):
                                                                    emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                    return stor5[arg1].field_3840
                                                                else:
                                                                    require ext_code.size(address(stor5[arg1].field_256))
                                                                    call address(stor5[arg1].field_256).0x23b872dd with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(this.address), stor5[arg1].field_3584 * w
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                                        require return_data.size >= 32
                                                                        emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                        return stor5[arg1].field_3840
                                                            else:
                                                                s = 0
                                                                idx = 128
                                                                while (32 * arg4.length) + 128 > idx:
                                                                    stor5[arg1][19][stor5[arg1].field_3840][7].field_0 = mem[idx + 28 len 4] * 256^s or !(test266151307() * 256^s) and stor5[arg1][19][stor5[arg1].field_3840][7].field_0
                                                                    s = s + (4 * -s + 7 / 32) + (-1 * s * s + 7 / 32) + 4
                                                                    idx = idx + 32
                                                                    continue 
                                                                idx = floor32(arg4.length) >> 3
                                                                s = sha3(sha3(stor5[arg1].field_3840, sha3(arg1, 5) + 19) + 7)
                                                                while idx:
                                                                    stor[s] = !(test266151307() * 256^idx) and stor[s]
                                                                    idx = idx + (4 * -idx + 7 / 32) + (-1 * idx * idx + 7 / 32) + 4
                                                                    s = (idx + 7 / 32) + s
                                                                    continue 
                                                                idx = (floor32(arg4.length) >> 3) + Mask(252, 2, None + -(floor32(arg4.length) >> 3) + 5) + 7 / 32 * Mask(254, 0, None + -(floor32(arg4.length) >> 3) + 5) >> 2
                                                                while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                    uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                    idx = idx + 1
                                                                    continue 
                                                                if not address(stor5[arg1].field_256):
                                                                    emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                    return stor5[arg1].field_3840
                                                                else:
                                                                    require ext_code.size(address(stor5[arg1].field_256))
                                                                    call address(stor5[arg1].field_256).0x23b872dd with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(this.address), stor5[arg1].field_3584 * w
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                                        require return_data.size >= 32
                                                                        emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                        return stor5[arg1].field_3840
                                            else:
                                                if 0 > stor5[arg1].field_4608 - stor5[arg1].field_4352:
                                                    revert with 0, 'Cannot bet over compensate!'
                                                else:
                                                    if address(stor5[arg1].field_256):
                                                        require ext_code.size(address(stor5[arg1].field_256))
                                                        staticcall address(stor5[arg1].field_256).0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args msg.sender
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            require return_data.size >= 32
                                                            if stor5[arg1].field_3584 * w > ext_call.return_data[0]:
                                                                revert with 0, 'Cannot above current token holdings!'
                                                            else:
                                                                require ext_code.size(address(stor5[arg1].field_256))
                                                                staticcall address(stor5[arg1].field_256).0xdd62ed3e with:
                                                                        gas gas_remaining wei
                                                                       args msg.sender, this.address
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    require return_data.size >= 32
                                                                    if not ext_call.return_data[0]:
                                                                        if ext_call.return_data[0] < stor5[arg1].field_3584 * w:
                                                                            revert with 0, 'Must approve locked tokens before.'
                                                                        else:
                                                                            require stor5[arg1].field_4352 >= stor5[arg1].field_4352
                                                                            require stor5[arg1].field_3840 + 1 >= stor5[arg1].field_3840
                                                                            stor5[arg1].field_3840++
                                                                            mem[(32 * arg4.length) + 128] = msg.sender
                                                                            address(stor5[arg1][19][stor5[arg1].field_3840].field_0) = msg.sender
                                                                            stor5[arg1][19][stor5[arg1].field_3840].field_256 = arg2
                                                                            stor5[arg1][19][stor5[arg1].field_3840].field_512 = stor5[arg1].field_3840
                                                                            stor5[arg1][19][stor5[arg1].field_3840].field_768 = stor5[arg1].field_3584 * w
                                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1024 = 0
                                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1280 = 0
                                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1536 % 16 = arg3 % 16
                                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1540 % 16 = 0
                                                                            Mask(248, 0, stor5[arg1][19][stor5[arg1].field_3840].field_1544) = 0
                                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1792 = arg4.length
                                                                            if not arg4.length:
                                                                                idx = 0
                                                                                while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                                    uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                                    idx = idx + 1
                                                                                    continue 
                                                                                if not address(stor5[arg1].field_256):
                                                                                    emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                                    return stor5[arg1].field_3840
                                                                                else:
                                                                                    require ext_code.size(address(stor5[arg1].field_256))
                                                                                    call address(stor5[arg1].field_256).0x23b872dd with:
                                                                                         gas gas_remaining wei
                                                                                        args msg.sender, address(this.address), stor5[arg1].field_3584 * w
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    else:
                                                                                        require return_data.size >= 32
                                                                                        emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                                        return stor5[arg1].field_3840
                                                                            else:
                                                                                s = 0
                                                                                idx = 128
                                                                                while (32 * arg4.length) + 128 > idx:
                                                                                    stor5[arg1][19][stor5[arg1].field_3840][7].field_0 = mem[idx + 28 len 4] * 256^s or !(test266151307() * 256^s) and stor5[arg1][19][stor5[arg1].field_3840][7].field_0
                                                                                    s = s + (4 * -s + 7 / 32) + (-1 * s * s + 7 / 32) + 4
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                idx = floor32(arg4.length) >> 3
                                                                                s = sha3(sha3(stor5[arg1].field_3840, sha3(arg1, 5) + 19) + 7)
                                                                                while idx:
                                                                                    stor[s] = !(test266151307() * 256^idx) and stor[s]
                                                                                    idx = idx + (4 * -idx + 7 / 32) + (-1 * idx * idx + 7 / 32) + 4
                                                                                    s = (idx + 7 / 32) + s
                                                                                    continue 
                                                                                idx = (floor32(arg4.length) >> 3) + Mask(252, 2, None + -(floor32(arg4.length) >> 3) + 5) + 7 / 32 * Mask(254, 0, None + -(floor32(arg4.length) >> 3) + 5) >> 2
                                                                                while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                                    uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                                    idx = idx + 1
                                                                                    continue 
                                                                                if not address(stor5[arg1].field_256):
                                                                                    emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                                    return stor5[arg1].field_3840
                                                                                else:
                                                                                    require ext_code.size(address(stor5[arg1].field_256))
                                                                                    call address(stor5[arg1].field_256).0x23b872dd with:
                                                                                         gas gas_remaining wei
                                                                                        args msg.sender, address(this.address), stor5[arg1].field_3584 * w
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    else:
                                                                                        require return_data.size >= 32
                                                                                        emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                                        return stor5[arg1].field_3840
                                                                    else:
                                                                        if ext_call.return_data[0] < ext_call.return_data[0]:
                                                                            if ext_call.return_data[0] < stor5[arg1].field_3584 * w:
                                                                                revert with 0, 'Must approve locked tokens before.'
                                                                            else:
                                                                                require stor5[arg1].field_4352 >= stor5[arg1].field_4352
                                                                                require stor5[arg1].field_3840 + 1 >= stor5[arg1].field_3840
                                                                                stor5[arg1].field_3840++
                                                                                mem[(32 * arg4.length) + 128] = msg.sender
                                                                                address(stor5[arg1][19][stor5[arg1].field_3840].field_0) = msg.sender
                                                                                stor5[arg1][19][stor5[arg1].field_3840].field_256 = arg2
                                                                                stor5[arg1][19][stor5[arg1].field_3840].field_512 = stor5[arg1].field_3840
                                                                                stor5[arg1][19][stor5[arg1].field_3840].field_768 = stor5[arg1].field_3584 * w
                                                                                stor5[arg1][19][stor5[arg1].field_3840].field_1024 = 0
                                                                                stor5[arg1][19][stor5[arg1].field_3840].field_1280 = 0
                                                                                stor5[arg1][19][stor5[arg1].field_3840].field_1536 % 16 = arg3 % 16
                                                                                stor5[arg1][19][stor5[arg1].field_3840].field_1540 % 16 = 0
                                                                                Mask(248, 0, stor5[arg1][19][stor5[arg1].field_3840].field_1544) = 0
                                                                                stor5[arg1][19][stor5[arg1].field_3840].field_1792 = arg4.length
                                                                                if not arg4.length:
                                                                                    idx = 0
                                                                                    while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                                        uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                                        idx = idx + 1
                                                                                        continue 
                                                                                    if not address(stor5[arg1].field_256):
                                                                                        emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                                        return stor5[arg1].field_3840
                                                                                    else:
                                                                                        require ext_code.size(address(stor5[arg1].field_256))
                                                                                        call address(stor5[arg1].field_256).0x23b872dd with:
                                                                                             gas gas_remaining wei
                                                                                            args msg.sender, address(this.address), stor5[arg1].field_3584 * w
                                                                                        if not ext_call.success:
                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                        else:
                                                                                            require return_data.size >= 32
                                                                                            emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                                            return stor5[arg1].field_3840
                                                                                else:
                                                                                    s = 0
                                                                                    idx = 128
                                                                                    while (32 * arg4.length) + 128 > idx:
                                                                                        stor5[arg1][19][stor5[arg1].field_3840][7].field_0 = mem[idx + 28 len 4] * 256^s or !(test266151307() * 256^s) and stor5[arg1][19][stor5[arg1].field_3840][7].field_0
                                                                                        s = s + (4 * -s + 7 / 32) + (-1 * s * s + 7 / 32) + 4
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    idx = floor32(arg4.length) >> 3
                                                                                    s = sha3(sha3(stor5[arg1].field_3840, sha3(arg1, 5) + 19) + 7)
                                                                                    while idx:
                                                                                        stor[s] = !(test266151307() * 256^idx) and stor[s]
                                                                                        idx = idx + (4 * -idx + 7 / 32) + (-1 * idx * idx + 7 / 32) + 4
                                                                                        s = (idx + 7 / 32) + s
                                                                                        continue 
                                                                                    idx = (floor32(arg4.length) >> 3) + Mask(252, 2, None + -(floor32(arg4.length) >> 3) + 5) + 7 / 32 * Mask(254, 0, None + -(floor32(arg4.length) >> 3) + 5) >> 2
                                                                                    while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                                        uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                                        idx = idx + 1
                                                                                        continue 
                                                                                    if not address(stor5[arg1].field_256):
                                                                                        emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                                        return stor5[arg1].field_3840
                                                                                    else:
                                                                                        require ext_code.size(address(stor5[arg1].field_256))
                                                                                        call address(stor5[arg1].field_256).0x23b872dd with:
                                                                                             gas gas_remaining wei
                                                                                            args msg.sender, address(this.address), stor5[arg1].field_3584 * w
                                                                                        if not ext_call.success:
                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                        else:
                                                                                            require return_data.size >= 32
                                                                                            emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                                            return stor5[arg1].field_3840
                                                                        else:
                                                                            if ext_call.return_data[0] < stor5[arg1].field_3584 * w:
                                                                                revert with 0, 'Must approve locked tokens before.'
                                                                            else:
                                                                                require stor5[arg1].field_4352 >= stor5[arg1].field_4352
                                                                                require stor5[arg1].field_3840 + 1 >= stor5[arg1].field_3840
                                                                                stor5[arg1].field_3840++
                                                                                mem[(32 * arg4.length) + 128] = msg.sender
                                                                                address(stor5[arg1][19][stor5[arg1].field_3840].field_0) = msg.sender
                                                                                stor5[arg1][19][stor5[arg1].field_3840].field_256 = arg2
                                                                                stor5[arg1][19][stor5[arg1].field_3840].field_512 = stor5[arg1].field_3840
                                                                                stor5[arg1][19][stor5[arg1].field_3840].field_768 = stor5[arg1].field_3584 * w
                                                                                stor5[arg1][19][stor5[arg1].field_3840].field_1024 = 0
                                                                                stor5[arg1][19][stor5[arg1].field_3840].field_1280 = 0
                                                                                stor5[arg1][19][stor5[arg1].field_3840].field_1536 % 16 = arg3 % 16
                                                                                stor5[arg1][19][stor5[arg1].field_3840].field_1540 % 16 = 0
                                                                                Mask(248, 0, stor5[arg1][19][stor5[arg1].field_3840].field_1544) = 0
                                                                                stor5[arg1][19][stor5[arg1].field_3840].field_1792 = arg4.length
                                                                                if not arg4.length:
                                                                                    idx = 0
                                                                                    while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                                        uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                                        idx = idx + 1
                                                                                        continue 
                                                                                    if not address(stor5[arg1].field_256):
                                                                                        emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                                        return stor5[arg1].field_3840
                                                                                    else:
                                                                                        require ext_code.size(address(stor5[arg1].field_256))
                                                                                        call address(stor5[arg1].field_256).0x23b872dd with:
                                                                                             gas gas_remaining wei
                                                                                            args msg.sender, address(this.address), stor5[arg1].field_3584 * w
                                                                                        if not ext_call.success:
                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                        else:
                                                                                            require return_data.size >= 32
                                                                                            emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                                            return stor5[arg1].field_3840
                                                                                else:
                                                                                    s = 0
                                                                                    idx = 128
                                                                                    while (32 * arg4.length) + 128 > idx:
                                                                                        stor5[arg1][19][stor5[arg1].field_3840][7].field_0 = mem[idx + 28 len 4] * 256^s or !(test266151307() * 256^s) and stor5[arg1][19][stor5[arg1].field_3840][7].field_0
                                                                                        s = s + (4 * -s + 7 / 32) + (-1 * s * s + 7 / 32) + 4
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    idx = floor32(arg4.length) >> 3
                                                                                    s = sha3(sha3(stor5[arg1].field_3840, sha3(arg1, 5) + 19) + 7)
                                                                                    while idx:
                                                                                        stor[s] = !(test266151307() * 256^idx) and stor[s]
                                                                                        idx = idx + (4 * -idx + 7 / 32) + (-1 * idx * idx + 7 / 32) + 4
                                                                                        s = (idx + 7 / 32) + s
                                                                                        continue 
                                                                                    idx = (floor32(arg4.length) >> 3) + Mask(252, 2, None + -(floor32(arg4.length) >> 3) + 5) + 7 / 32 * Mask(254, 0, None + -(floor32(arg4.length) >> 3) + 5) >> 2
                                                                                    while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                                        uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                                        idx = idx + 1
                                                                                        continue 
                                                                                    if not address(stor5[arg1].field_256):
                                                                                        emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                                        return stor5[arg1].field_3840
                                                                                    else:
                                                                                        require ext_code.size(address(stor5[arg1].field_256))
                                                                                        call address(stor5[arg1].field_256).0x23b872dd with:
                                                                                             gas gas_remaining wei
                                                                                            args msg.sender, address(this.address), stor5[arg1].field_3584 * w
                                                                                        if not ext_call.success:
                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                        else:
                                                                                            require return_data.size >= 32
                                                                                            emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                                            return stor5[arg1].field_3840
                                                    else:
                                                        if stor5[arg1].field_3584 * w > msg.value:
                                                            revert with 0, 'Cannot above current ether holdings!'
                                                        else:
                                                            require stor5[arg1].field_4352 >= stor5[arg1].field_4352
                                                            require stor5[arg1].field_3840 + 1 >= stor5[arg1].field_3840
                                                            stor5[arg1].field_3840++
                                                            mem[(32 * arg4.length) + 128] = msg.sender
                                                            address(stor5[arg1][19][stor5[arg1].field_3840].field_0) = msg.sender
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_256 = arg2
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_512 = stor5[arg1].field_3840
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_768 = stor5[arg1].field_3584 * w
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1024 = 0
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1280 = 0
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1536 % 16 = arg3 % 16
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1540 % 16 = 0
                                                            Mask(248, 0, stor5[arg1][19][stor5[arg1].field_3840].field_1544) = 0
                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1792 = arg4.length
                                                            if not arg4.length:
                                                                idx = 0
                                                                while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                    uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                    idx = idx + 1
                                                                    continue 
                                                                if not address(stor5[arg1].field_256):
                                                                    emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                    return stor5[arg1].field_3840
                                                                else:
                                                                    require ext_code.size(address(stor5[arg1].field_256))
                                                                    call address(stor5[arg1].field_256).0x23b872dd with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(this.address), stor5[arg1].field_3584 * w
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                                        require return_data.size >= 32
                                                                        emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                        return stor5[arg1].field_3840
                                                            else:
                                                                s = 0
                                                                idx = 128
                                                                while (32 * arg4.length) + 128 > idx:
                                                                    stor5[arg1][19][stor5[arg1].field_3840][7].field_0 = mem[idx + 28 len 4] * 256^s or !(test266151307() * 256^s) and stor5[arg1][19][stor5[arg1].field_3840][7].field_0
                                                                    s = s + (4 * -s + 7 / 32) + (-1 * s * s + 7 / 32) + 4
                                                                    idx = idx + 32
                                                                    continue 
                                                                idx = floor32(arg4.length) >> 3
                                                                s = sha3(sha3(stor5[arg1].field_3840, sha3(arg1, 5) + 19) + 7)
                                                                while idx:
                                                                    stor[s] = !(test266151307() * 256^idx) and stor[s]
                                                                    idx = idx + (4 * -idx + 7 / 32) + (-1 * idx * idx + 7 / 32) + 4
                                                                    s = (idx + 7 / 32) + s
                                                                    continue 
                                                                idx = (floor32(arg4.length) >> 3) + Mask(252, 2, None + -(floor32(arg4.length) >> 3) + 5) + 7 / 32 * Mask(254, 0, None + -(floor32(arg4.length) >> 3) + 5) >> 2
                                                                while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                    uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                    idx = idx + 1
                                                                    continue 
                                                                if not address(stor5[arg1].field_256):
                                                                    emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                    return stor5[arg1].field_3840
                                                                else:
                                                                    require ext_code.size(address(stor5[arg1].field_256))
                                                                    call address(stor5[arg1].field_256).0x23b872dd with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, address(this.address), stor5[arg1].field_3584 * w
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                                        require return_data.size >= 32
                                                                        emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                        return stor5[arg1].field_3840
    else:
        if not arg3 % 16:
            revert with 0, 'Invalid type!'
        else:
            if not uint8(stor5[arg1].field_3328):
                revert with 0, 32, 24, 0xfe54686520726f6f6d206973206e6f7420616374697665642100000000000000
            else:
                idx = 0
                s = 1
                t = 1
                u = 0
                while uint8(idx) < 3:
                    if not uint8(arg3 % 16 and 2^uint8(idx)):
                        idx = idx + 1
                        s = s
                        t = t
                        u = u
                        continue 
                    else:
                        if sub_78463323 + (u * sub_78463323) > arg4.length:
                            revert with 0, 'Missing bet values!'
                        else:
                            require uint8(idx) < 4
                            s = 0
                            t = 0
                            v = 0
                            while uint8(s) < sub_78463323:
                                require (u * sub_78463323) + uint8(s) < arg4.length
                                require stor5[arg1][uint8(idx)].field_1280
                                require (mem[(32 * (u * sub_78463323) + uint8(s)) + 156 len 4] * stor5[arg1][uint8(idx)].field_2304 / stor5[arg1][uint8(idx)].field_1280) + t >= t
                                require (u * sub_78463323) + uint8(s) < arg4.length
                                require mem[(32 * (u * sub_78463323) + uint8(s)) + 156 len 4] + v >= v
                                s = s + 1
                                t = (mem[(32 * (u * sub_78463323) + uint8(s)) + 156 len 4] * stor5[arg1][uint8(idx)].field_2304 / stor5[arg1][uint8(idx)].field_1280) + t
                                v = mem[(32 * (u * sub_78463323) + uint8(s)) + 156 len 4] + v
                                continue 
                            idx = idx + 1
                            s = stor5[arg1][uint8(idx)].field_2304
                            t = stor5[arg1][uint8(idx)].field_1280
                            u = u + 1
                            continue 
                if sub_78463323 * u > arg4.length:
                    revert with 0, 'Missing bet values!'
                else:
                    if Mask(1, 3, arg3) != 8:
                        revert with 0, 'Must bet something!'
                    else:
                        if arg4.length <= sub_78463323 * u:
                            revert with 0, 'Must bet something!'
                        else:
                            require sub_78463323 * u < arg4.length
                            if arg4.length < (sub_78463323 * u) + (2 * mem[(32 * sub_78463323 * u) + 128] % 2147483648) + 1:
                                revert with 0, 'betTailInfo format wrong!'
                            else:
                                s = 0
                                t = 0
                                v = (sub_78463323 * u) + 1
                                w = 0
                                while uint32(s) < mem[(32 * sub_78463323 * u) + 156 len 4]:
                                    require v + 1 < arg4.length
                                    require stor5[arg1].field_2048
                                    require (mem[(32 * v + 1) + 156 len 4] * sub_78463323 * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t >= t
                                    require (mem[(32 * v + 1) + 156 len 4] * sub_78463323) + w >= w
                                    s = s + 1
                                    t = (mem[(32 * v + 1) + 156 len 4] * sub_78463323 * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t
                                    v = v + 2
                                    w = (mem[(32 * v + 1) + 156 len 4] * sub_78463323) + w
                                    continue 
                                if not w:
                                    revert with 0, 'Must bet something!'
                                else:
                                    require stor5[arg1].field_3584 * w / w == stor5[arg1].field_3584
                                    if stor5[arg1].field_3584 * w <= 0:
                                        revert with 0, 'Must bet something!'
                                    else:
                                        if t:
                                            require stor5[arg1].field_3584 * t / t == stor5[arg1].field_3584
                                            if stor5[arg1].field_3584 * t > stor5[arg1].field_4608 - stor5[arg1].field_4352:
                                                revert with 0, 'Cannot bet over compensate!'
                                            else:
                                                if address(stor5[arg1].field_256):
                                                    require ext_code.size(address(stor5[arg1].field_256))
                                                    staticcall address(stor5[arg1].field_256).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args msg.sender
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        if stor5[arg1].field_3584 * w > ext_call.return_data[0]:
                                                            revert with 0, 'Cannot above current token holdings!'
                                                        else:
                                                            require ext_code.size(address(stor5[arg1].field_256))
                                                            staticcall address(stor5[arg1].field_256).0xdd62ed3e with:
                                                                    gas gas_remaining wei
                                                                   args msg.sender, this.address
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                require return_data.size >= 32
                                                                if not ext_call.return_data[0]:
                                                                    if ext_call.return_data[0] < stor5[arg1].field_3584 * w:
                                                                        revert with 0, 'Must approve locked tokens before.'
                                                                    else:
                                                                        require (stor5[arg1].field_3584 * t) + stor5[arg1].field_4352 >= stor5[arg1].field_4352
                                                                        stor5[arg1].field_4352 += stor5[arg1].field_3584 * t
                                                                        require stor5[arg1].field_3840 + 1 >= stor5[arg1].field_3840
                                                                        stor5[arg1].field_3840++
                                                                        mem[(32 * arg4.length) + 128] = msg.sender
                                                                        address(stor5[arg1][19][stor5[arg1].field_3840].field_0) = msg.sender
                                                                        stor5[arg1][19][stor5[arg1].field_3840].field_256 = block.number + sub_33d47a5b
                                                                        stor5[arg1][19][stor5[arg1].field_3840].field_512 = stor5[arg1].field_3840
                                                                        stor5[arg1][19][stor5[arg1].field_3840].field_768 = stor5[arg1].field_3584 * w
                                                                        stor5[arg1][19][stor5[arg1].field_3840].field_1024 = stor5[arg1].field_3584 * t
                                                                        stor5[arg1][19][stor5[arg1].field_3840].field_1280 = 0
                                                                        stor5[arg1][19][stor5[arg1].field_3840].field_1536 % 16 = arg3 % 16
                                                                        stor5[arg1][19][stor5[arg1].field_3840].field_1540 % 16 = 0
                                                                        Mask(248, 0, stor5[arg1][19][stor5[arg1].field_3840].field_1544) = 0
                                                                        stor5[arg1][19][stor5[arg1].field_3840].field_1792 = arg4.length
                                                                        if not arg4.length:
                                                                            idx = 0
                                                                            while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                                uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                                idx = idx + 1
                                                                                continue 
                                                                            if not address(stor5[arg1].field_256):
                                                                                emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                                return stor5[arg1].field_3840
                                                                            else:
                                                                                require ext_code.size(address(stor5[arg1].field_256))
                                                                                call address(stor5[arg1].field_256).0x23b872dd with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender, address(this.address), stor5[arg1].field_3584 * w
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                else:
                                                                                    require return_data.size >= 32
                                                                                    emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                                    return stor5[arg1].field_3840
                                                                        else:
                                                                            s = 0
                                                                            idx = 128
                                                                            while (32 * arg4.length) + 128 > idx:
                                                                                stor5[arg1][19][stor5[arg1].field_3840][7].field_0 = mem[idx + 28 len 4] * 256^s or !(test266151307() * 256^s) and stor5[arg1][19][stor5[arg1].field_3840][7].field_0
                                                                                s = s + (4 * -s + 7 / 32) + (-1 * s * s + 7 / 32) + 4
                                                                                idx = idx + 32
                                                                                continue 
                                                                            idx = floor32(arg4.length) >> 3
                                                                            s = sha3(sha3(stor5[arg1].field_3840, sha3(arg1, 5) + 19) + 7)
                                                                            while idx:
                                                                                stor[s] = !(test266151307() * 256^idx) and stor[s]
                                                                                idx = idx + (4 * -idx + 7 / 32) + (-1 * idx * idx + 7 / 32) + 4
                                                                                s = (idx + 7 / 32) + s
                                                                                continue 
                                                                            idx = (floor32(arg4.length) >> 3) + Mask(252, 2, None + -(floor32(arg4.length) >> 3) + 5) + 7 / 32 * Mask(254, 0, None + -(floor32(arg4.length) >> 3) + 5) >> 2
                                                                            while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                                uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                                idx = idx + 1
                                                                                continue 
                                                                            if not address(stor5[arg1].field_256):
                                                                                emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                                return stor5[arg1].field_3840
                                                                            else:
                                                                                require ext_code.size(address(stor5[arg1].field_256))
                                                                                call address(stor5[arg1].field_256).0x23b872dd with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender, address(this.address), stor5[arg1].field_3584 * w
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                else:
                                                                                    require return_data.size >= 32
                                                                                    emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                                    return stor5[arg1].field_3840
                                                                else:
                                                                    if ext_call.return_data[0] < ext_call.return_data[0]:
                                                                        if ext_call.return_data[0] < stor5[arg1].field_3584 * w:
                                                                            revert with 0, 'Must approve locked tokens before.'
                                                                        else:
                                                                            require (stor5[arg1].field_3584 * t) + stor5[arg1].field_4352 >= stor5[arg1].field_4352
                                                                            stor5[arg1].field_4352 += stor5[arg1].field_3584 * t
                                                                            require stor5[arg1].field_3840 + 1 >= stor5[arg1].field_3840
                                                                            stor5[arg1].field_3840++
                                                                            mem[(32 * arg4.length) + 128] = msg.sender
                                                                            address(stor5[arg1][19][stor5[arg1].field_3840].field_0) = msg.sender
                                                                            stor5[arg1][19][stor5[arg1].field_3840].field_256 = block.number + sub_33d47a5b
                                                                            stor5[arg1][19][stor5[arg1].field_3840].field_512 = stor5[arg1].field_3840
                                                                            stor5[arg1][19][stor5[arg1].field_3840].field_768 = stor5[arg1].field_3584 * w
                                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1024 = stor5[arg1].field_3584 * t
                                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1280 = 0
                                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1536 % 16 = arg3 % 16
                                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1540 % 16 = 0
                                                                            Mask(248, 0, stor5[arg1][19][stor5[arg1].field_3840].field_1544) = 0
                                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1792 = arg4.length
                                                                            if not arg4.length:
                                                                                idx = 0
                                                                                while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                                    uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                                    idx = idx + 1
                                                                                    continue 
                                                                                if not address(stor5[arg1].field_256):
                                                                                    emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                                    return stor5[arg1].field_3840
                                                                                else:
                                                                                    require ext_code.size(address(stor5[arg1].field_256))
                                                                                    call address(stor5[arg1].field_256).0x23b872dd with:
                                                                                         gas gas_remaining wei
                                                                                        args msg.sender, address(this.address), stor5[arg1].field_3584 * w
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    else:
                                                                                        require return_data.size >= 32
                                                                                        emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                                        return stor5[arg1].field_3840
                                                                            else:
                                                                                s = 0
                                                                                idx = 128
                                                                                while (32 * arg4.length) + 128 > idx:
                                                                                    stor5[arg1][19][stor5[arg1].field_3840][7].field_0 = mem[idx + 28 len 4] * 256^s or !(test266151307() * 256^s) and stor5[arg1][19][stor5[arg1].field_3840][7].field_0
                                                                                    s = s + (4 * -s + 7 / 32) + (-1 * s * s + 7 / 32) + 4
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                idx = floor32(arg4.length) >> 3
                                                                                s = sha3(sha3(stor5[arg1].field_3840, sha3(arg1, 5) + 19) + 7)
                                                                                while idx:
                                                                                    stor[s] = !(test266151307() * 256^idx) and stor[s]
                                                                                    idx = idx + (4 * -idx + 7 / 32) + (-1 * idx * idx + 7 / 32) + 4
                                                                                    s = (idx + 7 / 32) + s
                                                                                    continue 
                                                                                idx = (floor32(arg4.length) >> 3) + Mask(252, 2, None + -(floor32(arg4.length) >> 3) + 5) + 7 / 32 * Mask(254, 0, None + -(floor32(arg4.length) >> 3) + 5) >> 2
                                                                                while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                                    uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                                    idx = idx + 1
                                                                                    continue 
                                                                                if not address(stor5[arg1].field_256):
                                                                                    emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                                    return stor5[arg1].field_3840
                                                                                else:
                                                                                    require ext_code.size(address(stor5[arg1].field_256))
                                                                                    call address(stor5[arg1].field_256).0x23b872dd with:
                                                                                         gas gas_remaining wei
                                                                                        args msg.sender, address(this.address), stor5[arg1].field_3584 * w
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    else:
                                                                                        require return_data.size >= 32
                                                                                        emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                                        return stor5[arg1].field_3840
                                                                    else:
                                                                        if ext_call.return_data[0] < stor5[arg1].field_3584 * w:
                                                                            revert with 0, 'Must approve locked tokens before.'
                                                                        else:
                                                                            require (stor5[arg1].field_3584 * t) + stor5[arg1].field_4352 >= stor5[arg1].field_4352
                                                                            stor5[arg1].field_4352 += stor5[arg1].field_3584 * t
                                                                            require stor5[arg1].field_3840 + 1 >= stor5[arg1].field_3840
                                                                            stor5[arg1].field_3840++
                                                                            mem[(32 * arg4.length) + 128] = msg.sender
                                                                            address(stor5[arg1][19][stor5[arg1].field_3840].field_0) = msg.sender
                                                                            stor5[arg1][19][stor5[arg1].field_3840].field_256 = block.number + sub_33d47a5b
                                                                            stor5[arg1][19][stor5[arg1].field_3840].field_512 = stor5[arg1].field_3840
                                                                            stor5[arg1][19][stor5[arg1].field_3840].field_768 = stor5[arg1].field_3584 * w
                                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1024 = stor5[arg1].field_3584 * t
                                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1280 = 0
                                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1536 % 16 = arg3 % 16
                                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1540 % 16 = 0
                                                                            Mask(248, 0, stor5[arg1][19][stor5[arg1].field_3840].field_1544) = 0
                                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1792 = arg4.length
                                                                            if not arg4.length:
                                                                                idx = 0
                                                                                while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                                    uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                                    idx = idx + 1
                                                                                    continue 
                                                                                if not address(stor5[arg1].field_256):
                                                                                    emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                                    return stor5[arg1].field_3840
                                                                                else:
                                                                                    require ext_code.size(address(stor5[arg1].field_256))
                                                                                    call address(stor5[arg1].field_256).0x23b872dd with:
                                                                                         gas gas_remaining wei
                                                                                        args msg.sender, address(this.address), stor5[arg1].field_3584 * w
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    else:
                                                                                        require return_data.size >= 32
                                                                                        emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                                        return stor5[arg1].field_3840
                                                                            else:
                                                                                s = 0
                                                                                idx = 128
                                                                                while (32 * arg4.length) + 128 > idx:
                                                                                    stor5[arg1][19][stor5[arg1].field_3840][7].field_0 = mem[idx + 28 len 4] * 256^s or !(test266151307() * 256^s) and stor5[arg1][19][stor5[arg1].field_3840][7].field_0
                                                                                    s = s + (4 * -s + 7 / 32) + (-1 * s * s + 7 / 32) + 4
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                idx = floor32(arg4.length) >> 3
                                                                                s = sha3(sha3(stor5[arg1].field_3840, sha3(arg1, 5) + 19) + 7)
                                                                                while idx:
                                                                                    stor[s] = !(test266151307() * 256^idx) and stor[s]
                                                                                    idx = idx + (4 * -idx + 7 / 32) + (-1 * idx * idx + 7 / 32) + 4
                                                                                    s = (idx + 7 / 32) + s
                                                                                    continue 
                                                                                idx = (floor32(arg4.length) >> 3) + Mask(252, 2, None + -(floor32(arg4.length) >> 3) + 5) + 7 / 32 * Mask(254, 0, None + -(floor32(arg4.length) >> 3) + 5) >> 2
                                                                                while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                                    uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                                    idx = idx + 1
                                                                                    continue 
                                                                                if not address(stor5[arg1].field_256):
                                                                                    emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                                    return stor5[arg1].field_3840
                                                                                else:
                                                                                    require ext_code.size(address(stor5[arg1].field_256))
                                                                                    call address(stor5[arg1].field_256).0x23b872dd with:
                                                                                         gas gas_remaining wei
                                                                                        args msg.sender, address(this.address), stor5[arg1].field_3584 * w
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    else:
                                                                                        require return_data.size >= 32
                                                                                        emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                                        return stor5[arg1].field_3840
                                                else:
                                                    if stor5[arg1].field_3584 * w > msg.value:
                                                        revert with 0, 'Cannot above current ether holdings!'
                                                    else:
                                                        require (stor5[arg1].field_3584 * t) + stor5[arg1].field_4352 >= stor5[arg1].field_4352
                                                        stor5[arg1].field_4352 += stor5[arg1].field_3584 * t
                                                        require stor5[arg1].field_3840 + 1 >= stor5[arg1].field_3840
                                                        stor5[arg1].field_3840++
                                                        mem[(32 * arg4.length) + 128] = msg.sender
                                                        address(stor5[arg1][19][stor5[arg1].field_3840].field_0) = msg.sender
                                                        stor5[arg1][19][stor5[arg1].field_3840].field_256 = block.number + sub_33d47a5b
                                                        stor5[arg1][19][stor5[arg1].field_3840].field_512 = stor5[arg1].field_3840
                                                        stor5[arg1][19][stor5[arg1].field_3840].field_768 = stor5[arg1].field_3584 * w
                                                        stor5[arg1][19][stor5[arg1].field_3840].field_1024 = stor5[arg1].field_3584 * t
                                                        stor5[arg1][19][stor5[arg1].field_3840].field_1280 = 0
                                                        stor5[arg1][19][stor5[arg1].field_3840].field_1536 % 16 = arg3 % 16
                                                        stor5[arg1][19][stor5[arg1].field_3840].field_1540 % 16 = 0
                                                        Mask(248, 0, stor5[arg1][19][stor5[arg1].field_3840].field_1544) = 0
                                                        stor5[arg1][19][stor5[arg1].field_3840].field_1792 = arg4.length
                                                        if not arg4.length:
                                                            idx = 0
                                                            while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                idx = idx + 1
                                                                continue 
                                                            if not address(stor5[arg1].field_256):
                                                                emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                return stor5[arg1].field_3840
                                                            else:
                                                                require ext_code.size(address(stor5[arg1].field_256))
                                                                call address(stor5[arg1].field_256).0x23b872dd with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(this.address), stor5[arg1].field_3584 * w
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    require return_data.size >= 32
                                                                    emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                    return stor5[arg1].field_3840
                                                        else:
                                                            s = 0
                                                            idx = 128
                                                            while (32 * arg4.length) + 128 > idx:
                                                                stor5[arg1][19][stor5[arg1].field_3840][7].field_0 = mem[idx + 28 len 4] * 256^s or !(test266151307() * 256^s) and stor5[arg1][19][stor5[arg1].field_3840][7].field_0
                                                                s = s + (4 * -s + 7 / 32) + (-1 * s * s + 7 / 32) + 4
                                                                idx = idx + 32
                                                                continue 
                                                            idx = floor32(arg4.length) >> 3
                                                            s = sha3(sha3(stor5[arg1].field_3840, sha3(arg1, 5) + 19) + 7)
                                                            while idx:
                                                                stor[s] = !(test266151307() * 256^idx) and stor[s]
                                                                idx = idx + (4 * -idx + 7 / 32) + (-1 * idx * idx + 7 / 32) + 4
                                                                s = (idx + 7 / 32) + s
                                                                continue 
                                                            idx = (floor32(arg4.length) >> 3) + Mask(252, 2, None + -(floor32(arg4.length) >> 3) + 5) + 7 / 32 * Mask(254, 0, None + -(floor32(arg4.length) >> 3) + 5) >> 2
                                                            while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                idx = idx + 1
                                                                continue 
                                                            if not address(stor5[arg1].field_256):
                                                                emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                return stor5[arg1].field_3840
                                                            else:
                                                                require ext_code.size(address(stor5[arg1].field_256))
                                                                call address(stor5[arg1].field_256).0x23b872dd with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(this.address), stor5[arg1].field_3584 * w
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    require return_data.size >= 32
                                                                    emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                    return stor5[arg1].field_3840
                                        else:
                                            if 0 > stor5[arg1].field_4608 - stor5[arg1].field_4352:
                                                revert with 0, 'Cannot bet over compensate!'
                                            else:
                                                if address(stor5[arg1].field_256):
                                                    require ext_code.size(address(stor5[arg1].field_256))
                                                    staticcall address(stor5[arg1].field_256).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args msg.sender
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        if stor5[arg1].field_3584 * w > ext_call.return_data[0]:
                                                            revert with 0, 'Cannot above current token holdings!'
                                                        else:
                                                            require ext_code.size(address(stor5[arg1].field_256))
                                                            staticcall address(stor5[arg1].field_256).0xdd62ed3e with:
                                                                    gas gas_remaining wei
                                                                   args msg.sender, this.address
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                require return_data.size >= 32
                                                                if not ext_call.return_data[0]:
                                                                    if ext_call.return_data[0] < stor5[arg1].field_3584 * w:
                                                                        revert with 0, 'Must approve locked tokens before.'
                                                                    else:
                                                                        require stor5[arg1].field_4352 >= stor5[arg1].field_4352
                                                                        require stor5[arg1].field_3840 + 1 >= stor5[arg1].field_3840
                                                                        stor5[arg1].field_3840++
                                                                        mem[(32 * arg4.length) + 128] = msg.sender
                                                                        address(stor5[arg1][19][stor5[arg1].field_3840].field_0) = msg.sender
                                                                        stor5[arg1][19][stor5[arg1].field_3840].field_256 = block.number + sub_33d47a5b
                                                                        stor5[arg1][19][stor5[arg1].field_3840].field_512 = stor5[arg1].field_3840
                                                                        stor5[arg1][19][stor5[arg1].field_3840].field_768 = stor5[arg1].field_3584 * w
                                                                        stor5[arg1][19][stor5[arg1].field_3840].field_1024 = 0
                                                                        stor5[arg1][19][stor5[arg1].field_3840].field_1280 = 0
                                                                        stor5[arg1][19][stor5[arg1].field_3840].field_1536 % 16 = arg3 % 16
                                                                        stor5[arg1][19][stor5[arg1].field_3840].field_1540 % 16 = 0
                                                                        Mask(248, 0, stor5[arg1][19][stor5[arg1].field_3840].field_1544) = 0
                                                                        stor5[arg1][19][stor5[arg1].field_3840].field_1792 = arg4.length
                                                                        if not arg4.length:
                                                                            idx = 0
                                                                            while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                                uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                                idx = idx + 1
                                                                                continue 
                                                                            if not address(stor5[arg1].field_256):
                                                                                emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                                return stor5[arg1].field_3840
                                                                            else:
                                                                                require ext_code.size(address(stor5[arg1].field_256))
                                                                                call address(stor5[arg1].field_256).0x23b872dd with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender, address(this.address), stor5[arg1].field_3584 * w
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                else:
                                                                                    require return_data.size >= 32
                                                                                    emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                                    return stor5[arg1].field_3840
                                                                        else:
                                                                            s = 0
                                                                            idx = 128
                                                                            while (32 * arg4.length) + 128 > idx:
                                                                                stor5[arg1][19][stor5[arg1].field_3840][7].field_0 = mem[idx + 28 len 4] * 256^s or !(test266151307() * 256^s) and stor5[arg1][19][stor5[arg1].field_3840][7].field_0
                                                                                s = s + (4 * -s + 7 / 32) + (-1 * s * s + 7 / 32) + 4
                                                                                idx = idx + 32
                                                                                continue 
                                                                            idx = floor32(arg4.length) >> 3
                                                                            s = sha3(sha3(stor5[arg1].field_3840, sha3(arg1, 5) + 19) + 7)
                                                                            while idx:
                                                                                stor[s] = !(test266151307() * 256^idx) and stor[s]
                                                                                idx = idx + (4 * -idx + 7 / 32) + (-1 * idx * idx + 7 / 32) + 4
                                                                                s = (idx + 7 / 32) + s
                                                                                continue 
                                                                            idx = (floor32(arg4.length) >> 3) + Mask(252, 2, None + -(floor32(arg4.length) >> 3) + 5) + 7 / 32 * Mask(254, 0, None + -(floor32(arg4.length) >> 3) + 5) >> 2
                                                                            while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                                uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                                idx = idx + 1
                                                                                continue 
                                                                            if not address(stor5[arg1].field_256):
                                                                                emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                                return stor5[arg1].field_3840
                                                                            else:
                                                                                require ext_code.size(address(stor5[arg1].field_256))
                                                                                call address(stor5[arg1].field_256).0x23b872dd with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender, address(this.address), stor5[arg1].field_3584 * w
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                else:
                                                                                    require return_data.size >= 32
                                                                                    emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                                    return stor5[arg1].field_3840
                                                                else:
                                                                    if ext_call.return_data[0] < ext_call.return_data[0]:
                                                                        if ext_call.return_data[0] < stor5[arg1].field_3584 * w:
                                                                            revert with 0, 'Must approve locked tokens before.'
                                                                        else:
                                                                            require stor5[arg1].field_4352 >= stor5[arg1].field_4352
                                                                            require stor5[arg1].field_3840 + 1 >= stor5[arg1].field_3840
                                                                            stor5[arg1].field_3840++
                                                                            mem[(32 * arg4.length) + 128] = msg.sender
                                                                            address(stor5[arg1][19][stor5[arg1].field_3840].field_0) = msg.sender
                                                                            stor5[arg1][19][stor5[arg1].field_3840].field_256 = block.number + sub_33d47a5b
                                                                            stor5[arg1][19][stor5[arg1].field_3840].field_512 = stor5[arg1].field_3840
                                                                            stor5[arg1][19][stor5[arg1].field_3840].field_768 = stor5[arg1].field_3584 * w
                                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1024 = 0
                                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1280 = 0
                                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1536 % 16 = arg3 % 16
                                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1540 % 16 = 0
                                                                            Mask(248, 0, stor5[arg1][19][stor5[arg1].field_3840].field_1544) = 0
                                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1792 = arg4.length
                                                                            if not arg4.length:
                                                                                idx = 0
                                                                                while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                                    uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                                    idx = idx + 1
                                                                                    continue 
                                                                                if not address(stor5[arg1].field_256):
                                                                                    emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                                    return stor5[arg1].field_3840
                                                                                else:
                                                                                    require ext_code.size(address(stor5[arg1].field_256))
                                                                                    call address(stor5[arg1].field_256).0x23b872dd with:
                                                                                         gas gas_remaining wei
                                                                                        args msg.sender, address(this.address), stor5[arg1].field_3584 * w
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    else:
                                                                                        require return_data.size >= 32
                                                                                        emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                                        return stor5[arg1].field_3840
                                                                            else:
                                                                                s = 0
                                                                                idx = 128
                                                                                while (32 * arg4.length) + 128 > idx:
                                                                                    stor5[arg1][19][stor5[arg1].field_3840][7].field_0 = mem[idx + 28 len 4] * 256^s or !(test266151307() * 256^s) and stor5[arg1][19][stor5[arg1].field_3840][7].field_0
                                                                                    s = s + (4 * -s + 7 / 32) + (-1 * s * s + 7 / 32) + 4
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                idx = floor32(arg4.length) >> 3
                                                                                s = sha3(sha3(stor5[arg1].field_3840, sha3(arg1, 5) + 19) + 7)
                                                                                while idx:
                                                                                    stor[s] = !(test266151307() * 256^idx) and stor[s]
                                                                                    idx = idx + (4 * -idx + 7 / 32) + (-1 * idx * idx + 7 / 32) + 4
                                                                                    s = (idx + 7 / 32) + s
                                                                                    continue 
                                                                                idx = (floor32(arg4.length) >> 3) + Mask(252, 2, None + -(floor32(arg4.length) >> 3) + 5) + 7 / 32 * Mask(254, 0, None + -(floor32(arg4.length) >> 3) + 5) >> 2
                                                                                while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                                    uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                                    idx = idx + 1
                                                                                    continue 
                                                                                if not address(stor5[arg1].field_256):
                                                                                    emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                                    return stor5[arg1].field_3840
                                                                                else:
                                                                                    require ext_code.size(address(stor5[arg1].field_256))
                                                                                    call address(stor5[arg1].field_256).0x23b872dd with:
                                                                                         gas gas_remaining wei
                                                                                        args msg.sender, address(this.address), stor5[arg1].field_3584 * w
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    else:
                                                                                        require return_data.size >= 32
                                                                                        emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                                        return stor5[arg1].field_3840
                                                                    else:
                                                                        if ext_call.return_data[0] < stor5[arg1].field_3584 * w:
                                                                            revert with 0, 'Must approve locked tokens before.'
                                                                        else:
                                                                            require stor5[arg1].field_4352 >= stor5[arg1].field_4352
                                                                            require stor5[arg1].field_3840 + 1 >= stor5[arg1].field_3840
                                                                            stor5[arg1].field_3840++
                                                                            mem[(32 * arg4.length) + 128] = msg.sender
                                                                            address(stor5[arg1][19][stor5[arg1].field_3840].field_0) = msg.sender
                                                                            stor5[arg1][19][stor5[arg1].field_3840].field_256 = block.number + sub_33d47a5b
                                                                            stor5[arg1][19][stor5[arg1].field_3840].field_512 = stor5[arg1].field_3840
                                                                            stor5[arg1][19][stor5[arg1].field_3840].field_768 = stor5[arg1].field_3584 * w
                                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1024 = 0
                                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1280 = 0
                                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1536 % 16 = arg3 % 16
                                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1540 % 16 = 0
                                                                            Mask(248, 0, stor5[arg1][19][stor5[arg1].field_3840].field_1544) = 0
                                                                            stor5[arg1][19][stor5[arg1].field_3840].field_1792 = arg4.length
                                                                            if not arg4.length:
                                                                                idx = 0
                                                                                while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                                    uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                                    idx = idx + 1
                                                                                    continue 
                                                                                if not address(stor5[arg1].field_256):
                                                                                    emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                                    return stor5[arg1].field_3840
                                                                                else:
                                                                                    require ext_code.size(address(stor5[arg1].field_256))
                                                                                    call address(stor5[arg1].field_256).0x23b872dd with:
                                                                                         gas gas_remaining wei
                                                                                        args msg.sender, address(this.address), stor5[arg1].field_3584 * w
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    else:
                                                                                        require return_data.size >= 32
                                                                                        emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                                        return stor5[arg1].field_3840
                                                                            else:
                                                                                s = 0
                                                                                idx = 128
                                                                                while (32 * arg4.length) + 128 > idx:
                                                                                    stor5[arg1][19][stor5[arg1].field_3840][7].field_0 = mem[idx + 28 len 4] * 256^s or !(test266151307() * 256^s) and stor5[arg1][19][stor5[arg1].field_3840][7].field_0
                                                                                    s = s + (4 * -s + 7 / 32) + (-1 * s * s + 7 / 32) + 4
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                idx = floor32(arg4.length) >> 3
                                                                                s = sha3(sha3(stor5[arg1].field_3840, sha3(arg1, 5) + 19) + 7)
                                                                                while idx:
                                                                                    stor[s] = !(test266151307() * 256^idx) and stor[s]
                                                                                    idx = idx + (4 * -idx + 7 / 32) + (-1 * idx * idx + 7 / 32) + 4
                                                                                    s = (idx + 7 / 32) + s
                                                                                    continue 
                                                                                idx = (floor32(arg4.length) >> 3) + Mask(252, 2, None + -(floor32(arg4.length) >> 3) + 5) + 7 / 32 * Mask(254, 0, None + -(floor32(arg4.length) >> 3) + 5) >> 2
                                                                                while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                                    uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                                    idx = idx + 1
                                                                                    continue 
                                                                                if not address(stor5[arg1].field_256):
                                                                                    emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                                    return stor5[arg1].field_3840
                                                                                else:
                                                                                    require ext_code.size(address(stor5[arg1].field_256))
                                                                                    call address(stor5[arg1].field_256).0x23b872dd with:
                                                                                         gas gas_remaining wei
                                                                                        args msg.sender, address(this.address), stor5[arg1].field_3584 * w
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    else:
                                                                                        require return_data.size >= 32
                                                                                        emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                                        return stor5[arg1].field_3840
                                                else:
                                                    if stor5[arg1].field_3584 * w > msg.value:
                                                        revert with 0, 'Cannot above current ether holdings!'
                                                    else:
                                                        require stor5[arg1].field_4352 >= stor5[arg1].field_4352
                                                        require stor5[arg1].field_3840 + 1 >= stor5[arg1].field_3840
                                                        stor5[arg1].field_3840++
                                                        mem[(32 * arg4.length) + 128] = msg.sender
                                                        address(stor5[arg1][19][stor5[arg1].field_3840].field_0) = msg.sender
                                                        stor5[arg1][19][stor5[arg1].field_3840].field_256 = block.number + sub_33d47a5b
                                                        stor5[arg1][19][stor5[arg1].field_3840].field_512 = stor5[arg1].field_3840
                                                        stor5[arg1][19][stor5[arg1].field_3840].field_768 = stor5[arg1].field_3584 * w
                                                        stor5[arg1][19][stor5[arg1].field_3840].field_1024 = 0
                                                        stor5[arg1][19][stor5[arg1].field_3840].field_1280 = 0
                                                        stor5[arg1][19][stor5[arg1].field_3840].field_1536 % 16 = arg3 % 16
                                                        stor5[arg1][19][stor5[arg1].field_3840].field_1540 % 16 = 0
                                                        Mask(248, 0, stor5[arg1][19][stor5[arg1].field_3840].field_1544) = 0
                                                        stor5[arg1][19][stor5[arg1].field_3840].field_1792 = arg4.length
                                                        if not arg4.length:
                                                            idx = 0
                                                            while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                idx = idx + 1
                                                                continue 
                                                            if not address(stor5[arg1].field_256):
                                                                emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                return stor5[arg1].field_3840
                                                            else:
                                                                require ext_code.size(address(stor5[arg1].field_256))
                                                                call address(stor5[arg1].field_256).0x23b872dd with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(this.address), stor5[arg1].field_3584 * w
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    require return_data.size >= 32
                                                                    emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                    return stor5[arg1].field_3840
                                                        else:
                                                            s = 0
                                                            idx = 128
                                                            while (32 * arg4.length) + 128 > idx:
                                                                stor5[arg1][19][stor5[arg1].field_3840][7].field_0 = mem[idx + 28 len 4] * 256^s or !(test266151307() * 256^s) and stor5[arg1][19][stor5[arg1].field_3840][7].field_0
                                                                s = s + (4 * -s + 7 / 32) + (-1 * s * s + 7 / 32) + 4
                                                                idx = idx + 32
                                                                continue 
                                                            idx = floor32(arg4.length) >> 3
                                                            s = sha3(sha3(stor5[arg1].field_3840, sha3(arg1, 5) + 19) + 7)
                                                            while idx:
                                                                stor[s] = !(test266151307() * 256^idx) and stor[s]
                                                                idx = idx + (4 * -idx + 7 / 32) + (-1 * idx * idx + 7 / 32) + 4
                                                                s = (idx + 7 / 32) + s
                                                                continue 
                                                            idx = (floor32(arg4.length) >> 3) + Mask(252, 2, None + -(floor32(arg4.length) >> 3) + 5) + 7 / 32 * Mask(254, 0, None + -(floor32(arg4.length) >> 3) + 5) >> 2
                                                            while stor5[arg1][19][stor5[arg1].field_3840].field_1792 + 7 / 8 > idx:
                                                                uint32(stor5[arg1][19][stor5[arg1].field_3840][idx + 7].field_0) = 0
                                                                idx = idx + 1
                                                                continue 
                                                            if not address(stor5[arg1].field_256):
                                                                emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                return stor5[arg1].field_3840
                                                            else:
                                                                require ext_code.size(address(stor5[arg1].field_256))
                                                                call address(stor5[arg1].field_256).0x23b872dd with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(this.address), stor5[arg1].field_3584 * w
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    require return_data.size >= 32
                                                                    emit 0x3bcc29eb: arg1, stor5[arg1].field_3840, stor5[arg1].field_3584 * w
                                                                    return stor5[arg1].field_3840
}

function sub_5b65552f(?) payable {
    require calldata.size - 4 >= 64
    require arg1 > 0
    require arg2 > 0
    if not uint8(stor5[arg1].field_3328):
        revert with 0, 32, 24, 0xfe54686520726f6f6d206973206e6f7420616374697665642100000000000000
    if uint8(stor5[arg1][19][arg2].field_1544):
        revert with 0, 'The bet order is already closed!'
    if not uint8(stor5[arg1][19][arg2].field_1544):
        require -sub_78463323 + stor5[arg1][19][arg2].field_256 + 256 >= stor5[arg1][19][arg2].field_256
        if block.number > -sub_78463323 + stor5[arg1][19][arg2].field_256 + 256:
            if not address(stor5[arg1].field_256):
                if stor5[arg1][19][arg2].field_768 > eth.balance(this.address):
                    revert with 0, 'Not enough ether :(!'
            else:
                require ext_code.size(address(stor5[arg1].field_256))
                staticcall address(stor5[arg1].field_256).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] < stor5[arg1][19][arg2].field_768:
                    revert with 0, 'Not enough token :(!'
            uint8(stor5[arg1][19][arg2].field_1544) = 1
            stor5[arg1][19][arg2].field_1280 = 0
            require stor5[arg1][19][arg2].field_1024 <= stor5[arg1].field_4352
            stor5[arg1].field_4352 -= stor5[arg1][19][arg2].field_1024
            stor5[arg1].field_4096 = stor5[arg1][19][arg2].field_512
            if not address(stor5[arg1].field_256):
                call address(stor5[arg1][19][arg2].field_0) with:
                   value stor5[arg1][19][arg2].field_768 wei
                     gas 2300 * is_zero(value) wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
            else:
                require ext_code.size(address(stor5[arg1].field_256))
                call address(stor5[arg1].field_256).0xa9059cbb with:
                     gas gas_remaining wei
                    args address(stor5[arg1][19][arg2].field_0), stor5[arg1][19][arg2].field_768
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
            emit 0x84842e1c: arg1, arg2, block.number, stor5[arg1][19][arg2].field_256
        else:
            if not uint8(stor5[arg1][19][arg2].field_1536):
                idx = 0
                s = 0
                while uint8(idx) < sub_78463323:
                    require 0 < stor5[arg1][19][arg2].field_1792
                    if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 < 10:
                        if uint32(stor5[arg1][19][arg2][7].field_0) <= 0:
                            require 1 < stor5[arg1][19][arg2].field_1792
                            if uint32(stor5[arg1][19][arg2][7].field_32) <= 0:
                                require 2 < stor5[arg1][19][arg2].field_1792
                                if uint32(stor5[arg1][19][arg2][7].field_64) <= 0:
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + s >= s
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + s
                                    continue 
                                if bool(block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256)) == 1:
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + s >= s
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + s
                                    continue 
                                require 2 < stor5[arg1][19][arg2].field_1792
                                require stor5[arg1].field_1792
                                require (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s >= s
                                require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                    idx = idx + 1
                                    s = (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s
                                    continue 
                                require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_2048
                                require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                idx = idx + 1
                                s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s
                                continue 
                            if bool(block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256)) == 1:
                                require 2 < stor5[arg1][19][arg2].field_1792
                                if uint32(stor5[arg1][19][arg2][7].field_64) <= 0:
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + s >= s
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + s
                                    continue 
                                if bool(block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256)) == 1:
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + s >= s
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + s
                                    continue 
                                require 2 < stor5[arg1][19][arg2].field_1792
                                require stor5[arg1].field_1792
                                require (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s >= s
                                require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                    idx = idx + 1
                                    s = (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s
                                    continue 
                                require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_2048
                                require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                idx = idx + 1
                                s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s
                                continue 
                            require 1 < stor5[arg1][19][arg2].field_1792
                            require stor5[arg1].field_1536
                            require (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s >= s
                            require 2 < stor5[arg1][19][arg2].field_1792
                            if uint32(stor5[arg1][19][arg2][7].field_64) <= 0:
                                require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                    idx = idx + 1
                                    s = (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                    continue 
                                require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_2048
                                require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                idx = idx + 1
                                s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                continue 
                            if bool(block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256)) == 1:
                                require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                    idx = idx + 1
                                    s = (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                    continue 
                                require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_2048
                                require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                idx = idx + 1
                                s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                continue 
                            require 2 < stor5[arg1][19][arg2].field_1792
                            require stor5[arg1].field_1792
                            require uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                            require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                            mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                            if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                idx = idx + 1
                                s = (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                continue 
                            require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                            mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                            require stor5[arg1].field_2048
                            require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                            idx = idx + 1
                            s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                            continue 
                        if bool(block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256)) != 1:
                            require 1 < stor5[arg1][19][arg2].field_1792
                            if uint32(stor5[arg1][19][arg2][7].field_32) <= 0:
                                require 2 < stor5[arg1][19][arg2].field_1792
                                if uint32(stor5[arg1][19][arg2][7].field_64) <= 0:
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + s >= s
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + s
                                    continue 
                                if bool(block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256)) == 1:
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + s >= s
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + s
                                    continue 
                                require 2 < stor5[arg1][19][arg2].field_1792
                                require stor5[arg1].field_1792
                                require (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s >= s
                                require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                    idx = idx + 1
                                    s = (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s
                                    continue 
                                require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_2048
                                require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                idx = idx + 1
                                s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s
                                continue 
                            if bool(block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256)) == 1:
                                require 2 < stor5[arg1][19][arg2].field_1792
                                if uint32(stor5[arg1][19][arg2][7].field_64) <= 0:
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + s >= s
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + s
                                    continue 
                                if bool(block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256)) == 1:
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + s >= s
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + s
                                    continue 
                                require 2 < stor5[arg1][19][arg2].field_1792
                                require stor5[arg1].field_1792
                                require (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s >= s
                                require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                    idx = idx + 1
                                    s = (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s
                                    continue 
                                require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_2048
                                require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                idx = idx + 1
                                s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s
                                continue 
                            require 1 < stor5[arg1][19][arg2].field_1792
                            require stor5[arg1].field_1536
                            require (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s >= s
                            require 2 < stor5[arg1][19][arg2].field_1792
                            if uint32(stor5[arg1][19][arg2][7].field_64) <= 0:
                                require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                    idx = idx + 1
                                    s = (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                    continue 
                                require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_2048
                                require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                idx = idx + 1
                                s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                continue 
                            if bool(block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256)) == 1:
                                require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                    idx = idx + 1
                                    s = (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                    continue 
                                require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_2048
                                require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                idx = idx + 1
                                s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                continue 
                            require 2 < stor5[arg1][19][arg2].field_1792
                            require stor5[arg1].field_1792
                            require uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                            require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                            mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                            if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                idx = idx + 1
                                s = (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                continue 
                            require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                            mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                            require stor5[arg1].field_2048
                            require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                            idx = idx + 1
                            s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                            continue 
                        require 0 < stor5[arg1][19][arg2].field_1792
                        require stor5[arg1].field_1280
                        require (uint32(stor5[arg1][19][arg2][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s >= s
                        require 1 < stor5[arg1][19][arg2].field_1792
                        if uint32(stor5[arg1][19][arg2][7].field_32) <= 0:
                            require 2 < stor5[arg1][19][arg2].field_1792
                            if uint32(stor5[arg1][19][arg2][7].field_64) <= 0:
                                require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                    idx = idx + 1
                                    s = (uint32(stor5[arg1][19][arg2][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                    continue 
                                require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_2048
                                require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                idx = idx + 1
                                s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                continue 
                            if bool(block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256)) == 1:
                                require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                    idx = idx + 1
                                    s = (uint32(stor5[arg1][19][arg2][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                    continue 
                                require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_2048
                                require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                idx = idx + 1
                                s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                continue 
                            require 2 < stor5[arg1][19][arg2].field_1792
                            require stor5[arg1].field_1792
                            require uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                            require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                            mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                            if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                idx = idx + 1
                                s = (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][arg2][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                continue 
                            require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                            mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                            require stor5[arg1].field_2048
                            require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                            idx = idx + 1
                            s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][arg2][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                            continue 
                        if bool(block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256)) == 1:
                            require 2 < stor5[arg1][19][arg2].field_1792
                            if uint32(stor5[arg1][19][arg2][7].field_64) <= 0:
                                require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                    idx = idx + 1
                                    s = (uint32(stor5[arg1][19][arg2][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                    continue 
                                require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_2048
                                require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                idx = idx + 1
                                s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                continue 
                            if bool(block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256)) == 1:
                                require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                    idx = idx + 1
                                    s = (uint32(stor5[arg1][19][arg2][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                    continue 
                                require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_2048
                                require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                idx = idx + 1
                                s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                continue 
                            require 2 < stor5[arg1][19][arg2].field_1792
                            require stor5[arg1].field_1792
                            require uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                            require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                            mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                            if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                idx = idx + 1
                                s = (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][arg2][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                continue 
                            require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                            mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                            require stor5[arg1].field_2048
                            require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                            idx = idx + 1
                            s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][arg2][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                            continue 
                        require 1 < stor5[arg1][19][arg2].field_1792
                        require stor5[arg1].field_1536
                        require uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536 >= 0
                        require 2 < stor5[arg1][19][arg2].field_1792
                        if uint32(stor5[arg1][19][arg2][7].field_64) <= 0:
                            require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                            mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                            if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                idx = idx + 1
                                s = (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (uint32(stor5[arg1][19][arg2][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                continue 
                            require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                            mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                            require stor5[arg1].field_2048
                            require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                            idx = idx + 1
                            s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (uint32(stor5[arg1][19][arg2][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                            continue 
                        if bool(block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256)) == 1:
                            require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                            mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                            if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                idx = idx + 1
                                s = (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (uint32(stor5[arg1][19][arg2][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                continue 
                            require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                            mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                            require stor5[arg1].field_2048
                            require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                            idx = idx + 1
                            s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (uint32(stor5[arg1][19][arg2][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                            continue 
                    else:
                        if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 <= 15:
                            if uint32(stor5[arg1][19][arg2][7].field_0) <= 0:
                                require 1 < stor5[arg1][19][arg2].field_1792
                                if uint32(stor5[arg1][19][arg2][7].field_32) <= 0:
                                    require 2 < stor5[arg1][19][arg2].field_1792
                                    if uint32(stor5[arg1][19][arg2][7].field_64) <= 0:
                                        require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                        mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                            idx = idx + 1
                                            s = s
                                            continue 
                                        require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                        mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + s >= s
                                        idx = idx + 1
                                        s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + s
                                        continue 
                                    if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 <= 15:
                                        require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                        mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                            idx = idx + 1
                                            s = s
                                            continue 
                                        require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                        mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + s >= s
                                        idx = idx + 1
                                        s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + s
                                        continue 
                                    require 2 < stor5[arg1][19][arg2].field_1792
                                    require stor5[arg1].field_1792
                                    require (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s >= s
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                        idx = idx + 1
                                        s = (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s
                                        continue 
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s
                                    continue 
                                if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 <= 15:
                                    require 2 < stor5[arg1][19][arg2].field_1792
                                    if uint32(stor5[arg1][19][arg2][7].field_64) <= 0:
                                        require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                        mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                            idx = idx + 1
                                            s = s
                                            continue 
                                        require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                        mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + s >= s
                                        idx = idx + 1
                                        s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + s
                                        continue 
                                    if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 <= 15:
                                        require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                        mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                            idx = idx + 1
                                            s = s
                                            continue 
                                        require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                        mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + s >= s
                                        idx = idx + 1
                                        s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + s
                                        continue 
                                    require 2 < stor5[arg1][19][arg2].field_1792
                                    require stor5[arg1].field_1792
                                    require (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s >= s
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                        idx = idx + 1
                                        s = (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s
                                        continue 
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s
                                    continue 
                                require 1 < stor5[arg1][19][arg2].field_1792
                                require stor5[arg1].field_1536
                                require (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s >= s
                                require 2 < stor5[arg1][19][arg2].field_1792
                                if uint32(stor5[arg1][19][arg2][7].field_64) <= 0:
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                        idx = idx + 1
                                        s = (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                        continue 
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                    continue 
                                if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 <= 15:
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                        idx = idx + 1
                                        s = (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                        continue 
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                    continue 
                                require 2 < stor5[arg1][19][arg2].field_1792
                                require stor5[arg1].field_1792
                                require uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                    idx = idx + 1
                                    s = (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                    continue 
                                require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_2048
                                require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                idx = idx + 1
                                s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                continue 
                            if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 <= 15:
                                require 1 < stor5[arg1][19][arg2].field_1792
                                if uint32(stor5[arg1][19][arg2][7].field_32) <= 0:
                                    require 2 < stor5[arg1][19][arg2].field_1792
                                    if uint32(stor5[arg1][19][arg2][7].field_64) <= 0:
                                        require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                        mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                            idx = idx + 1
                                            s = s
                                            continue 
                                        require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                        mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + s >= s
                                        idx = idx + 1
                                        s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + s
                                        continue 
                                    if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 <= 15:
                                        require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                        mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                            idx = idx + 1
                                            s = s
                                            continue 
                                        require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                        mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + s >= s
                                        idx = idx + 1
                                        s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + s
                                        continue 
                                    require 2 < stor5[arg1][19][arg2].field_1792
                                    require stor5[arg1].field_1792
                                    require (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s >= s
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                        idx = idx + 1
                                        s = (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s
                                        continue 
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s
                                    continue 
                                if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 <= 15:
                                    require 2 < stor5[arg1][19][arg2].field_1792
                                    if uint32(stor5[arg1][19][arg2][7].field_64) <= 0:
                                        require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                        mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                            idx = idx + 1
                                            s = s
                                            continue 
                                        require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                        mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + s >= s
                                        idx = idx + 1
                                        s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + s
                                        continue 
                                    if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 <= 15:
                                        require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                        mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                            idx = idx + 1
                                            s = s
                                            continue 
                                        require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                        mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + s >= s
                                        idx = idx + 1
                                        s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + s
                                        continue 
                                    require 2 < stor5[arg1][19][arg2].field_1792
                                    require stor5[arg1].field_1792
                                    require (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s >= s
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                        idx = idx + 1
                                        s = (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s
                                        continue 
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s
                                    continue 
                                require 1 < stor5[arg1][19][arg2].field_1792
                                require stor5[arg1].field_1536
                                require (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s >= s
                                require 2 < stor5[arg1][19][arg2].field_1792
                                if uint32(stor5[arg1][19][arg2][7].field_64) <= 0:
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                        idx = idx + 1
                                        s = (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                        continue 
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                    continue 
                                if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 <= 15:
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                        idx = idx + 1
                                        s = (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                        continue 
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                    continue 
                                require 2 < stor5[arg1][19][arg2].field_1792
                                require stor5[arg1].field_1792
                                require uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                    idx = idx + 1
                                    s = (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                    continue 
                                require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_2048
                                require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                idx = idx + 1
                                s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                continue 
                            require 0 < stor5[arg1][19][arg2].field_1792
                            require stor5[arg1].field_1280
                            require (uint32(stor5[arg1][19][arg2][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s >= s
                            require 1 < stor5[arg1][19][arg2].field_1792
                            if uint32(stor5[arg1][19][arg2][7].field_32) <= 0:
                                require 2 < stor5[arg1][19][arg2].field_1792
                                if uint32(stor5[arg1][19][arg2][7].field_64) <= 0:
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                        idx = idx + 1
                                        s = (uint32(stor5[arg1][19][arg2][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                        continue 
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                    continue 
                                if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 <= 15:
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                        idx = idx + 1
                                        s = (uint32(stor5[arg1][19][arg2][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                        continue 
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                    continue 
                                require 2 < stor5[arg1][19][arg2].field_1792
                                require stor5[arg1].field_1792
                                require uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                    idx = idx + 1
                                    s = (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][arg2][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                    continue 
                                require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_2048
                                require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                idx = idx + 1
                                s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][arg2][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                continue 
                            if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 <= 15:
                                require 2 < stor5[arg1][19][arg2].field_1792
                                if uint32(stor5[arg1][19][arg2][7].field_64) <= 0:
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                        idx = idx + 1
                                        s = (uint32(stor5[arg1][19][arg2][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                        continue 
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                    continue 
                                if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 <= 15:
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                        idx = idx + 1
                                        s = (uint32(stor5[arg1][19][arg2][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                        continue 
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                    continue 
                                require 2 < stor5[arg1][19][arg2].field_1792
                                require stor5[arg1].field_1792
                                require uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                    idx = idx + 1
                                    s = (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][arg2][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                    continue 
                                require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_2048
                                require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                idx = idx + 1
                                s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][arg2][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                continue 
                            require 1 < stor5[arg1][19][arg2].field_1792
                            require stor5[arg1].field_1536
                            require uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536 >= 0
                            require 2 < stor5[arg1][19][arg2].field_1792
                            if uint32(stor5[arg1][19][arg2][7].field_64) <= 0:
                                require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                    idx = idx + 1
                                    s = (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (uint32(stor5[arg1][19][arg2][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                    continue 
                                require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_2048
                                require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                idx = idx + 1
                                s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (uint32(stor5[arg1][19][arg2][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                continue 
                            if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 <= 15:
                                require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                    idx = idx + 1
                                    s = (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (uint32(stor5[arg1][19][arg2][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                    continue 
                                require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_2048
                                require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                idx = idx + 1
                                s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (uint32(stor5[arg1][19][arg2][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                continue 
                        else:
                            if uint32(stor5[arg1][19][arg2][7].field_0) <= 0:
                                require 1 < stor5[arg1][19][arg2].field_1792
                                if uint32(stor5[arg1][19][arg2][7].field_32) <= 0:
                                    require 2 < stor5[arg1][19][arg2].field_1792
                                    if uint32(stor5[arg1][19][arg2][7].field_64) <= 0:
                                        require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                        mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                            idx = idx + 1
                                            s = s
                                            continue 
                                        require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                        mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + s >= s
                                        idx = idx + 1
                                        s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + s
                                        continue 
                                    if bool(block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256)) == 1:
                                        require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                        mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                            idx = idx + 1
                                            s = s
                                            continue 
                                        require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                        mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + s >= s
                                        idx = idx + 1
                                        s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + s
                                        continue 
                                    require 2 < stor5[arg1][19][arg2].field_1792
                                    require stor5[arg1].field_1792
                                    require (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s >= s
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                        idx = idx + 1
                                        s = (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s
                                        continue 
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s
                                    continue 
                                if bool(block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256)) == 1:
                                    require 2 < stor5[arg1][19][arg2].field_1792
                                    if uint32(stor5[arg1][19][arg2][7].field_64) <= 0:
                                        require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                        mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                            idx = idx + 1
                                            s = s
                                            continue 
                                        require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                        mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + s >= s
                                        idx = idx + 1
                                        s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + s
                                        continue 
                                    if bool(block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256)) == 1:
                                        require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                        mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                            idx = idx + 1
                                            s = s
                                            continue 
                                        require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                        mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + s >= s
                                        idx = idx + 1
                                        s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + s
                                        continue 
                                    require 2 < stor5[arg1][19][arg2].field_1792
                                    require stor5[arg1].field_1792
                                    require (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s >= s
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                        idx = idx + 1
                                        s = (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s
                                        continue 
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s
                                    continue 
                                require 1 < stor5[arg1][19][arg2].field_1792
                                require stor5[arg1].field_1536
                                require (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s >= s
                                require 2 < stor5[arg1][19][arg2].field_1792
                                if uint32(stor5[arg1][19][arg2][7].field_64) <= 0:
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                        idx = idx + 1
                                        s = (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                        continue 
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                    continue 
                                if bool(block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256)) == 1:
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                        idx = idx + 1
                                        s = (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                        continue 
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                    continue 
                                require 2 < stor5[arg1][19][arg2].field_1792
                                require stor5[arg1].field_1792
                                require uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                    idx = idx + 1
                                    s = (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                    continue 
                                require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_2048
                                require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                idx = idx + 1
                                s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                continue 
                            if bool(block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256)) != 1:
                                require 1 < stor5[arg1][19][arg2].field_1792
                                if uint32(stor5[arg1][19][arg2][7].field_32) <= 0:
                                    require 2 < stor5[arg1][19][arg2].field_1792
                                    if uint32(stor5[arg1][19][arg2][7].field_64) <= 0:
                                        require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                        mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                            idx = idx + 1
                                            s = s
                                            continue 
                                        require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                        mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + s >= s
                                        idx = idx + 1
                                        s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + s
                                        continue 
                                    if bool(block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256)) == 1:
                                        require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                        mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                            idx = idx + 1
                                            s = s
                                            continue 
                                        require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                        mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + s >= s
                                        idx = idx + 1
                                        s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + s
                                        continue 
                                    require 2 < stor5[arg1][19][arg2].field_1792
                                    require stor5[arg1].field_1792
                                    require (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s >= s
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                        idx = idx + 1
                                        s = (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s
                                        continue 
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s
                                    continue 
                                if bool(block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256)) == 1:
                                    require 2 < stor5[arg1][19][arg2].field_1792
                                    if uint32(stor5[arg1][19][arg2][7].field_64) <= 0:
                                        require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                        mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                            idx = idx + 1
                                            s = s
                                            continue 
                                        require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                        mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + s >= s
                                        idx = idx + 1
                                        s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + s
                                        continue 
                                    if bool(block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256)) == 1:
                                        require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                        mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                            idx = idx + 1
                                            s = s
                                            continue 
                                        require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                        mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + s >= s
                                        idx = idx + 1
                                        s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + s
                                        continue 
                                    require 2 < stor5[arg1][19][arg2].field_1792
                                    require stor5[arg1].field_1792
                                    require (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s >= s
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                        idx = idx + 1
                                        s = (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s
                                        continue 
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s
                                    continue 
                                require 1 < stor5[arg1][19][arg2].field_1792
                                require stor5[arg1].field_1536
                                require (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s >= s
                                require 2 < stor5[arg1][19][arg2].field_1792
                                if uint32(stor5[arg1][19][arg2][7].field_64) <= 0:
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                        idx = idx + 1
                                        s = (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                        continue 
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                    continue 
                                if bool(block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256)) == 1:
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                        idx = idx + 1
                                        s = (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                        continue 
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                    continue 
                                require 2 < stor5[arg1][19][arg2].field_1792
                                require stor5[arg1].field_1792
                                require uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                    idx = idx + 1
                                    s = (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                    continue 
                                require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_2048
                                require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                idx = idx + 1
                                s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                continue 
                            require 0 < stor5[arg1][19][arg2].field_1792
                            require stor5[arg1].field_1280
                            require (uint32(stor5[arg1][19][arg2][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s >= s
                            require 1 < stor5[arg1][19][arg2].field_1792
                            if uint32(stor5[arg1][19][arg2][7].field_32) <= 0:
                                require 2 < stor5[arg1][19][arg2].field_1792
                                if uint32(stor5[arg1][19][arg2][7].field_64) <= 0:
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                        idx = idx + 1
                                        s = (uint32(stor5[arg1][19][arg2][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                        continue 
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                    continue 
                                if bool(block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256)) == 1:
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                        idx = idx + 1
                                        s = (uint32(stor5[arg1][19][arg2][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                        continue 
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                    continue 
                                require 2 < stor5[arg1][19][arg2].field_1792
                                require stor5[arg1].field_1792
                                require uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                    idx = idx + 1
                                    s = (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][arg2][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                    continue 
                                require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_2048
                                require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                idx = idx + 1
                                s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][arg2][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                continue 
                            if bool(block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256)) == 1:
                                require 2 < stor5[arg1][19][arg2].field_1792
                                if uint32(stor5[arg1][19][arg2][7].field_64) <= 0:
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                        idx = idx + 1
                                        s = (uint32(stor5[arg1][19][arg2][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                        continue 
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                    continue 
                                if bool(block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256)) == 1:
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                        idx = idx + 1
                                        s = (uint32(stor5[arg1][19][arg2][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                        continue 
                                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                    continue 
                                require 2 < stor5[arg1][19][arg2].field_1792
                                require stor5[arg1].field_1792
                                require uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                    idx = idx + 1
                                    s = (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][arg2][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                    continue 
                                require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_2048
                                require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                idx = idx + 1
                                s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][arg2][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                continue 
                            require 1 < stor5[arg1][19][arg2].field_1792
                            require stor5[arg1].field_1536
                            require uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536 >= 0
                            require 2 < stor5[arg1][19][arg2].field_1792
                            if uint32(stor5[arg1][19][arg2][7].field_64) <= 0:
                                require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                    idx = idx + 1
                                    s = (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (uint32(stor5[arg1][19][arg2][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                    continue 
                                require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_2048
                                require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                idx = idx + 1
                                s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (uint32(stor5[arg1][19][arg2][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                continue 
                            if bool(block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256)) == 1:
                                require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                                    idx = idx + 1
                                    s = (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (uint32(stor5[arg1][19][arg2][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                    continue 
                                require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_2048
                                require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                idx = idx + 1
                                s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (uint32(stor5[arg1][19][arg2][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                continue 
                    require 2 < stor5[arg1][19][arg2].field_1792
                    require stor5[arg1].field_1792
                    require uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                    if stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] <= 0:
                        idx = idx + 1
                        s = (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (uint32(stor5[arg1][19][arg2][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                        continue 
                    require uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3) < stor5[arg1][19][arg2].field_1792
                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                    require stor5[arg1].field_2048
                    require stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                    idx = idx + 1
                    s = (stor((Mask(5, 3, (block.hash(uint8(idx) + Mask(256, 256, stor[('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][arg2][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][arg2][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (uint32(stor5[arg1][19][arg2][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                    continue 
            else:
                idx = 0
                s = 0
                while uint8(idx) < sub_78463323:
                    if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 < 10:
                        if bool(stor5[arg1][19][arg2].field_1536) != 1:
                            if Mask(1, 1, stor5[arg1][19][arg2].field_1536) != 2:
                                if Mask(1, 2, stor5[arg1][19][arg2].field_1536) != 4:
                                    idx = idx + 1
                                    s = s
                                    continue 
                                require uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                if stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] <= 0:
                                    idx = idx + 1
                                    s = s
                                    continue 
                                if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 < 10:
                                    idx = idx + 1
                                    s = s
                                    continue 
                                require uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_1792
                                require (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s >= s
                                idx = idx + 1
                                s = (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s
                                continue 
                            require uint8(idx) < stor5[arg1][19][arg2].field_1792
                            mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                            if stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] <= 0:
                                if Mask(1, 2, stor5[arg1][19][arg2].field_1536) != 4:
                                    idx = idx + 1
                                    s = s
                                    continue 
                                require sub_78463323 + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] <= 0:
                                    idx = idx + 1
                                    s = s
                                    continue 
                                if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 < 10:
                                    idx = idx + 1
                                    s = s
                                    continue 
                                require sub_78463323 + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_1792
                                require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s >= s
                                idx = idx + 1
                                s = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s
                                continue 
                            if bool(block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256)) == 1:
                                if Mask(1, 2, stor5[arg1][19][arg2].field_1536) != 4:
                                    idx = idx + 1
                                    s = s
                                    continue 
                                require sub_78463323 + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] <= 0:
                                    idx = idx + 1
                                    s = s
                                    continue 
                                if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 < 10:
                                    idx = idx + 1
                                    s = s
                                    continue 
                                require sub_78463323 + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_1792
                                require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s >= s
                                idx = idx + 1
                                s = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s
                                continue 
                            require uint8(idx) < stor5[arg1][19][arg2].field_1792
                            mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                            require stor5[arg1].field_1536
                            require (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s >= s
                            if Mask(1, 2, stor5[arg1][19][arg2].field_1536) != 4:
                                idx = idx + 1
                                s = (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                continue 
                            require sub_78463323 + uint8(idx) < stor5[arg1][19][arg2].field_1792
                            mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                            if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] <= 0:
                                idx = idx + 1
                                s = (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                continue 
                            if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 < 10:
                                idx = idx + 1
                                s = (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                continue 
                            require sub_78463323 + uint8(idx) < stor5[arg1][19][arg2].field_1792
                            mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                            require stor5[arg1].field_1792
                            require stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                            idx = idx + 1
                            s = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                            continue 
                        require uint8(idx) < stor5[arg1][19][arg2].field_1792
                        mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                        if stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] <= 0:
                            if Mask(1, 1, stor5[arg1][19][arg2].field_1536) != 2:
                                if Mask(1, 2, stor5[arg1][19][arg2].field_1536) != 4:
                                    idx = idx + 1
                                    s = s
                                    continue 
                                require sub_78463323 + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] <= 0:
                                    idx = idx + 1
                                    s = s
                                    continue 
                                if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 < 10:
                                    idx = idx + 1
                                    s = s
                                    continue 
                                require sub_78463323 + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_1792
                                require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s >= s
                                idx = idx + 1
                                s = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s
                                continue 
                            require sub_78463323 + uint8(idx) < stor5[arg1][19][arg2].field_1792
                            mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                            if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] <= 0:
                                if Mask(1, 2, stor5[arg1][19][arg2].field_1536) != 4:
                                    idx = idx + 1
                                    s = s
                                    continue 
                                require (2 * sub_78463323) + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] <= 0:
                                    idx = idx + 1
                                    s = s
                                    continue 
                                if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 < 10:
                                    idx = idx + 1
                                    s = s
                                    continue 
                                require (2 * sub_78463323) + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_1792
                                require (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s >= s
                                idx = idx + 1
                                s = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s
                                continue 
                            if bool(block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256)) == 1:
                                if Mask(1, 2, stor5[arg1][19][arg2].field_1536) != 4:
                                    idx = idx + 1
                                    s = s
                                    continue 
                                require (2 * sub_78463323) + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] <= 0:
                                    idx = idx + 1
                                    s = s
                                    continue 
                                if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 < 10:
                                    idx = idx + 1
                                    s = s
                                    continue 
                                require (2 * sub_78463323) + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_1792
                                require (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s >= s
                                idx = idx + 1
                                s = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s
                                continue 
                            require sub_78463323 + uint8(idx) < stor5[arg1][19][arg2].field_1792
                            mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                            require stor5[arg1].field_1536
                            require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s >= s
                            if Mask(1, 2, stor5[arg1][19][arg2].field_1536) != 4:
                                idx = idx + 1
                                s = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                continue 
                            require (2 * sub_78463323) + uint8(idx) < stor5[arg1][19][arg2].field_1792
                            mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                            if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] <= 0:
                                idx = idx + 1
                                s = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                continue 
                            if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 < 10:
                                idx = idx + 1
                                s = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                continue 
                            require (2 * sub_78463323) + uint8(idx) < stor5[arg1][19][arg2].field_1792
                            mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                            require stor5[arg1].field_1792
                            require stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                            idx = idx + 1
                            s = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                            continue 
                        if bool(block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256)) != 1:
                            if Mask(1, 1, stor5[arg1][19][arg2].field_1536) != 2:
                                if Mask(1, 2, stor5[arg1][19][arg2].field_1536) != 4:
                                    idx = idx + 1
                                    s = s
                                    continue 
                                require sub_78463323 + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] <= 0:
                                    idx = idx + 1
                                    s = s
                                    continue 
                                if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 < 10:
                                    idx = idx + 1
                                    s = s
                                    continue 
                                require sub_78463323 + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_1792
                                require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s >= s
                                idx = idx + 1
                                s = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s
                                continue 
                            require sub_78463323 + uint8(idx) < stor5[arg1][19][arg2].field_1792
                            mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                            if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] <= 0:
                                if Mask(1, 2, stor5[arg1][19][arg2].field_1536) != 4:
                                    idx = idx + 1
                                    s = s
                                    continue 
                                require (2 * sub_78463323) + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] <= 0:
                                    idx = idx + 1
                                    s = s
                                    continue 
                                if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 < 10:
                                    idx = idx + 1
                                    s = s
                                    continue 
                                require (2 * sub_78463323) + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_1792
                                require (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s >= s
                                idx = idx + 1
                                s = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s
                                continue 
                            if bool(block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256)) == 1:
                                if Mask(1, 2, stor5[arg1][19][arg2].field_1536) != 4:
                                    idx = idx + 1
                                    s = s
                                    continue 
                                require (2 * sub_78463323) + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] <= 0:
                                    idx = idx + 1
                                    s = s
                                    continue 
                                if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 < 10:
                                    idx = idx + 1
                                    s = s
                                    continue 
                                require (2 * sub_78463323) + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_1792
                                require (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s >= s
                                idx = idx + 1
                                s = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s
                                continue 
                            require sub_78463323 + uint8(idx) < stor5[arg1][19][arg2].field_1792
                            mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                            require stor5[arg1].field_1536
                            require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s >= s
                            if Mask(1, 2, stor5[arg1][19][arg2].field_1536) != 4:
                                idx = idx + 1
                                s = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                continue 
                            require (2 * sub_78463323) + uint8(idx) < stor5[arg1][19][arg2].field_1792
                            mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                            if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] <= 0:
                                idx = idx + 1
                                s = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                continue 
                            if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 < 10:
                                idx = idx + 1
                                s = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                continue 
                            require (2 * sub_78463323) + uint8(idx) < stor5[arg1][19][arg2].field_1792
                            mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                            require stor5[arg1].field_1792
                            require stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                            idx = idx + 1
                            s = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                            continue 
                        require uint8(idx) < stor5[arg1][19][arg2].field_1792
                        mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                        require stor5[arg1].field_1280
                        require (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s >= s
                        if Mask(1, 1, stor5[arg1][19][arg2].field_1536) != 2:
                            if Mask(1, 2, stor5[arg1][19][arg2].field_1536) != 4:
                                idx = idx + 1
                                s = (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                continue 
                            require sub_78463323 + uint8(idx) < stor5[arg1][19][arg2].field_1792
                            mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                            if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] <= 0:
                                idx = idx + 1
                                s = (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                continue 
                            if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 < 10:
                                idx = idx + 1
                                s = (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                continue 
                            require sub_78463323 + uint8(idx) < stor5[arg1][19][arg2].field_1792
                            mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                            require stor5[arg1].field_1792
                            require stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                            idx = idx + 1
                            s = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                            continue 
                        require sub_78463323 + uint8(idx) < stor5[arg1][19][arg2].field_1792
                        mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                        if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] <= 0:
                            if Mask(1, 2, stor5[arg1][19][arg2].field_1536) != 4:
                                idx = idx + 1
                                s = (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                continue 
                            require (2 * sub_78463323) + uint8(idx) < stor5[arg1][19][arg2].field_1792
                            mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                            if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] <= 0:
                                idx = idx + 1
                                s = (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                continue 
                            if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 < 10:
                                idx = idx + 1
                                s = (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                continue 
                            require (2 * sub_78463323) + uint8(idx) < stor5[arg1][19][arg2].field_1792
                            mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                            require stor5[arg1].field_1792
                            require stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                            idx = idx + 1
                            s = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                            continue 
                        if bool(block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256)) == 1:
                            if Mask(1, 2, stor5[arg1][19][arg2].field_1536) != 4:
                                idx = idx + 1
                                s = (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                continue 
                            require (2 * sub_78463323) + uint8(idx) < stor5[arg1][19][arg2].field_1792
                            mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                            if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] <= 0:
                                idx = idx + 1
                                s = (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                continue 
                            if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 < 10:
                                idx = idx + 1
                                s = (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                continue 
                            require (2 * sub_78463323) + uint8(idx) < stor5[arg1][19][arg2].field_1792
                            mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                            require stor5[arg1].field_1792
                            require stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                            idx = idx + 1
                            s = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                            continue 
                        require sub_78463323 + uint8(idx) < stor5[arg1][19][arg2].field_1792
                        mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                        require stor5[arg1].field_1536
                        require stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2560 / stor5[arg1].field_1536 >= 0
                        if Mask(1, 2, stor5[arg1][19][arg2].field_1536) != 4:
                            idx = idx + 1
                            s = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                            continue 
                        require (2 * sub_78463323) + uint8(idx) < stor5[arg1][19][arg2].field_1792
                        mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                        if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] <= 0:
                            idx = idx + 1
                            s = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                            continue 
                        if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 < 10:
                            idx = idx + 1
                            s = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                            continue 
                    else:
                        if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 <= 15:
                            if bool(stor5[arg1][19][arg2].field_1536) != 1:
                                if Mask(1, 1, stor5[arg1][19][arg2].field_1536) != 2:
                                    if Mask(1, 2, stor5[arg1][19][arg2].field_1536) != 4:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    require uint8(idx) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] <= 0:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 > 15:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    require uint8(idx) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s >= s
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s
                                    continue 
                                require uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                if stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] <= 0:
                                    if Mask(1, 2, stor5[arg1][19][arg2].field_1536) != 4:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    require sub_78463323 + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] <= 0:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 > 15:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    require sub_78463323 + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s >= s
                                    idx = idx + 1
                                    s = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s
                                    continue 
                                if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 <= 15:
                                    if Mask(1, 2, stor5[arg1][19][arg2].field_1536) != 4:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    require sub_78463323 + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] <= 0:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 > 15:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    require sub_78463323 + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s >= s
                                    idx = idx + 1
                                    s = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s
                                    continue 
                                require uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_1536
                                require (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s >= s
                                if Mask(1, 2, stor5[arg1][19][arg2].field_1536) != 4:
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                    continue 
                                require sub_78463323 + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] <= 0:
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                    continue 
                                if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 > 15:
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                    continue 
                                require sub_78463323 + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_1792
                                require stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                idx = idx + 1
                                s = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                continue 
                            require uint8(idx) < stor5[arg1][19][arg2].field_1792
                            mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                            if stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] <= 0:
                                if Mask(1, 1, stor5[arg1][19][arg2].field_1536) != 2:
                                    if Mask(1, 2, stor5[arg1][19][arg2].field_1536) != 4:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    require sub_78463323 + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] <= 0:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 > 15:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    require sub_78463323 + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s >= s
                                    idx = idx + 1
                                    s = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s
                                    continue 
                                require sub_78463323 + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] <= 0:
                                    if Mask(1, 2, stor5[arg1][19][arg2].field_1536) != 4:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    require (2 * sub_78463323) + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] <= 0:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 > 15:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    require (2 * sub_78463323) + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s >= s
                                    idx = idx + 1
                                    s = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s
                                    continue 
                                if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 <= 15:
                                    if Mask(1, 2, stor5[arg1][19][arg2].field_1536) != 4:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    require (2 * sub_78463323) + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] <= 0:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 > 15:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    require (2 * sub_78463323) + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s >= s
                                    idx = idx + 1
                                    s = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s
                                    continue 
                                require sub_78463323 + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_1536
                                require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s >= s
                                if Mask(1, 2, stor5[arg1][19][arg2].field_1536) != 4:
                                    idx = idx + 1
                                    s = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                    continue 
                                require (2 * sub_78463323) + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] <= 0:
                                    idx = idx + 1
                                    s = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                    continue 
                                if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 > 15:
                                    idx = idx + 1
                                    s = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                    continue 
                                require (2 * sub_78463323) + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_1792
                                require stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                idx = idx + 1
                                s = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                continue 
                            if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 <= 15:
                                if Mask(1, 1, stor5[arg1][19][arg2].field_1536) != 2:
                                    if Mask(1, 2, stor5[arg1][19][arg2].field_1536) != 4:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    require sub_78463323 + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] <= 0:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 > 15:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    require sub_78463323 + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s >= s
                                    idx = idx + 1
                                    s = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s
                                    continue 
                                require sub_78463323 + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] <= 0:
                                    if Mask(1, 2, stor5[arg1][19][arg2].field_1536) != 4:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    require (2 * sub_78463323) + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] <= 0:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 > 15:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    require (2 * sub_78463323) + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s >= s
                                    idx = idx + 1
                                    s = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s
                                    continue 
                                if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 <= 15:
                                    if Mask(1, 2, stor5[arg1][19][arg2].field_1536) != 4:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    require (2 * sub_78463323) + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] <= 0:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 > 15:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    require (2 * sub_78463323) + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s >= s
                                    idx = idx + 1
                                    s = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s
                                    continue 
                                require sub_78463323 + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_1536
                                require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s >= s
                                if Mask(1, 2, stor5[arg1][19][arg2].field_1536) != 4:
                                    idx = idx + 1
                                    s = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                    continue 
                                require (2 * sub_78463323) + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] <= 0:
                                    idx = idx + 1
                                    s = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                    continue 
                                if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 > 15:
                                    idx = idx + 1
                                    s = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                    continue 
                                require (2 * sub_78463323) + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_1792
                                require stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                idx = idx + 1
                                s = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                continue 
                            require uint8(idx) < stor5[arg1][19][arg2].field_1792
                            mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                            require stor5[arg1].field_1280
                            require (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s >= s
                            if Mask(1, 1, stor5[arg1][19][arg2].field_1536) != 2:
                                if Mask(1, 2, stor5[arg1][19][arg2].field_1536) != 4:
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                    continue 
                                require sub_78463323 + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] <= 0:
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                    continue 
                                if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 > 15:
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                    continue 
                                require sub_78463323 + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_1792
                                require stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                idx = idx + 1
                                s = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                continue 
                            require sub_78463323 + uint8(idx) < stor5[arg1][19][arg2].field_1792
                            mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                            if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] <= 0:
                                if Mask(1, 2, stor5[arg1][19][arg2].field_1536) != 4:
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                    continue 
                                require (2 * sub_78463323) + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] <= 0:
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                    continue 
                                if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 > 15:
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                    continue 
                                require (2 * sub_78463323) + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_1792
                                require stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                idx = idx + 1
                                s = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                continue 
                            if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 <= 15:
                                if Mask(1, 2, stor5[arg1][19][arg2].field_1536) != 4:
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                    continue 
                                require (2 * sub_78463323) + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] <= 0:
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                    continue 
                                if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 > 15:
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                    continue 
                                require (2 * sub_78463323) + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_1792
                                require stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                idx = idx + 1
                                s = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                continue 
                        else:
                            if bool(stor5[arg1][19][arg2].field_1536) != 1:
                                if Mask(1, 1, stor5[arg1][19][arg2].field_1536) != 2:
                                    if Mask(1, 2, stor5[arg1][19][arg2].field_1536) != 4:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    require uint8(idx) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] <= 0:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 > 15:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    require uint8(idx) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s >= s
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s
                                    continue 
                                require uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                if stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] <= 0:
                                    if Mask(1, 2, stor5[arg1][19][arg2].field_1536) != 4:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    require sub_78463323 + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] <= 0:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 > 15:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    require sub_78463323 + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s >= s
                                    idx = idx + 1
                                    s = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s
                                    continue 
                                if bool(block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256)) == 1:
                                    if Mask(1, 2, stor5[arg1][19][arg2].field_1536) != 4:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    require sub_78463323 + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] <= 0:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 > 15:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    require sub_78463323 + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s >= s
                                    idx = idx + 1
                                    s = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s
                                    continue 
                                require uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_1536
                                require (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s >= s
                                if Mask(1, 2, stor5[arg1][19][arg2].field_1536) != 4:
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                    continue 
                                require sub_78463323 + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] <= 0:
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                    continue 
                                if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 > 15:
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                    continue 
                                require sub_78463323 + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_1792
                                require stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                idx = idx + 1
                                s = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                continue 
                            require uint8(idx) < stor5[arg1][19][arg2].field_1792
                            mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                            if stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] <= 0:
                                if Mask(1, 1, stor5[arg1][19][arg2].field_1536) != 2:
                                    if Mask(1, 2, stor5[arg1][19][arg2].field_1536) != 4:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    require sub_78463323 + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] <= 0:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 > 15:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    require sub_78463323 + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s >= s
                                    idx = idx + 1
                                    s = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s
                                    continue 
                                require sub_78463323 + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] <= 0:
                                    if Mask(1, 2, stor5[arg1][19][arg2].field_1536) != 4:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    require (2 * sub_78463323) + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] <= 0:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 > 15:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    require (2 * sub_78463323) + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s >= s
                                    idx = idx + 1
                                    s = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s
                                    continue 
                                if bool(block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256)) == 1:
                                    if Mask(1, 2, stor5[arg1][19][arg2].field_1536) != 4:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    require (2 * sub_78463323) + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] <= 0:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 > 15:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    require (2 * sub_78463323) + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s >= s
                                    idx = idx + 1
                                    s = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s
                                    continue 
                                require sub_78463323 + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_1536
                                require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s >= s
                                if Mask(1, 2, stor5[arg1][19][arg2].field_1536) != 4:
                                    idx = idx + 1
                                    s = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                    continue 
                                require (2 * sub_78463323) + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] <= 0:
                                    idx = idx + 1
                                    s = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                    continue 
                                if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 > 15:
                                    idx = idx + 1
                                    s = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                    continue 
                                require (2 * sub_78463323) + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_1792
                                require stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                idx = idx + 1
                                s = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                continue 
                            if bool(block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256)) != 1:
                                if Mask(1, 1, stor5[arg1][19][arg2].field_1536) != 2:
                                    if Mask(1, 2, stor5[arg1][19][arg2].field_1536) != 4:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    require sub_78463323 + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] <= 0:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 > 15:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    require sub_78463323 + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s >= s
                                    idx = idx + 1
                                    s = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s
                                    continue 
                                require sub_78463323 + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] <= 0:
                                    if Mask(1, 2, stor5[arg1][19][arg2].field_1536) != 4:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    require (2 * sub_78463323) + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] <= 0:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 > 15:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    require (2 * sub_78463323) + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s >= s
                                    idx = idx + 1
                                    s = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s
                                    continue 
                                if bool(block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256)) == 1:
                                    if Mask(1, 2, stor5[arg1][19][arg2].field_1536) != 4:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    require (2 * sub_78463323) + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] <= 0:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 > 15:
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    require (2 * sub_78463323) + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s >= s
                                    idx = idx + 1
                                    s = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + s
                                    continue 
                                require sub_78463323 + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_1536
                                require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s >= s
                                if Mask(1, 2, stor5[arg1][19][arg2].field_1536) != 4:
                                    idx = idx + 1
                                    s = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                    continue 
                                require (2 * sub_78463323) + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] <= 0:
                                    idx = idx + 1
                                    s = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                    continue 
                                if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 > 15:
                                    idx = idx + 1
                                    s = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                    continue 
                                require (2 * sub_78463323) + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_1792
                                require stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                idx = idx + 1
                                s = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + s
                                continue 
                            require uint8(idx) < stor5[arg1][19][arg2].field_1792
                            mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                            require stor5[arg1].field_1280
                            require (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s >= s
                            if Mask(1, 1, stor5[arg1][19][arg2].field_1536) != 2:
                                if Mask(1, 2, stor5[arg1][19][arg2].field_1536) != 4:
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                    continue 
                                require sub_78463323 + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] <= 0:
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                    continue 
                                if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 > 15:
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                    continue 
                                require sub_78463323 + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_1792
                                require stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                idx = idx + 1
                                s = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                continue 
                            require sub_78463323 + uint8(idx) < stor5[arg1][19][arg2].field_1792
                            mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                            if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] <= 0:
                                if Mask(1, 2, stor5[arg1][19][arg2].field_1536) != 4:
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                    continue 
                                require (2 * sub_78463323) + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] <= 0:
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                    continue 
                                if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 > 15:
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                    continue 
                                require (2 * sub_78463323) + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_1792
                                require stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                idx = idx + 1
                                s = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                continue 
                            if bool(block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256)) == 1:
                                if Mask(1, 2, stor5[arg1][19][arg2].field_1536) != 4:
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                    continue 
                                require (2 * sub_78463323) + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] <= 0:
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                    continue 
                                if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 > 15:
                                    idx = idx + 1
                                    s = (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                    continue 
                                require (2 * sub_78463323) + uint8(idx) < stor5[arg1][19][arg2].field_1792
                                mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_1792
                                require stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                idx = idx + 1
                                s = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                                continue 
                        require sub_78463323 + uint8(idx) < stor5[arg1][19][arg2].field_1792
                        mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                        require stor5[arg1].field_1536
                        require stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2560 / stor5[arg1].field_1536 >= 0
                        if Mask(1, 2, stor5[arg1][19][arg2].field_1536) != 4:
                            idx = idx + 1
                            s = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                            continue 
                        require (2 * sub_78463323) + uint8(idx) < stor5[arg1][19][arg2].field_1792
                        mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                        if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] <= 0:
                            idx = idx + 1
                            s = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                            continue 
                        if block.hash(uint8(idx) + stor5[arg1][19][arg2].field_256) % 16 > 15:
                            idx = idx + 1
                            s = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                            continue 
                    require (2 * sub_78463323) + uint8(idx) < stor5[arg1][19][arg2].field_1792
                    mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                    require stor5[arg1].field_1792
                    require stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                    idx = idx + 1
                    s = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(idx))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(idx)) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(idx))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (stor((Mask(5, 3, idx) >> 3) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(idx)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + s
                    continue 
                idx = 0
                t = 0
                while uint8(idx) < 3:
                    if not uint8(stor5[arg1][19][arg2].field_1536 % 16 and 2^uint8(idx)):
                        idx = idx + 1
                        t = t
                        continue 
                    idx = idx + 1
                    t = t + 1
                    continue 
                if Mask(1, 3, stor5[arg1][19][arg2].field_1536) == 8:
                    require sub_78463323 * t < stor5[arg1][19][arg2].field_1792
                    u = 0
                    v = (sub_78463323 * t) + 1
                    while uint32(u) < stor((0.125 / stor[('name', 'stor4', 4)] * t) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 * t)]:
                        idx = 0
                        t = s
                        while uint8(idx) < sub_78463323:
                            require v < stor5[arg1][19][arg2].field_1792
                            mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                            if stor((0.125 / v) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(v)] != block.hash(stor5[arg1][19][arg2].field_256 + uint8(idx)) % 16:
                                idx = idx + 1
                                t = t
                                continue 
                            require v + 1 < stor5[arg1][19][arg2].field_1792
                            mem[0] = sha3(arg2, sha3(arg1, 5) + 19) + 7
                            require stor5[arg1].field_2048
                            require (stor((0.125 / v + 1) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(v + 1)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t >= t
                            idx = idx + 1
                            t = (stor((0.125 / v + 1) + ('array', 7, ('map', ('param', 'arg2'), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(v + 1)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t
                            continue 
                        u = u + 1
                        v = v + 2
                        continue 
            if not s:
                uint8(stor5[arg1][19][arg2].field_1544) = 1
                stor5[arg1][19][arg2].field_1280 = 0
                require stor5[arg1][19][arg2].field_1024 <= stor5[arg1].field_4352
                stor5[arg1].field_4352 -= stor5[arg1][19][arg2].field_1024
                stor5[arg1].field_4096 = stor5[arg1][19][arg2].field_512
                require (sub_9b458bd3 * stor5[arg1][19][arg2].field_768 / 10000) + sub_ccc8efcc[address(stor5[arg1].field_256)] >= sub_ccc8efcc[address(stor5[arg1].field_256)]
                sub_ccc8efcc[address(stor5[arg1].field_256)] += sub_9b458bd3 * stor5[arg1][19][arg2].field_768 / 10000
                require stor5[arg1][19][arg2].field_768 - (sub_9b458bd3 * stor5[arg1][19][arg2].field_768 / 10000) + stor5[arg1].field_4608 >= stor5[arg1].field_4608
                stor5[arg1].field_4608 = stor5[arg1][19][arg2].field_768 - (sub_9b458bd3 * stor5[arg1][19][arg2].field_768 / 10000) + stor5[arg1].field_4608
                require 0 <= stor5[arg1][19][arg2].field_768 - (sub_9b458bd3 * stor5[arg1][19][arg2].field_768 / 10000) + stor5[arg1].field_4608
                stor5[arg1].field_4608 = stor5[arg1][19][arg2].field_768 - (sub_9b458bd3 * stor5[arg1][19][arg2].field_768 / 10000) + stor5[arg1].field_4608
            else:
                require stor5[arg1].field_3584 * s / s == stor5[arg1].field_3584
                if stor5[arg1].field_3584 * s > 0:
                    if not address(stor5[arg1].field_256):
                        if stor5[arg1].field_3584 * s > eth.balance(this.address):
                            revert with 0, 'Not enough ether :(!'
                    else:
                        require ext_code.size(address(stor5[arg1].field_256))
                        staticcall address(stor5[arg1].field_256).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] < stor5[arg1].field_3584 * s:
                            revert with 0, 'Not enough token :(!'
                uint8(stor5[arg1][19][arg2].field_1544) = 1
                stor5[arg1][19][arg2].field_1280 = stor5[arg1].field_3584 * s
                require stor5[arg1][19][arg2].field_1024 <= stor5[arg1].field_4352
                stor5[arg1].field_4352 -= stor5[arg1][19][arg2].field_1024
                stor5[arg1].field_4096 = stor5[arg1][19][arg2].field_512
                require (sub_9b458bd3 * stor5[arg1][19][arg2].field_768 / 10000) + sub_ccc8efcc[address(stor5[arg1].field_256)] >= sub_ccc8efcc[address(stor5[arg1].field_256)]
                sub_ccc8efcc[address(stor5[arg1].field_256)] += sub_9b458bd3 * stor5[arg1][19][arg2].field_768 / 10000
                require stor5[arg1][19][arg2].field_768 - (sub_9b458bd3 * stor5[arg1][19][arg2].field_768 / 10000) + stor5[arg1].field_4608 >= stor5[arg1].field_4608
                stor5[arg1].field_4608 = stor5[arg1][19][arg2].field_768 - (sub_9b458bd3 * stor5[arg1][19][arg2].field_768 / 10000) + stor5[arg1].field_4608
                require stor5[arg1].field_3584 * s <= stor5[arg1][19][arg2].field_768 - (sub_9b458bd3 * stor5[arg1][19][arg2].field_768 / 10000) + stor5[arg1].field_4608
                stor5[arg1].field_4608 = stor5[arg1][19][arg2].field_768 - (sub_9b458bd3 * stor5[arg1][19][arg2].field_768 / 10000) + stor5[arg1].field_4608 - (stor5[arg1].field_3584 * s)
                if stor5[arg1].field_3584 * s > 0:
                    if not address(stor5[arg1].field_256):
                        call address(stor5[arg1][19][arg2].field_0) with:
                           value stor5[arg1].field_3584 * s wei
                             gas 2300 * is_zero(value) wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        require ext_code.size(address(stor5[arg1].field_256))
                        call address(stor5[arg1].field_256).0xa9059cbb with:
                             gas gas_remaining wei
                            args address(stor5[arg1][19][arg2].field_0), stor5[arg1].field_3584 * s
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                    emit 0xc6463bc3: arg1, arg2, stor5[arg1].field_3584 * s
}

function sub_34e4aa49(?) payable {
    mem[64] = 96
    require calldata.size - 4 >= 32
    if arg1 <= 0:
        revert with 0, 'wrong roomId!'
    mem[0] = arg1
    mem[32] = 5
    if not uint8(stor5[arg1].field_3328):
        revert with 0, 32, 24, 0xfe54686520726f6f6d206973206e6f7420616374697665642100000000000000
    idx = stor16[sha3(mem[0 len 64])] + 1
    while idx <= stor5[arg1].field_3840:
        require sub_78463323 + stor5[arg1][19][idx].field_256 >= stor5[arg1][19][idx].field_256
        if block.number <= sub_78463323 + stor5[arg1][19][idx].field_256:
        mem[0] = idx
        mem[32] = sha3(arg1, 5) + 19
        if not uint8(stor5[arg1][19][idx].field_1544):
            require -sub_78463323 + stor5[arg1][19][idx].field_256 + 256 >= stor5[arg1][19][idx].field_256
            if block.number > -sub_78463323 + stor5[arg1][19][idx].field_256 + 256:
                if not address(stor5[arg1].field_256):
                    if stor5[arg1][19][idx].field_768 > eth.balance(this.address):
                        revert with 0, 'Not enough ether :(!'
                else:
                    require ext_code.size(address(stor5[arg1].field_256))
                    staticcall address(stor5[arg1].field_256).0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] < stor5[arg1][19][idx].field_768:
                        revert with 0, 'Not enough token :(!'
                uint8(stor5[arg1][19][idx].field_1544) = 1
                stor5[arg1][19][idx].field_1280 = 0
                require stor5[arg1][19][idx].field_1024 <= stor5[arg1].field_4352
                stor5[arg1].field_4352 -= stor5[arg1][19][idx].field_1024
                stor5[arg1].field_4096 = stor5[arg1][19][idx].field_512
                if not address(stor5[arg1].field_256):
                    call address(stor5[arg1][19][idx].field_0) with:
                       value stor5[arg1][19][idx].field_768 wei
                         gas 2300 * is_zero(value) wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                else:
                    require ext_code.size(address(stor5[arg1].field_256))
                    call address(stor5[arg1].field_256).0xa9059cbb with:
                         gas gas_remaining wei
                        args address(stor5[arg1][19][idx].field_0), stor5[arg1][19][idx].field_768
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                mem[mem[64]] = arg1
                mem[mem[64] + 32] = idx
                mem[mem[64] + 64] = block.number
                mem[mem[64] + 96] = stor5[arg1][19][idx].field_256
                emit 0x84842e1c: arg1, idx, block.number, stor5[arg1][19][idx].field_256
            else:
                if not uint8(stor5[arg1][19][idx].field_1536):
                    s = 0
                    t = 0
                    while uint8(s) < sub_78463323:
                        require 0 < stor5[arg1][19][idx].field_1792
                        if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 < 10:
                            if uint32(stor5[arg1][19][idx][7].field_0) <= 0:
                                require 1 < stor5[arg1][19][idx].field_1792
                                if uint32(stor5[arg1][19][idx][7].field_32) <= 0:
                                    require 2 < stor5[arg1][19][idx].field_1792
                                    if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t >= t
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t
                                        continue 
                                    if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t >= t
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t
                                        continue 
                                    require 2 < stor5[arg1][19][idx].field_1792
                                    require stor5[arg1].field_1792
                                    require (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                        s = s + 1
                                        t = (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    s = s + 1
                                    t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                    continue 
                                if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                    require 2 < stor5[arg1][19][idx].field_1792
                                    if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t >= t
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t
                                        continue 
                                    if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t >= t
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t
                                        continue 
                                    require 2 < stor5[arg1][19][idx].field_1792
                                    require stor5[arg1].field_1792
                                    require (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                        s = s + 1
                                        t = (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    s = s + 1
                                    t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                    continue 
                                require 1 < stor5[arg1][19][idx].field_1792
                                require stor5[arg1].field_1536
                                require (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t >= t
                                require 2 < stor5[arg1][19][idx].field_1792
                                if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                        s = s + 1
                                        t = (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    s = s + 1
                                    t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                    continue 
                                if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                        s = s + 1
                                        t = (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    s = s + 1
                                    t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                    continue 
                                require 2 < stor5[arg1][19][idx].field_1792
                                require stor5[arg1].field_1792
                                require uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                    s = s + 1
                                    t = (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                    continue 
                                require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_2048
                                require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                s = s + 1
                                t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                continue 
                            if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) != 1:
                                require 1 < stor5[arg1][19][idx].field_1792
                                if uint32(stor5[arg1][19][idx][7].field_32) <= 0:
                                    require 2 < stor5[arg1][19][idx].field_1792
                                    if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t >= t
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t
                                        continue 
                                    if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t >= t
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t
                                        continue 
                                    require 2 < stor5[arg1][19][idx].field_1792
                                    require stor5[arg1].field_1792
                                    require (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                        s = s + 1
                                        t = (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    s = s + 1
                                    t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                    continue 
                                if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                    require 2 < stor5[arg1][19][idx].field_1792
                                    if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t >= t
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t
                                        continue 
                                    if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t >= t
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t
                                        continue 
                                    require 2 < stor5[arg1][19][idx].field_1792
                                    require stor5[arg1].field_1792
                                    require (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                        s = s + 1
                                        t = (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    s = s + 1
                                    t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                    continue 
                                require 1 < stor5[arg1][19][idx].field_1792
                                require stor5[arg1].field_1536
                                require (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t >= t
                                require 2 < stor5[arg1][19][idx].field_1792
                                if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                        s = s + 1
                                        t = (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    s = s + 1
                                    t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                    continue 
                                if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                        s = s + 1
                                        t = (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    s = s + 1
                                    t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                    continue 
                                require 2 < stor5[arg1][19][idx].field_1792
                                require stor5[arg1].field_1792
                                require uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                    s = s + 1
                                    t = (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                    continue 
                                require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_2048
                                require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                s = s + 1
                                t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                continue 
                            require 0 < stor5[arg1][19][idx].field_1792
                            require stor5[arg1].field_1280
                            require (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t >= t
                            require 1 < stor5[arg1][19][idx].field_1792
                            if uint32(stor5[arg1][19][idx][7].field_32) <= 0:
                                require 2 < stor5[arg1][19][idx].field_1792
                                if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                        s = s + 1
                                        t = (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    s = s + 1
                                    t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                        s = s + 1
                                        t = (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    s = s + 1
                                    t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                require 2 < stor5[arg1][19][idx].field_1792
                                require stor5[arg1].field_1792
                                require uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                    s = s + 1
                                    t = (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_2048
                                require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                s = s + 1
                                t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                continue 
                            if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                require 2 < stor5[arg1][19][idx].field_1792
                                if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                        s = s + 1
                                        t = (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    s = s + 1
                                    t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                        s = s + 1
                                        t = (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    s = s + 1
                                    t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                require 2 < stor5[arg1][19][idx].field_1792
                                require stor5[arg1].field_1792
                                require uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                    s = s + 1
                                    t = (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_2048
                                require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                s = s + 1
                                t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                continue 
                            require 1 < stor5[arg1][19][idx].field_1792
                            require stor5[arg1].field_1536
                            require uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536 >= 0
                            require 2 < stor5[arg1][19][idx].field_1792
                            if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                    s = s + 1
                                    t = (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_2048
                                require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                s = s + 1
                                t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                continue 
                            if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                    s = s + 1
                                    t = (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_2048
                                require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                s = s + 1
                                t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                continue 
                        else:
                            if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 <= 15:
                                if uint32(stor5[arg1][19][idx][7].field_0) <= 0:
                                    require 1 < stor5[arg1][19][idx].field_1792
                                    if uint32(stor5[arg1][19][idx][7].field_32) <= 0:
                                        require 2 < stor5[arg1][19][idx].field_1792
                                        if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                                s = s + 1
                                                t = t
                                                continue 
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            require stor5[arg1].field_2048
                                            require (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t >= t
                                            s = s + 1
                                            t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t
                                            continue 
                                        if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 <= 15:
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                                s = s + 1
                                                t = t
                                                continue 
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            require stor5[arg1].field_2048
                                            require (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t >= t
                                            s = s + 1
                                            t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t
                                            continue 
                                        require 2 < stor5[arg1][19][idx].field_1792
                                        require stor5[arg1].field_1792
                                        require (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 <= 15:
                                        require 2 < stor5[arg1][19][idx].field_1792
                                        if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                                s = s + 1
                                                t = t
                                                continue 
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            require stor5[arg1].field_2048
                                            require (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t >= t
                                            s = s + 1
                                            t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t
                                            continue 
                                        if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 <= 15:
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                                s = s + 1
                                                t = t
                                                continue 
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            require stor5[arg1].field_2048
                                            require (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t >= t
                                            s = s + 1
                                            t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t
                                            continue 
                                        require 2 < stor5[arg1][19][idx].field_1792
                                        require stor5[arg1].field_1792
                                        require (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    require 1 < stor5[arg1][19][idx].field_1792
                                    require stor5[arg1].field_1536
                                    require (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t >= t
                                    require 2 < stor5[arg1][19][idx].field_1792
                                    if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 <= 15:
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    require 2 < stor5[arg1][19][idx].field_1792
                                    require stor5[arg1].field_1792
                                    require uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                        s = s + 1
                                        t = (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    s = s + 1
                                    t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                    continue 
                                if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 <= 15:
                                    require 1 < stor5[arg1][19][idx].field_1792
                                    if uint32(stor5[arg1][19][idx][7].field_32) <= 0:
                                        require 2 < stor5[arg1][19][idx].field_1792
                                        if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                                s = s + 1
                                                t = t
                                                continue 
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            require stor5[arg1].field_2048
                                            require (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t >= t
                                            s = s + 1
                                            t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t
                                            continue 
                                        if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 <= 15:
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                                s = s + 1
                                                t = t
                                                continue 
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            require stor5[arg1].field_2048
                                            require (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t >= t
                                            s = s + 1
                                            t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t
                                            continue 
                                        require 2 < stor5[arg1][19][idx].field_1792
                                        require stor5[arg1].field_1792
                                        require (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 <= 15:
                                        require 2 < stor5[arg1][19][idx].field_1792
                                        if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                                s = s + 1
                                                t = t
                                                continue 
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            require stor5[arg1].field_2048
                                            require (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t >= t
                                            s = s + 1
                                            t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t
                                            continue 
                                        if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 <= 15:
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                                s = s + 1
                                                t = t
                                                continue 
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            require stor5[arg1].field_2048
                                            require (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t >= t
                                            s = s + 1
                                            t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t
                                            continue 
                                        require 2 < stor5[arg1][19][idx].field_1792
                                        require stor5[arg1].field_1792
                                        require (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    require 1 < stor5[arg1][19][idx].field_1792
                                    require stor5[arg1].field_1536
                                    require (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t >= t
                                    require 2 < stor5[arg1][19][idx].field_1792
                                    if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 <= 15:
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    require 2 < stor5[arg1][19][idx].field_1792
                                    require stor5[arg1].field_1792
                                    require uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                        s = s + 1
                                        t = (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    s = s + 1
                                    t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                    continue 
                                require 0 < stor5[arg1][19][idx].field_1792
                                require stor5[arg1].field_1280
                                require (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t >= t
                                require 1 < stor5[arg1][19][idx].field_1792
                                if uint32(stor5[arg1][19][idx][7].field_32) <= 0:
                                    require 2 < stor5[arg1][19][idx].field_1792
                                    if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 <= 15:
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require 2 < stor5[arg1][19][idx].field_1792
                                    require stor5[arg1].field_1792
                                    require uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                        s = s + 1
                                        t = (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    s = s + 1
                                    t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 <= 15:
                                    require 2 < stor5[arg1][19][idx].field_1792
                                    if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 <= 15:
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require 2 < stor5[arg1][19][idx].field_1792
                                    require stor5[arg1].field_1792
                                    require uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                        s = s + 1
                                        t = (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    s = s + 1
                                    t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                require 1 < stor5[arg1][19][idx].field_1792
                                require stor5[arg1].field_1536
                                require uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536 >= 0
                                require 2 < stor5[arg1][19][idx].field_1792
                                if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                        s = s + 1
                                        t = (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    s = s + 1
                                    t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 <= 15:
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                        s = s + 1
                                        t = (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    s = s + 1
                                    t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                            else:
                                if uint32(stor5[arg1][19][idx][7].field_0) <= 0:
                                    require 1 < stor5[arg1][19][idx].field_1792
                                    if uint32(stor5[arg1][19][idx][7].field_32) <= 0:
                                        require 2 < stor5[arg1][19][idx].field_1792
                                        if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                                s = s + 1
                                                t = t
                                                continue 
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            require stor5[arg1].field_2048
                                            require (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t >= t
                                            s = s + 1
                                            t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t
                                            continue 
                                        if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                                s = s + 1
                                                t = t
                                                continue 
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            require stor5[arg1].field_2048
                                            require (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t >= t
                                            s = s + 1
                                            t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t
                                            continue 
                                        require 2 < stor5[arg1][19][idx].field_1792
                                        require stor5[arg1].field_1792
                                        require (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                        require 2 < stor5[arg1][19][idx].field_1792
                                        if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                                s = s + 1
                                                t = t
                                                continue 
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            require stor5[arg1].field_2048
                                            require (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t >= t
                                            s = s + 1
                                            t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t
                                            continue 
                                        if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                                s = s + 1
                                                t = t
                                                continue 
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            require stor5[arg1].field_2048
                                            require (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t >= t
                                            s = s + 1
                                            t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t
                                            continue 
                                        require 2 < stor5[arg1][19][idx].field_1792
                                        require stor5[arg1].field_1792
                                        require (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    require 1 < stor5[arg1][19][idx].field_1792
                                    require stor5[arg1].field_1536
                                    require (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t >= t
                                    require 2 < stor5[arg1][19][idx].field_1792
                                    if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    require 2 < stor5[arg1][19][idx].field_1792
                                    require stor5[arg1].field_1792
                                    require uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                        s = s + 1
                                        t = (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    s = s + 1
                                    t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                    continue 
                                if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) != 1:
                                    require 1 < stor5[arg1][19][idx].field_1792
                                    if uint32(stor5[arg1][19][idx][7].field_32) <= 0:
                                        require 2 < stor5[arg1][19][idx].field_1792
                                        if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                                s = s + 1
                                                t = t
                                                continue 
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            require stor5[arg1].field_2048
                                            require (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t >= t
                                            s = s + 1
                                            t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t
                                            continue 
                                        if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                                s = s + 1
                                                t = t
                                                continue 
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            require stor5[arg1].field_2048
                                            require (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t >= t
                                            s = s + 1
                                            t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t
                                            continue 
                                        require 2 < stor5[arg1][19][idx].field_1792
                                        require stor5[arg1].field_1792
                                        require (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                        require 2 < stor5[arg1][19][idx].field_1792
                                        if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                                s = s + 1
                                                t = t
                                                continue 
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            require stor5[arg1].field_2048
                                            require (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t >= t
                                            s = s + 1
                                            t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t
                                            continue 
                                        if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                                s = s + 1
                                                t = t
                                                continue 
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            require stor5[arg1].field_2048
                                            require (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t >= t
                                            s = s + 1
                                            t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t
                                            continue 
                                        require 2 < stor5[arg1][19][idx].field_1792
                                        require stor5[arg1].field_1792
                                        require (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    require 1 < stor5[arg1][19][idx].field_1792
                                    require stor5[arg1].field_1536
                                    require (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t >= t
                                    require 2 < stor5[arg1][19][idx].field_1792
                                    if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    require 2 < stor5[arg1][19][idx].field_1792
                                    require stor5[arg1].field_1792
                                    require uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                        s = s + 1
                                        t = (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    s = s + 1
                                    t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                    continue 
                                require 0 < stor5[arg1][19][idx].field_1792
                                require stor5[arg1].field_1280
                                require (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t >= t
                                require 1 < stor5[arg1][19][idx].field_1792
                                if uint32(stor5[arg1][19][idx][7].field_32) <= 0:
                                    require 2 < stor5[arg1][19][idx].field_1792
                                    if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require 2 < stor5[arg1][19][idx].field_1792
                                    require stor5[arg1].field_1792
                                    require uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                        s = s + 1
                                        t = (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    s = s + 1
                                    t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                    require 2 < stor5[arg1][19][idx].field_1792
                                    if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require 2 < stor5[arg1][19][idx].field_1792
                                    require stor5[arg1].field_1792
                                    require uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                        s = s + 1
                                        t = (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    s = s + 1
                                    t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                require 1 < stor5[arg1][19][idx].field_1792
                                require stor5[arg1].field_1536
                                require uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536 >= 0
                                require 2 < stor5[arg1][19][idx].field_1792
                                if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                        s = s + 1
                                        t = (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    s = s + 1
                                    t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                        s = s + 1
                                        t = (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    s = s + 1
                                    t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                        require 2 < stor5[arg1][19][idx].field_1792
                        require stor5[arg1].field_1792
                        require uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                            s = s + 1
                            t = (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                            continue 
                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                        require stor5[arg1].field_2048
                        require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                        s = s + 1
                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                        continue 
                else:
                    s = 0
                    t = 0
                    while uint8(s) < sub_78463323:
                        if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 < 10:
                            if bool(stor5[arg1][19][idx].field_1536) != 1:
                                if Mask(1, 1, stor5[arg1][19][idx].field_1536) != 2:
                                    if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                        s = s + 1
                                        t = t
                                        continue 
                                    require uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] <= 0:
                                        s = s + 1
                                        t = t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 < 10:
                                        s = s + 1
                                        t = t
                                        continue 
                                    require uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                    s = s + 1
                                    t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                    continue 
                                require uint8(s) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                if stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] <= 0:
                                    if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                        s = s + 1
                                        t = t
                                        continue 
                                    require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                        s = s + 1
                                        t = t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 < 10:
                                        s = s + 1
                                        t = t
                                        continue 
                                    require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                    s = s + 1
                                    t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                    continue 
                                if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                    if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                        s = s + 1
                                        t = t
                                        continue 
                                    require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                        s = s + 1
                                        t = t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 < 10:
                                        s = s + 1
                                        t = t
                                        continue 
                                    require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                    s = s + 1
                                    t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                    continue 
                                require uint8(s) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_1536
                                require (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t >= t
                                if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                    s = s + 1
                                    t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                    continue 
                                require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                    s = s + 1
                                    t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                    continue 
                                if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 < 10:
                                    s = s + 1
                                    t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                    continue 
                                require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_1792
                                require stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                s = s + 1
                                t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                continue 
                            require uint8(s) < stor5[arg1][19][idx].field_1792
                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                            if stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] <= 0:
                                if Mask(1, 1, stor5[arg1][19][idx].field_1536) != 2:
                                    if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                        s = s + 1
                                        t = t
                                        continue 
                                    require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                        s = s + 1
                                        t = t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 < 10:
                                        s = s + 1
                                        t = t
                                        continue 
                                    require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                    s = s + 1
                                    t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                    continue 
                                require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                    if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                        s = s + 1
                                        t = t
                                        continue 
                                    require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] <= 0:
                                        s = s + 1
                                        t = t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 < 10:
                                        s = s + 1
                                        t = t
                                        continue 
                                    require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                    s = s + 1
                                    t = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                    continue 
                                if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                    if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                        s = s + 1
                                        t = t
                                        continue 
                                    require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] <= 0:
                                        s = s + 1
                                        t = t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 < 10:
                                        s = s + 1
                                        t = t
                                        continue 
                                    require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                    s = s + 1
                                    t = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                    continue 
                                require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_1536
                                require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t >= t
                                if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                    s = s + 1
                                    t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                    continue 
                                require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] <= 0:
                                    s = s + 1
                                    t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                    continue 
                                if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 < 10:
                                    s = s + 1
                                    t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                    continue 
                                require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_1792
                                require stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                s = s + 1
                                t = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                continue 
                            if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) != 1:
                                if Mask(1, 1, stor5[arg1][19][idx].field_1536) != 2:
                                    if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                        s = s + 1
                                        t = t
                                        continue 
                                    require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                        s = s + 1
                                        t = t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 < 10:
                                        s = s + 1
                                        t = t
                                        continue 
                                    require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                    s = s + 1
                                    t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                    continue 
                                require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                    if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                        s = s + 1
                                        t = t
                                        continue 
                                    require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] <= 0:
                                        s = s + 1
                                        t = t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 < 10:
                                        s = s + 1
                                        t = t
                                        continue 
                                    require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                    s = s + 1
                                    t = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                    continue 
                                if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                    if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                        s = s + 1
                                        t = t
                                        continue 
                                    require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] <= 0:
                                        s = s + 1
                                        t = t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 < 10:
                                        s = s + 1
                                        t = t
                                        continue 
                                    require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                    s = s + 1
                                    t = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                    continue 
                                require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_1536
                                require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t >= t
                                if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                    s = s + 1
                                    t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                    continue 
                                require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] <= 0:
                                    s = s + 1
                                    t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                    continue 
                                if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 < 10:
                                    s = s + 1
                                    t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                    continue 
                                require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_1792
                                require stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                s = s + 1
                                t = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                continue 
                            require uint8(s) < stor5[arg1][19][idx].field_1792
                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                            require stor5[arg1].field_1280
                            require (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t >= t
                            if Mask(1, 1, stor5[arg1][19][idx].field_1536) != 2:
                                if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                    s = s + 1
                                    t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                    s = s + 1
                                    t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 < 10:
                                    s = s + 1
                                    t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_1792
                                require stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                s = s + 1
                                t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                continue 
                            require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                            if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                    s = s + 1
                                    t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] <= 0:
                                    s = s + 1
                                    t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 < 10:
                                    s = s + 1
                                    t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_1792
                                require stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                s = s + 1
                                t = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                continue 
                            if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                    s = s + 1
                                    t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] <= 0:
                                    s = s + 1
                                    t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 < 10:
                                    s = s + 1
                                    t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_1792
                                require stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                s = s + 1
                                t = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                continue 
                            require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                            require stor5[arg1].field_1536
                            require stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536 >= 0
                            if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                s = s + 1
                                t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                continue 
                            require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                            if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] <= 0:
                                s = s + 1
                                t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                continue 
                            if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 < 10:
                                s = s + 1
                                t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                continue 
                        else:
                            if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 <= 15:
                                if bool(stor5[arg1][19][idx].field_1536) != 1:
                                    if Mask(1, 1, stor5[arg1][19][idx].field_1536) != 2:
                                        if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] <= 0:
                                            s = s + 1
                                            t = t
                                            continue 
                                        if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_1792
                                        require (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                        s = s + 1
                                        t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    require uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] <= 0:
                                        if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                            s = s + 1
                                            t = t
                                            continue 
                                        if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_1792
                                        require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                        s = s + 1
                                        t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 <= 15:
                                        if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                            s = s + 1
                                            t = t
                                            continue 
                                        if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_1792
                                        require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                        s = s + 1
                                        t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    require uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1536
                                    require (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t >= t
                                    if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                        s = s + 1
                                        t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                        s = s + 1
                                        t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                        s = s + 1
                                        t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                    s = s + 1
                                    t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                    continue 
                                require uint8(s) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                if stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] <= 0:
                                    if Mask(1, 1, stor5[arg1][19][idx].field_1536) != 2:
                                        if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                            s = s + 1
                                            t = t
                                            continue 
                                        if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_1792
                                        require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                        s = s + 1
                                        t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                        if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] <= 0:
                                            s = s + 1
                                            t = t
                                            continue 
                                        if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_1792
                                        require (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                        s = s + 1
                                        t = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 <= 15:
                                        if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] <= 0:
                                            s = s + 1
                                            t = t
                                            continue 
                                        if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_1792
                                        require (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                        s = s + 1
                                        t = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1536
                                    require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t >= t
                                    if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                        s = s + 1
                                        t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] <= 0:
                                        s = s + 1
                                        t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                        s = s + 1
                                        t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                    s = s + 1
                                    t = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                    continue 
                                if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 <= 15:
                                    if Mask(1, 1, stor5[arg1][19][idx].field_1536) != 2:
                                        if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                            s = s + 1
                                            t = t
                                            continue 
                                        if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_1792
                                        require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                        s = s + 1
                                        t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                        if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] <= 0:
                                            s = s + 1
                                            t = t
                                            continue 
                                        if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_1792
                                        require (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                        s = s + 1
                                        t = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 <= 15:
                                        if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] <= 0:
                                            s = s + 1
                                            t = t
                                            continue 
                                        if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_1792
                                        require (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                        s = s + 1
                                        t = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1536
                                    require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t >= t
                                    if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                        s = s + 1
                                        t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] <= 0:
                                        s = s + 1
                                        t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                        s = s + 1
                                        t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                    s = s + 1
                                    t = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                    continue 
                                require uint8(s) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_1280
                                require (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t >= t
                                if Mask(1, 1, stor5[arg1][19][idx].field_1536) != 2:
                                    if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                        s = s + 1
                                        t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                        s = s + 1
                                        t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                        s = s + 1
                                        t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                    s = s + 1
                                    t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                    if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                        s = s + 1
                                        t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] <= 0:
                                        s = s + 1
                                        t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                        s = s + 1
                                        t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                    s = s + 1
                                    t = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 <= 15:
                                    if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                        s = s + 1
                                        t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] <= 0:
                                        s = s + 1
                                        t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                        s = s + 1
                                        t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                    s = s + 1
                                    t = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                            else:
                                if bool(stor5[arg1][19][idx].field_1536) != 1:
                                    if Mask(1, 1, stor5[arg1][19][idx].field_1536) != 2:
                                        if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] <= 0:
                                            s = s + 1
                                            t = t
                                            continue 
                                        if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_1792
                                        require (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                        s = s + 1
                                        t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    require uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] <= 0:
                                        if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                            s = s + 1
                                            t = t
                                            continue 
                                        if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_1792
                                        require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                        s = s + 1
                                        t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                        if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                            s = s + 1
                                            t = t
                                            continue 
                                        if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_1792
                                        require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                        s = s + 1
                                        t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    require uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1536
                                    require (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t >= t
                                    if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                        s = s + 1
                                        t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                        s = s + 1
                                        t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                        s = s + 1
                                        t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                    s = s + 1
                                    t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                    continue 
                                require uint8(s) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                if stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] <= 0:
                                    if Mask(1, 1, stor5[arg1][19][idx].field_1536) != 2:
                                        if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                            s = s + 1
                                            t = t
                                            continue 
                                        if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_1792
                                        require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                        s = s + 1
                                        t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                        if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] <= 0:
                                            s = s + 1
                                            t = t
                                            continue 
                                        if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_1792
                                        require (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                        s = s + 1
                                        t = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                        if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] <= 0:
                                            s = s + 1
                                            t = t
                                            continue 
                                        if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_1792
                                        require (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                        s = s + 1
                                        t = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1536
                                    require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t >= t
                                    if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                        s = s + 1
                                        t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] <= 0:
                                        s = s + 1
                                        t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                        s = s + 1
                                        t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                    s = s + 1
                                    t = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                    continue 
                                if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) != 1:
                                    if Mask(1, 1, stor5[arg1][19][idx].field_1536) != 2:
                                        if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                            s = s + 1
                                            t = t
                                            continue 
                                        if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_1792
                                        require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                        s = s + 1
                                        t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                        if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] <= 0:
                                            s = s + 1
                                            t = t
                                            continue 
                                        if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_1792
                                        require (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                        s = s + 1
                                        t = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                        if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] <= 0:
                                            s = s + 1
                                            t = t
                                            continue 
                                        if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_1792
                                        require (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                        s = s + 1
                                        t = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1536
                                    require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t >= t
                                    if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                        s = s + 1
                                        t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] <= 0:
                                        s = s + 1
                                        t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                        s = s + 1
                                        t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                    s = s + 1
                                    t = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                    continue 
                                require uint8(s) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_1280
                                require (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t >= t
                                if Mask(1, 1, stor5[arg1][19][idx].field_1536) != 2:
                                    if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                        s = s + 1
                                        t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                        s = s + 1
                                        t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                        s = s + 1
                                        t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                    s = s + 1
                                    t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                    if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                        s = s + 1
                                        t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] <= 0:
                                        s = s + 1
                                        t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                        s = s + 1
                                        t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                    s = s + 1
                                    t = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                    if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                        s = s + 1
                                        t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] <= 0:
                                        s = s + 1
                                        t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                        s = s + 1
                                        t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                    s = s + 1
                                    t = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                            require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                            require stor5[arg1].field_1536
                            require stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536 >= 0
                            if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                s = s + 1
                                t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                continue 
                            require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                            if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] <= 0:
                                s = s + 1
                                t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                continue 
                            if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                s = s + 1
                                t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                continue 
                        require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                        require stor5[arg1].field_1792
                        require stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                        s = s + 1
                        t = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                        continue 
                    s = 0
                    u = 0
                    while uint8(s) < 3:
                        if not uint8(stor5[arg1][19][idx].field_1536 % 16 and 2^uint8(s)):
                            s = s + 1
                            u = u
                            continue 
                        s = s + 1
                        u = u + 1
                        continue 
                    if Mask(1, 3, stor5[arg1][19][idx].field_1536) == 8:
                        require sub_78463323 * u < stor5[arg1][19][idx].field_1792
                        s = 0
                        v = (sub_78463323 * u) + 1
                        while uint32(s) < stor((0.125 / stor[('name', 'stor4', 4)] * u) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 * u)]:
                            u = 0
                            w = t
                            while uint8(u) < sub_78463323:
                                require v < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                if stor((0.125 / v) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(v)] != block.hash(stor5[arg1][19][idx].field_256 + uint8(u)) % 16:
                                    u = u + 1
                                    w = w
                                    continue 
                                require v + 1 < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_2048
                                require (stor((0.125 / v + 1) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(v + 1)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + w >= w
                                u = u + 1
                                w = (stor((0.125 / v + 1) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(v + 1)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + w
                                continue 
                            s = s + 1
                            v = v + 2
                            continue 
                if not t:
                    uint8(stor5[arg1][19][idx].field_1544) = 1
                    stor5[arg1][19][idx].field_1280 = 0
                    require stor5[arg1][19][idx].field_1024 <= stor5[arg1].field_4352
                    stor5[arg1].field_4352 -= stor5[arg1][19][idx].field_1024
                    stor5[arg1].field_4096 = stor5[arg1][19][idx].field_512
                    require (sub_9b458bd3 * stor5[arg1][19][idx].field_768 / 10000) + sub_ccc8efcc[address(stor5[arg1].field_256)] >= sub_ccc8efcc[address(stor5[arg1].field_256)]
                    mem[0] = address(stor5[arg1].field_256)
                    mem[32] = 6
                    sub_ccc8efcc[address(stor5[arg1].field_256)] += sub_9b458bd3 * stor5[arg1][19][idx].field_768 / 10000
                    require stor5[arg1][19][idx].field_768 - (sub_9b458bd3 * stor5[arg1][19][idx].field_768 / 10000) + stor5[arg1].field_4608 >= stor5[arg1].field_4608
                    stor5[arg1].field_4608 = stor5[arg1][19][idx].field_768 - (sub_9b458bd3 * stor5[arg1][19][idx].field_768 / 10000) + stor5[arg1].field_4608
                    require 0 <= stor5[arg1][19][idx].field_768 - (sub_9b458bd3 * stor5[arg1][19][idx].field_768 / 10000) + stor5[arg1].field_4608
                    stor5[arg1].field_4608 = stor5[arg1][19][idx].field_768 - (sub_9b458bd3 * stor5[arg1][19][idx].field_768 / 10000) + stor5[arg1].field_4608
                else:
                    require stor5[arg1].field_3584 * t / t == stor5[arg1].field_3584
                    if stor5[arg1].field_3584 * t > 0:
                        if not address(stor5[arg1].field_256):
                            if stor5[arg1].field_3584 * t > eth.balance(this.address):
                                revert with 0, 'Not enough ether :(!'
                        else:
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(stor5[arg1].field_256))
                            staticcall address(stor5[arg1].field_256).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < stor5[arg1].field_3584 * t:
                                revert with 0, 'Not enough token :(!'
                    uint8(stor5[arg1][19][idx].field_1544) = 1
                    stor5[arg1][19][idx].field_1280 = stor5[arg1].field_3584 * t
                    require stor5[arg1][19][idx].field_1024 <= stor5[arg1].field_4352
                    stor5[arg1].field_4352 -= stor5[arg1][19][idx].field_1024
                    stor5[arg1].field_4096 = stor5[arg1][19][idx].field_512
                    require (sub_9b458bd3 * stor5[arg1][19][idx].field_768 / 10000) + sub_ccc8efcc[address(stor5[arg1].field_256)] >= sub_ccc8efcc[address(stor5[arg1].field_256)]
                    mem[0] = address(stor5[arg1].field_256)
                    mem[32] = 6
                    sub_ccc8efcc[address(stor5[arg1].field_256)] += sub_9b458bd3 * stor5[arg1][19][idx].field_768 / 10000
                    require stor5[arg1][19][idx].field_768 - (sub_9b458bd3 * stor5[arg1][19][idx].field_768 / 10000) + stor5[arg1].field_4608 >= stor5[arg1].field_4608
                    stor5[arg1].field_4608 = stor5[arg1][19][idx].field_768 - (sub_9b458bd3 * stor5[arg1][19][idx].field_768 / 10000) + stor5[arg1].field_4608
                    require stor5[arg1].field_3584 * t <= stor5[arg1][19][idx].field_768 - (sub_9b458bd3 * stor5[arg1][19][idx].field_768 / 10000) + stor5[arg1].field_4608
                    stor5[arg1].field_4608 = stor5[arg1][19][idx].field_768 - (sub_9b458bd3 * stor5[arg1][19][idx].field_768 / 10000) + stor5[arg1].field_4608 - (stor5[arg1].field_3584 * t)
                    if stor5[arg1].field_3584 * t > 0:
                        if not address(stor5[arg1].field_256):
                            call address(stor5[arg1][19][idx].field_0) with:
                               value stor5[arg1].field_3584 * t wei
                                 gas 2300 * is_zero(value) wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                        else:
                            require ext_code.size(address(stor5[arg1].field_256))
                            call address(stor5[arg1].field_256).0xa9059cbb with:
                                 gas gas_remaining wei
                                args address(stor5[arg1][19][idx].field_0), stor5[arg1].field_3584 * t
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                        mem[mem[64]] = arg1
                        mem[mem[64] + 32] = idx
                        mem[mem[64] + 64] = stor5[arg1].field_3584 * t
                        emit 0xc6463bc3: arg1, idx, stor5[arg1].field_3584 * t
        idx = idx + 1
        continue 
}

function sub_1d424ea1(?) payable {
    mem[64] = 96
    require calldata.size - 4 >= 32
    require arg1 > 0
    if address(stor5[arg1].field_0) != msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Only allow room owner to withdraw money!'
    if arg1 <= 0:
        revert with 0, 'wrong roomId!'
    mem[0] = arg1
    mem[32] = 5
    if not uint8(stor5[arg1].field_3328):
        revert with 0, 32, 24, 0xfe54686520726f6f6d206973206e6f7420616374697665642100000000000000
    idx = stor16[sha3(mem[0 len 64])] + 1
    while idx <= stor5[arg1].field_3840:
        require sub_78463323 + stor5[arg1][19][idx].field_256 >= stor5[arg1][19][idx].field_256
        if block.number <= sub_78463323 + stor5[arg1][19][idx].field_256:
            if stor5[arg1].field_4096 != stor5[arg1].field_3840:
                return 0
            if stor5[arg1].field_4608 > 0:
                if not address(stor5[arg1].field_256):
                    if stor5[arg1].field_4608 > eth.balance(this.address):
                        revert with 0, 'Not enough ether :(!'
                else:
                    require ext_code.size(address(stor5[arg1].field_256))
                    staticcall address(stor5[arg1].field_256).0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] < stor5[arg1].field_4608:
                        revert with 0, 'Not enough token :(!'
                stor5[arg1].field_4608 = 0
                if not address(stor5[arg1].field_256):
                    call address(stor5[arg1].field_0) with:
                       value stor5[arg1].field_4608 wei
                         gas 2300 * is_zero(value) wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                else:
                    require ext_code.size(address(stor5[arg1].field_256))
                    call address(stor5[arg1].field_256).0xa9059cbb with:
                         gas gas_remaining wei
                        args address(stor5[arg1].field_0), stor5[arg1].field_4608
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
            uint8(stor5[arg1].field_3328) = 0
            emit 0x67acaceb: arg1
            return 1
        mem[0] = idx
        mem[32] = sha3(arg1, 5) + 19
        if not uint8(stor5[arg1][19][idx].field_1544):
            require -sub_78463323 + stor5[arg1][19][idx].field_256 + 256 >= stor5[arg1][19][idx].field_256
            if block.number > -sub_78463323 + stor5[arg1][19][idx].field_256 + 256:
                if not address(stor5[arg1].field_256):
                    if stor5[arg1][19][idx].field_768 > eth.balance(this.address):
                        revert with 0, 'Not enough ether :(!'
                else:
                    require ext_code.size(address(stor5[arg1].field_256))
                    staticcall address(stor5[arg1].field_256).0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] < stor5[arg1][19][idx].field_768:
                        revert with 0, 'Not enough token :(!'
                uint8(stor5[arg1][19][idx].field_1544) = 1
                stor5[arg1][19][idx].field_1280 = 0
                require stor5[arg1][19][idx].field_1024 <= stor5[arg1].field_4352
                stor5[arg1].field_4352 -= stor5[arg1][19][idx].field_1024
                stor5[arg1].field_4096 = stor5[arg1][19][idx].field_512
                if not address(stor5[arg1].field_256):
                    call address(stor5[arg1][19][idx].field_0) with:
                       value stor5[arg1][19][idx].field_768 wei
                         gas 2300 * is_zero(value) wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                else:
                    require ext_code.size(address(stor5[arg1].field_256))
                    call address(stor5[arg1].field_256).0xa9059cbb with:
                         gas gas_remaining wei
                        args address(stor5[arg1][19][idx].field_0), stor5[arg1][19][idx].field_768
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                mem[mem[64]] = arg1
                mem[mem[64] + 32] = idx
                mem[mem[64] + 64] = block.number
                mem[mem[64] + 96] = stor5[arg1][19][idx].field_256
                emit 0x84842e1c: arg1, idx, block.number, stor5[arg1][19][idx].field_256
            else:
                if not uint8(stor5[arg1][19][idx].field_1536):
                    s = 0
                    t = 0
                    while uint8(s) < sub_78463323:
                        require 0 < stor5[arg1][19][idx].field_1792
                        if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 < 10:
                            if uint32(stor5[arg1][19][idx][7].field_0) <= 0:
                                require 1 < stor5[arg1][19][idx].field_1792
                                if uint32(stor5[arg1][19][idx][7].field_32) <= 0:
                                    require 2 < stor5[arg1][19][idx].field_1792
                                    if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t >= t
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t
                                        continue 
                                    if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t >= t
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t
                                        continue 
                                    require 2 < stor5[arg1][19][idx].field_1792
                                    require stor5[arg1].field_1792
                                    require (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                        s = s + 1
                                        t = (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    s = s + 1
                                    t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                    continue 
                                if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                    require 2 < stor5[arg1][19][idx].field_1792
                                    if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t >= t
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t
                                        continue 
                                    if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t >= t
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t
                                        continue 
                                    require 2 < stor5[arg1][19][idx].field_1792
                                    require stor5[arg1].field_1792
                                    require (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                        s = s + 1
                                        t = (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    s = s + 1
                                    t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                    continue 
                                require 1 < stor5[arg1][19][idx].field_1792
                                require stor5[arg1].field_1536
                                require (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t >= t
                                require 2 < stor5[arg1][19][idx].field_1792
                                if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                        s = s + 1
                                        t = (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    s = s + 1
                                    t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                    continue 
                                if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                        s = s + 1
                                        t = (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    s = s + 1
                                    t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                    continue 
                                require 2 < stor5[arg1][19][idx].field_1792
                                require stor5[arg1].field_1792
                                require uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                    s = s + 1
                                    t = (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                    continue 
                                require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_2048
                                require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                s = s + 1
                                t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                continue 
                            if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) != 1:
                                require 1 < stor5[arg1][19][idx].field_1792
                                if uint32(stor5[arg1][19][idx][7].field_32) <= 0:
                                    require 2 < stor5[arg1][19][idx].field_1792
                                    if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t >= t
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t
                                        continue 
                                    if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t >= t
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t
                                        continue 
                                    require 2 < stor5[arg1][19][idx].field_1792
                                    require stor5[arg1].field_1792
                                    require (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                        s = s + 1
                                        t = (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    s = s + 1
                                    t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                    continue 
                                if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                    require 2 < stor5[arg1][19][idx].field_1792
                                    if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t >= t
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t
                                        continue 
                                    if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t >= t
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t
                                        continue 
                                    require 2 < stor5[arg1][19][idx].field_1792
                                    require stor5[arg1].field_1792
                                    require (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                        s = s + 1
                                        t = (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    s = s + 1
                                    t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                    continue 
                                require 1 < stor5[arg1][19][idx].field_1792
                                require stor5[arg1].field_1536
                                require (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t >= t
                                require 2 < stor5[arg1][19][idx].field_1792
                                if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                        s = s + 1
                                        t = (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    s = s + 1
                                    t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                    continue 
                                if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                        s = s + 1
                                        t = (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    s = s + 1
                                    t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                    continue 
                                require 2 < stor5[arg1][19][idx].field_1792
                                require stor5[arg1].field_1792
                                require uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                    s = s + 1
                                    t = (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                    continue 
                                require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_2048
                                require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                s = s + 1
                                t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                continue 
                            require 0 < stor5[arg1][19][idx].field_1792
                            require stor5[arg1].field_1280
                            require (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t >= t
                            require 1 < stor5[arg1][19][idx].field_1792
                            if uint32(stor5[arg1][19][idx][7].field_32) <= 0:
                                require 2 < stor5[arg1][19][idx].field_1792
                                if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                        s = s + 1
                                        t = (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    s = s + 1
                                    t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                        s = s + 1
                                        t = (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    s = s + 1
                                    t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                require 2 < stor5[arg1][19][idx].field_1792
                                require stor5[arg1].field_1792
                                require uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                    s = s + 1
                                    t = (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_2048
                                require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                s = s + 1
                                t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                continue 
                            if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                require 2 < stor5[arg1][19][idx].field_1792
                                if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                        s = s + 1
                                        t = (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    s = s + 1
                                    t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                        s = s + 1
                                        t = (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    s = s + 1
                                    t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                require 2 < stor5[arg1][19][idx].field_1792
                                require stor5[arg1].field_1792
                                require uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                    s = s + 1
                                    t = (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_2048
                                require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                s = s + 1
                                t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                continue 
                            require 1 < stor5[arg1][19][idx].field_1792
                            require stor5[arg1].field_1536
                            require uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536 >= 0
                            require 2 < stor5[arg1][19][idx].field_1792
                            if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                    s = s + 1
                                    t = (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_2048
                                require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                s = s + 1
                                t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                continue 
                            if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                    s = s + 1
                                    t = (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_2048
                                require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                s = s + 1
                                t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                continue 
                        else:
                            if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 <= 15:
                                if uint32(stor5[arg1][19][idx][7].field_0) <= 0:
                                    require 1 < stor5[arg1][19][idx].field_1792
                                    if uint32(stor5[arg1][19][idx][7].field_32) <= 0:
                                        require 2 < stor5[arg1][19][idx].field_1792
                                        if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                                s = s + 1
                                                t = t
                                                continue 
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            require stor5[arg1].field_2048
                                            require (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t >= t
                                            s = s + 1
                                            t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t
                                            continue 
                                        if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 <= 15:
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                                s = s + 1
                                                t = t
                                                continue 
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            require stor5[arg1].field_2048
                                            require (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t >= t
                                            s = s + 1
                                            t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t
                                            continue 
                                        require 2 < stor5[arg1][19][idx].field_1792
                                        require stor5[arg1].field_1792
                                        require (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 <= 15:
                                        require 2 < stor5[arg1][19][idx].field_1792
                                        if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                                s = s + 1
                                                t = t
                                                continue 
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            require stor5[arg1].field_2048
                                            require (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t >= t
                                            s = s + 1
                                            t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t
                                            continue 
                                        if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 <= 15:
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                                s = s + 1
                                                t = t
                                                continue 
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            require stor5[arg1].field_2048
                                            require (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t >= t
                                            s = s + 1
                                            t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t
                                            continue 
                                        require 2 < stor5[arg1][19][idx].field_1792
                                        require stor5[arg1].field_1792
                                        require (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    require 1 < stor5[arg1][19][idx].field_1792
                                    require stor5[arg1].field_1536
                                    require (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t >= t
                                    require 2 < stor5[arg1][19][idx].field_1792
                                    if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 <= 15:
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    require 2 < stor5[arg1][19][idx].field_1792
                                    require stor5[arg1].field_1792
                                    require uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                        s = s + 1
                                        t = (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    s = s + 1
                                    t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                    continue 
                                if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 <= 15:
                                    require 1 < stor5[arg1][19][idx].field_1792
                                    if uint32(stor5[arg1][19][idx][7].field_32) <= 0:
                                        require 2 < stor5[arg1][19][idx].field_1792
                                        if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                                s = s + 1
                                                t = t
                                                continue 
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            require stor5[arg1].field_2048
                                            require (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t >= t
                                            s = s + 1
                                            t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t
                                            continue 
                                        if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 <= 15:
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                                s = s + 1
                                                t = t
                                                continue 
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            require stor5[arg1].field_2048
                                            require (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t >= t
                                            s = s + 1
                                            t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t
                                            continue 
                                        require 2 < stor5[arg1][19][idx].field_1792
                                        require stor5[arg1].field_1792
                                        require (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 <= 15:
                                        require 2 < stor5[arg1][19][idx].field_1792
                                        if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                                s = s + 1
                                                t = t
                                                continue 
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            require stor5[arg1].field_2048
                                            require (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t >= t
                                            s = s + 1
                                            t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t
                                            continue 
                                        if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 <= 15:
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                                s = s + 1
                                                t = t
                                                continue 
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            require stor5[arg1].field_2048
                                            require (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t >= t
                                            s = s + 1
                                            t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t
                                            continue 
                                        require 2 < stor5[arg1][19][idx].field_1792
                                        require stor5[arg1].field_1792
                                        require (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    require 1 < stor5[arg1][19][idx].field_1792
                                    require stor5[arg1].field_1536
                                    require (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t >= t
                                    require 2 < stor5[arg1][19][idx].field_1792
                                    if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 <= 15:
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    require 2 < stor5[arg1][19][idx].field_1792
                                    require stor5[arg1].field_1792
                                    require uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                        s = s + 1
                                        t = (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    s = s + 1
                                    t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                    continue 
                                require 0 < stor5[arg1][19][idx].field_1792
                                require stor5[arg1].field_1280
                                require (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t >= t
                                require 1 < stor5[arg1][19][idx].field_1792
                                if uint32(stor5[arg1][19][idx][7].field_32) <= 0:
                                    require 2 < stor5[arg1][19][idx].field_1792
                                    if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 <= 15:
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require 2 < stor5[arg1][19][idx].field_1792
                                    require stor5[arg1].field_1792
                                    require uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                        s = s + 1
                                        t = (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    s = s + 1
                                    t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 <= 15:
                                    require 2 < stor5[arg1][19][idx].field_1792
                                    if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 <= 15:
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require 2 < stor5[arg1][19][idx].field_1792
                                    require stor5[arg1].field_1792
                                    require uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                        s = s + 1
                                        t = (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    s = s + 1
                                    t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                require 1 < stor5[arg1][19][idx].field_1792
                                require stor5[arg1].field_1536
                                require uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536 >= 0
                                require 2 < stor5[arg1][19][idx].field_1792
                                if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                        s = s + 1
                                        t = (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    s = s + 1
                                    t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 <= 15:
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                        s = s + 1
                                        t = (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    s = s + 1
                                    t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                            else:
                                if uint32(stor5[arg1][19][idx][7].field_0) <= 0:
                                    require 1 < stor5[arg1][19][idx].field_1792
                                    if uint32(stor5[arg1][19][idx][7].field_32) <= 0:
                                        require 2 < stor5[arg1][19][idx].field_1792
                                        if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                                s = s + 1
                                                t = t
                                                continue 
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            require stor5[arg1].field_2048
                                            require (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t >= t
                                            s = s + 1
                                            t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t
                                            continue 
                                        if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                                s = s + 1
                                                t = t
                                                continue 
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            require stor5[arg1].field_2048
                                            require (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t >= t
                                            s = s + 1
                                            t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t
                                            continue 
                                        require 2 < stor5[arg1][19][idx].field_1792
                                        require stor5[arg1].field_1792
                                        require (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                        require 2 < stor5[arg1][19][idx].field_1792
                                        if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                                s = s + 1
                                                t = t
                                                continue 
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            require stor5[arg1].field_2048
                                            require (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t >= t
                                            s = s + 1
                                            t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t
                                            continue 
                                        if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                                s = s + 1
                                                t = t
                                                continue 
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            require stor5[arg1].field_2048
                                            require (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t >= t
                                            s = s + 1
                                            t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t
                                            continue 
                                        require 2 < stor5[arg1][19][idx].field_1792
                                        require stor5[arg1].field_1792
                                        require (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    require 1 < stor5[arg1][19][idx].field_1792
                                    require stor5[arg1].field_1536
                                    require (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t >= t
                                    require 2 < stor5[arg1][19][idx].field_1792
                                    if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    require 2 < stor5[arg1][19][idx].field_1792
                                    require stor5[arg1].field_1792
                                    require uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                        s = s + 1
                                        t = (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    s = s + 1
                                    t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                    continue 
                                if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) != 1:
                                    require 1 < stor5[arg1][19][idx].field_1792
                                    if uint32(stor5[arg1][19][idx][7].field_32) <= 0:
                                        require 2 < stor5[arg1][19][idx].field_1792
                                        if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                                s = s + 1
                                                t = t
                                                continue 
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            require stor5[arg1].field_2048
                                            require (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t >= t
                                            s = s + 1
                                            t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t
                                            continue 
                                        if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                                s = s + 1
                                                t = t
                                                continue 
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            require stor5[arg1].field_2048
                                            require (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t >= t
                                            s = s + 1
                                            t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t
                                            continue 
                                        require 2 < stor5[arg1][19][idx].field_1792
                                        require stor5[arg1].field_1792
                                        require (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                        require 2 < stor5[arg1][19][idx].field_1792
                                        if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                                s = s + 1
                                                t = t
                                                continue 
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            require stor5[arg1].field_2048
                                            require (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t >= t
                                            s = s + 1
                                            t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t
                                            continue 
                                        if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                                s = s + 1
                                                t = t
                                                continue 
                                            require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                            require stor5[arg1].field_2048
                                            require (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t >= t
                                            s = s + 1
                                            t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + t
                                            continue 
                                        require 2 < stor5[arg1][19][idx].field_1792
                                        require stor5[arg1].field_1792
                                        require (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    require 1 < stor5[arg1][19][idx].field_1792
                                    require stor5[arg1].field_1536
                                    require (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t >= t
                                    require 2 < stor5[arg1][19][idx].field_1792
                                    if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    require 2 < stor5[arg1][19][idx].field_1792
                                    require stor5[arg1].field_1792
                                    require uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                        s = s + 1
                                        t = (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    s = s + 1
                                    t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                    continue 
                                require 0 < stor5[arg1][19][idx].field_1792
                                require stor5[arg1].field_1280
                                require (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t >= t
                                require 1 < stor5[arg1][19][idx].field_1792
                                if uint32(stor5[arg1][19][idx][7].field_32) <= 0:
                                    require 2 < stor5[arg1][19][idx].field_1792
                                    if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require 2 < stor5[arg1][19][idx].field_1792
                                    require stor5[arg1].field_1792
                                    require uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                        s = s + 1
                                        t = (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    s = s + 1
                                    t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                    require 2 < stor5[arg1][19][idx].field_1792
                                    if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                            s = s + 1
                                            t = (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                            continue 
                                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_2048
                                        require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                        s = s + 1
                                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require 2 < stor5[arg1][19][idx].field_1792
                                    require stor5[arg1].field_1792
                                    require uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                        s = s + 1
                                        t = (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    s = s + 1
                                    t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                require 1 < stor5[arg1][19][idx].field_1792
                                require stor5[arg1].field_1536
                                require uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536 >= 0
                                require 2 < stor5[arg1][19][idx].field_1792
                                if uint32(stor5[arg1][19][idx][7].field_64) <= 0:
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                        s = s + 1
                                        t = (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    s = s + 1
                                    t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                                        s = s + 1
                                        t = (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_2048
                                    require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                                    s = s + 1
                                    t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                        require 2 < stor5[arg1][19][idx].field_1792
                        require stor5[arg1].field_1792
                        require uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                        if stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] <= 0:
                            s = s + 1
                            t = (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                            continue 
                        require uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3) < stor5[arg1][19][idx].field_1792
                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                        require stor5[arg1].field_2048
                        require stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048 >= 0
                        s = s + 1
                        t = (stor((Mask(5, 3, (block.hash(uint8(s) + Mask(256, 256, stor[('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))])) % 16) + 3) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16) + 3)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + (uint32(stor5[arg1][19][idx][7].field_64) * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (uint32(stor5[arg1][19][idx][7].field_32) * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (uint32(stor5[arg1][19][idx][7].field_0) * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                        continue 
                else:
                    s = 0
                    t = 0
                    while uint8(s) < sub_78463323:
                        if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 < 10:
                            if bool(stor5[arg1][19][idx].field_1536) != 1:
                                if Mask(1, 1, stor5[arg1][19][idx].field_1536) != 2:
                                    if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                        s = s + 1
                                        t = t
                                        continue 
                                    require uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] <= 0:
                                        s = s + 1
                                        t = t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 < 10:
                                        s = s + 1
                                        t = t
                                        continue 
                                    require uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                    s = s + 1
                                    t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                    continue 
                                require uint8(s) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                if stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] <= 0:
                                    if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                        s = s + 1
                                        t = t
                                        continue 
                                    require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                        s = s + 1
                                        t = t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 < 10:
                                        s = s + 1
                                        t = t
                                        continue 
                                    require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                    s = s + 1
                                    t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                    continue 
                                if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                    if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                        s = s + 1
                                        t = t
                                        continue 
                                    require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                        s = s + 1
                                        t = t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 < 10:
                                        s = s + 1
                                        t = t
                                        continue 
                                    require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                    s = s + 1
                                    t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                    continue 
                                require uint8(s) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_1536
                                require (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t >= t
                                if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                    s = s + 1
                                    t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                    continue 
                                require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                    s = s + 1
                                    t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                    continue 
                                if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 < 10:
                                    s = s + 1
                                    t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                    continue 
                                require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_1792
                                require stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                s = s + 1
                                t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                continue 
                            require uint8(s) < stor5[arg1][19][idx].field_1792
                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                            if stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] <= 0:
                                if Mask(1, 1, stor5[arg1][19][idx].field_1536) != 2:
                                    if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                        s = s + 1
                                        t = t
                                        continue 
                                    require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                        s = s + 1
                                        t = t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 < 10:
                                        s = s + 1
                                        t = t
                                        continue 
                                    require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                    s = s + 1
                                    t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                    continue 
                                require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                    if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                        s = s + 1
                                        t = t
                                        continue 
                                    require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] <= 0:
                                        s = s + 1
                                        t = t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 < 10:
                                        s = s + 1
                                        t = t
                                        continue 
                                    require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                    s = s + 1
                                    t = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                    continue 
                                if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                    if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                        s = s + 1
                                        t = t
                                        continue 
                                    require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] <= 0:
                                        s = s + 1
                                        t = t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 < 10:
                                        s = s + 1
                                        t = t
                                        continue 
                                    require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                    s = s + 1
                                    t = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                    continue 
                                require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_1536
                                require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t >= t
                                if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                    s = s + 1
                                    t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                    continue 
                                require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] <= 0:
                                    s = s + 1
                                    t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                    continue 
                                if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 < 10:
                                    s = s + 1
                                    t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                    continue 
                                require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_1792
                                require stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                s = s + 1
                                t = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                continue 
                            if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) != 1:
                                if Mask(1, 1, stor5[arg1][19][idx].field_1536) != 2:
                                    if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                        s = s + 1
                                        t = t
                                        continue 
                                    require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                        s = s + 1
                                        t = t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 < 10:
                                        s = s + 1
                                        t = t
                                        continue 
                                    require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                    s = s + 1
                                    t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                    continue 
                                require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                    if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                        s = s + 1
                                        t = t
                                        continue 
                                    require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] <= 0:
                                        s = s + 1
                                        t = t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 < 10:
                                        s = s + 1
                                        t = t
                                        continue 
                                    require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                    s = s + 1
                                    t = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                    continue 
                                if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                    if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                        s = s + 1
                                        t = t
                                        continue 
                                    require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] <= 0:
                                        s = s + 1
                                        t = t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 < 10:
                                        s = s + 1
                                        t = t
                                        continue 
                                    require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                    s = s + 1
                                    t = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                    continue 
                                require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_1536
                                require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t >= t
                                if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                    s = s + 1
                                    t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                    continue 
                                require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] <= 0:
                                    s = s + 1
                                    t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                    continue 
                                if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 < 10:
                                    s = s + 1
                                    t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                    continue 
                                require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_1792
                                require stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                s = s + 1
                                t = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                continue 
                            require uint8(s) < stor5[arg1][19][idx].field_1792
                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                            require stor5[arg1].field_1280
                            require (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t >= t
                            if Mask(1, 1, stor5[arg1][19][idx].field_1536) != 2:
                                if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                    s = s + 1
                                    t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                    s = s + 1
                                    t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 < 10:
                                    s = s + 1
                                    t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_1792
                                require stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                s = s + 1
                                t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                continue 
                            require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                            if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                    s = s + 1
                                    t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] <= 0:
                                    s = s + 1
                                    t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 < 10:
                                    s = s + 1
                                    t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_1792
                                require stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                s = s + 1
                                t = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                continue 
                            if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                    s = s + 1
                                    t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] <= 0:
                                    s = s + 1
                                    t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 < 10:
                                    s = s + 1
                                    t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_1792
                                require stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                s = s + 1
                                t = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                continue 
                            require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                            require stor5[arg1].field_1536
                            require stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536 >= 0
                            if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                s = s + 1
                                t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                continue 
                            require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                            if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] <= 0:
                                s = s + 1
                                t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                continue 
                            if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 < 10:
                                s = s + 1
                                t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                continue 
                        else:
                            if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 <= 15:
                                if bool(stor5[arg1][19][idx].field_1536) != 1:
                                    if Mask(1, 1, stor5[arg1][19][idx].field_1536) != 2:
                                        if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] <= 0:
                                            s = s + 1
                                            t = t
                                            continue 
                                        if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_1792
                                        require (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                        s = s + 1
                                        t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    require uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] <= 0:
                                        if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                            s = s + 1
                                            t = t
                                            continue 
                                        if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_1792
                                        require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                        s = s + 1
                                        t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 <= 15:
                                        if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                            s = s + 1
                                            t = t
                                            continue 
                                        if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_1792
                                        require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                        s = s + 1
                                        t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    require uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1536
                                    require (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t >= t
                                    if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                        s = s + 1
                                        t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                        s = s + 1
                                        t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                        s = s + 1
                                        t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                    s = s + 1
                                    t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                    continue 
                                require uint8(s) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                if stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] <= 0:
                                    if Mask(1, 1, stor5[arg1][19][idx].field_1536) != 2:
                                        if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                            s = s + 1
                                            t = t
                                            continue 
                                        if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_1792
                                        require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                        s = s + 1
                                        t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                        if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] <= 0:
                                            s = s + 1
                                            t = t
                                            continue 
                                        if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_1792
                                        require (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                        s = s + 1
                                        t = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 <= 15:
                                        if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] <= 0:
                                            s = s + 1
                                            t = t
                                            continue 
                                        if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_1792
                                        require (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                        s = s + 1
                                        t = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1536
                                    require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t >= t
                                    if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                        s = s + 1
                                        t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] <= 0:
                                        s = s + 1
                                        t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                        s = s + 1
                                        t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                    s = s + 1
                                    t = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                    continue 
                                if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 <= 15:
                                    if Mask(1, 1, stor5[arg1][19][idx].field_1536) != 2:
                                        if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                            s = s + 1
                                            t = t
                                            continue 
                                        if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_1792
                                        require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                        s = s + 1
                                        t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                        if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] <= 0:
                                            s = s + 1
                                            t = t
                                            continue 
                                        if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_1792
                                        require (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                        s = s + 1
                                        t = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 <= 15:
                                        if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] <= 0:
                                            s = s + 1
                                            t = t
                                            continue 
                                        if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_1792
                                        require (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                        s = s + 1
                                        t = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1536
                                    require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t >= t
                                    if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                        s = s + 1
                                        t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] <= 0:
                                        s = s + 1
                                        t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                        s = s + 1
                                        t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                    s = s + 1
                                    t = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                    continue 
                                require uint8(s) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_1280
                                require (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t >= t
                                if Mask(1, 1, stor5[arg1][19][idx].field_1536) != 2:
                                    if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                        s = s + 1
                                        t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                        s = s + 1
                                        t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                        s = s + 1
                                        t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                    s = s + 1
                                    t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                    if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                        s = s + 1
                                        t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] <= 0:
                                        s = s + 1
                                        t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                        s = s + 1
                                        t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                    s = s + 1
                                    t = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 <= 15:
                                    if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                        s = s + 1
                                        t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] <= 0:
                                        s = s + 1
                                        t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                        s = s + 1
                                        t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                    s = s + 1
                                    t = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                            else:
                                if bool(stor5[arg1][19][idx].field_1536) != 1:
                                    if Mask(1, 1, stor5[arg1][19][idx].field_1536) != 2:
                                        if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] <= 0:
                                            s = s + 1
                                            t = t
                                            continue 
                                        if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_1792
                                        require (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                        s = s + 1
                                        t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    require uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] <= 0:
                                        if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                            s = s + 1
                                            t = t
                                            continue 
                                        if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_1792
                                        require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                        s = s + 1
                                        t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                        if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                            s = s + 1
                                            t = t
                                            continue 
                                        if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_1792
                                        require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                        s = s + 1
                                        t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    require uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1536
                                    require (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t >= t
                                    if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                        s = s + 1
                                        t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                        s = s + 1
                                        t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                        s = s + 1
                                        t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                    s = s + 1
                                    t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                    continue 
                                require uint8(s) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                if stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] <= 0:
                                    if Mask(1, 1, stor5[arg1][19][idx].field_1536) != 2:
                                        if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                            s = s + 1
                                            t = t
                                            continue 
                                        if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_1792
                                        require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                        s = s + 1
                                        t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                        if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] <= 0:
                                            s = s + 1
                                            t = t
                                            continue 
                                        if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_1792
                                        require (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                        s = s + 1
                                        t = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                        if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] <= 0:
                                            s = s + 1
                                            t = t
                                            continue 
                                        if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_1792
                                        require (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                        s = s + 1
                                        t = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1536
                                    require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t >= t
                                    if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                        s = s + 1
                                        t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] <= 0:
                                        s = s + 1
                                        t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                        s = s + 1
                                        t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                    s = s + 1
                                    t = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                    continue 
                                if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) != 1:
                                    if Mask(1, 1, stor5[arg1][19][idx].field_1536) != 2:
                                        if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                            s = s + 1
                                            t = t
                                            continue 
                                        if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_1792
                                        require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                        s = s + 1
                                        t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                        if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] <= 0:
                                            s = s + 1
                                            t = t
                                            continue 
                                        if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_1792
                                        require (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                        s = s + 1
                                        t = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                        if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] <= 0:
                                            s = s + 1
                                            t = t
                                            continue 
                                        if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                            s = s + 1
                                            t = t
                                            continue 
                                        require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                        require stor5[arg1].field_1792
                                        require (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t >= t
                                        s = s + 1
                                        t = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + t
                                        continue 
                                    require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1536
                                    require (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t >= t
                                    if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                        s = s + 1
                                        t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] <= 0:
                                        s = s + 1
                                        t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                        s = s + 1
                                        t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                        continue 
                                    require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                    s = s + 1
                                    t = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + t
                                    continue 
                                require uint8(s) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_1280
                                require (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t >= t
                                if Mask(1, 1, stor5[arg1][19][idx].field_1536) != 2:
                                    if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                        s = s + 1
                                        t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                        s = s + 1
                                        t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                        s = s + 1
                                        t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                    s = s + 1
                                    t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                if stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] <= 0:
                                    if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                        s = s + 1
                                        t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] <= 0:
                                        s = s + 1
                                        t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                        s = s + 1
                                        t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                    s = s + 1
                                    t = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                                if bool(block.hash(uint8(s) + stor5[arg1][19][idx].field_256)) == 1:
                                    if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                        s = s + 1
                                        t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] <= 0:
                                        s = s + 1
                                        t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                        s = s + 1
                                        t = (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                        continue 
                                    require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                                    mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                    require stor5[arg1].field_1792
                                    require stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                                    s = s + 1
                                    t = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                    continue 
                            require sub_78463323 + uint8(s) < stor5[arg1][19][idx].field_1792
                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                            require stor5[arg1].field_1536
                            require stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536 >= 0
                            if Mask(1, 2, stor5[arg1][19][idx].field_1536) != 4:
                                s = s + 1
                                t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                continue 
                            require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                            mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                            if stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] <= 0:
                                s = s + 1
                                t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                continue 
                            if block.hash(uint8(s) + stor5[arg1][19][idx].field_256) % 16 > 15:
                                s = s + 1
                                t = (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                                continue 
                        require (2 * sub_78463323) + uint8(s) < stor5[arg1][19][idx].field_1792
                        mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                        require stor5[arg1].field_1792
                        require stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792 >= 0
                        s = s + 1
                        t = (stor((0.125 / (2 * stor[('name', 'stor4', 4)]) + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8((2 * stor4) + uint8(s))] * stor5[arg1].field_2816 / stor5[arg1].field_1792) + (stor((0.125 / stor[('name', 'stor4', 4)] + uint8(s)) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 + uint8(s))] * stor5[arg1].field_2560 / stor5[arg1].field_1536) + (stor((Mask(5, 3, s) >> 3) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(s)] * stor5[arg1].field_2304 / stor5[arg1].field_1280) + t
                        continue 
                    s = 0
                    u = 0
                    while uint8(s) < 3:
                        if not uint8(stor5[arg1][19][idx].field_1536 % 16 and 2^uint8(s)):
                            s = s + 1
                            u = u
                            continue 
                        s = s + 1
                        u = u + 1
                        continue 
                    if Mask(1, 3, stor5[arg1][19][idx].field_1536) == 8:
                        require sub_78463323 * u < stor5[arg1][19][idx].field_1792
                        s = 0
                        v = (sub_78463323 * u) + 1
                        while uint32(s) < stor((0.125 / stor[('name', 'stor4', 4)] * u) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(stor4 * u)]:
                            u = 0
                            w = t
                            while uint8(u) < sub_78463323:
                                require v < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                if stor((0.125 / v) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(v)] != block.hash(stor5[arg1][19][idx].field_256 + uint8(u)) % 16:
                                    u = u + 1
                                    w = w
                                    continue 
                                require v + 1 < stor5[arg1][19][idx].field_1792
                                mem[0] = sha3(idx, sha3(arg1, 5) + 19) + 7
                                require stor5[arg1].field_2048
                                require (stor((0.125 / v + 1) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(v + 1)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + w >= w
                                u = u + 1
                                w = (stor((0.125 / v + 1) + ('array', 7, ('map', ('var', 0), ('array', 19, ('map', ('param', 'arg1'), ('name', 'stor5', 5))))))[uint8(v + 1)] * stor5[arg1].field_3072 / stor5[arg1].field_2048) + w
                                continue 
                            s = s + 1
                            v = v + 2
                            continue 
                if not t:
                    uint8(stor5[arg1][19][idx].field_1544) = 1
                    stor5[arg1][19][idx].field_1280 = 0
                    require stor5[arg1][19][idx].field_1024 <= stor5[arg1].field_4352
                    stor5[arg1].field_4352 -= stor5[arg1][19][idx].field_1024
                    stor5[arg1].field_4096 = stor5[arg1][19][idx].field_512
                    require (sub_9b458bd3 * stor5[arg1][19][idx].field_768 / 10000) + sub_ccc8efcc[address(stor5[arg1].field_256)] >= sub_ccc8efcc[address(stor5[arg1].field_256)]
                    mem[0] = address(stor5[arg1].field_256)
                    mem[32] = 6
                    sub_ccc8efcc[address(stor5[arg1].field_256)] += sub_9b458bd3 * stor5[arg1][19][idx].field_768 / 10000
                    require stor5[arg1][19][idx].field_768 - (sub_9b458bd3 * stor5[arg1][19][idx].field_768 / 10000) + stor5[arg1].field_4608 >= stor5[arg1].field_4608
                    stor5[arg1].field_4608 = stor5[arg1][19][idx].field_768 - (sub_9b458bd3 * stor5[arg1][19][idx].field_768 / 10000) + stor5[arg1].field_4608
                    require 0 <= stor5[arg1][19][idx].field_768 - (sub_9b458bd3 * stor5[arg1][19][idx].field_768 / 10000) + stor5[arg1].field_4608
                    stor5[arg1].field_4608 = stor5[arg1][19][idx].field_768 - (sub_9b458bd3 * stor5[arg1][19][idx].field_768 / 10000) + stor5[arg1].field_4608
                else:
                    require stor5[arg1].field_3584 * t / t == stor5[arg1].field_3584
                    if stor5[arg1].field_3584 * t > 0:
                        if not address(stor5[arg1].field_256):
                            if stor5[arg1].field_3584 * t > eth.balance(this.address):
                                revert with 0, 'Not enough ether :(!'
                        else:
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(stor5[arg1].field_256))
                            staticcall address(stor5[arg1].field_256).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < stor5[arg1].field_3584 * t:
                                revert with 0, 'Not enough token :(!'
                    uint8(stor5[arg1][19][idx].field_1544) = 1
                    stor5[arg1][19][idx].field_1280 = stor5[arg1].field_3584 * t
                    require stor5[arg1][19][idx].field_1024 <= stor5[arg1].field_4352
                    stor5[arg1].field_4352 -= stor5[arg1][19][idx].field_1024
                    stor5[arg1].field_4096 = stor5[arg1][19][idx].field_512
                    require (sub_9b458bd3 * stor5[arg1][19][idx].field_768 / 10000) + sub_ccc8efcc[address(stor5[arg1].field_256)] >= sub_ccc8efcc[address(stor5[arg1].field_256)]
                    mem[0] = address(stor5[arg1].field_256)
                    mem[32] = 6
                    sub_ccc8efcc[address(stor5[arg1].field_256)] += sub_9b458bd3 * stor5[arg1][19][idx].field_768 / 10000
                    require stor5[arg1][19][idx].field_768 - (sub_9b458bd3 * stor5[arg1][19][idx].field_768 / 10000) + stor5[arg1].field_4608 >= stor5[arg1].field_4608
                    stor5[arg1].field_4608 = stor5[arg1][19][idx].field_768 - (sub_9b458bd3 * stor5[arg1][19][idx].field_768 / 10000) + stor5[arg1].field_4608
                    require stor5[arg1].field_3584 * t <= stor5[arg1][19][idx].field_768 - (sub_9b458bd3 * stor5[arg1][19][idx].field_768 / 10000) + stor5[arg1].field_4608
                    stor5[arg1].field_4608 = stor5[arg1][19][idx].field_768 - (sub_9b458bd3 * stor5[arg1][19][idx].field_768 / 10000) + stor5[arg1].field_4608 - (stor5[arg1].field_3584 * t)
                    if stor5[arg1].field_3584 * t > 0:
                        if not address(stor5[arg1].field_256):
                            call address(stor5[arg1][19][idx].field_0) with:
                               value stor5[arg1].field_3584 * t wei
                                 gas 2300 * is_zero(value) wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                        else:
                            require ext_code.size(address(stor5[arg1].field_256))
                            call address(stor5[arg1].field_256).0xa9059cbb with:
                                 gas gas_remaining wei
                                args address(stor5[arg1][19][idx].field_0), stor5[arg1].field_3584 * t
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                        mem[mem[64]] = arg1
                        mem[mem[64] + 32] = idx
                        mem[mem[64] + 64] = stor5[arg1].field_3584 * t
                        emit 0xc6463bc3: arg1, idx, stor5[arg1].field_3584 * t
        idx = idx + 1
        continue 
    if stor5[arg1].field_4096 != stor5[arg1].field_3840:
        return 0
    if stor5[arg1].field_4608 > 0:
        if not address(stor5[arg1].field_256):
            if stor5[arg1].field_4608 > eth.balance(this.address):
                revert with 0, 'Not enough ether :(!'
        else:
            require ext_code.size(address(stor5[arg1].field_256))
            staticcall address(stor5[arg1].field_256).0x70a08231 with:
                    gas gas_remaining wei
                   args address(this.address)
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] < stor5[arg1].field_4608:
                revert with 0, 'Not enough token :(!'
        stor5[arg1].field_4608 = 0
        if not address(stor5[arg1].field_256):
            call address(stor5[arg1].field_0) with:
               value stor5[arg1].field_4608 wei
                 gas 2300 * is_zero(value) wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
        else:
            require ext_code.size(address(stor5[arg1].field_256))
            call address(stor5[arg1].field_256).0xa9059cbb with:
                 gas gas_remaining wei
                args address(stor5[arg1].field_0), stor5[arg1].field_4608
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
    uint8(stor5[arg1].field_3328) = 0
    emit 0x67acaceb: arg1
    return 1
}



}
