contract main {




// =====================  Runtime code  =====================


#
#  - reLoadXname(bytes32 arg1, uint256 arg2, uint256 arg3)
#  - reLoadXid(uint256 arg1, uint256 arg2, uint256 arg3)
#  - reLoadXaddr(address arg1, uint256 arg2, uint256 arg3)
#  - buyXid(uint256 arg1, uint256 arg2)
#  - buyXaddr(address arg1, uint256 arg2)
#  - buyXname(bytes32 arg1, uint256 arg2)
#
const name = 'NTech 3D Long Official'

const symbol = 'NT3D'


mapping of uint256 stor0;
address communityAddr_;
address nTFoundationAddr_;
address stor3;
uint8 stor4; offset 160
address stor4;
address stor6;
mapping of uint256 pIDxAddr_;
mapping of uint256 pIDxName_;
mapping of struct plyr_;
mapping of struct plyrRnds_;
mapping of uint8 stor11;
uint256 rID_;
uint256 airDropPot_;
uint256 airDropTracker_;
mapping of struct round_;
mapping of uint256 rndTmEth_;
mapping of struct fees_;
mapping of struct potSplit_;
uint256 stor169F;
uint256 stor169F;

function pIDxAddr_(address arg1) {
    return pIDxAddr_[arg1]
}

function airDropTracker_() {
    return airDropTracker_
}

function round_(uint256 arg1) {
    return round_[arg1].field_0, 
           round_[arg1].field_256,
           round_[arg1].field_512,
           bool(round_[arg1].field_768),
           round_[arg1].field_1024,
           round_[arg1].field_1280,
           round_[arg1].field_1536,
           round_[arg1].field_1792,
           round_[arg1].field_2048,
           round_[arg1].field_2304,
           round_[arg1].field_2560,
           round_[arg1].field_2816,
           round_[arg1].field_3072
}

function plyrNames_(uint256 arg1, bytes32 arg2) {
    return bool(stor11[arg1][arg2])
}

function fees_(uint256 arg1) {
    return fees_[arg1].field_0, fees_[arg1].field_256
}

function pIDxName_(bytes32 arg1) {
    return pIDxName_[arg1]
}

function communityAddr_() {
    return communityAddr_
}

function rndTmEth_(uint256 arg1, uint256 arg2) {
    return rndTmEth_[arg1][arg2]
}

function rID_() {
    return rID_
}

function NTFoundationAddr_() {
    return nTFoundationAddr_
}

function plyrRnds_(uint256 arg1, uint256 arg2) {
    return plyrRnds_[arg1][arg2].field_0, 
           plyrRnds_[arg1][arg2].field_256,
           plyrRnds_[arg1][arg2].field_512,
           plyrRnds_[arg1][arg2].field_768
}

function potSplit_(uint256 arg1) {
    return potSplit_[arg1].field_0, potSplit_[arg1].field_256
}

function activated_() {
    return bool(uint8(stor4.field_160))
}

function airDropPot_() {
    return airDropPot_
}

function plyr_(uint256 arg1) {
    return plyr_[arg1].field_0, 
           plyr_[arg1].field_256,
           plyr_[arg1].field_512,
           plyr_[arg1].field_768,
           plyr_[arg1].field_1024,
           plyr_[arg1].field_1280,
           plyr_[arg1].field_1536
}

function _fallback() payable {
    revert
}

function setNTToken(address arg1) {
    if stor0[msg.sender] != 9:
        revert with 0, 'Must be admin.'
    if not arg1:
        revert with 0, 'Empty address not allowed.'
    address(stor4.field_0) = arg1
}

function receivePlayerNameList(uint256 arg1, bytes32 arg2) {
    if msg.sender != 0x410526cd583af0be0530166d53efcd7da969f7b7:
        revert with 0, 'Called from PlayerBook only'
    if not stor11[arg1][arg2]:
        stor11[arg1][arg2] = 1
}

function getTimeLeft() {
    if block.timestamp >= round_[stor12].field_512:
        return 0
    if block.timestamp > round_[stor12].field_512:
        revert with 0, 'SafeMath sub failed'
    return (round_[stor12].field_512 - block.timestamp)
}

function potSwap() payable {
    if msg.value + round_[stor12 + 1].field_3072 < round_[stor12 + 1].field_3072:
        revert with 0, 'SafeMath add failed'
    round_[stor12 + 1].field_3072 += msg.value
    emit onPotSwapDeposit(rID_ + 1, msg.value);
}

function setOtherNTech3D(address arg1) {
    if stor0[msg.sender] != 9:
        revert with 0, 'Must be admin.'
    if not arg1:
        revert with 0, 'Empty address not allowed.'
    if stor6:
        revert with 0, 'OtherNTech3D has been set.'
    stor6 = arg1
}

function transfer(address arg1, uint256 arg2) {
    if stor0[msg.sender] != 9:
        revert with 0, 'Must be admin.'
    if arg2 <= 0:
        revert with 0, 'Must > 0 '
    require ext_code.size(address(stor4.field_0))
    call address(stor4.field_0).0xa9059cbb with:
         gas gas_remaining wei
        args address(arg1), arg2
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return 1
}

function activate() {
    if stor0[msg.sender] != 9:
        revert with 0, 'Must be admin.'
    if not address(stor4.field_0):
        revert with 0, 'Must setup NTToken.'
    if not communityAddr_:
        revert with 0, 'Must setup CommunityAddr_.'
    if not stor3:
        revert with 0, 'Must setup NTTokenSeller.'
    if not nTFoundationAddr_:
        revert with 0, 'Must setup NTFoundationAddr.'
    if uint8(stor4.field_160):
        revert with 0, 'Only once'
    uint8(stor4.field_160) = 1
    rID_ = 1
    stor169F = block.timestamp
    stor169F = block.timestamp + (6 * 3600)
}

function getCurrentRoundInfo() {
    return round_[stor12].field_2304, 
           rID_,
           round_[stor12].field_1280,
           round_[stor12].field_512,
           round_[stor12].field_1024,
           round_[stor12].field_1792,
           round_[stor12].field_256 + (10 * round_[stor12].field_0),
           plyr_[stor15[stor12].field_0].field_0,
           plyr_[stor15[stor12].field_0].field_256,
           rndTmEth_[stor12][0],
           rndTmEth_[stor12][1],
           rndTmEth_[stor12][2],
           rndTmEth_[stor12][3],
           airDropTracker_ + (1000 * airDropPot_)
}

function receivePlayerInfo(uint256 arg1, address arg2, bytes32 arg3, uint256 arg4) {
    if msg.sender != 0x410526cd583af0be0530166d53efcd7da969f7b7:
        revert with 0, 'Called from PlayerBook only'
    if arg1 != pIDxAddr_[address(arg2)]:
        pIDxAddr_[address(arg2)] = arg1
    if arg1 != pIDxName_[arg3]:
        pIDxName_[arg3] = arg1
    if plyr_[arg1].field_0 != arg2:
        plyr_[arg1].field_0 = arg2
    if arg3 != plyr_[arg1].field_256:
        plyr_[arg1].field_256 = arg3
    if arg4 != plyr_[arg1].field_1536:
        plyr_[arg1].field_1536 = arg4
    if not stor11[arg1][arg3]:
        stor11[arg1][arg3] = 1
}

function getPlayerInfoByAddress(address arg1) {
    if not round_[stor9[stor7[address(arg1)]].field_1280].field_2048:
        if plyrRnds_[stor7[address(arg1)]][stor9[stor7[address(arg1)]].field_1280].field_512 > 0:
            revert with 0, 'SafeMath sub failed'
        if -plyrRnds_[stor7[address(arg1)]][stor9[stor7[address(arg1)]].field_1280].field_512 + plyr_[stor7[address(arg1)]].field_768 < plyr_[stor7[address(arg1)]].field_768:
            revert with 0, 'SafeMath add failed'
        return pIDxAddr_[address(arg1)], 
               plyr_[stor7[address(arg1)]].field_256,
               plyrRnds_[stor7[address(arg1)]][stor12].field_256,
               plyr_[stor7[address(arg1)]].field_512,
               -plyrRnds_[stor7[address(arg1)]][stor9[stor7[address(arg1)]].field_1280].field_512 + plyr_[stor7[address(arg1)]].field_768,
               plyr_[stor7[address(arg1)]].field_1024,
               plyrRnds_[stor7[address(arg1)]][stor12].field_0
    if plyrRnds_[stor7[address(arg1)]][stor9[stor7[address(arg1)]].field_1280].field_256 * round_[stor9[stor7[address(arg1)]].field_1280].field_2048 / round_[stor9[stor7[address(arg1)]].field_1280].field_2048 != plyrRnds_[stor7[address(arg1)]][stor9[stor7[address(arg1)]].field_1280].field_256:
        revert with 0, 'SafeMath mul failed'
    if plyrRnds_[stor7[address(arg1)]][stor9[stor7[address(arg1)]].field_1280].field_512 > plyrRnds_[stor7[address(arg1)]][stor9[stor7[address(arg1)]].field_1280].field_256 * round_[stor9[stor7[address(arg1)]].field_1280].field_2048 / 10^18:
        revert with 0, 'SafeMath sub failed'
    if (plyrRnds_[stor7[address(arg1)]][stor9[stor7[address(arg1)]].field_1280].field_256 * round_[stor9[stor7[address(arg1)]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[address(arg1)]][stor9[stor7[address(arg1)]].field_1280].field_512 + plyr_[stor7[address(arg1)]].field_768 < plyr_[stor7[address(arg1)]].field_768:
        revert with 0, 'SafeMath add failed'
    return pIDxAddr_[address(arg1)], 
           plyr_[stor7[address(arg1)]].field_256,
           plyrRnds_[stor7[address(arg1)]][stor12].field_256,
           plyr_[stor7[address(arg1)]].field_512,
           (plyrRnds_[stor7[address(arg1)]][stor9[stor7[address(arg1)]].field_1280].field_256 * round_[stor9[stor7[address(arg1)]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[address(arg1)]][stor9[stor7[address(arg1)]].field_1280].field_512 + plyr_[stor7[address(arg1)]].field_768,
           plyr_[stor7[address(arg1)]].field_1024,
           plyrRnds_[stor7[address(arg1)]][stor12].field_0
}

function registerNameXID(string arg1, uint256 arg2, bool arg3) payable {
    mem[64] = ceil32(arg1.length) + 128
    mem[96] = arg1.length
    mem[128 len arg1.length] = arg1[all]
    if ext_code.size(msg.sender):
        revert with 0, 'Humans only'
    if arg1.length > 32:
        revert with 0, 'string must be between 1 and 32 characters'
    if arg1.length <= 0:
        revert with 0, 'string must be between 1 and 32 characters'
    require 0 < arg1.length
    if 0x2000000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[128]):
        revert with 0, 'string cannot start or end with space'
    require arg1.length - 1 < arg1.length
    if 0x2000000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[arg1.length + 127]):
        revert with 0, 'string cannot start or end with space'
    require 0 < arg1.length
    if 0x3000000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[128]):
        require 1 < arg1.length
        if 0x7800000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[129]):
            revert with 0, 'string cannot start with 0x'
        require 1 < arg1.length
        if 0x5800000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[129]):
            revert with 0, 'string cannot start with 0X'
    idx = 0
    s = 0
    while idx < arg1.length:
        require idx < arg1.length
        require idx < arg1.length
        require idx < arg1.length
        if Mask(8, 248, mem[idx + 128]) <= '@':
            if Mask(8, 248, mem[idx + 128]) != 0x2000000000000000000000000000000000000000000000000000000000000000:
                require idx < arg1.length
                if Mask(8, 248, mem[idx + 128]) <= '`':
                    if Mask(8, 248, mem[idx + 128]) <= '/':
                        revert with 0, 'string contains invalid characters'
                    require idx < arg1.length
                    if Mask(8, 248, mem[idx + 128]) >= ':':
                        revert with 0, 'string contains invalid characters'
                else:
                    if Mask(8, 248, mem[idx + 128]) >= '{':
                        require idx < arg1.length
                        if Mask(8, 248, mem[idx + 128]) <= '/':
                            revert with 0, 'string contains invalid characters'
                        require idx < arg1.length
                        if Mask(8, 248, mem[idx + 128]) >= ':':
                            revert with 0, 'string contains invalid characters'
            if 0x2000000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[idx + 128]):
                require idx + 1 < arg1.length
                if 0x2000000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[idx + 129]):
                    revert with 0, 'string cannot contain consecutive spaces'
            if s:
                idx = idx + 1
                s = s
                continue 
            require idx < arg1.length
            if Mask(8, 248, mem[idx + 128]) >= '0':
                require idx < arg1.length
                if Mask(8, 248, mem[idx + 128]) <= '9':
                    idx = idx + 1
                    s = s
                    continue 
        else:
            require idx < arg1.length
            if Mask(8, 248, mem[idx + 128]) < '[':
                mem[idx + 128 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 32, ('mem', ('range', ('add', 128, ('var', 0)), 1)))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 32, ('mem', ('range', ('add', 128, ('var', 0)), 1)))), 0) - 256
                if s:
                    idx = idx + 1
                    s = s
                    continue 
            else:
                if Mask(8, 248, mem[idx + 128]) != 0x2000000000000000000000000000000000000000000000000000000000000000:
                    require idx < arg1.length
                    if Mask(8, 248, mem[idx + 128]) <= '`':
                        if Mask(8, 248, mem[idx + 128]) <= '/':
                            revert with 0, 'string contains invalid characters'
                        require idx < arg1.length
                        if Mask(8, 248, mem[idx + 128]) >= ':':
                            revert with 0, 'string contains invalid characters'
                    else:
                        if Mask(8, 248, mem[idx + 128]) >= '{':
                            require idx < arg1.length
                            if Mask(8, 248, mem[idx + 128]) <= '/':
                                revert with 0, 'string contains invalid characters'
                            require idx < arg1.length
                            if Mask(8, 248, mem[idx + 128]) >= ':':
                                revert with 0, 'string contains invalid characters'
                if 0x2000000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[idx + 128]):
                    require idx + 1 < arg1.length
                    if 0x2000000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[idx + 129]):
                        revert with 0, 'string cannot contain consecutive spaces'
                if s:
                    idx = idx + 1
                    s = s
                    continue 
                require idx < arg1.length
                if Mask(8, 248, mem[idx + 128]) >= '0':
                    require idx < arg1.length
                    if Mask(8, 248, mem[idx + 128]) <= '9':
                        idx = idx + 1
                        s = s
                        continue 
        idx = idx + 1
        s = 1
        continue 
    if bool(s) != 1:
        revert with 0, 'string cannot be only numbers'
    require ext_code.size(0x410526cd583af0be0530166d53efcd7da969f7b7)
    call 0x410526cd583af0be0530166d53efcd7da969f7b7.0xc0942dfd with:
       value msg.value wei
         gas gas_remaining wei
        args msg.sender, mem[128], arg2, arg3
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    emit onNewName(bool(ext_call.return_data[0]), ext_call.return_data[32], plyr_[ext_call.return_data[32]].field_0, plyr_[ext_call.return_data[32]].field_256, msg.value, block.timestamp, pIDxAddr_[address(msg.sender)], msg.sender, mem[128]);
}

function registerNameXname(string arg1, bytes32 arg2, bool arg3) payable {
    mem[64] = ceil32(arg1.length) + 128
    mem[96] = arg1.length
    mem[128 len arg1.length] = arg1[all]
    if ext_code.size(msg.sender):
        revert with 0, 'Humans only'
    if arg1.length > 32:
        revert with 0, 'string must be between 1 and 32 characters'
    if arg1.length <= 0:
        revert with 0, 'string must be between 1 and 32 characters'
    require 0 < arg1.length
    if 0x2000000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[128]):
        revert with 0, 'string cannot start or end with space'
    require arg1.length - 1 < arg1.length
    if 0x2000000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[arg1.length + 127]):
        revert with 0, 'string cannot start or end with space'
    require 0 < arg1.length
    if 0x3000000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[128]):
        require 1 < arg1.length
        if 0x7800000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[129]):
            revert with 0, 'string cannot start with 0x'
        require 1 < arg1.length
        if 0x5800000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[129]):
            revert with 0, 'string cannot start with 0X'
    idx = 0
    s = 0
    while idx < arg1.length:
        require idx < arg1.length
        require idx < arg1.length
        require idx < arg1.length
        if Mask(8, 248, mem[idx + 128]) <= '@':
            if Mask(8, 248, mem[idx + 128]) != 0x2000000000000000000000000000000000000000000000000000000000000000:
                require idx < arg1.length
                if Mask(8, 248, mem[idx + 128]) <= '`':
                    if Mask(8, 248, mem[idx + 128]) <= '/':
                        revert with 0, 'string contains invalid characters'
                    require idx < arg1.length
                    if Mask(8, 248, mem[idx + 128]) >= ':':
                        revert with 0, 'string contains invalid characters'
                else:
                    if Mask(8, 248, mem[idx + 128]) >= '{':
                        require idx < arg1.length
                        if Mask(8, 248, mem[idx + 128]) <= '/':
                            revert with 0, 'string contains invalid characters'
                        require idx < arg1.length
                        if Mask(8, 248, mem[idx + 128]) >= ':':
                            revert with 0, 'string contains invalid characters'
            if 0x2000000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[idx + 128]):
                require idx + 1 < arg1.length
                if 0x2000000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[idx + 129]):
                    revert with 0, 'string cannot contain consecutive spaces'
            if s:
                idx = idx + 1
                s = s
                continue 
            require idx < arg1.length
            if Mask(8, 248, mem[idx + 128]) >= '0':
                require idx < arg1.length
                if Mask(8, 248, mem[idx + 128]) <= '9':
                    idx = idx + 1
                    s = s
                    continue 
        else:
            require idx < arg1.length
            if Mask(8, 248, mem[idx + 128]) < '[':
                mem[idx + 128 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 32, ('mem', ('range', ('add', 128, ('var', 0)), 1)))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 32, ('mem', ('range', ('add', 128, ('var', 0)), 1)))), 0) - 256
                if s:
                    idx = idx + 1
                    s = s
                    continue 
            else:
                if Mask(8, 248, mem[idx + 128]) != 0x2000000000000000000000000000000000000000000000000000000000000000:
                    require idx < arg1.length
                    if Mask(8, 248, mem[idx + 128]) <= '`':
                        if Mask(8, 248, mem[idx + 128]) <= '/':
                            revert with 0, 'string contains invalid characters'
                        require idx < arg1.length
                        if Mask(8, 248, mem[idx + 128]) >= ':':
                            revert with 0, 'string contains invalid characters'
                    else:
                        if Mask(8, 248, mem[idx + 128]) >= '{':
                            require idx < arg1.length
                            if Mask(8, 248, mem[idx + 128]) <= '/':
                                revert with 0, 'string contains invalid characters'
                            require idx < arg1.length
                            if Mask(8, 248, mem[idx + 128]) >= ':':
                                revert with 0, 'string contains invalid characters'
                if 0x2000000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[idx + 128]):
                    require idx + 1 < arg1.length
                    if 0x2000000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[idx + 129]):
                        revert with 0, 'string cannot contain consecutive spaces'
                if s:
                    idx = idx + 1
                    s = s
                    continue 
                require idx < arg1.length
                if Mask(8, 248, mem[idx + 128]) >= '0':
                    require idx < arg1.length
                    if Mask(8, 248, mem[idx + 128]) <= '9':
                        idx = idx + 1
                        s = s
                        continue 
        idx = idx + 1
        s = 1
        continue 
    if bool(s) != 1:
        revert with 0, 'string cannot be only numbers'
    require ext_code.size(0x410526cd583af0be0530166d53efcd7da969f7b7)
    call 0x410526cd583af0be0530166d53efcd7da969f7b7.0x745ea0c1 with:
       value msg.value wei
         gas gas_remaining wei
        args msg.sender, mem[128], arg2, arg3
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    emit onNewName(bool(ext_call.return_data[0]), ext_call.return_data[32], plyr_[ext_call.return_data[32]].field_0, plyr_[ext_call.return_data[32]].field_256, msg.value, block.timestamp, pIDxAddr_[address(msg.sender)], msg.sender, mem[128]);
}

function registerNameXaddr(string arg1, address arg2, bool arg3) payable {
    mem[64] = ceil32(arg1.length) + 128
    mem[96] = arg1.length
    mem[128 len arg1.length] = arg1[all]
    if ext_code.size(msg.sender):
        revert with 0, 'Humans only'
    if arg1.length > 32:
        revert with 0, 'string must be between 1 and 32 characters'
    if arg1.length <= 0:
        revert with 0, 'string must be between 1 and 32 characters'
    require 0 < arg1.length
    if 0x2000000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[128]):
        revert with 0, 'string cannot start or end with space'
    require arg1.length - 1 < arg1.length
    if 0x2000000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[arg1.length + 127]):
        revert with 0, 'string cannot start or end with space'
    require 0 < arg1.length
    if 0x3000000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[128]):
        require 1 < arg1.length
        if 0x7800000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[129]):
            revert with 0, 'string cannot start with 0x'
        require 1 < arg1.length
        if 0x5800000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[129]):
            revert with 0, 'string cannot start with 0X'
    idx = 0
    s = 0
    while idx < arg1.length:
        require idx < arg1.length
        require idx < arg1.length
        require idx < arg1.length
        if Mask(8, 248, mem[idx + 128]) <= '@':
            if Mask(8, 248, mem[idx + 128]) != 0x2000000000000000000000000000000000000000000000000000000000000000:
                require idx < arg1.length
                if Mask(8, 248, mem[idx + 128]) <= '`':
                    if Mask(8, 248, mem[idx + 128]) <= '/':
                        revert with 0, 'string contains invalid characters'
                    require idx < arg1.length
                    if Mask(8, 248, mem[idx + 128]) >= ':':
                        revert with 0, 'string contains invalid characters'
                else:
                    if Mask(8, 248, mem[idx + 128]) >= '{':
                        require idx < arg1.length
                        if Mask(8, 248, mem[idx + 128]) <= '/':
                            revert with 0, 'string contains invalid characters'
                        require idx < arg1.length
                        if Mask(8, 248, mem[idx + 128]) >= ':':
                            revert with 0, 'string contains invalid characters'
            if 0x2000000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[idx + 128]):
                require idx + 1 < arg1.length
                if 0x2000000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[idx + 129]):
                    revert with 0, 'string cannot contain consecutive spaces'
            if s:
                idx = idx + 1
                s = s
                continue 
            require idx < arg1.length
            if Mask(8, 248, mem[idx + 128]) >= '0':
                require idx < arg1.length
                if Mask(8, 248, mem[idx + 128]) <= '9':
                    idx = idx + 1
                    s = s
                    continue 
        else:
            require idx < arg1.length
            if Mask(8, 248, mem[idx + 128]) < '[':
                mem[idx + 128 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 32, ('mem', ('range', ('add', 128, ('var', 0)), 1)))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 32, ('mem', ('range', ('add', 128, ('var', 0)), 1)))), 0) - 256
                if s:
                    idx = idx + 1
                    s = s
                    continue 
            else:
                if Mask(8, 248, mem[idx + 128]) != 0x2000000000000000000000000000000000000000000000000000000000000000:
                    require idx < arg1.length
                    if Mask(8, 248, mem[idx + 128]) <= '`':
                        if Mask(8, 248, mem[idx + 128]) <= '/':
                            revert with 0, 'string contains invalid characters'
                        require idx < arg1.length
                        if Mask(8, 248, mem[idx + 128]) >= ':':
                            revert with 0, 'string contains invalid characters'
                    else:
                        if Mask(8, 248, mem[idx + 128]) >= '{':
                            require idx < arg1.length
                            if Mask(8, 248, mem[idx + 128]) <= '/':
                                revert with 0, 'string contains invalid characters'
                            require idx < arg1.length
                            if Mask(8, 248, mem[idx + 128]) >= ':':
                                revert with 0, 'string contains invalid characters'
                if 0x2000000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[idx + 128]):
                    require idx + 1 < arg1.length
                    if 0x2000000000000000000000000000000000000000000000000000000000000000 == Mask(8, 248, mem[idx + 129]):
                        revert with 0, 'string cannot contain consecutive spaces'
                if s:
                    idx = idx + 1
                    s = s
                    continue 
                require idx < arg1.length
                if Mask(8, 248, mem[idx + 128]) >= '0':
                    require idx < arg1.length
                    if Mask(8, 248, mem[idx + 128]) <= '9':
                        idx = idx + 1
                        s = s
                        continue 
        idx = idx + 1
        s = 1
        continue 
    if bool(s) != 1:
        revert with 0, 'string cannot be only numbers'
    require ext_code.size(0x410526cd583af0be0530166d53efcd7da969f7b7)
    call 0x410526cd583af0be0530166d53efcd7da969f7b7.0xaa4d490b with:
       value msg.value wei
         gas gas_remaining wei
        args msg.sender, mem[128], address(arg2), arg3
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    emit onNewName(bool(ext_call.return_data[0]), ext_call.return_data[32], plyr_[ext_call.return_data[32]].field_0, plyr_[ext_call.return_data[32]].field_256, msg.value, block.timestamp, pIDxAddr_[address(msg.sender)], msg.sender, mem[128]);
}

function calcKeysReceived(uint256 arg1, uint256 arg2) {
    if block.timestamp <= round_[arg1].field_1024:
        if not arg2:
            s = 0x6d6382aa34bbbd30917721886eb60a20828079482420000000000
            t = 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000
            while s < t:
                require s
                if s + (0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) < 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s:
                    revert with 0, 'SafeMath add failed'
                s = s + (0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) / 2
                t = s
                continue 
        else:
            if 10^18 * arg2 / arg2 != 10^18:
                revert with 0, 'SafeMath mul failed'
            if not 10^18 * arg2:
                s = 0x6d6382aa34bbbd30917721886eb60a20828079482420000000000
                t = 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000
                while s < t:
                    require s
                    if s + (0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) < 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s:
                        revert with 0, 'SafeMath add failed'
                    s = s + (0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) / 2
                    t = s
                    continue 
            else:
                if 312500000000000000000000000 * 10^18 * arg2 / 10^18 * arg2 != 312500000 * 10^18:
                    revert with 0, 'SafeMath mul failed'
                if (312500000000000000000000000 * 10^18 * arg2) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * arg2:
                    revert with 0, 'SafeMath add failed'
                s = (312500000000000000000000000 * 10^18 * arg2) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000001 / 2
                t = (312500000000000000000000000 * 10^18 * arg2) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000
                while s < t:
                    require s
                    if s + ((312500000000000000000000000 * 10^18 * arg2) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) < (312500000000000000000000000 * 10^18 * arg2) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s:
                        revert with 0, 'SafeMath add failed'
                    s = s + ((312500000000000000000000000 * 10^18 * arg2) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) / 2
                    t = s
                    continue 
        if 74999921875000 * 10^18 > t:
            revert with 0, 'SafeMath sub failed'
        return (t - 74999921875000 * 10^18 / 156250000)
    if block.timestamp > round_[arg1].field_512:
        if block.timestamp <= round_[arg1].field_512:
            if not arg2:
                s = 0x6d6382aa34bbbd30917721886eb60a20828079482420000000000
                t = 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000
                while s < t:
                    require s
                    if s + (0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) < 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s:
                        revert with 0, 'SafeMath add failed'
                    s = s + (0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) / 2
                    t = s
                    continue 
            else:
                if 10^18 * arg2 / arg2 != 10^18:
                    revert with 0, 'SafeMath mul failed'
                if not 10^18 * arg2:
                    s = 0x6d6382aa34bbbd30917721886eb60a20828079482420000000000
                    t = 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000
                    while s < t:
                        require s
                        if s + (0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) < 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s:
                            revert with 0, 'SafeMath add failed'
                        s = s + (0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) / 2
                        t = s
                        continue 
                else:
                    if 312500000000000000000000000 * 10^18 * arg2 / 10^18 * arg2 != 312500000 * 10^18:
                        revert with 0, 'SafeMath mul failed'
                    if (312500000000000000000000000 * 10^18 * arg2) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * arg2:
                        revert with 0, 'SafeMath add failed'
                    s = (312500000000000000000000000 * 10^18 * arg2) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000001 / 2
                    t = (312500000000000000000000000 * 10^18 * arg2) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000
                    while s < t:
                        require s
                        if s + ((312500000000000000000000000 * 10^18 * arg2) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) < (312500000000000000000000000 * 10^18 * arg2) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s:
                            revert with 0, 'SafeMath add failed'
                        s = s + ((312500000000000000000000000 * 10^18 * arg2) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) / 2
                        t = s
                        continue 
            if 74999921875000 * 10^18 > t:
                revert with 0, 'SafeMath sub failed'
            return (t - 74999921875000 * 10^18 / 156250000)
        if round_[arg1].field_0:
            if not arg2:
                s = 0x6d6382aa34bbbd30917721886eb60a20828079482420000000000
                t = 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000
                while s < t:
                    require s
                    if s + (0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) < 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s:
                        revert with 0, 'SafeMath add failed'
                    s = s + (0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) / 2
                    t = s
                    continue 
            else:
                if 10^18 * arg2 / arg2 != 10^18:
                    revert with 0, 'SafeMath mul failed'
                if not 10^18 * arg2:
                    s = 0x6d6382aa34bbbd30917721886eb60a20828079482420000000000
                    t = 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000
                    while s < t:
                        require s
                        if s + (0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) < 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s:
                            revert with 0, 'SafeMath add failed'
                        s = s + (0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) / 2
                        t = s
                        continue 
                else:
                    if 312500000000000000000000000 * 10^18 * arg2 / 10^18 * arg2 != 312500000 * 10^18:
                        revert with 0, 'SafeMath mul failed'
                    if (312500000000000000000000000 * 10^18 * arg2) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * arg2:
                        revert with 0, 'SafeMath add failed'
                    s = (312500000000000000000000000 * 10^18 * arg2) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000001 / 2
                    t = (312500000000000000000000000 * 10^18 * arg2) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000
                    while s < t:
                        require s
                        if s + ((312500000000000000000000000 * 10^18 * arg2) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) < (312500000000000000000000000 * 10^18 * arg2) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s:
                            revert with 0, 'SafeMath add failed'
                        s = s + ((312500000000000000000000000 * 10^18 * arg2) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) / 2
                        t = s
                        continue 
            if 74999921875000 * 10^18 > t:
                revert with 0, 'SafeMath sub failed'
            return (t - 74999921875000 * 10^18 / 156250000)
    if not round_[arg1].field_1536:
        s = 0x6d6382aa34bbbd30917721886eb60a20828079482420000000000
        t = 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000
        while s < t:
            require s
            if s + (0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) < 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s:
                revert with 0, 'SafeMath add failed'
            s = s + (0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) / 2
            t = s
            continue 
    else:
        if 10^18 * round_[arg1].field_1536 / round_[arg1].field_1536 != 10^18:
            revert with 0, 'SafeMath mul failed'
        if not 10^18 * round_[arg1].field_1536:
            s = 0x6d6382aa34bbbd30917721886eb60a20828079482420000000000
            t = 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000
            while s < t:
                require s
                if s + (0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) < 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s:
                    revert with 0, 'SafeMath add failed'
                s = s + (0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) / 2
                t = s
                continue 
        else:
            if 312500000000000000000000000 * 10^18 * round_[arg1].field_1536 / 10^18 * round_[arg1].field_1536 != 312500000 * 10^18:
                revert with 0, 'SafeMath mul failed'
            if (312500000000000000000000000 * 10^18 * round_[arg1].field_1536) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 < 312500000000000000000000000 * 10^18 * round_[arg1].field_1536:
                revert with 0, 'SafeMath add failed'
            s = (312500000000000000000000000 * 10^18 * round_[arg1].field_1536) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000001 / 2
            t = (312500000000000000000000000 * 10^18 * round_[arg1].field_1536) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000
            while s < t:
                require s
                if s + ((312500000000000000000000000 * 10^18 * round_[arg1].field_1536) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) < (312500000000000000000000000 * 10^18 * round_[arg1].field_1536) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s:
                    revert with 0, 'SafeMath add failed'
                s = s + ((312500000000000000000000000 * 10^18 * round_[arg1].field_1536) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) / 2
                t = s
                continue 
    if 74999921875000 * 10^18 > t:
        revert with 0, 'SafeMath sub failed'
    if arg2 + round_[arg1].field_1536 < round_[arg1].field_1536:
        revert with 0, 'SafeMath add failed'
    if not arg2 + round_[arg1].field_1536:
        s = 0x6d6382aa34bbbd30917721886eb60a20828079482420000000000
        u = 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000
        while s < u:
            require s
            if s + (0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) < 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s:
                revert with 0, 'SafeMath add failed'
            s = s + (0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) / 2
            u = s
            continue 
    else:
        if (10^18 * arg2) + (10^18 * round_[arg1].field_1536) / arg2 + round_[arg1].field_1536 != 10^18:
            revert with 0, 'SafeMath mul failed'
        if not (10^18 * arg2) + (10^18 * round_[arg1].field_1536):
            s = 0x6d6382aa34bbbd30917721886eb60a20828079482420000000000
            u = 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000
            while s < u:
                require s
                if s + (0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) < 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s:
                    revert with 0, 'SafeMath add failed'
                s = s + (0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) / 2
                u = s
                continue 
        else:
            if (312500000000000000000000000 * 10^18 * arg2) + (312500000000000000000000000 * 10^18 * round_[arg1].field_1536) / (10^18 * arg2) + (10^18 * round_[arg1].field_1536) != 312500000 * 10^18:
                revert with 0, 'SafeMath mul failed'
            s = (312500000000000000000000000 * 10^18 * arg2) + (312500000000000000000000000 * 10^18 * round_[arg1].field_1536) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000001 / 2
            u = (312500000000000000000000000 * 10^18 * arg2) + (312500000000000000000000000 * 10^18 * round_[arg1].field_1536) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000
            while s < u:
                require s
                if s + ((312500000000000000000000000 * 10^18 * arg2) + (312500000000000000000000000 * 10^18 * round_[arg1].field_1536) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) < (312500000000000000000000000 * 10^18 * arg2) + (312500000000000000000000000 * 10^18 * round_[arg1].field_1536) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s:
                    revert with 0, 'SafeMath add failed'
                s = s + ((312500000000000000000000000 * 10^18 * arg2) + (312500000000000000000000000 * 10^18 * round_[arg1].field_1536) + 0xdac7055469777a6122ee4310dd6c14410500f2904840000000000 / s) / 2
                u = s
                continue 
    if 74999921875000 * 10^18 > u:
        revert with 0, 'SafeMath sub failed'
    if t - 74999921875000 * 10^18 / 156250000 > u - 74999921875000 * 10^18 / 156250000:
        revert with 0, 'SafeMath sub failed'
    return ((u - 74999921875000 * 10^18 / 156250000) - (t - 74999921875000 * 10^18 / 156250000))
}

function getBuyPrice() {
    if block.timestamp <= round_[stor12].field_1024:
        return 75 * 10^12
    if block.timestamp > round_[stor12].field_512:
        if block.timestamp <= round_[stor12].field_512:
            return 75 * 10^12
        if round_[stor12].field_0:
            return 75 * 10^12
    if round_[stor12].field_1280 + 10^18 < round_[stor12].field_1280:
        revert with 0, 'SafeMath add failed'
    if 10^18 > round_[stor12].field_1280 + 10^18:
        revert with 0, 'SafeMath sub failed'
    if not round_[stor12].field_1280:
        if not round_[stor12].field_1280:
            if not round_[stor12].field_1280 + 10^18:
                if not round_[stor12].field_1280 + 10^18:
                    return 0
                if (2 * 10^18 * round_[stor12].field_1280) + (round_[stor12].field_1280 * round_[stor12].field_1280) + 1000000000000000000 * 10^18 / round_[stor12].field_1280 + 10^18 != round_[stor12].field_1280 + 10^18:
                    revert with 0, 'SafeMath mul failed'
                if (156250000 * 10^18 * round_[stor12].field_1280) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) + 78125000000000000000000000 * 10^18 / 78125000 != (2 * 10^18 * round_[stor12].field_1280) + (round_[stor12].field_1280 * round_[stor12].field_1280) + 1000000000000000000 * 10^18:
                    revert with 0, 'SafeMath mul failed'
                if 0 > (156250000 * 10^18 * round_[stor12].field_1280) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) + 78125000000000000000000000 * 10^18 / 1000000000000000000 * 10^18:
                    revert with 0, 'SafeMath sub failed'
                return ((156250000 * 10^18 * round_[stor12].field_1280) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) + 78125000000000000000000000 * 10^18 / 1000000000000000000 * 10^18)
            if (10^18 * round_[stor12].field_1280) + 1000000000000000000 * 10^18 / round_[stor12].field_1280 + 10^18 != 10^18:
                revert with 0, 'SafeMath mul failed'
            if (149999843750000 * 10^18 * round_[stor12].field_1280) + 0x66a2519f4ce084becaa29127238e58970000000000 / 149999843750000 != (10^18 * round_[stor12].field_1280) + 1000000000000000000 * 10^18:
                revert with 0, 'SafeMath mul failed'
            if not round_[stor12].field_1280 + 10^18:
                if (149999843750000 * 10^18 * round_[stor12].field_1280) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2 < 0:
                    revert with 0, 'SafeMath add failed'
                if 0 > (149999843750000 * 10^18 * round_[stor12].field_1280) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2 / 1000000000000000000 * 10^18:
                    revert with 0, 'SafeMath sub failed'
                return ((149999843750000 * 10^18 * round_[stor12].field_1280) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2 / 1000000000000000000 * 10^18)
            if (2 * 10^18 * round_[stor12].field_1280) + (round_[stor12].field_1280 * round_[stor12].field_1280) + 1000000000000000000 * 10^18 / round_[stor12].field_1280 + 10^18 != round_[stor12].field_1280 + 10^18:
                revert with 0, 'SafeMath mul failed'
            if (156250000 * 10^18 * round_[stor12].field_1280) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) + 78125000000000000000000000 * 10^18 / 78125000 != (2 * 10^18 * round_[stor12].field_1280) + (round_[stor12].field_1280 * round_[stor12].field_1280) + 1000000000000000000 * 10^18:
                revert with 0, 'SafeMath mul failed'
            if (149999843750000 * 10^18 * round_[stor12].field_1280) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2 < 0:
                revert with 0, 'SafeMath add failed'
            if 0 > ((149999843750000 * 10^18 * round_[stor12].field_1280) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2) + (156250000 * 10^18 * round_[stor12].field_1280) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) + 78125000000000000000000000 * 10^18 / 1000000000000000000 * 10^18:
                revert with 0, 'SafeMath sub failed'
            return (((149999843750000 * 10^18 * round_[stor12].field_1280) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2) + (156250000 * 10^18 * round_[stor12].field_1280) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) + 78125000000000000000000000 * 10^18 / 1000000000000000000 * 10^18)
        if round_[stor12].field_1280 * round_[stor12].field_1280 / round_[stor12].field_1280 != round_[stor12].field_1280:
            revert with 0, 'SafeMath mul failed'
        if 78125000 * round_[stor12].field_1280 * round_[stor12].field_1280 / 78125000 != round_[stor12].field_1280 * round_[stor12].field_1280:
            revert with 0, 'SafeMath mul failed'
        if 78125000 * round_[stor12].field_1280 * round_[stor12].field_1280 < 78125000 * round_[stor12].field_1280 * round_[stor12].field_1280:
            revert with 0, 'SafeMath add failed'
        if not round_[stor12].field_1280 + 10^18:
            if not round_[stor12].field_1280 + 10^18:
                if 78125000 * round_[stor12].field_1280 * round_[stor12].field_1280 / 1000000000000000000 * 10^18 > 0:
                    revert with 0, 'SafeMath sub failed'
                return -(78125000 * round_[stor12].field_1280 * round_[stor12].field_1280 / 1000000000000000000 * 10^18)
            if (2 * 10^18 * round_[stor12].field_1280) + (round_[stor12].field_1280 * round_[stor12].field_1280) + 1000000000000000000 * 10^18 / round_[stor12].field_1280 + 10^18 != round_[stor12].field_1280 + 10^18:
                revert with 0, 'SafeMath mul failed'
            if (156250000 * 10^18 * round_[stor12].field_1280) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) + 78125000000000000000000000 * 10^18 / 78125000 != (2 * 10^18 * round_[stor12].field_1280) + (round_[stor12].field_1280 * round_[stor12].field_1280) + 1000000000000000000 * 10^18:
                revert with 0, 'SafeMath mul failed'
            if 78125000 * round_[stor12].field_1280 * round_[stor12].field_1280 / 1000000000000000000 * 10^18 > (156250000 * 10^18 * round_[stor12].field_1280) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) + 78125000000000000000000000 * 10^18 / 1000000000000000000 * 10^18:
                revert with 0, 'SafeMath sub failed'
            return (((156250000 * 10^18 * round_[stor12].field_1280) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) + 78125000000000000000000000 * 10^18 / 1000000000000000000 * 10^18) - (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280 / 1000000000000000000 * 10^18))
        if (10^18 * round_[stor12].field_1280) + 1000000000000000000 * 10^18 / round_[stor12].field_1280 + 10^18 != 10^18:
            revert with 0, 'SafeMath mul failed'
        if (149999843750000 * 10^18 * round_[stor12].field_1280) + 0x66a2519f4ce084becaa29127238e58970000000000 / 149999843750000 != (10^18 * round_[stor12].field_1280) + 1000000000000000000 * 10^18:
            revert with 0, 'SafeMath mul failed'
        if not round_[stor12].field_1280 + 10^18:
            if (149999843750000 * 10^18 * round_[stor12].field_1280) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2 < 0:
                revert with 0, 'SafeMath add failed'
            if 78125000 * round_[stor12].field_1280 * round_[stor12].field_1280 / 1000000000000000000 * 10^18 > (149999843750000 * 10^18 * round_[stor12].field_1280) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2 / 1000000000000000000 * 10^18:
                revert with 0, 'SafeMath sub failed'
            return (((149999843750000 * 10^18 * round_[stor12].field_1280) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2 / 1000000000000000000 * 10^18) - (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280 / 1000000000000000000 * 10^18))
        if (2 * 10^18 * round_[stor12].field_1280) + (round_[stor12].field_1280 * round_[stor12].field_1280) + 1000000000000000000 * 10^18 / round_[stor12].field_1280 + 10^18 != round_[stor12].field_1280 + 10^18:
            revert with 0, 'SafeMath mul failed'
        if (156250000 * 10^18 * round_[stor12].field_1280) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) + 78125000000000000000000000 * 10^18 / 78125000 != (2 * 10^18 * round_[stor12].field_1280) + (round_[stor12].field_1280 * round_[stor12].field_1280) + 1000000000000000000 * 10^18:
            revert with 0, 'SafeMath mul failed'
        if (149999843750000 * 10^18 * round_[stor12].field_1280) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2 < 0:
            revert with 0, 'SafeMath add failed'
        if 78125000 * round_[stor12].field_1280 * round_[stor12].field_1280 / 1000000000000000000 * 10^18 > ((149999843750000 * 10^18 * round_[stor12].field_1280) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2) + (156250000 * 10^18 * round_[stor12].field_1280) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) + 78125000000000000000000000 * 10^18 / 1000000000000000000 * 10^18:
            revert with 0, 'SafeMath sub failed'
        return ((((149999843750000 * 10^18 * round_[stor12].field_1280) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2) + (156250000 * 10^18 * round_[stor12].field_1280) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) + 78125000000000000000000000 * 10^18 / 1000000000000000000 * 10^18) - (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280 / 1000000000000000000 * 10^18))
    if 10^18 * round_[stor12].field_1280 / round_[stor12].field_1280 != 10^18:
        revert with 0, 'SafeMath mul failed'
    if 149999843750000 * 10^18 * round_[stor12].field_1280 / 149999843750000 != 10^18 * round_[stor12].field_1280:
        revert with 0, 'SafeMath mul failed'
    if not round_[stor12].field_1280:
        if 149999843750000 * 10^18 * round_[stor12].field_1280 / 2 < 0:
            revert with 0, 'SafeMath add failed'
        if not round_[stor12].field_1280 + 10^18:
            if not round_[stor12].field_1280 + 10^18:
                if 149999843750000 * 10^18 * round_[stor12].field_1280 / 2 / 1000000000000000000 * 10^18 > 0:
                    revert with 0, 'SafeMath sub failed'
                return -(149999843750000 * 10^18 * round_[stor12].field_1280 / 2 / 1000000000000000000 * 10^18)
            if (2 * 10^18 * round_[stor12].field_1280) + (round_[stor12].field_1280 * round_[stor12].field_1280) + 1000000000000000000 * 10^18 / round_[stor12].field_1280 + 10^18 != round_[stor12].field_1280 + 10^18:
                revert with 0, 'SafeMath mul failed'
            if (156250000 * 10^18 * round_[stor12].field_1280) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) + 78125000000000000000000000 * 10^18 / 78125000 != (2 * 10^18 * round_[stor12].field_1280) + (round_[stor12].field_1280 * round_[stor12].field_1280) + 1000000000000000000 * 10^18:
                revert with 0, 'SafeMath mul failed'
            if 149999843750000 * 10^18 * round_[stor12].field_1280 / 2 / 1000000000000000000 * 10^18 > (156250000 * 10^18 * round_[stor12].field_1280) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) + 78125000000000000000000000 * 10^18 / 1000000000000000000 * 10^18:
                revert with 0, 'SafeMath sub failed'
            return (((156250000 * 10^18 * round_[stor12].field_1280) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) + 78125000000000000000000000 * 10^18 / 1000000000000000000 * 10^18) - (149999843750000 * 10^18 * round_[stor12].field_1280 / 2 / 1000000000000000000 * 10^18))
        if (10^18 * round_[stor12].field_1280) + 1000000000000000000 * 10^18 / round_[stor12].field_1280 + 10^18 != 10^18:
            revert with 0, 'SafeMath mul failed'
        if (149999843750000 * 10^18 * round_[stor12].field_1280) + 0x66a2519f4ce084becaa29127238e58970000000000 / 149999843750000 != (10^18 * round_[stor12].field_1280) + 1000000000000000000 * 10^18:
            revert with 0, 'SafeMath mul failed'
        if not round_[stor12].field_1280 + 10^18:
            if (149999843750000 * 10^18 * round_[stor12].field_1280) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2 < 0:
                revert with 0, 'SafeMath add failed'
            if 149999843750000 * 10^18 * round_[stor12].field_1280 / 2 / 1000000000000000000 * 10^18 > (149999843750000 * 10^18 * round_[stor12].field_1280) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2 / 1000000000000000000 * 10^18:
                revert with 0, 'SafeMath sub failed'
            return (((149999843750000 * 10^18 * round_[stor12].field_1280) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2 / 1000000000000000000 * 10^18) - (149999843750000 * 10^18 * round_[stor12].field_1280 / 2 / 1000000000000000000 * 10^18))
        if (2 * 10^18 * round_[stor12].field_1280) + (round_[stor12].field_1280 * round_[stor12].field_1280) + 1000000000000000000 * 10^18 / round_[stor12].field_1280 + 10^18 != round_[stor12].field_1280 + 10^18:
            revert with 0, 'SafeMath mul failed'
        if (156250000 * 10^18 * round_[stor12].field_1280) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) + 78125000000000000000000000 * 10^18 / 78125000 != (2 * 10^18 * round_[stor12].field_1280) + (round_[stor12].field_1280 * round_[stor12].field_1280) + 1000000000000000000 * 10^18:
            revert with 0, 'SafeMath mul failed'
        if (149999843750000 * 10^18 * round_[stor12].field_1280) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2 < 0:
            revert with 0, 'SafeMath add failed'
        if 149999843750000 * 10^18 * round_[stor12].field_1280 / 2 / 1000000000000000000 * 10^18 > ((149999843750000 * 10^18 * round_[stor12].field_1280) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2) + (156250000 * 10^18 * round_[stor12].field_1280) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) + 78125000000000000000000000 * 10^18 / 1000000000000000000 * 10^18:
            revert with 0, 'SafeMath sub failed'
        return ((((149999843750000 * 10^18 * round_[stor12].field_1280) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2) + (156250000 * 10^18 * round_[stor12].field_1280) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) + 78125000000000000000000000 * 10^18 / 1000000000000000000 * 10^18) - (149999843750000 * 10^18 * round_[stor12].field_1280 / 2 / 1000000000000000000 * 10^18))
    if round_[stor12].field_1280 * round_[stor12].field_1280 / round_[stor12].field_1280 != round_[stor12].field_1280:
        revert with 0, 'SafeMath mul failed'
    if 78125000 * round_[stor12].field_1280 * round_[stor12].field_1280 / 78125000 != round_[stor12].field_1280 * round_[stor12].field_1280:
        revert with 0, 'SafeMath mul failed'
    if (149999843750000 * 10^18 * round_[stor12].field_1280 / 2) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) < 78125000 * round_[stor12].field_1280 * round_[stor12].field_1280:
        revert with 0, 'SafeMath add failed'
    if not round_[stor12].field_1280 + 10^18:
        if not round_[stor12].field_1280 + 10^18:
            if (149999843750000 * 10^18 * round_[stor12].field_1280 / 2) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) / 1000000000000000000 * 10^18 > 0:
                revert with 0, 'SafeMath sub failed'
            return -((149999843750000 * 10^18 * round_[stor12].field_1280 / 2) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) / 1000000000000000000 * 10^18)
        if (2 * 10^18 * round_[stor12].field_1280) + (round_[stor12].field_1280 * round_[stor12].field_1280) + 1000000000000000000 * 10^18 / round_[stor12].field_1280 + 10^18 != round_[stor12].field_1280 + 10^18:
            revert with 0, 'SafeMath mul failed'
        if (156250000 * 10^18 * round_[stor12].field_1280) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) + 78125000000000000000000000 * 10^18 / 78125000 != (2 * 10^18 * round_[stor12].field_1280) + (round_[stor12].field_1280 * round_[stor12].field_1280) + 1000000000000000000 * 10^18:
            revert with 0, 'SafeMath mul failed'
        if (149999843750000 * 10^18 * round_[stor12].field_1280 / 2) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) / 1000000000000000000 * 10^18 > (156250000 * 10^18 * round_[stor12].field_1280) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) + 78125000000000000000000000 * 10^18 / 1000000000000000000 * 10^18:
            revert with 0, 'SafeMath sub failed'
        return (((156250000 * 10^18 * round_[stor12].field_1280) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) + 78125000000000000000000000 * 10^18 / 1000000000000000000 * 10^18) - ((149999843750000 * 10^18 * round_[stor12].field_1280 / 2) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) / 1000000000000000000 * 10^18))
    if (10^18 * round_[stor12].field_1280) + 1000000000000000000 * 10^18 / round_[stor12].field_1280 + 10^18 != 10^18:
        revert with 0, 'SafeMath mul failed'
    if (149999843750000 * 10^18 * round_[stor12].field_1280) + 0x66a2519f4ce084becaa29127238e58970000000000 / 149999843750000 != (10^18 * round_[stor12].field_1280) + 1000000000000000000 * 10^18:
        revert with 0, 'SafeMath mul failed'
    if not round_[stor12].field_1280 + 10^18:
        if (149999843750000 * 10^18 * round_[stor12].field_1280) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2 < 0:
            revert with 0, 'SafeMath add failed'
        if (149999843750000 * 10^18 * round_[stor12].field_1280 / 2) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) / 1000000000000000000 * 10^18 > (149999843750000 * 10^18 * round_[stor12].field_1280) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2 / 1000000000000000000 * 10^18:
            revert with 0, 'SafeMath sub failed'
        return (((149999843750000 * 10^18 * round_[stor12].field_1280) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2 / 1000000000000000000 * 10^18) - ((149999843750000 * 10^18 * round_[stor12].field_1280 / 2) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) / 1000000000000000000 * 10^18))
    if (2 * 10^18 * round_[stor12].field_1280) + (round_[stor12].field_1280 * round_[stor12].field_1280) + 1000000000000000000 * 10^18 / round_[stor12].field_1280 + 10^18 != round_[stor12].field_1280 + 10^18:
        revert with 0, 'SafeMath mul failed'
    if (156250000 * 10^18 * round_[stor12].field_1280) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) + 78125000000000000000000000 * 10^18 / 78125000 != (2 * 10^18 * round_[stor12].field_1280) + (round_[stor12].field_1280 * round_[stor12].field_1280) + 1000000000000000000 * 10^18:
        revert with 0, 'SafeMath mul failed'
    if (149999843750000 * 10^18 * round_[stor12].field_1280) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2 < 0:
        revert with 0, 'SafeMath add failed'
    if (149999843750000 * 10^18 * round_[stor12].field_1280 / 2) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) / 1000000000000000000 * 10^18 > ((149999843750000 * 10^18 * round_[stor12].field_1280) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2) + (156250000 * 10^18 * round_[stor12].field_1280) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) + 78125000000000000000000000 * 10^18 / 1000000000000000000 * 10^18:
        revert with 0, 'SafeMath sub failed'
    return ((((149999843750000 * 10^18 * round_[stor12].field_1280) + 0x66a2519f4ce084becaa29127238e58970000000000 / 2) + (156250000 * 10^18 * round_[stor12].field_1280) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) + 78125000000000000000000000 * 10^18 / 1000000000000000000 * 10^18) - ((149999843750000 * 10^18 * round_[stor12].field_1280 / 2) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) / 1000000000000000000 * 10^18))
}

function iWantXKeys(uint256 arg1) {
    if block.timestamp <= round_[stor12].field_1024:
        if not arg1:
            if not arg1:
                return 0
            if arg1 * arg1 / arg1 != arg1:
                revert with 0, 'SafeMath mul failed'
            if 78125000 * arg1 * arg1 / 78125000 != arg1 * arg1:
                revert with 0, 'SafeMath mul failed'
            if 78125000 * arg1 * arg1 < 78125000 * arg1 * arg1:
                revert with 0, 'SafeMath add failed'
            return (78125000 * arg1 * arg1 / 1000000000000000000 * 10^18)
        if 10^18 * arg1 / arg1 != 10^18:
            revert with 0, 'SafeMath mul failed'
        if 149999843750000 * 10^18 * arg1 / 149999843750000 != 10^18 * arg1:
            revert with 0, 'SafeMath mul failed'
        if not arg1:
            if 149999843750000 * 10^18 * arg1 / 2 < 0:
                revert with 0, 'SafeMath add failed'
            return (149999843750000 * 10^18 * arg1 / 2 / 1000000000000000000 * 10^18)
        if arg1 * arg1 / arg1 != arg1:
            revert with 0, 'SafeMath mul failed'
        if 78125000 * arg1 * arg1 / 78125000 != arg1 * arg1:
            revert with 0, 'SafeMath mul failed'
        if (149999843750000 * 10^18 * arg1 / 2) + (78125000 * arg1 * arg1) < 78125000 * arg1 * arg1:
            revert with 0, 'SafeMath add failed'
        return ((149999843750000 * 10^18 * arg1 / 2) + (78125000 * arg1 * arg1) / 1000000000000000000 * 10^18)
    if block.timestamp > round_[stor12].field_512:
        if block.timestamp <= round_[stor12].field_512:
            if not arg1:
                if not arg1:
                    return 0
                if arg1 * arg1 / arg1 != arg1:
                    revert with 0, 'SafeMath mul failed'
                if 78125000 * arg1 * arg1 / 78125000 != arg1 * arg1:
                    revert with 0, 'SafeMath mul failed'
                if 78125000 * arg1 * arg1 < 78125000 * arg1 * arg1:
                    revert with 0, 'SafeMath add failed'
                return (78125000 * arg1 * arg1 / 1000000000000000000 * 10^18)
            if 10^18 * arg1 / arg1 != 10^18:
                revert with 0, 'SafeMath mul failed'
            if 149999843750000 * 10^18 * arg1 / 149999843750000 != 10^18 * arg1:
                revert with 0, 'SafeMath mul failed'
            if not arg1:
                if 149999843750000 * 10^18 * arg1 / 2 < 0:
                    revert with 0, 'SafeMath add failed'
                return (149999843750000 * 10^18 * arg1 / 2 / 1000000000000000000 * 10^18)
            if arg1 * arg1 / arg1 != arg1:
                revert with 0, 'SafeMath mul failed'
            if 78125000 * arg1 * arg1 / 78125000 != arg1 * arg1:
                revert with 0, 'SafeMath mul failed'
            if (149999843750000 * 10^18 * arg1 / 2) + (78125000 * arg1 * arg1) < 78125000 * arg1 * arg1:
                revert with 0, 'SafeMath add failed'
            return ((149999843750000 * 10^18 * arg1 / 2) + (78125000 * arg1 * arg1) / 1000000000000000000 * 10^18)
        if round_[stor12].field_0:
            if not arg1:
                if not arg1:
                    return 0
                if arg1 * arg1 / arg1 != arg1:
                    revert with 0, 'SafeMath mul failed'
                if 78125000 * arg1 * arg1 / 78125000 != arg1 * arg1:
                    revert with 0, 'SafeMath mul failed'
                if 78125000 * arg1 * arg1 < 78125000 * arg1 * arg1:
                    revert with 0, 'SafeMath add failed'
                return (78125000 * arg1 * arg1 / 1000000000000000000 * 10^18)
            if 10^18 * arg1 / arg1 != 10^18:
                revert with 0, 'SafeMath mul failed'
            if 149999843750000 * 10^18 * arg1 / 149999843750000 != 10^18 * arg1:
                revert with 0, 'SafeMath mul failed'
            if not arg1:
                if 149999843750000 * 10^18 * arg1 / 2 < 0:
                    revert with 0, 'SafeMath add failed'
                return (149999843750000 * 10^18 * arg1 / 2 / 1000000000000000000 * 10^18)
            if arg1 * arg1 / arg1 != arg1:
                revert with 0, 'SafeMath mul failed'
            if 78125000 * arg1 * arg1 / 78125000 != arg1 * arg1:
                revert with 0, 'SafeMath mul failed'
            if (149999843750000 * 10^18 * arg1 / 2) + (78125000 * arg1 * arg1) < 78125000 * arg1 * arg1:
                revert with 0, 'SafeMath add failed'
            return ((149999843750000 * 10^18 * arg1 / 2) + (78125000 * arg1 * arg1) / 1000000000000000000 * 10^18)
    if arg1 + round_[stor12].field_1280 < round_[stor12].field_1280:
        revert with 0, 'SafeMath add failed'
    if arg1 > arg1 + round_[stor12].field_1280:
        revert with 0, 'SafeMath sub failed'
    if not round_[stor12].field_1280:
        if not round_[stor12].field_1280:
            if not arg1 + round_[stor12].field_1280:
                if not arg1 + round_[stor12].field_1280:
                    return 0
                if (arg1 * arg1) + (round_[stor12].field_1280 * arg1) + (arg1 * round_[stor12].field_1280) + (round_[stor12].field_1280 * round_[stor12].field_1280) / arg1 + round_[stor12].field_1280 != arg1 + round_[stor12].field_1280:
                    revert with 0, 'SafeMath mul failed'
                if (78125000 * arg1 * arg1) + (78125000 * round_[stor12].field_1280 * arg1) + (78125000 * arg1 * round_[stor12].field_1280) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) / 78125000 != (arg1 * arg1) + (round_[stor12].field_1280 * arg1) + (arg1 * round_[stor12].field_1280) + (round_[stor12].field_1280 * round_[stor12].field_1280):
                    revert with 0, 'SafeMath mul failed'
                if 0 > (78125000 * arg1 * arg1) + (78125000 * round_[stor12].field_1280 * arg1) + (78125000 * arg1 * round_[stor12].field_1280) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) / 1000000000000000000 * 10^18:
                    revert with 0, 'SafeMath sub failed'
                return ((78125000 * arg1 * arg1) + (78125000 * round_[stor12].field_1280 * arg1) + (78125000 * arg1 * round_[stor12].field_1280) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) / 1000000000000000000 * 10^18)
            if (10^18 * arg1) + (10^18 * round_[stor12].field_1280) / arg1 + round_[stor12].field_1280 != 10^18:
                revert with 0, 'SafeMath mul failed'
            if (149999843750000 * 10^18 * arg1) + (149999843750000 * 10^18 * round_[stor12].field_1280) / 149999843750000 != (10^18 * arg1) + (10^18 * round_[stor12].field_1280):
                revert with 0, 'SafeMath mul failed'
            if not arg1 + round_[stor12].field_1280:
                if (149999843750000 * 10^18 * arg1) + (149999843750000 * 10^18 * round_[stor12].field_1280) / 2 < 0:
                    revert with 0, 'SafeMath add failed'
                if 0 > (149999843750000 * 10^18 * arg1) + (149999843750000 * 10^18 * round_[stor12].field_1280) / 2 / 1000000000000000000 * 10^18:
                    revert with 0, 'SafeMath sub failed'
                return ((149999843750000 * 10^18 * arg1) + (149999843750000 * 10^18 * round_[stor12].field_1280) / 2 / 1000000000000000000 * 10^18)
            if (arg1 * arg1) + (round_[stor12].field_1280 * arg1) + (arg1 * round_[stor12].field_1280) + (round_[stor12].field_1280 * round_[stor12].field_1280) / arg1 + round_[stor12].field_1280 != arg1 + round_[stor12].field_1280:
                revert with 0, 'SafeMath mul failed'
            if (78125000 * arg1 * arg1) + (78125000 * round_[stor12].field_1280 * arg1) + (78125000 * arg1 * round_[stor12].field_1280) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) / 78125000 != (arg1 * arg1) + (round_[stor12].field_1280 * arg1) + (arg1 * round_[stor12].field_1280) + (round_[stor12].field_1280 * round_[stor12].field_1280):
                revert with 0, 'SafeMath mul failed'
            if (149999843750000 * 10^18 * arg1) + (149999843750000 * 10^18 * round_[stor12].field_1280) / 2 < 0:
                revert with 0, 'SafeMath add failed'
            if 0 > ((149999843750000 * 10^18 * arg1) + (149999843750000 * 10^18 * round_[stor12].field_1280) / 2) + (78125000 * arg1 * arg1) + (78125000 * round_[stor12].field_1280 * arg1) + (78125000 * arg1 * round_[stor12].field_1280) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) / 1000000000000000000 * 10^18:
                revert with 0, 'SafeMath sub failed'
            return (((149999843750000 * 10^18 * arg1) + (149999843750000 * 10^18 * round_[stor12].field_1280) / 2) + (78125000 * arg1 * arg1) + (78125000 * round_[stor12].field_1280 * arg1) + (78125000 * arg1 * round_[stor12].field_1280) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) / 1000000000000000000 * 10^18)
        if round_[stor12].field_1280 * round_[stor12].field_1280 / round_[stor12].field_1280 != round_[stor12].field_1280:
            revert with 0, 'SafeMath mul failed'
        if 78125000 * round_[stor12].field_1280 * round_[stor12].field_1280 / 78125000 != round_[stor12].field_1280 * round_[stor12].field_1280:
            revert with 0, 'SafeMath mul failed'
        if 78125000 * round_[stor12].field_1280 * round_[stor12].field_1280 < 78125000 * round_[stor12].field_1280 * round_[stor12].field_1280:
            revert with 0, 'SafeMath add failed'
        if not arg1 + round_[stor12].field_1280:
            if not arg1 + round_[stor12].field_1280:
                if 78125000 * round_[stor12].field_1280 * round_[stor12].field_1280 / 1000000000000000000 * 10^18 > 0:
                    revert with 0, 'SafeMath sub failed'
                return -(78125000 * round_[stor12].field_1280 * round_[stor12].field_1280 / 1000000000000000000 * 10^18)
            if (arg1 * arg1) + (round_[stor12].field_1280 * arg1) + (arg1 * round_[stor12].field_1280) + (round_[stor12].field_1280 * round_[stor12].field_1280) / arg1 + round_[stor12].field_1280 != arg1 + round_[stor12].field_1280:
                revert with 0, 'SafeMath mul failed'
            if (78125000 * arg1 * arg1) + (78125000 * round_[stor12].field_1280 * arg1) + (78125000 * arg1 * round_[stor12].field_1280) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) / 78125000 != (arg1 * arg1) + (round_[stor12].field_1280 * arg1) + (arg1 * round_[stor12].field_1280) + (round_[stor12].field_1280 * round_[stor12].field_1280):
                revert with 0, 'SafeMath mul failed'
            if 78125000 * round_[stor12].field_1280 * round_[stor12].field_1280 / 1000000000000000000 * 10^18 > (78125000 * arg1 * arg1) + (78125000 * round_[stor12].field_1280 * arg1) + (78125000 * arg1 * round_[stor12].field_1280) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) / 1000000000000000000 * 10^18:
                revert with 0, 'SafeMath sub failed'
            return (((78125000 * arg1 * arg1) + (78125000 * round_[stor12].field_1280 * arg1) + (78125000 * arg1 * round_[stor12].field_1280) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) / 1000000000000000000 * 10^18) - (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280 / 1000000000000000000 * 10^18))
        if (10^18 * arg1) + (10^18 * round_[stor12].field_1280) / arg1 + round_[stor12].field_1280 != 10^18:
            revert with 0, 'SafeMath mul failed'
        if (149999843750000 * 10^18 * arg1) + (149999843750000 * 10^18 * round_[stor12].field_1280) / 149999843750000 != (10^18 * arg1) + (10^18 * round_[stor12].field_1280):
            revert with 0, 'SafeMath mul failed'
        if not arg1 + round_[stor12].field_1280:
            if (149999843750000 * 10^18 * arg1) + (149999843750000 * 10^18 * round_[stor12].field_1280) / 2 < 0:
                revert with 0, 'SafeMath add failed'
            if 78125000 * round_[stor12].field_1280 * round_[stor12].field_1280 / 1000000000000000000 * 10^18 > (149999843750000 * 10^18 * arg1) + (149999843750000 * 10^18 * round_[stor12].field_1280) / 2 / 1000000000000000000 * 10^18:
                revert with 0, 'SafeMath sub failed'
            return (((149999843750000 * 10^18 * arg1) + (149999843750000 * 10^18 * round_[stor12].field_1280) / 2 / 1000000000000000000 * 10^18) - (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280 / 1000000000000000000 * 10^18))
        if (arg1 * arg1) + (round_[stor12].field_1280 * arg1) + (arg1 * round_[stor12].field_1280) + (round_[stor12].field_1280 * round_[stor12].field_1280) / arg1 + round_[stor12].field_1280 != arg1 + round_[stor12].field_1280:
            revert with 0, 'SafeMath mul failed'
        if (78125000 * arg1 * arg1) + (78125000 * round_[stor12].field_1280 * arg1) + (78125000 * arg1 * round_[stor12].field_1280) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) / 78125000 != (arg1 * arg1) + (round_[stor12].field_1280 * arg1) + (arg1 * round_[stor12].field_1280) + (round_[stor12].field_1280 * round_[stor12].field_1280):
            revert with 0, 'SafeMath mul failed'
        if (149999843750000 * 10^18 * arg1) + (149999843750000 * 10^18 * round_[stor12].field_1280) / 2 < 0:
            revert with 0, 'SafeMath add failed'
        if 78125000 * round_[stor12].field_1280 * round_[stor12].field_1280 / 1000000000000000000 * 10^18 > ((149999843750000 * 10^18 * arg1) + (149999843750000 * 10^18 * round_[stor12].field_1280) / 2) + (78125000 * arg1 * arg1) + (78125000 * round_[stor12].field_1280 * arg1) + (78125000 * arg1 * round_[stor12].field_1280) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) / 1000000000000000000 * 10^18:
            revert with 0, 'SafeMath sub failed'
        return ((((149999843750000 * 10^18 * arg1) + (149999843750000 * 10^18 * round_[stor12].field_1280) / 2) + (78125000 * arg1 * arg1) + (78125000 * round_[stor12].field_1280 * arg1) + (78125000 * arg1 * round_[stor12].field_1280) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) / 1000000000000000000 * 10^18) - (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280 / 1000000000000000000 * 10^18))
    if 10^18 * round_[stor12].field_1280 / round_[stor12].field_1280 != 10^18:
        revert with 0, 'SafeMath mul failed'
    if 149999843750000 * 10^18 * round_[stor12].field_1280 / 149999843750000 != 10^18 * round_[stor12].field_1280:
        revert with 0, 'SafeMath mul failed'
    if not round_[stor12].field_1280:
        if 149999843750000 * 10^18 * round_[stor12].field_1280 / 2 < 0:
            revert with 0, 'SafeMath add failed'
        if not arg1 + round_[stor12].field_1280:
            if not arg1 + round_[stor12].field_1280:
                if 149999843750000 * 10^18 * round_[stor12].field_1280 / 2 / 1000000000000000000 * 10^18 > 0:
                    revert with 0, 'SafeMath sub failed'
                return -(149999843750000 * 10^18 * round_[stor12].field_1280 / 2 / 1000000000000000000 * 10^18)
            if (arg1 * arg1) + (round_[stor12].field_1280 * arg1) + (arg1 * round_[stor12].field_1280) + (round_[stor12].field_1280 * round_[stor12].field_1280) / arg1 + round_[stor12].field_1280 != arg1 + round_[stor12].field_1280:
                revert with 0, 'SafeMath mul failed'
            if (78125000 * arg1 * arg1) + (78125000 * round_[stor12].field_1280 * arg1) + (78125000 * arg1 * round_[stor12].field_1280) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) / 78125000 != (arg1 * arg1) + (round_[stor12].field_1280 * arg1) + (arg1 * round_[stor12].field_1280) + (round_[stor12].field_1280 * round_[stor12].field_1280):
                revert with 0, 'SafeMath mul failed'
            if 149999843750000 * 10^18 * round_[stor12].field_1280 / 2 / 1000000000000000000 * 10^18 > (78125000 * arg1 * arg1) + (78125000 * round_[stor12].field_1280 * arg1) + (78125000 * arg1 * round_[stor12].field_1280) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) / 1000000000000000000 * 10^18:
                revert with 0, 'SafeMath sub failed'
            return (((78125000 * arg1 * arg1) + (78125000 * round_[stor12].field_1280 * arg1) + (78125000 * arg1 * round_[stor12].field_1280) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) / 1000000000000000000 * 10^18) - (149999843750000 * 10^18 * round_[stor12].field_1280 / 2 / 1000000000000000000 * 10^18))
        if (10^18 * arg1) + (10^18 * round_[stor12].field_1280) / arg1 + round_[stor12].field_1280 != 10^18:
            revert with 0, 'SafeMath mul failed'
        if (149999843750000 * 10^18 * arg1) + (149999843750000 * 10^18 * round_[stor12].field_1280) / 149999843750000 != (10^18 * arg1) + (10^18 * round_[stor12].field_1280):
            revert with 0, 'SafeMath mul failed'
        if not arg1 + round_[stor12].field_1280:
            if (149999843750000 * 10^18 * arg1) + (149999843750000 * 10^18 * round_[stor12].field_1280) / 2 < 0:
                revert with 0, 'SafeMath add failed'
            if 149999843750000 * 10^18 * round_[stor12].field_1280 / 2 / 1000000000000000000 * 10^18 > (149999843750000 * 10^18 * arg1) + (149999843750000 * 10^18 * round_[stor12].field_1280) / 2 / 1000000000000000000 * 10^18:
                revert with 0, 'SafeMath sub failed'
            return (((149999843750000 * 10^18 * arg1) + (149999843750000 * 10^18 * round_[stor12].field_1280) / 2 / 1000000000000000000 * 10^18) - (149999843750000 * 10^18 * round_[stor12].field_1280 / 2 / 1000000000000000000 * 10^18))
        if (arg1 * arg1) + (round_[stor12].field_1280 * arg1) + (arg1 * round_[stor12].field_1280) + (round_[stor12].field_1280 * round_[stor12].field_1280) / arg1 + round_[stor12].field_1280 != arg1 + round_[stor12].field_1280:
            revert with 0, 'SafeMath mul failed'
        if (78125000 * arg1 * arg1) + (78125000 * round_[stor12].field_1280 * arg1) + (78125000 * arg1 * round_[stor12].field_1280) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) / 78125000 != (arg1 * arg1) + (round_[stor12].field_1280 * arg1) + (arg1 * round_[stor12].field_1280) + (round_[stor12].field_1280 * round_[stor12].field_1280):
            revert with 0, 'SafeMath mul failed'
        if (149999843750000 * 10^18 * arg1) + (149999843750000 * 10^18 * round_[stor12].field_1280) / 2 < 0:
            revert with 0, 'SafeMath add failed'
        if 149999843750000 * 10^18 * round_[stor12].field_1280 / 2 / 1000000000000000000 * 10^18 > ((149999843750000 * 10^18 * arg1) + (149999843750000 * 10^18 * round_[stor12].field_1280) / 2) + (78125000 * arg1 * arg1) + (78125000 * round_[stor12].field_1280 * arg1) + (78125000 * arg1 * round_[stor12].field_1280) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) / 1000000000000000000 * 10^18:
            revert with 0, 'SafeMath sub failed'
        return ((((149999843750000 * 10^18 * arg1) + (149999843750000 * 10^18 * round_[stor12].field_1280) / 2) + (78125000 * arg1 * arg1) + (78125000 * round_[stor12].field_1280 * arg1) + (78125000 * arg1 * round_[stor12].field_1280) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) / 1000000000000000000 * 10^18) - (149999843750000 * 10^18 * round_[stor12].field_1280 / 2 / 1000000000000000000 * 10^18))
    if round_[stor12].field_1280 * round_[stor12].field_1280 / round_[stor12].field_1280 != round_[stor12].field_1280:
        revert with 0, 'SafeMath mul failed'
    if 78125000 * round_[stor12].field_1280 * round_[stor12].field_1280 / 78125000 != round_[stor12].field_1280 * round_[stor12].field_1280:
        revert with 0, 'SafeMath mul failed'
    if (149999843750000 * 10^18 * round_[stor12].field_1280 / 2) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) < 78125000 * round_[stor12].field_1280 * round_[stor12].field_1280:
        revert with 0, 'SafeMath add failed'
    if not arg1 + round_[stor12].field_1280:
        if not arg1 + round_[stor12].field_1280:
            if (149999843750000 * 10^18 * round_[stor12].field_1280 / 2) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) / 1000000000000000000 * 10^18 > 0:
                revert with 0, 'SafeMath sub failed'
            return -((149999843750000 * 10^18 * round_[stor12].field_1280 / 2) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) / 1000000000000000000 * 10^18)
        if (arg1 * arg1) + (round_[stor12].field_1280 * arg1) + (arg1 * round_[stor12].field_1280) + (round_[stor12].field_1280 * round_[stor12].field_1280) / arg1 + round_[stor12].field_1280 != arg1 + round_[stor12].field_1280:
            revert with 0, 'SafeMath mul failed'
        if (78125000 * arg1 * arg1) + (78125000 * round_[stor12].field_1280 * arg1) + (78125000 * arg1 * round_[stor12].field_1280) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) / 78125000 != (arg1 * arg1) + (round_[stor12].field_1280 * arg1) + (arg1 * round_[stor12].field_1280) + (round_[stor12].field_1280 * round_[stor12].field_1280):
            revert with 0, 'SafeMath mul failed'
        if (149999843750000 * 10^18 * round_[stor12].field_1280 / 2) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) / 1000000000000000000 * 10^18 > (78125000 * arg1 * arg1) + (78125000 * round_[stor12].field_1280 * arg1) + (78125000 * arg1 * round_[stor12].field_1280) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) / 1000000000000000000 * 10^18:
            revert with 0, 'SafeMath sub failed'
        return (((78125000 * arg1 * arg1) + (78125000 * round_[stor12].field_1280 * arg1) + (78125000 * arg1 * round_[stor12].field_1280) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) / 1000000000000000000 * 10^18) - ((149999843750000 * 10^18 * round_[stor12].field_1280 / 2) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) / 1000000000000000000 * 10^18))
    if (10^18 * arg1) + (10^18 * round_[stor12].field_1280) / arg1 + round_[stor12].field_1280 != 10^18:
        revert with 0, 'SafeMath mul failed'
    if (149999843750000 * 10^18 * arg1) + (149999843750000 * 10^18 * round_[stor12].field_1280) / 149999843750000 != (10^18 * arg1) + (10^18 * round_[stor12].field_1280):
        revert with 0, 'SafeMath mul failed'
    if not arg1 + round_[stor12].field_1280:
        if (149999843750000 * 10^18 * arg1) + (149999843750000 * 10^18 * round_[stor12].field_1280) / 2 < 0:
            revert with 0, 'SafeMath add failed'
        if (149999843750000 * 10^18 * round_[stor12].field_1280 / 2) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) / 1000000000000000000 * 10^18 > (149999843750000 * 10^18 * arg1) + (149999843750000 * 10^18 * round_[stor12].field_1280) / 2 / 1000000000000000000 * 10^18:
            revert with 0, 'SafeMath sub failed'
        return (((149999843750000 * 10^18 * arg1) + (149999843750000 * 10^18 * round_[stor12].field_1280) / 2 / 1000000000000000000 * 10^18) - ((149999843750000 * 10^18 * round_[stor12].field_1280 / 2) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) / 1000000000000000000 * 10^18))
    if (arg1 * arg1) + (round_[stor12].field_1280 * arg1) + (arg1 * round_[stor12].field_1280) + (round_[stor12].field_1280 * round_[stor12].field_1280) / arg1 + round_[stor12].field_1280 != arg1 + round_[stor12].field_1280:
        revert with 0, 'SafeMath mul failed'
    if (78125000 * arg1 * arg1) + (78125000 * round_[stor12].field_1280 * arg1) + (78125000 * arg1 * round_[stor12].field_1280) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) / 78125000 != (arg1 * arg1) + (round_[stor12].field_1280 * arg1) + (arg1 * round_[stor12].field_1280) + (round_[stor12].field_1280 * round_[stor12].field_1280):
        revert with 0, 'SafeMath mul failed'
    if (149999843750000 * 10^18 * arg1) + (149999843750000 * 10^18 * round_[stor12].field_1280) / 2 < 0:
        revert with 0, 'SafeMath add failed'
    if (149999843750000 * 10^18 * round_[stor12].field_1280 / 2) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) / 1000000000000000000 * 10^18 > ((149999843750000 * 10^18 * arg1) + (149999843750000 * 10^18 * round_[stor12].field_1280) / 2) + (78125000 * arg1 * arg1) + (78125000 * round_[stor12].field_1280 * arg1) + (78125000 * arg1 * round_[stor12].field_1280) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) / 1000000000000000000 * 10^18:
        revert with 0, 'SafeMath sub failed'
    return ((((149999843750000 * 10^18 * arg1) + (149999843750000 * 10^18 * round_[stor12].field_1280) / 2) + (78125000 * arg1 * arg1) + (78125000 * round_[stor12].field_1280 * arg1) + (78125000 * arg1 * round_[stor12].field_1280) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) / 1000000000000000000 * 10^18) - ((149999843750000 * 10^18 * round_[stor12].field_1280 / 2) + (78125000 * round_[stor12].field_1280 * round_[stor12].field_1280) / 1000000000000000000 * 10^18))
}

function getPlayerVaults(uint256 arg1) {
    if block.timestamp <= round_[stor12].field_512:
        if not round_[stor9[arg1].field_1280].field_2048:
            if plyrRnds_[arg1][stor9[arg1].field_1280].field_512 > 0:
                revert with 0, 'SafeMath sub failed'
            if -plyrRnds_[arg1][stor9[arg1].field_1280].field_512 + plyr_[arg1].field_768 < plyr_[arg1].field_768:
                revert with 0, 'SafeMath add failed'
            return plyr_[arg1].field_512, 
                   -plyrRnds_[arg1][stor9[arg1].field_1280].field_512 + plyr_[arg1].field_768,
                   plyr_[arg1].field_1024
        if plyrRnds_[arg1][stor9[arg1].field_1280].field_256 * round_[stor9[arg1].field_1280].field_2048 / round_[stor9[arg1].field_1280].field_2048 != plyrRnds_[arg1][stor9[arg1].field_1280].field_256:
            revert with 0, 'SafeMath mul failed'
        if plyrRnds_[arg1][stor9[arg1].field_1280].field_512 > plyrRnds_[arg1][stor9[arg1].field_1280].field_256 * round_[stor9[arg1].field_1280].field_2048 / 10^18:
            revert with 0, 'SafeMath sub failed'
        if (plyrRnds_[arg1][stor9[arg1].field_1280].field_256 * round_[stor9[arg1].field_1280].field_2048 / 10^18) - plyrRnds_[arg1][stor9[arg1].field_1280].field_512 + plyr_[arg1].field_768 < plyr_[arg1].field_768:
            revert with 0, 'SafeMath add failed'
        return plyr_[arg1].field_512, 
               (plyrRnds_[arg1][stor9[arg1].field_1280].field_256 * round_[stor9[arg1].field_1280].field_2048 / 10^18) - plyrRnds_[arg1][stor9[arg1].field_1280].field_512 + plyr_[arg1].field_768,
               plyr_[arg1].field_1024
    if round_[stor12].field_768:
        if not round_[stor9[arg1].field_1280].field_2048:
            if plyrRnds_[arg1][stor9[arg1].field_1280].field_512 > 0:
                revert with 0, 'SafeMath sub failed'
            if -plyrRnds_[arg1][stor9[arg1].field_1280].field_512 + plyr_[arg1].field_768 < plyr_[arg1].field_768:
                revert with 0, 'SafeMath add failed'
            return plyr_[arg1].field_512, 
                   -plyrRnds_[arg1][stor9[arg1].field_1280].field_512 + plyr_[arg1].field_768,
                   plyr_[arg1].field_1024
        if plyrRnds_[arg1][stor9[arg1].field_1280].field_256 * round_[stor9[arg1].field_1280].field_2048 / round_[stor9[arg1].field_1280].field_2048 != plyrRnds_[arg1][stor9[arg1].field_1280].field_256:
            revert with 0, 'SafeMath mul failed'
        if plyrRnds_[arg1][stor9[arg1].field_1280].field_512 > plyrRnds_[arg1][stor9[arg1].field_1280].field_256 * round_[stor9[arg1].field_1280].field_2048 / 10^18:
            revert with 0, 'SafeMath sub failed'
        if (plyrRnds_[arg1][stor9[arg1].field_1280].field_256 * round_[stor9[arg1].field_1280].field_2048 / 10^18) - plyrRnds_[arg1][stor9[arg1].field_1280].field_512 + plyr_[arg1].field_768 < plyr_[arg1].field_768:
            revert with 0, 'SafeMath add failed'
        return plyr_[arg1].field_512, 
               (plyrRnds_[arg1][stor9[arg1].field_1280].field_256 * round_[stor9[arg1].field_1280].field_2048 / 10^18) - plyrRnds_[arg1][stor9[arg1].field_1280].field_512 + plyr_[arg1].field_768,
               plyr_[arg1].field_1024
    if not round_[stor12].field_0:
        if not round_[stor9[arg1].field_1280].field_2048:
            if plyrRnds_[arg1][stor9[arg1].field_1280].field_512 > 0:
                revert with 0, 'SafeMath sub failed'
            if -plyrRnds_[arg1][stor9[arg1].field_1280].field_512 + plyr_[arg1].field_768 < plyr_[arg1].field_768:
                revert with 0, 'SafeMath add failed'
            return plyr_[arg1].field_512, 
                   -plyrRnds_[arg1][stor9[arg1].field_1280].field_512 + plyr_[arg1].field_768,
                   plyr_[arg1].field_1024
        if plyrRnds_[arg1][stor9[arg1].field_1280].field_256 * round_[stor9[arg1].field_1280].field_2048 / round_[stor9[arg1].field_1280].field_2048 != plyrRnds_[arg1][stor9[arg1].field_1280].field_256:
            revert with 0, 'SafeMath mul failed'
        if plyrRnds_[arg1][stor9[arg1].field_1280].field_512 > plyrRnds_[arg1][stor9[arg1].field_1280].field_256 * round_[stor9[arg1].field_1280].field_2048 / 10^18:
            revert with 0, 'SafeMath sub failed'
        if (plyrRnds_[arg1][stor9[arg1].field_1280].field_256 * round_[stor9[arg1].field_1280].field_2048 / 10^18) - plyrRnds_[arg1][stor9[arg1].field_1280].field_512 + plyr_[arg1].field_768 < plyr_[arg1].field_768:
            revert with 0, 'SafeMath add failed'
        return plyr_[arg1].field_512, 
               (plyrRnds_[arg1][stor9[arg1].field_1280].field_256 * round_[stor9[arg1].field_1280].field_2048 / 10^18) - plyrRnds_[arg1][stor9[arg1].field_1280].field_512 + plyr_[arg1].field_768,
               plyr_[arg1].field_1024
    if round_[stor12].field_3072 + round_[stor12].field_1792 < round_[stor12].field_1792:
        revert with 0, 'SafeMath add failed'
    if arg1 != round_[stor12].field_0:
        if not round_[stor12].field_3072 + round_[stor12].field_1792:
            require round_[stor12].field_1280
            if (0 / round_[stor12].field_1280) + round_[stor12].field_2048 < round_[stor12].field_2048:
                revert with 0, 'SafeMath add failed'
            if not (0 / round_[stor12].field_1280) + round_[stor12].field_2048:
                if plyrRnds_[arg1][stor12].field_512 > 0:
                    revert with 0, 'SafeMath sub failed'
                if -plyrRnds_[arg1][stor12].field_512 + plyr_[arg1].field_768 < plyr_[arg1].field_768:
                    revert with 0, 'SafeMath add failed'
                return plyr_[arg1].field_512, -plyrRnds_[arg1][stor12].field_512 + plyr_[arg1].field_768, plyr_[arg1].field_1024
            if (0 / round_[stor12].field_1280 * plyrRnds_[arg1][stor12].field_256) + (round_[stor12].field_2048 * plyrRnds_[arg1][stor12].field_256) / (0 / round_[stor12].field_1280) + round_[stor12].field_2048 != plyrRnds_[arg1][stor12].field_256:
                revert with 0, 'SafeMath mul failed'
            if plyrRnds_[arg1][stor12].field_512 > (0 / round_[stor12].field_1280 * plyrRnds_[arg1][stor12].field_256) + (round_[stor12].field_2048 * plyrRnds_[arg1][stor12].field_256) / 10^18:
                revert with 0, 'SafeMath sub failed'
            if ((0 / round_[stor12].field_1280 * plyrRnds_[arg1][stor12].field_256) + (round_[stor12].field_2048 * plyrRnds_[arg1][stor12].field_256) / 10^18) - plyrRnds_[arg1][stor12].field_512 + plyr_[arg1].field_768 < plyr_[arg1].field_768:
                revert with 0, 'SafeMath add failed'
            return plyr_[arg1].field_512, 
                   ((0 / round_[stor12].field_1280 * plyrRnds_[arg1][stor12].field_256) + (round_[stor12].field_2048 * plyrRnds_[arg1][stor12].field_256) / 10^18) - plyrRnds_[arg1][stor12].field_512 + plyr_[arg1].field_768,
                   plyr_[arg1].field_1024
        if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / round_[stor12].field_3072 + round_[stor12].field_1792 != potSplit_[stor15[stor12].field_256].field_0:
            revert with 0, 'SafeMath mul failed'
        if not (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
            require round_[stor12].field_1280
            if (0 / round_[stor12].field_1280) + round_[stor12].field_2048 < round_[stor12].field_2048:
                revert with 0, 'SafeMath add failed'
            if not (0 / round_[stor12].field_1280) + round_[stor12].field_2048:
                if plyrRnds_[arg1][stor12].field_512 > 0:
                    revert with 0, 'SafeMath sub failed'
                if -plyrRnds_[arg1][stor12].field_512 + plyr_[arg1].field_768 < plyr_[arg1].field_768:
                    revert with 0, 'SafeMath add failed'
                return plyr_[arg1].field_512, -plyrRnds_[arg1][stor12].field_512 + plyr_[arg1].field_768, plyr_[arg1].field_1024
            if (0 / round_[stor12].field_1280 * plyrRnds_[arg1][stor12].field_256) + (round_[stor12].field_2048 * plyrRnds_[arg1][stor12].field_256) / (0 / round_[stor12].field_1280) + round_[stor12].field_2048 != plyrRnds_[arg1][stor12].field_256:
                revert with 0, 'SafeMath mul failed'
            if plyrRnds_[arg1][stor12].field_512 > (0 / round_[stor12].field_1280 * plyrRnds_[arg1][stor12].field_256) + (round_[stor12].field_2048 * plyrRnds_[arg1][stor12].field_256) / 10^18:
                revert with 0, 'SafeMath sub failed'
            if ((0 / round_[stor12].field_1280 * plyrRnds_[arg1][stor12].field_256) + (round_[stor12].field_2048 * plyrRnds_[arg1][stor12].field_256) / 10^18) - plyrRnds_[arg1][stor12].field_512 + plyr_[arg1].field_768 < plyr_[arg1].field_768:
                revert with 0, 'SafeMath add failed'
            return plyr_[arg1].field_512, 
                   ((0 / round_[stor12].field_1280 * plyrRnds_[arg1][stor12].field_256) + (round_[stor12].field_2048 * plyrRnds_[arg1][stor12].field_256) / 10^18) - plyrRnds_[arg1][stor12].field_512 + plyr_[arg1].field_768,
                   plyr_[arg1].field_1024
        if 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 != 10^18:
            revert with 0, 'SafeMath mul failed'
        require round_[stor12].field_1280
        if (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) + round_[stor12].field_2048 < round_[stor12].field_2048:
            revert with 0, 'SafeMath add failed'
        if not (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) + round_[stor12].field_2048:
            if plyrRnds_[arg1][stor12].field_512 > 0:
                revert with 0, 'SafeMath sub failed'
            if -plyrRnds_[arg1][stor12].field_512 + plyr_[arg1].field_768 < plyr_[arg1].field_768:
                revert with 0, 'SafeMath add failed'
            return plyr_[arg1].field_512, -plyrRnds_[arg1][stor12].field_512 + plyr_[arg1].field_768, plyr_[arg1].field_1024
        if (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 * plyrRnds_[arg1][stor12].field_256) + (round_[stor12].field_2048 * plyrRnds_[arg1][stor12].field_256) / (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) + round_[stor12].field_2048 != plyrRnds_[arg1][stor12].field_256:
            revert with 0, 'SafeMath mul failed'
        if plyrRnds_[arg1][stor12].field_512 > (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 * plyrRnds_[arg1][stor12].field_256) + (round_[stor12].field_2048 * plyrRnds_[arg1][stor12].field_256) / 10^18:
            revert with 0, 'SafeMath sub failed'
        if ((10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 * plyrRnds_[arg1][stor12].field_256) + (round_[stor12].field_2048 * plyrRnds_[arg1][stor12].field_256) / 10^18) - plyrRnds_[arg1][stor12].field_512 + plyr_[arg1].field_768 < plyr_[arg1].field_768:
            revert with 0, 'SafeMath add failed'
        return plyr_[arg1].field_512, 
               ((10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 * plyrRnds_[arg1][stor12].field_256) + (round_[stor12].field_2048 * plyrRnds_[arg1][stor12].field_256) / 10^18) - plyrRnds_[arg1][stor12].field_512 + plyr_[arg1].field_768,
               plyr_[arg1].field_1024
    if not round_[stor12].field_3072 + round_[stor12].field_1792:
        if plyr_[arg1].field_512 < plyr_[arg1].field_512:
            revert with 0, 'SafeMath add failed'
        if round_[stor12].field_3072 + round_[stor12].field_1792 < round_[stor12].field_1792:
            revert with 0, 'SafeMath add failed'
        if not round_[stor12].field_3072 + round_[stor12].field_1792:
            require round_[stor12].field_1280
            if (0 / round_[stor12].field_1280) + round_[stor12].field_2048 < round_[stor12].field_2048:
                revert with 0, 'SafeMath add failed'
            if not (0 / round_[stor12].field_1280) + round_[stor12].field_2048:
                if plyrRnds_[arg1][stor12].field_512 > 0:
                    revert with 0, 'SafeMath sub failed'
                if -plyrRnds_[arg1][stor12].field_512 + plyr_[arg1].field_768 < plyr_[arg1].field_768:
                    revert with 0, 'SafeMath add failed'
                return plyr_[arg1].field_512, -plyrRnds_[arg1][stor12].field_512 + plyr_[arg1].field_768, plyr_[arg1].field_1024
            if (0 / round_[stor12].field_1280 * plyrRnds_[arg1][stor12].field_256) + (round_[stor12].field_2048 * plyrRnds_[arg1][stor12].field_256) / (0 / round_[stor12].field_1280) + round_[stor12].field_2048 != plyrRnds_[arg1][stor12].field_256:
                revert with 0, 'SafeMath mul failed'
            if plyrRnds_[arg1][stor12].field_512 > (0 / round_[stor12].field_1280 * plyrRnds_[arg1][stor12].field_256) + (round_[stor12].field_2048 * plyrRnds_[arg1][stor12].field_256) / 10^18:
                revert with 0, 'SafeMath sub failed'
            if ((0 / round_[stor12].field_1280 * plyrRnds_[arg1][stor12].field_256) + (round_[stor12].field_2048 * plyrRnds_[arg1][stor12].field_256) / 10^18) - plyrRnds_[arg1][stor12].field_512 + plyr_[arg1].field_768 < plyr_[arg1].field_768:
                revert with 0, 'SafeMath add failed'
            return plyr_[arg1].field_512, 
                   ((0 / round_[stor12].field_1280 * plyrRnds_[arg1][stor12].field_256) + (round_[stor12].field_2048 * plyrRnds_[arg1][stor12].field_256) / 10^18) - plyrRnds_[arg1][stor12].field_512 + plyr_[arg1].field_768,
                   plyr_[arg1].field_1024
        if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / round_[stor12].field_3072 + round_[stor12].field_1792 != potSplit_[stor15[stor12].field_256].field_0:
            revert with 0, 'SafeMath mul failed'
        if not (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
            require round_[stor12].field_1280
            if (0 / round_[stor12].field_1280) + round_[stor12].field_2048 < round_[stor12].field_2048:
                revert with 0, 'SafeMath add failed'
            if not (0 / round_[stor12].field_1280) + round_[stor12].field_2048:
                if plyrRnds_[arg1][stor12].field_512 > 0:
                    revert with 0, 'SafeMath sub failed'
                if -plyrRnds_[arg1][stor12].field_512 + plyr_[arg1].field_768 < plyr_[arg1].field_768:
                    revert with 0, 'SafeMath add failed'
                return plyr_[arg1].field_512, -plyrRnds_[arg1][stor12].field_512 + plyr_[arg1].field_768, plyr_[arg1].field_1024
            if (0 / round_[stor12].field_1280 * plyrRnds_[arg1][stor12].field_256) + (round_[stor12].field_2048 * plyrRnds_[arg1][stor12].field_256) / (0 / round_[stor12].field_1280) + round_[stor12].field_2048 != plyrRnds_[arg1][stor12].field_256:
                revert with 0, 'SafeMath mul failed'
            if plyrRnds_[arg1][stor12].field_512 > (0 / round_[stor12].field_1280 * plyrRnds_[arg1][stor12].field_256) + (round_[stor12].field_2048 * plyrRnds_[arg1][stor12].field_256) / 10^18:
                revert with 0, 'SafeMath sub failed'
            if ((0 / round_[stor12].field_1280 * plyrRnds_[arg1][stor12].field_256) + (round_[stor12].field_2048 * plyrRnds_[arg1][stor12].field_256) / 10^18) - plyrRnds_[arg1][stor12].field_512 + plyr_[arg1].field_768 < plyr_[arg1].field_768:
                revert with 0, 'SafeMath add failed'
            return plyr_[arg1].field_512, 
                   ((0 / round_[stor12].field_1280 * plyrRnds_[arg1][stor12].field_256) + (round_[stor12].field_2048 * plyrRnds_[arg1][stor12].field_256) / 10^18) - plyrRnds_[arg1][stor12].field_512 + plyr_[arg1].field_768,
                   plyr_[arg1].field_1024
        if 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 != 10^18:
            revert with 0, 'SafeMath mul failed'
        require round_[stor12].field_1280
        if (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) + round_[stor12].field_2048 < round_[stor12].field_2048:
            revert with 0, 'SafeMath add failed'
        if not (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) + round_[stor12].field_2048:
            if plyrRnds_[arg1][stor12].field_512 > 0:
                revert with 0, 'SafeMath sub failed'
            if -plyrRnds_[arg1][stor12].field_512 + plyr_[arg1].field_768 < plyr_[arg1].field_768:
                revert with 0, 'SafeMath add failed'
            return plyr_[arg1].field_512, -plyrRnds_[arg1][stor12].field_512 + plyr_[arg1].field_768, plyr_[arg1].field_1024
        if (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 * plyrRnds_[arg1][stor12].field_256) + (round_[stor12].field_2048 * plyrRnds_[arg1][stor12].field_256) / (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) + round_[stor12].field_2048 != plyrRnds_[arg1][stor12].field_256:
            revert with 0, 'SafeMath mul failed'
        if plyrRnds_[arg1][stor12].field_512 > (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 * plyrRnds_[arg1][stor12].field_256) + (round_[stor12].field_2048 * plyrRnds_[arg1][stor12].field_256) / 10^18:
            revert with 0, 'SafeMath sub failed'
        if ((10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 * plyrRnds_[arg1][stor12].field_256) + (round_[stor12].field_2048 * plyrRnds_[arg1][stor12].field_256) / 10^18) - plyrRnds_[arg1][stor12].field_512 + plyr_[arg1].field_768 < plyr_[arg1].field_768:
            revert with 0, 'SafeMath add failed'
        return plyr_[arg1].field_512, 
               ((10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 * plyrRnds_[arg1][stor12].field_256) + (round_[stor12].field_2048 * plyrRnds_[arg1][stor12].field_256) / 10^18) - plyrRnds_[arg1][stor12].field_512 + plyr_[arg1].field_768,
               plyr_[arg1].field_1024
    if (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / round_[stor12].field_3072 + round_[stor12].field_1792 != 48:
        revert with 0, 'SafeMath mul failed'
    if ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) + plyr_[arg1].field_512 < plyr_[arg1].field_512:
        revert with 0, 'SafeMath add failed'
    if round_[stor12].field_3072 + round_[stor12].field_1792 < round_[stor12].field_1792:
        revert with 0, 'SafeMath add failed'
    if not round_[stor12].field_3072 + round_[stor12].field_1792:
        require round_[stor12].field_1280
        if (0 / round_[stor12].field_1280) + round_[stor12].field_2048 < round_[stor12].field_2048:
            revert with 0, 'SafeMath add failed'
        if not (0 / round_[stor12].field_1280) + round_[stor12].field_2048:
            if plyrRnds_[arg1][stor12].field_512 > 0:
                revert with 0, 'SafeMath sub failed'
            if -plyrRnds_[arg1][stor12].field_512 + plyr_[arg1].field_768 < plyr_[arg1].field_768:
                revert with 0, 'SafeMath add failed'
            return ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) + plyr_[arg1].field_512, 
                   -plyrRnds_[arg1][stor12].field_512 + plyr_[arg1].field_768,
                   plyr_[arg1].field_1024
        if (0 / round_[stor12].field_1280 * plyrRnds_[arg1][stor12].field_256) + (round_[stor12].field_2048 * plyrRnds_[arg1][stor12].field_256) / (0 / round_[stor12].field_1280) + round_[stor12].field_2048 != plyrRnds_[arg1][stor12].field_256:
            revert with 0, 'SafeMath mul failed'
        if plyrRnds_[arg1][stor12].field_512 > (0 / round_[stor12].field_1280 * plyrRnds_[arg1][stor12].field_256) + (round_[stor12].field_2048 * plyrRnds_[arg1][stor12].field_256) / 10^18:
            revert with 0, 'SafeMath sub failed'
        if ((0 / round_[stor12].field_1280 * plyrRnds_[arg1][stor12].field_256) + (round_[stor12].field_2048 * plyrRnds_[arg1][stor12].field_256) / 10^18) - plyrRnds_[arg1][stor12].field_512 + plyr_[arg1].field_768 < plyr_[arg1].field_768:
            revert with 0, 'SafeMath add failed'
        return ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) + plyr_[arg1].field_512, 
               ((0 / round_[stor12].field_1280 * plyrRnds_[arg1][stor12].field_256) + (round_[stor12].field_2048 * plyrRnds_[arg1][stor12].field_256) / 10^18) - plyrRnds_[arg1][stor12].field_512 + plyr_[arg1].field_768,
               plyr_[arg1].field_1024
    if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / round_[stor12].field_3072 + round_[stor12].field_1792 != potSplit_[stor15[stor12].field_256].field_0:
        revert with 0, 'SafeMath mul failed'
    if not (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
        require round_[stor12].field_1280
        if (0 / round_[stor12].field_1280) + round_[stor12].field_2048 < round_[stor12].field_2048:
            revert with 0, 'SafeMath add failed'
        if not (0 / round_[stor12].field_1280) + round_[stor12].field_2048:
            if plyrRnds_[arg1][stor12].field_512 > 0:
                revert with 0, 'SafeMath sub failed'
            if -plyrRnds_[arg1][stor12].field_512 + plyr_[arg1].field_768 < plyr_[arg1].field_768:
                revert with 0, 'SafeMath add failed'
            return ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) + plyr_[arg1].field_512, 
                   -plyrRnds_[arg1][stor12].field_512 + plyr_[arg1].field_768,
                   plyr_[arg1].field_1024
        if (0 / round_[stor12].field_1280 * plyrRnds_[arg1][stor12].field_256) + (round_[stor12].field_2048 * plyrRnds_[arg1][stor12].field_256) / (0 / round_[stor12].field_1280) + round_[stor12].field_2048 != plyrRnds_[arg1][stor12].field_256:
            revert with 0, 'SafeMath mul failed'
        if plyrRnds_[arg1][stor12].field_512 > (0 / round_[stor12].field_1280 * plyrRnds_[arg1][stor12].field_256) + (round_[stor12].field_2048 * plyrRnds_[arg1][stor12].field_256) / 10^18:
            revert with 0, 'SafeMath sub failed'
        if ((0 / round_[stor12].field_1280 * plyrRnds_[arg1][stor12].field_256) + (round_[stor12].field_2048 * plyrRnds_[arg1][stor12].field_256) / 10^18) - plyrRnds_[arg1][stor12].field_512 + plyr_[arg1].field_768 < plyr_[arg1].field_768:
            revert with 0, 'SafeMath add failed'
        return ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) + plyr_[arg1].field_512, 
               ((0 / round_[stor12].field_1280 * plyrRnds_[arg1][stor12].field_256) + (round_[stor12].field_2048 * plyrRnds_[arg1][stor12].field_256) / 10^18) - plyrRnds_[arg1][stor12].field_512 + plyr_[arg1].field_768,
               plyr_[arg1].field_1024
    if 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 != 10^18:
        revert with 0, 'SafeMath mul failed'
    require round_[stor12].field_1280
    if (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) + round_[stor12].field_2048 < round_[stor12].field_2048:
        revert with 0, 'SafeMath add failed'
    if not (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) + round_[stor12].field_2048:
        if plyrRnds_[arg1][stor12].field_512 > 0:
            revert with 0, 'SafeMath sub failed'
        if -plyrRnds_[arg1][stor12].field_512 + plyr_[arg1].field_768 < plyr_[arg1].field_768:
            revert with 0, 'SafeMath add failed'
        return ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) + plyr_[arg1].field_512, 
               -plyrRnds_[arg1][stor12].field_512 + plyr_[arg1].field_768,
               plyr_[arg1].field_1024
    if (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 * plyrRnds_[arg1][stor12].field_256) + (round_[stor12].field_2048 * plyrRnds_[arg1][stor12].field_256) / (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) + round_[stor12].field_2048 != plyrRnds_[arg1][stor12].field_256:
        revert with 0, 'SafeMath mul failed'
    if plyrRnds_[arg1][stor12].field_512 > (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 * plyrRnds_[arg1][stor12].field_256) + (round_[stor12].field_2048 * plyrRnds_[arg1][stor12].field_256) / 10^18:
        revert with 0, 'SafeMath sub failed'
    if ((10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 * plyrRnds_[arg1][stor12].field_256) + (round_[stor12].field_2048 * plyrRnds_[arg1][stor12].field_256) / 10^18) - plyrRnds_[arg1][stor12].field_512 + plyr_[arg1].field_768 < plyr_[arg1].field_768:
        revert with 0, 'SafeMath add failed'
    return ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) + plyr_[arg1].field_512, 
           ((10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 * plyrRnds_[arg1][stor12].field_256) + (round_[stor12].field_2048 * plyrRnds_[arg1][stor12].field_256) / 10^18) - plyrRnds_[arg1][stor12].field_512 + plyr_[arg1].field_768,
           plyr_[arg1].field_1024
}

function withdraw() {
    if bool(uint8(stor4.field_160)) != 1:
        revert with 0, 'its not active yet.'
    if ext_code.size(msg.sender):
        revert with 0, 'Humans only'
    if block.timestamp <= round_[stor12].field_512:
        if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                revert with 0, 'SafeMath sub failed'
            if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                    revert with 0, 'SafeMath add failed'
                plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                    revert with 0, 'SafeMath add failed'
                plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
        else:
            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                revert with 0, 'SafeMath mul failed'
            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                revert with 0, 'SafeMath sub failed'
            if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                if plyr_[stor7[msg.sender]].field_768 < 0:
                    revert with 0, 'SafeMath add failed'
                plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                    revert with 0, 'SafeMath add failed'
                plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
        if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
            revert with 0, 'SafeMath add failed'
        if plyr_[stor7[msg.sender]].field_1024 < 0:
            revert with 0, 'SafeMath add failed'
        if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
            plyr_[stor7[msg.sender]].field_512 = 0
            plyr_[stor7[msg.sender]].field_768 = 0
            plyr_[stor7[msg.sender]].field_1024 = 0
            call plyr_[stor7[msg.sender]].field_0 with:
               value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                 gas 2300 * is_zero(value) wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
        emit onWithdraw(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, block.timestamp, pIDxAddr_[msg.sender]);
    else:
        if round_[stor12].field_768:
            if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                    revert with 0, 'SafeMath sub failed'
                if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                    if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                        revert with 0, 'SafeMath add failed'
                    plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                    if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                        revert with 0, 'SafeMath add failed'
                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
            else:
                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                    revert with 0, 'SafeMath mul failed'
                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                    revert with 0, 'SafeMath sub failed'
                if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                    if plyr_[stor7[msg.sender]].field_768 < 0:
                        revert with 0, 'SafeMath add failed'
                    plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                        revert with 0, 'SafeMath add failed'
                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
            if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                revert with 0, 'SafeMath add failed'
            if plyr_[stor7[msg.sender]].field_1024 < 0:
                revert with 0, 'SafeMath add failed'
            if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                plyr_[stor7[msg.sender]].field_512 = 0
                plyr_[stor7[msg.sender]].field_768 = 0
                plyr_[stor7[msg.sender]].field_1024 = 0
                call plyr_[stor7[msg.sender]].field_0 with:
                   value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                     gas 2300 * is_zero(value) wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
            emit onWithdraw(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, block.timestamp, pIDxAddr_[msg.sender]);
        else:
            if not round_[stor12].field_0:
                if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                        revert with 0, 'SafeMath sub failed'
                    if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                        if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                            revert with 0, 'SafeMath add failed'
                        plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                        if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                            revert with 0, 'SafeMath add failed'
                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                else:
                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                        revert with 0, 'SafeMath mul failed'
                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                        revert with 0, 'SafeMath sub failed'
                    if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                        if plyr_[stor7[msg.sender]].field_768 < 0:
                            revert with 0, 'SafeMath add failed'
                        plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                            revert with 0, 'SafeMath add failed'
                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                    revert with 0, 'SafeMath add failed'
                if plyr_[stor7[msg.sender]].field_1024 < 0:
                    revert with 0, 'SafeMath add failed'
                if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                    plyr_[stor7[msg.sender]].field_512 = 0
                    plyr_[stor7[msg.sender]].field_768 = 0
                    plyr_[stor7[msg.sender]].field_1024 = 0
                    call plyr_[stor7[msg.sender]].field_0 with:
                       value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                         gas 2300 * is_zero(value) wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                emit onWithdraw(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, block.timestamp, pIDxAddr_[msg.sender]);
            else:
                round_[stor12].field_768 = 1
                if round_[stor12].field_3072 + round_[stor12].field_1792 < round_[stor12].field_1792:
                    revert with 0, 'SafeMath add failed'
                if not round_[stor12].field_3072 + round_[stor12].field_1792:
                    if not round_[stor12].field_3072 + round_[stor12].field_1792:
                        if not round_[stor12].field_3072 + round_[stor12].field_1792:
                            if 0 > round_[stor12].field_3072 + round_[stor12].field_1792:
                                revert with 0, 'SafeMath sub failed'
                            if round_[stor12].field_3072 + round_[stor12].field_1792 / 50 > round_[stor12].field_3072 + round_[stor12].field_1792:
                                revert with 0, 'SafeMath sub failed'
                            if 0 > round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50):
                                revert with 0, 'SafeMath sub failed'
                            require round_[stor12].field_1280
                            if 0 / round_[stor12].field_1280:
                                if round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 0 / round_[stor12].field_1280 != round_[stor12].field_1280:
                                    revert with 0, 'SafeMath mul failed'
                                if round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18 > 0:
                                    revert with 0, 'SafeMath sub failed'
                                if -round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18 > 0:
                                    revert with 0, 'SafeMath sub failed'
                            if plyr_[stor15[stor12].field_0].field_512 < 0:
                                revert with 0, 'SafeMath add failed'
                            if not communityAddr_:
                                if 0 < -round_[stor12].field_3072 + round_[stor12].field_1792 / 50:
                                    revert with 0, 'SafeMath add failed'
                                if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                    revert with 0, 'SafeMath add failed'
                                round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                rID_++
                                round_[stor12 + 1].field_1024 = block.timestamp
                                if block.timestamp + (6 * 3600) < block.timestamp:
                                    revert with 0, 'SafeMath add failed'
                                round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792
                                if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                        revert with 0, 'SafeMath sub failed'
                                    if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                        if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                            revert with 0, 'SafeMath add failed'
                                        plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                        if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                            revert with 0, 'SafeMath add failed'
                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                else:
                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                        revert with 0, 'SafeMath mul failed'
                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                        revert with 0, 'SafeMath sub failed'
                                    if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                        if plyr_[stor7[msg.sender]].field_768 < 0:
                                            revert with 0, 'SafeMath add failed'
                                        plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                            revert with 0, 'SafeMath add failed'
                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                    revert with 0, 'SafeMath add failed'
                                if plyr_[stor7[msg.sender]].field_1024 < 0:
                                    revert with 0, 'SafeMath add failed'
                                if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                    plyr_[stor7[msg.sender]].field_512 = 0
                                    plyr_[stor7[msg.sender]].field_768 = 0
                                    plyr_[stor7[msg.sender]].field_1024 = 0
                                    call plyr_[stor7[msg.sender]].field_0 with:
                                       value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792, 0, 0);
                            else:
                                call communityAddr_ with:
                                   value round_[stor12].field_3072 + round_[stor12].field_1792 / 50 wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                    revert with 0, 'SafeMath add failed'
                                round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                rID_++
                                round_[stor12 + 1].field_1024 = block.timestamp
                                if block.timestamp + (6 * 3600) < block.timestamp:
                                    revert with 0, 'SafeMath add failed'
                                round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50)
                                if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                        revert with 0, 'SafeMath sub failed'
                                    if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                        if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                            revert with 0, 'SafeMath add failed'
                                        plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                        if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                            revert with 0, 'SafeMath add failed'
                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                else:
                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                        revert with 0, 'SafeMath mul failed'
                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                        revert with 0, 'SafeMath sub failed'
                                    if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                        if plyr_[stor7[msg.sender]].field_768 < 0:
                                            revert with 0, 'SafeMath add failed'
                                        plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                            revert with 0, 'SafeMath add failed'
                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                    revert with 0, 'SafeMath add failed'
                                if plyr_[stor7[msg.sender]].field_1024 < 0:
                                    revert with 0, 'SafeMath add failed'
                                if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                    plyr_[stor7[msg.sender]].field_512 = 0
                                    plyr_[stor7[msg.sender]].field_768 = 0
                                    plyr_[stor7[msg.sender]].field_1024 = 0
                                    call plyr_[stor7[msg.sender]].field_0 with:
                                       value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50), 0, 0);
                        else:
                            if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / round_[stor12].field_3072 + round_[stor12].field_1792 != potSplit_[stor15[stor12].field_256].field_256:
                                revert with 0, 'SafeMath mul failed'
                            if 0 > round_[stor12].field_3072 + round_[stor12].field_1792:
                                revert with 0, 'SafeMath sub failed'
                            if round_[stor12].field_3072 + round_[stor12].field_1792 / 50 > round_[stor12].field_3072 + round_[stor12].field_1792:
                                revert with 0, 'SafeMath sub failed'
                            if 0 > round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50):
                                revert with 0, 'SafeMath sub failed'
                            if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 > round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50):
                                revert with 0, 'SafeMath sub failed'
                            require round_[stor12].field_1280
                            if 0 / round_[stor12].field_1280:
                                if round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 0 / round_[stor12].field_1280 != round_[stor12].field_1280:
                                    revert with 0, 'SafeMath mul failed'
                                if round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18 > 0:
                                    revert with 0, 'SafeMath sub failed'
                                if -round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18 > 0:
                                    revert with 0, 'SafeMath sub failed'
                            if plyr_[stor15[stor12].field_0].field_512 < 0:
                                revert with 0, 'SafeMath add failed'
                            if not communityAddr_:
                                if 0 < -round_[stor12].field_3072 + round_[stor12].field_1792 / 50:
                                    revert with 0, 'SafeMath add failed'
                                if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 <= 0:
                                    if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                        revert with 0, 'SafeMath add failed'
                                    round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                    rID_++
                                    round_[stor12 + 1].field_1024 = block.timestamp
                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                        revert with 0, 'SafeMath add failed'
                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                    round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                            revert with 0, 'SafeMath sub failed'
                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                revert with 0, 'SafeMath add failed'
                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                revert with 0, 'SafeMath add failed'
                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                    else:
                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                            revert with 0, 'SafeMath mul failed'
                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                            revert with 0, 'SafeMath sub failed'
                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                revert with 0, 'SafeMath add failed'
                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                revert with 0, 'SafeMath add failed'
                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                        revert with 0, 'SafeMath add failed'
                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                        revert with 0, 'SafeMath add failed'
                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                        plyr_[stor7[msg.sender]].field_512 = 0
                                        plyr_[stor7[msg.sender]].field_768 = 0
                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                        call plyr_[stor7[msg.sender]].field_0 with:
                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792 - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, 0);
                                else:
                                    if not nTFoundationAddr_:
                                        if 0 < -(round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100:
                                            revert with 0, 'SafeMath add failed'
                                        if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                            revert with 0, 'SafeMath add failed'
                                        round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                        rID_++
                                        round_[stor12 + 1].field_1024 = block.timestamp
                                        if block.timestamp + (6 * 3600) < block.timestamp:
                                            revert with 0, 'SafeMath add failed'
                                        round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                        round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792
                                        if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                revert with 0, 'SafeMath sub failed'
                                            if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                    revert with 0, 'SafeMath add failed'
                                                plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                    revert with 0, 'SafeMath add failed'
                                                plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                        else:
                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                revert with 0, 'SafeMath mul failed'
                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                revert with 0, 'SafeMath sub failed'
                                            if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                if plyr_[stor7[msg.sender]].field_768 < 0:
                                                    revert with 0, 'SafeMath add failed'
                                                plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                    revert with 0, 'SafeMath add failed'
                                                plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                        if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                            revert with 0, 'SafeMath add failed'
                                        if plyr_[stor7[msg.sender]].field_1024 < 0:
                                            revert with 0, 'SafeMath add failed'
                                        if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                            plyr_[stor7[msg.sender]].field_512 = 0
                                            plyr_[stor7[msg.sender]].field_768 = 0
                                            plyr_[stor7[msg.sender]].field_1024 = 0
                                            call plyr_[stor7[msg.sender]].field_0 with:
                                               value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                        emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792, 0, 0);
                                    else:
                                        call nTFoundationAddr_ with:
                                           value (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                            revert with 0, 'SafeMath add failed'
                                        round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                        rID_++
                                        round_[stor12 + 1].field_1024 = block.timestamp
                                        if block.timestamp + (6 * 3600) < block.timestamp:
                                            revert with 0, 'SafeMath add failed'
                                        round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                        round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                        if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                revert with 0, 'SafeMath sub failed'
                                            if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                    revert with 0, 'SafeMath add failed'
                                                plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                    revert with 0, 'SafeMath add failed'
                                                plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                        else:
                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                revert with 0, 'SafeMath mul failed'
                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                revert with 0, 'SafeMath sub failed'
                                            if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                if plyr_[stor7[msg.sender]].field_768 < 0:
                                                    revert with 0, 'SafeMath add failed'
                                                plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                    revert with 0, 'SafeMath add failed'
                                                plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                        if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                            revert with 0, 'SafeMath add failed'
                                        if plyr_[stor7[msg.sender]].field_1024 < 0:
                                            revert with 0, 'SafeMath add failed'
                                        if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                            plyr_[stor7[msg.sender]].field_512 = 0
                                            plyr_[stor7[msg.sender]].field_768 = 0
                                            plyr_[stor7[msg.sender]].field_1024 = 0
                                            call plyr_[stor7[msg.sender]].field_0 with:
                                               value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                        emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792 - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, 0);
                            else:
                                call communityAddr_ with:
                                   value round_[stor12].field_3072 + round_[stor12].field_1792 / 50 wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 <= 0:
                                    if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                        revert with 0, 'SafeMath add failed'
                                    round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                    rID_++
                                    round_[stor12 + 1].field_1024 = block.timestamp
                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                        revert with 0, 'SafeMath add failed'
                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                    round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                            revert with 0, 'SafeMath sub failed'
                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                revert with 0, 'SafeMath add failed'
                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                revert with 0, 'SafeMath add failed'
                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                    else:
                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                            revert with 0, 'SafeMath mul failed'
                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                            revert with 0, 'SafeMath sub failed'
                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                revert with 0, 'SafeMath add failed'
                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                revert with 0, 'SafeMath add failed'
                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                        revert with 0, 'SafeMath add failed'
                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                        revert with 0, 'SafeMath add failed'
                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                        plyr_[stor7[msg.sender]].field_512 = 0
                                        plyr_[stor7[msg.sender]].field_768 = 0
                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                        call plyr_[stor7[msg.sender]].field_0 with:
                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, 0);
                                else:
                                    if not nTFoundationAddr_:
                                        if 0 < -(round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100:
                                            revert with 0, 'SafeMath add failed'
                                        if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                            revert with 0, 'SafeMath add failed'
                                        round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                        rID_++
                                        round_[stor12 + 1].field_1024 = block.timestamp
                                        if block.timestamp + (6 * 3600) < block.timestamp:
                                            revert with 0, 'SafeMath add failed'
                                        round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                        round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50)
                                        if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                revert with 0, 'SafeMath sub failed'
                                            if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                    revert with 0, 'SafeMath add failed'
                                                plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                    revert with 0, 'SafeMath add failed'
                                                plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                        else:
                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                revert with 0, 'SafeMath mul failed'
                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                revert with 0, 'SafeMath sub failed'
                                            if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                if plyr_[stor7[msg.sender]].field_768 < 0:
                                                    revert with 0, 'SafeMath add failed'
                                                plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                    revert with 0, 'SafeMath add failed'
                                                plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                        if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                            revert with 0, 'SafeMath add failed'
                                        if plyr_[stor7[msg.sender]].field_1024 < 0:
                                            revert with 0, 'SafeMath add failed'
                                        if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                            plyr_[stor7[msg.sender]].field_512 = 0
                                            plyr_[stor7[msg.sender]].field_768 = 0
                                            plyr_[stor7[msg.sender]].field_1024 = 0
                                            call plyr_[stor7[msg.sender]].field_0 with:
                                               value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                        emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50), 0, 0);
                                    else:
                                        call nTFoundationAddr_ with:
                                           value (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                            revert with 0, 'SafeMath add failed'
                                        round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                        rID_++
                                        round_[stor12 + 1].field_1024 = block.timestamp
                                        if block.timestamp + (6 * 3600) < block.timestamp:
                                            revert with 0, 'SafeMath add failed'
                                        round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                        round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                        if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                revert with 0, 'SafeMath sub failed'
                                            if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                    revert with 0, 'SafeMath add failed'
                                                plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                    revert with 0, 'SafeMath add failed'
                                                plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                        else:
                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                revert with 0, 'SafeMath mul failed'
                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                revert with 0, 'SafeMath sub failed'
                                            if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                if plyr_[stor7[msg.sender]].field_768 < 0:
                                                    revert with 0, 'SafeMath add failed'
                                                plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                    revert with 0, 'SafeMath add failed'
                                                plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                        if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                            revert with 0, 'SafeMath add failed'
                                        if plyr_[stor7[msg.sender]].field_1024 < 0:
                                            revert with 0, 'SafeMath add failed'
                                        if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                            plyr_[stor7[msg.sender]].field_512 = 0
                                            plyr_[stor7[msg.sender]].field_768 = 0
                                            plyr_[stor7[msg.sender]].field_1024 = 0
                                            call plyr_[stor7[msg.sender]].field_0 with:
                                               value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                        emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, 0);
                    else:
                        if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / round_[stor12].field_3072 + round_[stor12].field_1792 != potSplit_[stor15[stor12].field_256].field_0:
                            revert with 0, 'SafeMath mul failed'
                        if not round_[stor12].field_3072 + round_[stor12].field_1792:
                            if 0 > round_[stor12].field_3072 + round_[stor12].field_1792:
                                revert with 0, 'SafeMath sub failed'
                            if round_[stor12].field_3072 + round_[stor12].field_1792 / 50 > round_[stor12].field_3072 + round_[stor12].field_1792:
                                revert with 0, 'SafeMath sub failed'
                            if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 > round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50):
                                revert with 0, 'SafeMath sub failed'
                            if 0 > round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100):
                                revert with 0, 'SafeMath sub failed'
                            if not (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
                                require round_[stor12].field_1280
                                if not 0 / round_[stor12].field_1280:
                                    if 0 > (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
                                        revert with 0, 'SafeMath sub failed'
                                    if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 <= 0:
                                        if plyr_[stor15[stor12].field_0].field_512 < 0:
                                            revert with 0, 'SafeMath add failed'
                                        if not communityAddr_:
                                            if 0 < -round_[stor12].field_3072 + round_[stor12].field_1792 / 50:
                                                revert with 0, 'SafeMath add failed'
                                            if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                            rID_++
                                            round_[stor12 + 1].field_1024 = block.timestamp
                                            if block.timestamp + (6 * 3600) < block.timestamp:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                            round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100)
                                            if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    revert with 0, 'SafeMath sub failed'
                                                if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                            else:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                    revert with 0, 'SafeMath mul failed'
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                    revert with 0, 'SafeMath sub failed'
                                                if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                            if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                plyr_[stor7[msg.sender]].field_512 = 0
                                                plyr_[stor7[msg.sender]].field_768 = 0
                                                plyr_[stor7[msg.sender]].field_1024 = 0
                                                call plyr_[stor7[msg.sender]].field_0 with:
                                                   value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                            emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792 - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                        else:
                                            call communityAddr_ with:
                                               value round_[stor12].field_3072 + round_[stor12].field_1792 / 50 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                            rID_++
                                            round_[stor12 + 1].field_1024 = block.timestamp
                                            if block.timestamp + (6 * 3600) < block.timestamp:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                            round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100)
                                            if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    revert with 0, 'SafeMath sub failed'
                                                if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                            else:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                    revert with 0, 'SafeMath mul failed'
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                    revert with 0, 'SafeMath sub failed'
                                                if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                            if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                plyr_[stor7[msg.sender]].field_512 = 0
                                                plyr_[stor7[msg.sender]].field_768 = 0
                                                plyr_[stor7[msg.sender]].field_1024 = 0
                                                call plyr_[stor7[msg.sender]].field_0 with:
                                                   value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                            emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                    else:
                                        if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 > (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
                                            revert with 0, 'SafeMath sub failed'
                                        if 0 < -(round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
                                            revert with 0, 'SafeMath add failed'
                                        if plyr_[stor15[stor12].field_0].field_512 < 0:
                                            revert with 0, 'SafeMath add failed'
                                        if not communityAddr_:
                                            if 0 < -round_[stor12].field_3072 + round_[stor12].field_1792 / 50:
                                                revert with 0, 'SafeMath add failed'
                                            if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                            rID_++
                                            round_[stor12 + 1].field_1024 = block.timestamp
                                            if block.timestamp + (6 * 3600) < block.timestamp:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                            round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792
                                            if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    revert with 0, 'SafeMath sub failed'
                                                if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                            else:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                    revert with 0, 'SafeMath mul failed'
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                    revert with 0, 'SafeMath sub failed'
                                                if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                            if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                plyr_[stor7[msg.sender]].field_512 = 0
                                                plyr_[stor7[msg.sender]].field_768 = 0
                                                plyr_[stor7[msg.sender]].field_1024 = 0
                                                call plyr_[stor7[msg.sender]].field_0 with:
                                                   value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                            emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792, 0, 0);
                                        else:
                                            call communityAddr_ with:
                                               value round_[stor12].field_3072 + round_[stor12].field_1792 / 50 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                            rID_++
                                            round_[stor12 + 1].field_1024 = block.timestamp
                                            if block.timestamp + (6 * 3600) < block.timestamp:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                            round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50)
                                            if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    revert with 0, 'SafeMath sub failed'
                                                if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                            else:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                    revert with 0, 'SafeMath mul failed'
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                    revert with 0, 'SafeMath sub failed'
                                                if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                            if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                plyr_[stor7[msg.sender]].field_512 = 0
                                                plyr_[stor7[msg.sender]].field_768 = 0
                                                plyr_[stor7[msg.sender]].field_1024 = 0
                                                call plyr_[stor7[msg.sender]].field_0 with:
                                                   value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                            emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50), 0, 0);
                                else:
                                    if round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 0 / round_[stor12].field_1280 != round_[stor12].field_1280:
                                        revert with 0, 'SafeMath mul failed'
                                    if round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18 > (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
                                        revert with 0, 'SafeMath sub failed'
                                    if ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - (round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18) <= 0:
                                        if plyr_[stor15[stor12].field_0].field_512 < 0:
                                            revert with 0, 'SafeMath add failed'
                                        if not communityAddr_:
                                            if 0 < -round_[stor12].field_3072 + round_[stor12].field_1792 / 50:
                                                revert with 0, 'SafeMath add failed'
                                            if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                            rID_++
                                            round_[stor12 + 1].field_1024 = block.timestamp
                                            if block.timestamp + (6 * 3600) < block.timestamp:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                            round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100)
                                            if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    revert with 0, 'SafeMath sub failed'
                                                if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                            else:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                    revert with 0, 'SafeMath mul failed'
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                    revert with 0, 'SafeMath sub failed'
                                                if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                            if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                plyr_[stor7[msg.sender]].field_512 = 0
                                                plyr_[stor7[msg.sender]].field_768 = 0
                                                plyr_[stor7[msg.sender]].field_1024 = 0
                                                call plyr_[stor7[msg.sender]].field_0 with:
                                                   value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                            emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792 - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                        else:
                                            call communityAddr_ with:
                                               value round_[stor12].field_3072 + round_[stor12].field_1792 / 50 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                            rID_++
                                            round_[stor12 + 1].field_1024 = block.timestamp
                                            if block.timestamp + (6 * 3600) < block.timestamp:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                            round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100)
                                            if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    revert with 0, 'SafeMath sub failed'
                                                if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                            else:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                    revert with 0, 'SafeMath mul failed'
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                    revert with 0, 'SafeMath sub failed'
                                                if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                            if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                plyr_[stor7[msg.sender]].field_512 = 0
                                                plyr_[stor7[msg.sender]].field_768 = 0
                                                plyr_[stor7[msg.sender]].field_1024 = 0
                                                call plyr_[stor7[msg.sender]].field_0 with:
                                                   value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                            emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                    else:
                                        if ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - (round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18) > (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
                                            revert with 0, 'SafeMath sub failed'
                                        if -round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18 < -(round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
                                            revert with 0, 'SafeMath add failed'
                                        if plyr_[stor15[stor12].field_0].field_512 < 0:
                                            revert with 0, 'SafeMath add failed'
                                        if not communityAddr_:
                                            if 0 < -round_[stor12].field_3072 + round_[stor12].field_1792 / 50:
                                                revert with 0, 'SafeMath add failed'
                                            if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                            rID_++
                                            round_[stor12 + 1].field_1024 = block.timestamp
                                            if block.timestamp + (6 * 3600) < block.timestamp:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                            round_[stor12 + 1].field_3072 = -(round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792
                                            if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    revert with 0, 'SafeMath sub failed'
                                                if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                            else:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                    revert with 0, 'SafeMath mul failed'
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                    revert with 0, 'SafeMath sub failed'
                                                if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                            if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                plyr_[stor7[msg.sender]].field_512 = 0
                                                plyr_[stor7[msg.sender]].field_768 = 0
                                                plyr_[stor7[msg.sender]].field_1024 = 0
                                                call plyr_[stor7[msg.sender]].field_0 with:
                                                   value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                            emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, -(round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792, 0, round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18);
                                        else:
                                            call communityAddr_ with:
                                               value round_[stor12].field_3072 + round_[stor12].field_1792 / 50 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                            rID_++
                                            round_[stor12 + 1].field_1024 = block.timestamp
                                            if block.timestamp + (6 * 3600) < block.timestamp:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                            round_[stor12 + 1].field_3072 = -(round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50)
                                            if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    revert with 0, 'SafeMath sub failed'
                                                if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                            else:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                    revert with 0, 'SafeMath mul failed'
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                    revert with 0, 'SafeMath sub failed'
                                                if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                            if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                plyr_[stor7[msg.sender]].field_512 = 0
                                                plyr_[stor7[msg.sender]].field_768 = 0
                                                plyr_[stor7[msg.sender]].field_1024 = 0
                                                call plyr_[stor7[msg.sender]].field_0 with:
                                                   value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                            emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, -(round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50), 0, round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18);
                            else:
                                if 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 != 10^18:
                                    revert with 0, 'SafeMath mul failed'
                                require round_[stor12].field_1280
                                if not 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                    if 0 > (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
                                        revert with 0, 'SafeMath sub failed'
                                    if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 <= 0:
                                        if plyr_[stor15[stor12].field_0].field_512 < 0:
                                            revert with 0, 'SafeMath add failed'
                                        if not communityAddr_:
                                            if 0 < -round_[stor12].field_3072 + round_[stor12].field_1792 / 50:
                                                revert with 0, 'SafeMath add failed'
                                            if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                            rID_++
                                            round_[stor12 + 1].field_1024 = block.timestamp
                                            if block.timestamp + (6 * 3600) < block.timestamp:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                            round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100)
                                            if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    revert with 0, 'SafeMath sub failed'
                                                if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                            else:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                    revert with 0, 'SafeMath mul failed'
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                    revert with 0, 'SafeMath sub failed'
                                                if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                            if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                plyr_[stor7[msg.sender]].field_512 = 0
                                                plyr_[stor7[msg.sender]].field_768 = 0
                                                plyr_[stor7[msg.sender]].field_1024 = 0
                                                call plyr_[stor7[msg.sender]].field_0 with:
                                                   value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                            emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792 - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                        else:
                                            call communityAddr_ with:
                                               value round_[stor12].field_3072 + round_[stor12].field_1792 / 50 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                            rID_++
                                            round_[stor12 + 1].field_1024 = block.timestamp
                                            if block.timestamp + (6 * 3600) < block.timestamp:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                            round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100)
                                            if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    revert with 0, 'SafeMath sub failed'
                                                if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                            else:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                    revert with 0, 'SafeMath mul failed'
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                    revert with 0, 'SafeMath sub failed'
                                                if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                            if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                plyr_[stor7[msg.sender]].field_512 = 0
                                                plyr_[stor7[msg.sender]].field_768 = 0
                                                plyr_[stor7[msg.sender]].field_1024 = 0
                                                call plyr_[stor7[msg.sender]].field_0 with:
                                                   value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                            emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                    else:
                                        if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 > (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
                                            revert with 0, 'SafeMath sub failed'
                                        if 0 < -(round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
                                            revert with 0, 'SafeMath add failed'
                                        if plyr_[stor15[stor12].field_0].field_512 < 0:
                                            revert with 0, 'SafeMath add failed'
                                        if not communityAddr_:
                                            if 0 < -round_[stor12].field_3072 + round_[stor12].field_1792 / 50:
                                                revert with 0, 'SafeMath add failed'
                                            if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                            rID_++
                                            round_[stor12 + 1].field_1024 = block.timestamp
                                            if block.timestamp + (6 * 3600) < block.timestamp:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                            round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792
                                            if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    revert with 0, 'SafeMath sub failed'
                                                if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                            else:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                    revert with 0, 'SafeMath mul failed'
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                    revert with 0, 'SafeMath sub failed'
                                                if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                            if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                plyr_[stor7[msg.sender]].field_512 = 0
                                                plyr_[stor7[msg.sender]].field_768 = 0
                                                plyr_[stor7[msg.sender]].field_1024 = 0
                                                call plyr_[stor7[msg.sender]].field_0 with:
                                                   value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                            emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792, 0, 0);
                                        else:
                                            call communityAddr_ with:
                                               value round_[stor12].field_3072 + round_[stor12].field_1792 / 50 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                            rID_++
                                            round_[stor12 + 1].field_1024 = block.timestamp
                                            if block.timestamp + (6 * 3600) < block.timestamp:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                            round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50)
                                            if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    revert with 0, 'SafeMath sub failed'
                                                if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                            else:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                    revert with 0, 'SafeMath mul failed'
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                    revert with 0, 'SafeMath sub failed'
                                                if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                            if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                plyr_[stor7[msg.sender]].field_512 = 0
                                                plyr_[stor7[msg.sender]].field_768 = 0
                                                plyr_[stor7[msg.sender]].field_1024 = 0
                                                call plyr_[stor7[msg.sender]].field_0 with:
                                                   value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                            emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50), 0, 0);
                                else:
                                    if round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 != round_[stor12].field_1280:
                                        revert with 0, 'SafeMath mul failed'
                                    if round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18 > (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
                                        revert with 0, 'SafeMath sub failed'
                                    if ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - (round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18) <= 0:
                                        if plyr_[stor15[stor12].field_0].field_512 < 0:
                                            revert with 0, 'SafeMath add failed'
                                        if not communityAddr_:
                                            if 0 < -round_[stor12].field_3072 + round_[stor12].field_1792 / 50:
                                                revert with 0, 'SafeMath add failed'
                                            if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                            rID_++
                                            round_[stor12 + 1].field_1024 = block.timestamp
                                            if block.timestamp + (6 * 3600) < block.timestamp:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                            round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100)
                                            if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    revert with 0, 'SafeMath sub failed'
                                                if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                            else:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                    revert with 0, 'SafeMath mul failed'
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                    revert with 0, 'SafeMath sub failed'
                                                if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                            if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                plyr_[stor7[msg.sender]].field_512 = 0
                                                plyr_[stor7[msg.sender]].field_768 = 0
                                                plyr_[stor7[msg.sender]].field_1024 = 0
                                                call plyr_[stor7[msg.sender]].field_0 with:
                                                   value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                            emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792 - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                        else:
                                            call communityAddr_ with:
                                               value round_[stor12].field_3072 + round_[stor12].field_1792 / 50 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                            rID_++
                                            round_[stor12 + 1].field_1024 = block.timestamp
                                            if block.timestamp + (6 * 3600) < block.timestamp:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                            round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100)
                                            if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    revert with 0, 'SafeMath sub failed'
                                                if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                            else:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                    revert with 0, 'SafeMath mul failed'
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                    revert with 0, 'SafeMath sub failed'
                                                if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                            if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                plyr_[stor7[msg.sender]].field_512 = 0
                                                plyr_[stor7[msg.sender]].field_768 = 0
                                                plyr_[stor7[msg.sender]].field_1024 = 0
                                                call plyr_[stor7[msg.sender]].field_0 with:
                                                   value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                            emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                    else:
                                        if ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - (round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18) > (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
                                            revert with 0, 'SafeMath sub failed'
                                        if -round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18 < -(round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
                                            revert with 0, 'SafeMath add failed'
                                        if plyr_[stor15[stor12].field_0].field_512 < 0:
                                            revert with 0, 'SafeMath add failed'
                                        if not communityAddr_:
                                            if 0 < -round_[stor12].field_3072 + round_[stor12].field_1792 / 50:
                                                revert with 0, 'SafeMath add failed'
                                            if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                            rID_++
                                            round_[stor12 + 1].field_1024 = block.timestamp
                                            if block.timestamp + (6 * 3600) < block.timestamp:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                            round_[stor12 + 1].field_3072 = -(round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792
                                            if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    revert with 0, 'SafeMath sub failed'
                                                if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                            else:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                    revert with 0, 'SafeMath mul failed'
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                    revert with 0, 'SafeMath sub failed'
                                                if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                            if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                plyr_[stor7[msg.sender]].field_512 = 0
                                                plyr_[stor7[msg.sender]].field_768 = 0
                                                plyr_[stor7[msg.sender]].field_1024 = 0
                                                call plyr_[stor7[msg.sender]].field_0 with:
                                                   value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                            emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, -(round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792, 0, round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18);
                                        else:
                                            call communityAddr_ with:
                                               value round_[stor12].field_3072 + round_[stor12].field_1792 / 50 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                            rID_++
                                            round_[stor12 + 1].field_1024 = block.timestamp
                                            if block.timestamp + (6 * 3600) < block.timestamp:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                            round_[stor12 + 1].field_3072 = -(round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50)
                                            if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    revert with 0, 'SafeMath sub failed'
                                                if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                            else:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                    revert with 0, 'SafeMath mul failed'
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                    revert with 0, 'SafeMath sub failed'
                                                if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                            if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                plyr_[stor7[msg.sender]].field_512 = 0
                                                plyr_[stor7[msg.sender]].field_768 = 0
                                                plyr_[stor7[msg.sender]].field_1024 = 0
                                                call plyr_[stor7[msg.sender]].field_0 with:
                                                   value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                            emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, -(round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50), 0, round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18);
                        else:
                            if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / round_[stor12].field_3072 + round_[stor12].field_1792 != potSplit_[stor15[stor12].field_256].field_256:
                                revert with 0, 'SafeMath mul failed'
                            if 0 > round_[stor12].field_3072 + round_[stor12].field_1792:
                                revert with 0, 'SafeMath sub failed'
                            if round_[stor12].field_3072 + round_[stor12].field_1792 / 50 > round_[stor12].field_3072 + round_[stor12].field_1792:
                                revert with 0, 'SafeMath sub failed'
                            if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 > round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50):
                                revert with 0, 'SafeMath sub failed'
                            if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 > round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100):
                                revert with 0, 'SafeMath sub failed'
                            if not (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
                                require round_[stor12].field_1280
                                if not 0 / round_[stor12].field_1280:
                                    if 0 > (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
                                        revert with 0, 'SafeMath sub failed'
                                    if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 <= 0:
                                        if plyr_[stor15[stor12].field_0].field_512 < 0:
                                            revert with 0, 'SafeMath add failed'
                                        if not communityAddr_:
                                            if 0 < -round_[stor12].field_3072 + round_[stor12].field_1792 / 50:
                                                revert with 0, 'SafeMath add failed'
                                            if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 <= 0:
                                                if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                                rID_++
                                                round_[stor12 + 1].field_1024 = block.timestamp
                                                if block.timestamp + (6 * 3600) < block.timestamp:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                else:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                        revert with 0, 'SafeMath mul failed'
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                    plyr_[stor7[msg.sender]].field_512 = 0
                                                    plyr_[stor7[msg.sender]].field_768 = 0
                                                    plyr_[stor7[msg.sender]].field_1024 = 0
                                                    call plyr_[stor7[msg.sender]].field_0 with:
                                                       value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792 - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                            else:
                                                if not nTFoundationAddr_:
                                                    if 0 < -(round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100:
                                                        revert with 0, 'SafeMath add failed'
                                                    if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792 - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                                else:
                                                    call nTFoundationAddr_ with:
                                                       value (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792 - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                        else:
                                            call communityAddr_ with:
                                               value round_[stor12].field_3072 + round_[stor12].field_1792 / 50 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 <= 0:
                                                if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                                rID_++
                                                round_[stor12 + 1].field_1024 = block.timestamp
                                                if block.timestamp + (6 * 3600) < block.timestamp:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                else:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                        revert with 0, 'SafeMath mul failed'
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                    plyr_[stor7[msg.sender]].field_512 = 0
                                                    plyr_[stor7[msg.sender]].field_768 = 0
                                                    plyr_[stor7[msg.sender]].field_1024 = 0
                                                    call plyr_[stor7[msg.sender]].field_0 with:
                                                       value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                            else:
                                                if not nTFoundationAddr_:
                                                    if 0 < -(round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100:
                                                        revert with 0, 'SafeMath add failed'
                                                    if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                                else:
                                                    call nTFoundationAddr_ with:
                                                       value (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                    else:
                                        if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 > (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
                                            revert with 0, 'SafeMath sub failed'
                                        if 0 < -(round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
                                            revert with 0, 'SafeMath add failed'
                                        if plyr_[stor15[stor12].field_0].field_512 < 0:
                                            revert with 0, 'SafeMath add failed'
                                        if not communityAddr_:
                                            if 0 < -round_[stor12].field_3072 + round_[stor12].field_1792 / 50:
                                                revert with 0, 'SafeMath add failed'
                                            if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 <= 0:
                                                if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                                rID_++
                                                round_[stor12 + 1].field_1024 = block.timestamp
                                                if block.timestamp + (6 * 3600) < block.timestamp:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                else:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                        revert with 0, 'SafeMath mul failed'
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                    plyr_[stor7[msg.sender]].field_512 = 0
                                                    plyr_[stor7[msg.sender]].field_768 = 0
                                                    plyr_[stor7[msg.sender]].field_1024 = 0
                                                    call plyr_[stor7[msg.sender]].field_0 with:
                                                       value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792 - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, 0);
                                            else:
                                                if not nTFoundationAddr_:
                                                    if 0 < -(round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100:
                                                        revert with 0, 'SafeMath add failed'
                                                    if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792, 0, 0);
                                                else:
                                                    call nTFoundationAddr_ with:
                                                       value (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792 - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, 0);
                                        else:
                                            call communityAddr_ with:
                                               value round_[stor12].field_3072 + round_[stor12].field_1792 / 50 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 <= 0:
                                                if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                                rID_++
                                                round_[stor12 + 1].field_1024 = block.timestamp
                                                if block.timestamp + (6 * 3600) < block.timestamp:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                else:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                        revert with 0, 'SafeMath mul failed'
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                    plyr_[stor7[msg.sender]].field_512 = 0
                                                    plyr_[stor7[msg.sender]].field_768 = 0
                                                    plyr_[stor7[msg.sender]].field_1024 = 0
                                                    call plyr_[stor7[msg.sender]].field_0 with:
                                                       value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, 0);
                                            else:
                                                if not nTFoundationAddr_:
                                                    if 0 < -(round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100:
                                                        revert with 0, 'SafeMath add failed'
                                                    if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50), 0, 0);
                                                else:
                                                    call nTFoundationAddr_ with:
                                                       value (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, 0);
                                else:
                                    if round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 0 / round_[stor12].field_1280 != round_[stor12].field_1280:
                                        revert with 0, 'SafeMath mul failed'
                                    if round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18 > (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
                                        revert with 0, 'SafeMath sub failed'
                                    if ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - (round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18) <= 0:
                                        if plyr_[stor15[stor12].field_0].field_512 < 0:
                                            revert with 0, 'SafeMath add failed'
                                        if not communityAddr_:
                                            if 0 < -round_[stor12].field_3072 + round_[stor12].field_1792 / 50:
                                                revert with 0, 'SafeMath add failed'
                                            if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 <= 0:
                                                if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                                rID_++
                                                round_[stor12 + 1].field_1024 = block.timestamp
                                                if block.timestamp + (6 * 3600) < block.timestamp:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                else:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                        revert with 0, 'SafeMath mul failed'
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                    plyr_[stor7[msg.sender]].field_512 = 0
                                                    plyr_[stor7[msg.sender]].field_768 = 0
                                                    plyr_[stor7[msg.sender]].field_1024 = 0
                                                    call plyr_[stor7[msg.sender]].field_0 with:
                                                       value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792 - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                            else:
                                                if not nTFoundationAddr_:
                                                    if 0 < -(round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100:
                                                        revert with 0, 'SafeMath add failed'
                                                    if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792 - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                                else:
                                                    call nTFoundationAddr_ with:
                                                       value (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792 - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                        else:
                                            call communityAddr_ with:
                                               value round_[stor12].field_3072 + round_[stor12].field_1792 / 50 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 <= 0:
                                                if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                                rID_++
                                                round_[stor12 + 1].field_1024 = block.timestamp
                                                if block.timestamp + (6 * 3600) < block.timestamp:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                else:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                        revert with 0, 'SafeMath mul failed'
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                    plyr_[stor7[msg.sender]].field_512 = 0
                                                    plyr_[stor7[msg.sender]].field_768 = 0
                                                    plyr_[stor7[msg.sender]].field_1024 = 0
                                                    call plyr_[stor7[msg.sender]].field_0 with:
                                                       value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                            else:
                                                if not nTFoundationAddr_:
                                                    if 0 < -(round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100:
                                                        revert with 0, 'SafeMath add failed'
                                                    if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                                else:
                                                    call nTFoundationAddr_ with:
                                                       value (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                    else:
                                        if ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - (round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18) > (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
                                            revert with 0, 'SafeMath sub failed'
                                        if -round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18 < -(round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
                                            revert with 0, 'SafeMath add failed'
                                        if plyr_[stor15[stor12].field_0].field_512 < 0:
                                            revert with 0, 'SafeMath add failed'
                                        if not communityAddr_:
                                            if 0 < -round_[stor12].field_3072 + round_[stor12].field_1792 / 50:
                                                revert with 0, 'SafeMath add failed'
                                            if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 <= 0:
                                                if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                                rID_++
                                                round_[stor12 + 1].field_1024 = block.timestamp
                                                if block.timestamp + (6 * 3600) < block.timestamp:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                round_[stor12 + 1].field_3072 = -(round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                else:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                        revert with 0, 'SafeMath mul failed'
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                    plyr_[stor7[msg.sender]].field_512 = 0
                                                    plyr_[stor7[msg.sender]].field_768 = 0
                                                    plyr_[stor7[msg.sender]].field_1024 = 0
                                                    call plyr_[stor7[msg.sender]].field_0 with:
                                                       value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, -(round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18);
                                            else:
                                                if not nTFoundationAddr_:
                                                    if 0 < -(round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100:
                                                        revert with 0, 'SafeMath add failed'
                                                    if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = -(round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, -(round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792, 0, round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18);
                                                else:
                                                    call nTFoundationAddr_ with:
                                                       value (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = -(round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, -(round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18);
                                        else:
                                            call communityAddr_ with:
                                               value round_[stor12].field_3072 + round_[stor12].field_1792 / 50 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 <= 0:
                                                if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                                rID_++
                                                round_[stor12 + 1].field_1024 = block.timestamp
                                                if block.timestamp + (6 * 3600) < block.timestamp:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                round_[stor12 + 1].field_3072 = -(round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                else:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                        revert with 0, 'SafeMath mul failed'
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                    plyr_[stor7[msg.sender]].field_512 = 0
                                                    plyr_[stor7[msg.sender]].field_768 = 0
                                                    plyr_[stor7[msg.sender]].field_1024 = 0
                                                    call plyr_[stor7[msg.sender]].field_0 with:
                                                       value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, -(round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18);
                                            else:
                                                if not nTFoundationAddr_:
                                                    if 0 < -(round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100:
                                                        revert with 0, 'SafeMath add failed'
                                                    if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = -(round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, -(round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50), 0, round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18);
                                                else:
                                                    call nTFoundationAddr_ with:
                                                       value (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = -(round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, -(round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18);
                            else:
                                if 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 != 10^18:
                                    revert with 0, 'SafeMath mul failed'
                                require round_[stor12].field_1280
                                if not 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                    if 0 > (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
                                        revert with 0, 'SafeMath sub failed'
                                    if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 <= 0:
                                        if plyr_[stor15[stor12].field_0].field_512 < 0:
                                            revert with 0, 'SafeMath add failed'
                                        if not communityAddr_:
                                            if 0 < -round_[stor12].field_3072 + round_[stor12].field_1792 / 50:
                                                revert with 0, 'SafeMath add failed'
                                            if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 <= 0:
                                                if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                                rID_++
                                                round_[stor12 + 1].field_1024 = block.timestamp
                                                if block.timestamp + (6 * 3600) < block.timestamp:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                else:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                        revert with 0, 'SafeMath mul failed'
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                    plyr_[stor7[msg.sender]].field_512 = 0
                                                    plyr_[stor7[msg.sender]].field_768 = 0
                                                    plyr_[stor7[msg.sender]].field_1024 = 0
                                                    call plyr_[stor7[msg.sender]].field_0 with:
                                                       value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792 - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                            else:
                                                if not nTFoundationAddr_:
                                                    if 0 < -(round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100:
                                                        revert with 0, 'SafeMath add failed'
                                                    if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792 - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                                else:
                                                    call nTFoundationAddr_ with:
                                                       value (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792 - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                        else:
                                            call communityAddr_ with:
                                               value round_[stor12].field_3072 + round_[stor12].field_1792 / 50 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 <= 0:
                                                if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                                rID_++
                                                round_[stor12 + 1].field_1024 = block.timestamp
                                                if block.timestamp + (6 * 3600) < block.timestamp:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                else:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                        revert with 0, 'SafeMath mul failed'
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                    plyr_[stor7[msg.sender]].field_512 = 0
                                                    plyr_[stor7[msg.sender]].field_768 = 0
                                                    plyr_[stor7[msg.sender]].field_1024 = 0
                                                    call plyr_[stor7[msg.sender]].field_0 with:
                                                       value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                            else:
                                                if not nTFoundationAddr_:
                                                    if 0 < -(round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100:
                                                        revert with 0, 'SafeMath add failed'
                                                    if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                                else:
                                                    call nTFoundationAddr_ with:
                                                       value (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                    else:
                                        if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 > (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
                                            revert with 0, 'SafeMath sub failed'
                                        if 0 < -(round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
                                            revert with 0, 'SafeMath add failed'
                                        if plyr_[stor15[stor12].field_0].field_512 < 0:
                                            revert with 0, 'SafeMath add failed'
                                        if not communityAddr_:
                                            if 0 < -round_[stor12].field_3072 + round_[stor12].field_1792 / 50:
                                                revert with 0, 'SafeMath add failed'
                                            if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 <= 0:
                                                if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                                rID_++
                                                round_[stor12 + 1].field_1024 = block.timestamp
                                                if block.timestamp + (6 * 3600) < block.timestamp:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                else:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                        revert with 0, 'SafeMath mul failed'
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                    plyr_[stor7[msg.sender]].field_512 = 0
                                                    plyr_[stor7[msg.sender]].field_768 = 0
                                                    plyr_[stor7[msg.sender]].field_1024 = 0
                                                    call plyr_[stor7[msg.sender]].field_0 with:
                                                       value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792 - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, 0);
                                            else:
                                                if not nTFoundationAddr_:
                                                    if 0 < -(round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100:
                                                        revert with 0, 'SafeMath add failed'
                                                    if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792, 0, 0);
                                                else:
                                                    call nTFoundationAddr_ with:
                                                       value (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792 - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, 0);
                                        else:
                                            call communityAddr_ with:
                                               value round_[stor12].field_3072 + round_[stor12].field_1792 / 50 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 <= 0:
                                                if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                                rID_++
                                                round_[stor12 + 1].field_1024 = block.timestamp
                                                if block.timestamp + (6 * 3600) < block.timestamp:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                else:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                        revert with 0, 'SafeMath mul failed'
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                    plyr_[stor7[msg.sender]].field_512 = 0
                                                    plyr_[stor7[msg.sender]].field_768 = 0
                                                    plyr_[stor7[msg.sender]].field_1024 = 0
                                                    call plyr_[stor7[msg.sender]].field_0 with:
                                                       value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, 0);
                                            else:
                                                if not nTFoundationAddr_:
                                                    if 0 < -(round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100:
                                                        revert with 0, 'SafeMath add failed'
                                                    if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50), 0, 0);
                                                else:
                                                    call nTFoundationAddr_ with:
                                                       value (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, 0);
                                else:
                                    if round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 != round_[stor12].field_1280:
                                        revert with 0, 'SafeMath mul failed'
                                    if round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18 > (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
                                        revert with 0, 'SafeMath sub failed'
                                    if ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - (round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18) <= 0:
                                        if plyr_[stor15[stor12].field_0].field_512 < 0:
                                            revert with 0, 'SafeMath add failed'
                                        if not communityAddr_:
                                            if 0 < -round_[stor12].field_3072 + round_[stor12].field_1792 / 50:
                                                revert with 0, 'SafeMath add failed'
                                            if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 <= 0:
                                                if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                                rID_++
                                                round_[stor12 + 1].field_1024 = block.timestamp
                                                if block.timestamp + (6 * 3600) < block.timestamp:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                else:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                        revert with 0, 'SafeMath mul failed'
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                    plyr_[stor7[msg.sender]].field_512 = 0
                                                    plyr_[stor7[msg.sender]].field_768 = 0
                                                    plyr_[stor7[msg.sender]].field_1024 = 0
                                                    call plyr_[stor7[msg.sender]].field_0 with:
                                                       value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792 - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                            else:
                                                if not nTFoundationAddr_:
                                                    if 0 < -(round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100:
                                                        revert with 0, 'SafeMath add failed'
                                                    if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792 - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                                else:
                                                    call nTFoundationAddr_ with:
                                                       value (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792 - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                        else:
                                            call communityAddr_ with:
                                               value round_[stor12].field_3072 + round_[stor12].field_1792 / 50 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 <= 0:
                                                if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                                rID_++
                                                round_[stor12 + 1].field_1024 = block.timestamp
                                                if block.timestamp + (6 * 3600) < block.timestamp:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                else:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                        revert with 0, 'SafeMath mul failed'
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                    plyr_[stor7[msg.sender]].field_512 = 0
                                                    plyr_[stor7[msg.sender]].field_768 = 0
                                                    plyr_[stor7[msg.sender]].field_1024 = 0
                                                    call plyr_[stor7[msg.sender]].field_0 with:
                                                       value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                            else:
                                                if not nTFoundationAddr_:
                                                    if 0 < -(round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100:
                                                        revert with 0, 'SafeMath add failed'
                                                    if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                                else:
                                                    call nTFoundationAddr_ with:
                                                       value (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                    else:
                                        if ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - (round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18) > (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
                                            revert with 0, 'SafeMath sub failed'
                                        if -round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18 < -(round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
                                            revert with 0, 'SafeMath add failed'
                                        if plyr_[stor15[stor12].field_0].field_512 < 0:
                                            revert with 0, 'SafeMath add failed'
                                        if not communityAddr_:
                                            if 0 < -round_[stor12].field_3072 + round_[stor12].field_1792 / 50:
                                                revert with 0, 'SafeMath add failed'
                                            if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 <= 0:
                                                if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                                rID_++
                                                round_[stor12 + 1].field_1024 = block.timestamp
                                                if block.timestamp + (6 * 3600) < block.timestamp:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                round_[stor12 + 1].field_3072 = -(round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                else:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                        revert with 0, 'SafeMath mul failed'
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                    plyr_[stor7[msg.sender]].field_512 = 0
                                                    plyr_[stor7[msg.sender]].field_768 = 0
                                                    plyr_[stor7[msg.sender]].field_1024 = 0
                                                    call plyr_[stor7[msg.sender]].field_0 with:
                                                       value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, -(round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18);
                                            else:
                                                if not nTFoundationAddr_:
                                                    if 0 < -(round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100:
                                                        revert with 0, 'SafeMath add failed'
                                                    if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = -(round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, -(round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792, 0, round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18);
                                                else:
                                                    call nTFoundationAddr_ with:
                                                       value (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = -(round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, -(round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18);
                                        else:
                                            call communityAddr_ with:
                                               value round_[stor12].field_3072 + round_[stor12].field_1792 / 50 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 <= 0:
                                                if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                                rID_++
                                                round_[stor12 + 1].field_1024 = block.timestamp
                                                if block.timestamp + (6 * 3600) < block.timestamp:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                round_[stor12 + 1].field_3072 = -(round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                else:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                        revert with 0, 'SafeMath mul failed'
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                    plyr_[stor7[msg.sender]].field_512 = 0
                                                    plyr_[stor7[msg.sender]].field_768 = 0
                                                    plyr_[stor7[msg.sender]].field_1024 = 0
                                                    call plyr_[stor7[msg.sender]].field_0 with:
                                                       value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, -(round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18);
                                            else:
                                                if not nTFoundationAddr_:
                                                    if 0 < -(round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100:
                                                        revert with 0, 'SafeMath add failed'
                                                    if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = -(round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, -(round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50), 0, round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18);
                                                else:
                                                    call nTFoundationAddr_ with:
                                                       value (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = -(round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, 0, -(round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18);
                else:
                    if (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / round_[stor12].field_3072 + round_[stor12].field_1792 != 48:
                        revert with 0, 'SafeMath mul failed'
                    if not round_[stor12].field_3072 + round_[stor12].field_1792:
                        if not round_[stor12].field_3072 + round_[stor12].field_1792:
                            if (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100 > round_[stor12].field_3072 + round_[stor12].field_1792:
                                revert with 0, 'SafeMath sub failed'
                            if round_[stor12].field_3072 + round_[stor12].field_1792 / 50 > round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100):
                                revert with 0, 'SafeMath sub failed'
                            if 0 > round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50):
                                revert with 0, 'SafeMath sub failed'
                            require round_[stor12].field_1280
                            if 0 / round_[stor12].field_1280:
                                if round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 0 / round_[stor12].field_1280 != round_[stor12].field_1280:
                                    revert with 0, 'SafeMath mul failed'
                                if round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18 > 0:
                                    revert with 0, 'SafeMath sub failed'
                                if -round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18 > 0:
                                    revert with 0, 'SafeMath sub failed'
                            if plyr_[stor15[stor12].field_0].field_512 + ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) < (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100:
                                revert with 0, 'SafeMath add failed'
                            plyr_[stor15[stor12].field_0].field_512 += (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100
                            if not communityAddr_:
                                if 0 < -round_[stor12].field_3072 + round_[stor12].field_1792 / 50:
                                    revert with 0, 'SafeMath add failed'
                                if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                    revert with 0, 'SafeMath add failed'
                                round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                rID_++
                                round_[stor12 + 1].field_1024 = block.timestamp
                                if block.timestamp + (6 * 3600) < block.timestamp:
                                    revert with 0, 'SafeMath add failed'
                                round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100)
                                if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                        revert with 0, 'SafeMath sub failed'
                                    if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                        if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                            revert with 0, 'SafeMath add failed'
                                        plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                        if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                            revert with 0, 'SafeMath add failed'
                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                else:
                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                        revert with 0, 'SafeMath mul failed'
                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                        revert with 0, 'SafeMath sub failed'
                                    if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                        if plyr_[stor7[msg.sender]].field_768 < 0:
                                            revert with 0, 'SafeMath add failed'
                                        plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                            revert with 0, 'SafeMath add failed'
                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                    revert with 0, 'SafeMath add failed'
                                if plyr_[stor7[msg.sender]].field_1024 < 0:
                                    revert with 0, 'SafeMath add failed'
                                if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                    plyr_[stor7[msg.sender]].field_512 = 0
                                    plyr_[stor7[msg.sender]].field_768 = 0
                                    plyr_[stor7[msg.sender]].field_1024 = 0
                                    call plyr_[stor7[msg.sender]].field_0 with:
                                       value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100), 0, 0);
                            else:
                                call communityAddr_ with:
                                   value round_[stor12].field_3072 + round_[stor12].field_1792 / 50 wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                    revert with 0, 'SafeMath add failed'
                                round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                rID_++
                                round_[stor12 + 1].field_1024 = block.timestamp
                                if block.timestamp + (6 * 3600) < block.timestamp:
                                    revert with 0, 'SafeMath add failed'
                                round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50)
                                if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                        revert with 0, 'SafeMath sub failed'
                                    if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                        if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                            revert with 0, 'SafeMath add failed'
                                        plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                        if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                            revert with 0, 'SafeMath add failed'
                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                else:
                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                        revert with 0, 'SafeMath mul failed'
                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                        revert with 0, 'SafeMath sub failed'
                                    if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                        if plyr_[stor7[msg.sender]].field_768 < 0:
                                            revert with 0, 'SafeMath add failed'
                                        plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                            revert with 0, 'SafeMath add failed'
                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                    revert with 0, 'SafeMath add failed'
                                if plyr_[stor7[msg.sender]].field_1024 < 0:
                                    revert with 0, 'SafeMath add failed'
                                if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                    plyr_[stor7[msg.sender]].field_512 = 0
                                    plyr_[stor7[msg.sender]].field_768 = 0
                                    plyr_[stor7[msg.sender]].field_1024 = 0
                                    call plyr_[stor7[msg.sender]].field_0 with:
                                       value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50), 0, 0);
                        else:
                            if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / round_[stor12].field_3072 + round_[stor12].field_1792 != potSplit_[stor15[stor12].field_256].field_256:
                                revert with 0, 'SafeMath mul failed'
                            if (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100 > round_[stor12].field_3072 + round_[stor12].field_1792:
                                revert with 0, 'SafeMath sub failed'
                            if round_[stor12].field_3072 + round_[stor12].field_1792 / 50 > round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100):
                                revert with 0, 'SafeMath sub failed'
                            if 0 > round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50):
                                revert with 0, 'SafeMath sub failed'
                            if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 > round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50):
                                revert with 0, 'SafeMath sub failed'
                            require round_[stor12].field_1280
                            if 0 / round_[stor12].field_1280:
                                if round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 0 / round_[stor12].field_1280 != round_[stor12].field_1280:
                                    revert with 0, 'SafeMath mul failed'
                                if round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18 > 0:
                                    revert with 0, 'SafeMath sub failed'
                                if -round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18 > 0:
                                    revert with 0, 'SafeMath sub failed'
                            if plyr_[stor15[stor12].field_0].field_512 + ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) < (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100:
                                revert with 0, 'SafeMath add failed'
                            plyr_[stor15[stor12].field_0].field_512 += (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100
                            if not communityAddr_:
                                if 0 < -round_[stor12].field_3072 + round_[stor12].field_1792 / 50:
                                    revert with 0, 'SafeMath add failed'
                                if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 <= 0:
                                    if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                        revert with 0, 'SafeMath add failed'
                                    round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                    rID_++
                                    round_[stor12 + 1].field_1024 = block.timestamp
                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                        revert with 0, 'SafeMath add failed'
                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                    round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                            revert with 0, 'SafeMath sub failed'
                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                revert with 0, 'SafeMath add failed'
                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                revert with 0, 'SafeMath add failed'
                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                    else:
                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                            revert with 0, 'SafeMath mul failed'
                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                            revert with 0, 'SafeMath sub failed'
                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                revert with 0, 'SafeMath add failed'
                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                revert with 0, 'SafeMath add failed'
                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                        revert with 0, 'SafeMath add failed'
                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                        revert with 0, 'SafeMath add failed'
                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                        plyr_[stor7[msg.sender]].field_512 = 0
                                        plyr_[stor7[msg.sender]].field_768 = 0
                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                        call plyr_[stor7[msg.sender]].field_0 with:
                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, 0);
                                else:
                                    if not nTFoundationAddr_:
                                        if 0 < -(round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100:
                                            revert with 0, 'SafeMath add failed'
                                        if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                            revert with 0, 'SafeMath add failed'
                                        round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                        rID_++
                                        round_[stor12 + 1].field_1024 = block.timestamp
                                        if block.timestamp + (6 * 3600) < block.timestamp:
                                            revert with 0, 'SafeMath add failed'
                                        round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                        round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100)
                                        if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                revert with 0, 'SafeMath sub failed'
                                            if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                    revert with 0, 'SafeMath add failed'
                                                plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                    revert with 0, 'SafeMath add failed'
                                                plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                        else:
                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                revert with 0, 'SafeMath mul failed'
                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                revert with 0, 'SafeMath sub failed'
                                            if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                if plyr_[stor7[msg.sender]].field_768 < 0:
                                                    revert with 0, 'SafeMath add failed'
                                                plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                    revert with 0, 'SafeMath add failed'
                                                plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                        if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                            revert with 0, 'SafeMath add failed'
                                        if plyr_[stor7[msg.sender]].field_1024 < 0:
                                            revert with 0, 'SafeMath add failed'
                                        if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                            plyr_[stor7[msg.sender]].field_512 = 0
                                            plyr_[stor7[msg.sender]].field_768 = 0
                                            plyr_[stor7[msg.sender]].field_1024 = 0
                                            call plyr_[stor7[msg.sender]].field_0 with:
                                               value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                        emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100), 0, 0);
                                    else:
                                        call nTFoundationAddr_ with:
                                           value (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                            revert with 0, 'SafeMath add failed'
                                        round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                        rID_++
                                        round_[stor12 + 1].field_1024 = block.timestamp
                                        if block.timestamp + (6 * 3600) < block.timestamp:
                                            revert with 0, 'SafeMath add failed'
                                        round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                        round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                        if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                revert with 0, 'SafeMath sub failed'
                                            if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                    revert with 0, 'SafeMath add failed'
                                                plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                    revert with 0, 'SafeMath add failed'
                                                plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                        else:
                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                revert with 0, 'SafeMath mul failed'
                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                revert with 0, 'SafeMath sub failed'
                                            if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                if plyr_[stor7[msg.sender]].field_768 < 0:
                                                    revert with 0, 'SafeMath add failed'
                                                plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                    revert with 0, 'SafeMath add failed'
                                                plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                        if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                            revert with 0, 'SafeMath add failed'
                                        if plyr_[stor7[msg.sender]].field_1024 < 0:
                                            revert with 0, 'SafeMath add failed'
                                        if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                            plyr_[stor7[msg.sender]].field_512 = 0
                                            plyr_[stor7[msg.sender]].field_768 = 0
                                            plyr_[stor7[msg.sender]].field_1024 = 0
                                            call plyr_[stor7[msg.sender]].field_0 with:
                                               value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                        emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, 0);
                            else:
                                call communityAddr_ with:
                                   value round_[stor12].field_3072 + round_[stor12].field_1792 / 50 wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 <= 0:
                                    if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                        revert with 0, 'SafeMath add failed'
                                    round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                    rID_++
                                    round_[stor12 + 1].field_1024 = block.timestamp
                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                        revert with 0, 'SafeMath add failed'
                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                    round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                            revert with 0, 'SafeMath sub failed'
                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                revert with 0, 'SafeMath add failed'
                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                revert with 0, 'SafeMath add failed'
                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                    else:
                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                            revert with 0, 'SafeMath mul failed'
                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                            revert with 0, 'SafeMath sub failed'
                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                revert with 0, 'SafeMath add failed'
                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                revert with 0, 'SafeMath add failed'
                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                        revert with 0, 'SafeMath add failed'
                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                        revert with 0, 'SafeMath add failed'
                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                        plyr_[stor7[msg.sender]].field_512 = 0
                                        plyr_[stor7[msg.sender]].field_768 = 0
                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                        call plyr_[stor7[msg.sender]].field_0 with:
                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, 0);
                                else:
                                    if not nTFoundationAddr_:
                                        if 0 < -(round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100:
                                            revert with 0, 'SafeMath add failed'
                                        if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                            revert with 0, 'SafeMath add failed'
                                        round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                        rID_++
                                        round_[stor12 + 1].field_1024 = block.timestamp
                                        if block.timestamp + (6 * 3600) < block.timestamp:
                                            revert with 0, 'SafeMath add failed'
                                        round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                        round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50)
                                        if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                revert with 0, 'SafeMath sub failed'
                                            if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                    revert with 0, 'SafeMath add failed'
                                                plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                    revert with 0, 'SafeMath add failed'
                                                plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                        else:
                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                revert with 0, 'SafeMath mul failed'
                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                revert with 0, 'SafeMath sub failed'
                                            if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                if plyr_[stor7[msg.sender]].field_768 < 0:
                                                    revert with 0, 'SafeMath add failed'
                                                plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                    revert with 0, 'SafeMath add failed'
                                                plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                        if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                            revert with 0, 'SafeMath add failed'
                                        if plyr_[stor7[msg.sender]].field_1024 < 0:
                                            revert with 0, 'SafeMath add failed'
                                        if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                            plyr_[stor7[msg.sender]].field_512 = 0
                                            plyr_[stor7[msg.sender]].field_768 = 0
                                            plyr_[stor7[msg.sender]].field_1024 = 0
                                            call plyr_[stor7[msg.sender]].field_0 with:
                                               value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                        emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50), 0, 0);
                                    else:
                                        call nTFoundationAddr_ with:
                                           value (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                            revert with 0, 'SafeMath add failed'
                                        round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                        rID_++
                                        round_[stor12 + 1].field_1024 = block.timestamp
                                        if block.timestamp + (6 * 3600) < block.timestamp:
                                            revert with 0, 'SafeMath add failed'
                                        round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                        round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                        if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                revert with 0, 'SafeMath sub failed'
                                            if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                    revert with 0, 'SafeMath add failed'
                                                plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                    revert with 0, 'SafeMath add failed'
                                                plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                        else:
                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                revert with 0, 'SafeMath mul failed'
                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                revert with 0, 'SafeMath sub failed'
                                            if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                if plyr_[stor7[msg.sender]].field_768 < 0:
                                                    revert with 0, 'SafeMath add failed'
                                                plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                    revert with 0, 'SafeMath add failed'
                                                plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                        if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                            revert with 0, 'SafeMath add failed'
                                        if plyr_[stor7[msg.sender]].field_1024 < 0:
                                            revert with 0, 'SafeMath add failed'
                                        if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                            plyr_[stor7[msg.sender]].field_512 = 0
                                            plyr_[stor7[msg.sender]].field_768 = 0
                                            plyr_[stor7[msg.sender]].field_1024 = 0
                                            call plyr_[stor7[msg.sender]].field_0 with:
                                               value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                        emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, 0);
                    else:
                        if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / round_[stor12].field_3072 + round_[stor12].field_1792 != potSplit_[stor15[stor12].field_256].field_0:
                            revert with 0, 'SafeMath mul failed'
                        if not round_[stor12].field_3072 + round_[stor12].field_1792:
                            if (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100 > round_[stor12].field_3072 + round_[stor12].field_1792:
                                revert with 0, 'SafeMath sub failed'
                            if round_[stor12].field_3072 + round_[stor12].field_1792 / 50 > round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100):
                                revert with 0, 'SafeMath sub failed'
                            if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 > round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50):
                                revert with 0, 'SafeMath sub failed'
                            if 0 > round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100):
                                revert with 0, 'SafeMath sub failed'
                            if not (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
                                require round_[stor12].field_1280
                                if not 0 / round_[stor12].field_1280:
                                    if 0 > (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
                                        revert with 0, 'SafeMath sub failed'
                                    if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 <= 0:
                                        if plyr_[stor15[stor12].field_0].field_512 + ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) < (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100:
                                            revert with 0, 'SafeMath add failed'
                                        plyr_[stor15[stor12].field_0].field_512 += (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100
                                        if not communityAddr_:
                                            if 0 < -round_[stor12].field_3072 + round_[stor12].field_1792 / 50:
                                                revert with 0, 'SafeMath add failed'
                                            if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                            rID_++
                                            round_[stor12 + 1].field_1024 = block.timestamp
                                            if block.timestamp + (6 * 3600) < block.timestamp:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                            round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100)
                                            if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    revert with 0, 'SafeMath sub failed'
                                                if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                            else:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                    revert with 0, 'SafeMath mul failed'
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                    revert with 0, 'SafeMath sub failed'
                                                if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                            if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                plyr_[stor7[msg.sender]].field_512 = 0
                                                plyr_[stor7[msg.sender]].field_768 = 0
                                                plyr_[stor7[msg.sender]].field_1024 = 0
                                                call plyr_[stor7[msg.sender]].field_0 with:
                                                   value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                            emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                        else:
                                            call communityAddr_ with:
                                               value round_[stor12].field_3072 + round_[stor12].field_1792 / 50 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                            rID_++
                                            round_[stor12 + 1].field_1024 = block.timestamp
                                            if block.timestamp + (6 * 3600) < block.timestamp:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                            round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100)
                                            if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    revert with 0, 'SafeMath sub failed'
                                                if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                            else:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                    revert with 0, 'SafeMath mul failed'
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                    revert with 0, 'SafeMath sub failed'
                                                if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                            if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                plyr_[stor7[msg.sender]].field_512 = 0
                                                plyr_[stor7[msg.sender]].field_768 = 0
                                                plyr_[stor7[msg.sender]].field_1024 = 0
                                                call plyr_[stor7[msg.sender]].field_0 with:
                                                   value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                            emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                    else:
                                        if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 > (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
                                            revert with 0, 'SafeMath sub failed'
                                        if 0 < -(round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
                                            revert with 0, 'SafeMath add failed'
                                        if plyr_[stor15[stor12].field_0].field_512 + ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) < (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100:
                                            revert with 0, 'SafeMath add failed'
                                        plyr_[stor15[stor12].field_0].field_512 += (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100
                                        if not communityAddr_:
                                            if 0 < -round_[stor12].field_3072 + round_[stor12].field_1792 / 50:
                                                revert with 0, 'SafeMath add failed'
                                            if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                            rID_++
                                            round_[stor12 + 1].field_1024 = block.timestamp
                                            if block.timestamp + (6 * 3600) < block.timestamp:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                            round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100)
                                            if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    revert with 0, 'SafeMath sub failed'
                                                if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                            else:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                    revert with 0, 'SafeMath mul failed'
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                    revert with 0, 'SafeMath sub failed'
                                                if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                            if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                plyr_[stor7[msg.sender]].field_512 = 0
                                                plyr_[stor7[msg.sender]].field_768 = 0
                                                plyr_[stor7[msg.sender]].field_1024 = 0
                                                call plyr_[stor7[msg.sender]].field_0 with:
                                                   value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                            emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100), 0, 0);
                                        else:
                                            call communityAddr_ with:
                                               value round_[stor12].field_3072 + round_[stor12].field_1792 / 50 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                            rID_++
                                            round_[stor12 + 1].field_1024 = block.timestamp
                                            if block.timestamp + (6 * 3600) < block.timestamp:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                            round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50)
                                            if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    revert with 0, 'SafeMath sub failed'
                                                if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                            else:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                    revert with 0, 'SafeMath mul failed'
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                    revert with 0, 'SafeMath sub failed'
                                                if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                            if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                plyr_[stor7[msg.sender]].field_512 = 0
                                                plyr_[stor7[msg.sender]].field_768 = 0
                                                plyr_[stor7[msg.sender]].field_1024 = 0
                                                call plyr_[stor7[msg.sender]].field_0 with:
                                                   value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                            emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50), 0, 0);
                                else:
                                    if round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 0 / round_[stor12].field_1280 != round_[stor12].field_1280:
                                        revert with 0, 'SafeMath mul failed'
                                    if round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18 > (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
                                        revert with 0, 'SafeMath sub failed'
                                    if ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - (round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18) <= 0:
                                        if plyr_[stor15[stor12].field_0].field_512 + ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) < (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100:
                                            revert with 0, 'SafeMath add failed'
                                        plyr_[stor15[stor12].field_0].field_512 += (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100
                                        if not communityAddr_:
                                            if 0 < -round_[stor12].field_3072 + round_[stor12].field_1792 / 50:
                                                revert with 0, 'SafeMath add failed'
                                            if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                            rID_++
                                            round_[stor12 + 1].field_1024 = block.timestamp
                                            if block.timestamp + (6 * 3600) < block.timestamp:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                            round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100)
                                            if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    revert with 0, 'SafeMath sub failed'
                                                if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                            else:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                    revert with 0, 'SafeMath mul failed'
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                    revert with 0, 'SafeMath sub failed'
                                                if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                            if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                plyr_[stor7[msg.sender]].field_512 = 0
                                                plyr_[stor7[msg.sender]].field_768 = 0
                                                plyr_[stor7[msg.sender]].field_1024 = 0
                                                call plyr_[stor7[msg.sender]].field_0 with:
                                                   value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                            emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                        else:
                                            call communityAddr_ with:
                                               value round_[stor12].field_3072 + round_[stor12].field_1792 / 50 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                            rID_++
                                            round_[stor12 + 1].field_1024 = block.timestamp
                                            if block.timestamp + (6 * 3600) < block.timestamp:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                            round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100)
                                            if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    revert with 0, 'SafeMath sub failed'
                                                if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                            else:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                    revert with 0, 'SafeMath mul failed'
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                    revert with 0, 'SafeMath sub failed'
                                                if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                            if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                plyr_[stor7[msg.sender]].field_512 = 0
                                                plyr_[stor7[msg.sender]].field_768 = 0
                                                plyr_[stor7[msg.sender]].field_1024 = 0
                                                call plyr_[stor7[msg.sender]].field_0 with:
                                                   value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                            emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                    else:
                                        if ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - (round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18) > (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
                                            revert with 0, 'SafeMath sub failed'
                                        if -round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18 < -(round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
                                            revert with 0, 'SafeMath add failed'
                                        if plyr_[stor15[stor12].field_0].field_512 + ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) < (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100:
                                            revert with 0, 'SafeMath add failed'
                                        plyr_[stor15[stor12].field_0].field_512 += (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100
                                        if not communityAddr_:
                                            if 0 < -round_[stor12].field_3072 + round_[stor12].field_1792 / 50:
                                                revert with 0, 'SafeMath add failed'
                                            if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                            rID_++
                                            round_[stor12 + 1].field_1024 = block.timestamp
                                            if block.timestamp + (6 * 3600) < block.timestamp:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                            round_[stor12 + 1].field_3072 = -(round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100)
                                            if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    revert with 0, 'SafeMath sub failed'
                                                if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                            else:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                    revert with 0, 'SafeMath mul failed'
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                    revert with 0, 'SafeMath sub failed'
                                                if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                            if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                plyr_[stor7[msg.sender]].field_512 = 0
                                                plyr_[stor7[msg.sender]].field_768 = 0
                                                plyr_[stor7[msg.sender]].field_1024 = 0
                                                call plyr_[stor7[msg.sender]].field_0 with:
                                                   value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                            emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, -(round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100), 0, round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18);
                                        else:
                                            call communityAddr_ with:
                                               value round_[stor12].field_3072 + round_[stor12].field_1792 / 50 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                            rID_++
                                            round_[stor12 + 1].field_1024 = block.timestamp
                                            if block.timestamp + (6 * 3600) < block.timestamp:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                            round_[stor12 + 1].field_3072 = -(round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50)
                                            if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    revert with 0, 'SafeMath sub failed'
                                                if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                            else:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                    revert with 0, 'SafeMath mul failed'
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                    revert with 0, 'SafeMath sub failed'
                                                if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                            if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                plyr_[stor7[msg.sender]].field_512 = 0
                                                plyr_[stor7[msg.sender]].field_768 = 0
                                                plyr_[stor7[msg.sender]].field_1024 = 0
                                                call plyr_[stor7[msg.sender]].field_0 with:
                                                   value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                            emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, -(round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50), 0, round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18);
                            else:
                                if 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 != 10^18:
                                    revert with 0, 'SafeMath mul failed'
                                require round_[stor12].field_1280
                                if not 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                    if 0 > (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
                                        revert with 0, 'SafeMath sub failed'
                                    if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 <= 0:
                                        if plyr_[stor15[stor12].field_0].field_512 + ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) < (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100:
                                            revert with 0, 'SafeMath add failed'
                                        plyr_[stor15[stor12].field_0].field_512 += (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100
                                        if not communityAddr_:
                                            if 0 < -round_[stor12].field_3072 + round_[stor12].field_1792 / 50:
                                                revert with 0, 'SafeMath add failed'
                                            if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                            rID_++
                                            round_[stor12 + 1].field_1024 = block.timestamp
                                            if block.timestamp + (6 * 3600) < block.timestamp:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                            round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100)
                                            if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    revert with 0, 'SafeMath sub failed'
                                                if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                            else:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                    revert with 0, 'SafeMath mul failed'
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                    revert with 0, 'SafeMath sub failed'
                                                if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                            if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                plyr_[stor7[msg.sender]].field_512 = 0
                                                plyr_[stor7[msg.sender]].field_768 = 0
                                                plyr_[stor7[msg.sender]].field_1024 = 0
                                                call plyr_[stor7[msg.sender]].field_0 with:
                                                   value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                            emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                        else:
                                            call communityAddr_ with:
                                               value round_[stor12].field_3072 + round_[stor12].field_1792 / 50 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                            rID_++
                                            round_[stor12 + 1].field_1024 = block.timestamp
                                            if block.timestamp + (6 * 3600) < block.timestamp:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                            round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100)
                                            if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    revert with 0, 'SafeMath sub failed'
                                                if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                            else:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                    revert with 0, 'SafeMath mul failed'
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                    revert with 0, 'SafeMath sub failed'
                                                if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                            if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                plyr_[stor7[msg.sender]].field_512 = 0
                                                plyr_[stor7[msg.sender]].field_768 = 0
                                                plyr_[stor7[msg.sender]].field_1024 = 0
                                                call plyr_[stor7[msg.sender]].field_0 with:
                                                   value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                            emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                    else:
                                        if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 > (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
                                            revert with 0, 'SafeMath sub failed'
                                        if 0 < -(round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
                                            revert with 0, 'SafeMath add failed'
                                        if plyr_[stor15[stor12].field_0].field_512 + ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) < (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100:
                                            revert with 0, 'SafeMath add failed'
                                        plyr_[stor15[stor12].field_0].field_512 += (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100
                                        if not communityAddr_:
                                            if 0 < -round_[stor12].field_3072 + round_[stor12].field_1792 / 50:
                                                revert with 0, 'SafeMath add failed'
                                            if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                            rID_++
                                            round_[stor12 + 1].field_1024 = block.timestamp
                                            if block.timestamp + (6 * 3600) < block.timestamp:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                            round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100)
                                            if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    revert with 0, 'SafeMath sub failed'
                                                if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                            else:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                    revert with 0, 'SafeMath mul failed'
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                    revert with 0, 'SafeMath sub failed'
                                                if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                            if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                plyr_[stor7[msg.sender]].field_512 = 0
                                                plyr_[stor7[msg.sender]].field_768 = 0
                                                plyr_[stor7[msg.sender]].field_1024 = 0
                                                call plyr_[stor7[msg.sender]].field_0 with:
                                                   value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                            emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100), 0, 0);
                                        else:
                                            call communityAddr_ with:
                                               value round_[stor12].field_3072 + round_[stor12].field_1792 / 50 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                            rID_++
                                            round_[stor12 + 1].field_1024 = block.timestamp
                                            if block.timestamp + (6 * 3600) < block.timestamp:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                            round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50)
                                            if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    revert with 0, 'SafeMath sub failed'
                                                if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                            else:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                    revert with 0, 'SafeMath mul failed'
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                    revert with 0, 'SafeMath sub failed'
                                                if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                            if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                plyr_[stor7[msg.sender]].field_512 = 0
                                                plyr_[stor7[msg.sender]].field_768 = 0
                                                plyr_[stor7[msg.sender]].field_1024 = 0
                                                call plyr_[stor7[msg.sender]].field_0 with:
                                                   value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                            emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50), 0, 0);
                                else:
                                    if round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 != round_[stor12].field_1280:
                                        revert with 0, 'SafeMath mul failed'
                                    if round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18 > (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
                                        revert with 0, 'SafeMath sub failed'
                                    if ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - (round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18) <= 0:
                                        if plyr_[stor15[stor12].field_0].field_512 + ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) < (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100:
                                            revert with 0, 'SafeMath add failed'
                                        plyr_[stor15[stor12].field_0].field_512 += (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100
                                        if not communityAddr_:
                                            if 0 < -round_[stor12].field_3072 + round_[stor12].field_1792 / 50:
                                                revert with 0, 'SafeMath add failed'
                                            if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                            rID_++
                                            round_[stor12 + 1].field_1024 = block.timestamp
                                            if block.timestamp + (6 * 3600) < block.timestamp:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                            round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100)
                                            if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    revert with 0, 'SafeMath sub failed'
                                                if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                            else:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                    revert with 0, 'SafeMath mul failed'
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                    revert with 0, 'SafeMath sub failed'
                                                if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                            if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                plyr_[stor7[msg.sender]].field_512 = 0
                                                plyr_[stor7[msg.sender]].field_768 = 0
                                                plyr_[stor7[msg.sender]].field_1024 = 0
                                                call plyr_[stor7[msg.sender]].field_0 with:
                                                   value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                            emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                        else:
                                            call communityAddr_ with:
                                               value round_[stor12].field_3072 + round_[stor12].field_1792 / 50 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                            rID_++
                                            round_[stor12 + 1].field_1024 = block.timestamp
                                            if block.timestamp + (6 * 3600) < block.timestamp:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                            round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100)
                                            if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    revert with 0, 'SafeMath sub failed'
                                                if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                            else:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                    revert with 0, 'SafeMath mul failed'
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                    revert with 0, 'SafeMath sub failed'
                                                if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                            if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                plyr_[stor7[msg.sender]].field_512 = 0
                                                plyr_[stor7[msg.sender]].field_768 = 0
                                                plyr_[stor7[msg.sender]].field_1024 = 0
                                                call plyr_[stor7[msg.sender]].field_0 with:
                                                   value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                            emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                    else:
                                        if ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - (round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18) > (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
                                            revert with 0, 'SafeMath sub failed'
                                        if -round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18 < -(round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
                                            revert with 0, 'SafeMath add failed'
                                        if plyr_[stor15[stor12].field_0].field_512 + ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) < (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100:
                                            revert with 0, 'SafeMath add failed'
                                        plyr_[stor15[stor12].field_0].field_512 += (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100
                                        if not communityAddr_:
                                            if 0 < -round_[stor12].field_3072 + round_[stor12].field_1792 / 50:
                                                revert with 0, 'SafeMath add failed'
                                            if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                            rID_++
                                            round_[stor12 + 1].field_1024 = block.timestamp
                                            if block.timestamp + (6 * 3600) < block.timestamp:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                            round_[stor12 + 1].field_3072 = -(round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100)
                                            if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    revert with 0, 'SafeMath sub failed'
                                                if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                            else:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                    revert with 0, 'SafeMath mul failed'
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                    revert with 0, 'SafeMath sub failed'
                                                if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                            if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                plyr_[stor7[msg.sender]].field_512 = 0
                                                plyr_[stor7[msg.sender]].field_768 = 0
                                                plyr_[stor7[msg.sender]].field_1024 = 0
                                                call plyr_[stor7[msg.sender]].field_0 with:
                                                   value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                            emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, -(round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100), 0, round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18);
                                        else:
                                            call communityAddr_ with:
                                               value round_[stor12].field_3072 + round_[stor12].field_1792 / 50 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                            rID_++
                                            round_[stor12 + 1].field_1024 = block.timestamp
                                            if block.timestamp + (6 * 3600) < block.timestamp:
                                                revert with 0, 'SafeMath add failed'
                                            round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                            round_[stor12 + 1].field_3072 = -(round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50)
                                            if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    revert with 0, 'SafeMath sub failed'
                                                if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                            else:
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                    revert with 0, 'SafeMath mul failed'
                                                if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                    revert with 0, 'SafeMath sub failed'
                                                if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                    if plyr_[stor7[msg.sender]].field_768 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                            if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                revert with 0, 'SafeMath add failed'
                                            if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                plyr_[stor7[msg.sender]].field_512 = 0
                                                plyr_[stor7[msg.sender]].field_768 = 0
                                                plyr_[stor7[msg.sender]].field_1024 = 0
                                                call plyr_[stor7[msg.sender]].field_0 with:
                                                   value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                            emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, -(round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50), 0, round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18);
                        else:
                            if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / round_[stor12].field_3072 + round_[stor12].field_1792 != potSplit_[stor15[stor12].field_256].field_256:
                                revert with 0, 'SafeMath mul failed'
                            if (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100 > round_[stor12].field_3072 + round_[stor12].field_1792:
                                revert with 0, 'SafeMath sub failed'
                            if round_[stor12].field_3072 + round_[stor12].field_1792 / 50 > round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100):
                                revert with 0, 'SafeMath sub failed'
                            if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 > round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50):
                                revert with 0, 'SafeMath sub failed'
                            if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 > round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100):
                                revert with 0, 'SafeMath sub failed'
                            if not (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
                                require round_[stor12].field_1280
                                if not 0 / round_[stor12].field_1280:
                                    if 0 > (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
                                        revert with 0, 'SafeMath sub failed'
                                    if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 <= 0:
                                        if plyr_[stor15[stor12].field_0].field_512 + ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) < (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100:
                                            revert with 0, 'SafeMath add failed'
                                        plyr_[stor15[stor12].field_0].field_512 += (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100
                                        if not communityAddr_:
                                            if 0 < -round_[stor12].field_3072 + round_[stor12].field_1792 / 50:
                                                revert with 0, 'SafeMath add failed'
                                            if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 <= 0:
                                                if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                                rID_++
                                                round_[stor12 + 1].field_1024 = block.timestamp
                                                if block.timestamp + (6 * 3600) < block.timestamp:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                else:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                        revert with 0, 'SafeMath mul failed'
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                    plyr_[stor7[msg.sender]].field_512 = 0
                                                    plyr_[stor7[msg.sender]].field_768 = 0
                                                    plyr_[stor7[msg.sender]].field_1024 = 0
                                                    call plyr_[stor7[msg.sender]].field_0 with:
                                                       value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                            else:
                                                if not nTFoundationAddr_:
                                                    if 0 < -(round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100:
                                                        revert with 0, 'SafeMath add failed'
                                                    if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                                else:
                                                    call nTFoundationAddr_ with:
                                                       value (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                        else:
                                            call communityAddr_ with:
                                               value round_[stor12].field_3072 + round_[stor12].field_1792 / 50 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 <= 0:
                                                if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                                rID_++
                                                round_[stor12 + 1].field_1024 = block.timestamp
                                                if block.timestamp + (6 * 3600) < block.timestamp:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                else:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                        revert with 0, 'SafeMath mul failed'
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                    plyr_[stor7[msg.sender]].field_512 = 0
                                                    plyr_[stor7[msg.sender]].field_768 = 0
                                                    plyr_[stor7[msg.sender]].field_1024 = 0
                                                    call plyr_[stor7[msg.sender]].field_0 with:
                                                       value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                            else:
                                                if not nTFoundationAddr_:
                                                    if 0 < -(round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100:
                                                        revert with 0, 'SafeMath add failed'
                                                    if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                                else:
                                                    call nTFoundationAddr_ with:
                                                       value (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                    else:
                                        if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 > (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
                                            revert with 0, 'SafeMath sub failed'
                                        if 0 < -(round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
                                            revert with 0, 'SafeMath add failed'
                                        if plyr_[stor15[stor12].field_0].field_512 + ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) < (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100:
                                            revert with 0, 'SafeMath add failed'
                                        plyr_[stor15[stor12].field_0].field_512 += (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100
                                        if not communityAddr_:
                                            if 0 < -round_[stor12].field_3072 + round_[stor12].field_1792 / 50:
                                                revert with 0, 'SafeMath add failed'
                                            if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 <= 0:
                                                if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                                rID_++
                                                round_[stor12 + 1].field_1024 = block.timestamp
                                                if block.timestamp + (6 * 3600) < block.timestamp:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                else:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                        revert with 0, 'SafeMath mul failed'
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                    plyr_[stor7[msg.sender]].field_512 = 0
                                                    plyr_[stor7[msg.sender]].field_768 = 0
                                                    plyr_[stor7[msg.sender]].field_1024 = 0
                                                    call plyr_[stor7[msg.sender]].field_0 with:
                                                       value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, 0);
                                            else:
                                                if not nTFoundationAddr_:
                                                    if 0 < -(round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100:
                                                        revert with 0, 'SafeMath add failed'
                                                    if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100), 0, 0);
                                                else:
                                                    call nTFoundationAddr_ with:
                                                       value (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, 0);
                                        else:
                                            call communityAddr_ with:
                                               value round_[stor12].field_3072 + round_[stor12].field_1792 / 50 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 <= 0:
                                                if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                                rID_++
                                                round_[stor12 + 1].field_1024 = block.timestamp
                                                if block.timestamp + (6 * 3600) < block.timestamp:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                else:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                        revert with 0, 'SafeMath mul failed'
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                    plyr_[stor7[msg.sender]].field_512 = 0
                                                    plyr_[stor7[msg.sender]].field_768 = 0
                                                    plyr_[stor7[msg.sender]].field_1024 = 0
                                                    call plyr_[stor7[msg.sender]].field_0 with:
                                                       value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, 0);
                                            else:
                                                if not nTFoundationAddr_:
                                                    if 0 < -(round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100:
                                                        revert with 0, 'SafeMath add failed'
                                                    if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50), 0, 0);
                                                else:
                                                    call nTFoundationAddr_ with:
                                                       value (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, 0);
                                else:
                                    if round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 0 / round_[stor12].field_1280 != round_[stor12].field_1280:
                                        revert with 0, 'SafeMath mul failed'
                                    if round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18 > (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
                                        revert with 0, 'SafeMath sub failed'
                                    if ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - (round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18) <= 0:
                                        if plyr_[stor15[stor12].field_0].field_512 + ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) < (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100:
                                            revert with 0, 'SafeMath add failed'
                                        plyr_[stor15[stor12].field_0].field_512 += (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100
                                        if not communityAddr_:
                                            if 0 < -round_[stor12].field_3072 + round_[stor12].field_1792 / 50:
                                                revert with 0, 'SafeMath add failed'
                                            if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 <= 0:
                                                if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                                rID_++
                                                round_[stor12 + 1].field_1024 = block.timestamp
                                                if block.timestamp + (6 * 3600) < block.timestamp:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                else:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                        revert with 0, 'SafeMath mul failed'
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                    plyr_[stor7[msg.sender]].field_512 = 0
                                                    plyr_[stor7[msg.sender]].field_768 = 0
                                                    plyr_[stor7[msg.sender]].field_1024 = 0
                                                    call plyr_[stor7[msg.sender]].field_0 with:
                                                       value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                            else:
                                                if not nTFoundationAddr_:
                                                    if 0 < -(round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100:
                                                        revert with 0, 'SafeMath add failed'
                                                    if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                                else:
                                                    call nTFoundationAddr_ with:
                                                       value (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                        else:
                                            call communityAddr_ with:
                                               value round_[stor12].field_3072 + round_[stor12].field_1792 / 50 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 <= 0:
                                                if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                                rID_++
                                                round_[stor12 + 1].field_1024 = block.timestamp
                                                if block.timestamp + (6 * 3600) < block.timestamp:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                else:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                        revert with 0, 'SafeMath mul failed'
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                    plyr_[stor7[msg.sender]].field_512 = 0
                                                    plyr_[stor7[msg.sender]].field_768 = 0
                                                    plyr_[stor7[msg.sender]].field_1024 = 0
                                                    call plyr_[stor7[msg.sender]].field_0 with:
                                                       value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                            else:
                                                if not nTFoundationAddr_:
                                                    if 0 < -(round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100:
                                                        revert with 0, 'SafeMath add failed'
                                                    if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                                else:
                                                    call nTFoundationAddr_ with:
                                                       value (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                    else:
                                        if ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - (round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18) > (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
                                            revert with 0, 'SafeMath sub failed'
                                        if -round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18 < -(round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
                                            revert with 0, 'SafeMath add failed'
                                        if plyr_[stor15[stor12].field_0].field_512 + ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) < (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100:
                                            revert with 0, 'SafeMath add failed'
                                        plyr_[stor15[stor12].field_0].field_512 += (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100
                                        if not communityAddr_:
                                            if 0 < -round_[stor12].field_3072 + round_[stor12].field_1792 / 50:
                                                revert with 0, 'SafeMath add failed'
                                            if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 <= 0:
                                                if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                                rID_++
                                                round_[stor12 + 1].field_1024 = block.timestamp
                                                if block.timestamp + (6 * 3600) < block.timestamp:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                round_[stor12 + 1].field_3072 = -(round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                else:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                        revert with 0, 'SafeMath mul failed'
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                    plyr_[stor7[msg.sender]].field_512 = 0
                                                    plyr_[stor7[msg.sender]].field_768 = 0
                                                    plyr_[stor7[msg.sender]].field_1024 = 0
                                                    call plyr_[stor7[msg.sender]].field_0 with:
                                                       value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, -(round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18);
                                            else:
                                                if not nTFoundationAddr_:
                                                    if 0 < -(round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100:
                                                        revert with 0, 'SafeMath add failed'
                                                    if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = -(round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, -(round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100), 0, round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18);
                                                else:
                                                    call nTFoundationAddr_ with:
                                                       value (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = -(round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, -(round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18);
                                        else:
                                            call communityAddr_ with:
                                               value round_[stor12].field_3072 + round_[stor12].field_1792 / 50 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 <= 0:
                                                if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                                rID_++
                                                round_[stor12 + 1].field_1024 = block.timestamp
                                                if block.timestamp + (6 * 3600) < block.timestamp:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                round_[stor12 + 1].field_3072 = -(round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                else:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                        revert with 0, 'SafeMath mul failed'
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                    plyr_[stor7[msg.sender]].field_512 = 0
                                                    plyr_[stor7[msg.sender]].field_768 = 0
                                                    plyr_[stor7[msg.sender]].field_1024 = 0
                                                    call plyr_[stor7[msg.sender]].field_0 with:
                                                       value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, -(round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18);
                                            else:
                                                if not nTFoundationAddr_:
                                                    if 0 < -(round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100:
                                                        revert with 0, 'SafeMath add failed'
                                                    if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = -(round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, -(round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50), 0, round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18);
                                                else:
                                                    call nTFoundationAddr_ with:
                                                       value (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if round_[stor12].field_2048 + (0 / round_[stor12].field_1280) < 0 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 0 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = -(round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, -(round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, round_[stor12].field_1280 * 0 / round_[stor12].field_1280 / 10^18);
                            else:
                                if 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 != 10^18:
                                    revert with 0, 'SafeMath mul failed'
                                require round_[stor12].field_1280
                                if not 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                    if 0 > (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
                                        revert with 0, 'SafeMath sub failed'
                                    if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 <= 0:
                                        if plyr_[stor15[stor12].field_0].field_512 + ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) < (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100:
                                            revert with 0, 'SafeMath add failed'
                                        plyr_[stor15[stor12].field_0].field_512 += (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100
                                        if not communityAddr_:
                                            if 0 < -round_[stor12].field_3072 + round_[stor12].field_1792 / 50:
                                                revert with 0, 'SafeMath add failed'
                                            if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 <= 0:
                                                if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                                rID_++
                                                round_[stor12 + 1].field_1024 = block.timestamp
                                                if block.timestamp + (6 * 3600) < block.timestamp:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                else:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                        revert with 0, 'SafeMath mul failed'
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                    plyr_[stor7[msg.sender]].field_512 = 0
                                                    plyr_[stor7[msg.sender]].field_768 = 0
                                                    plyr_[stor7[msg.sender]].field_1024 = 0
                                                    call plyr_[stor7[msg.sender]].field_0 with:
                                                       value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                            else:
                                                if not nTFoundationAddr_:
                                                    if 0 < -(round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100:
                                                        revert with 0, 'SafeMath add failed'
                                                    if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                                else:
                                                    call nTFoundationAddr_ with:
                                                       value (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                        else:
                                            call communityAddr_ with:
                                               value round_[stor12].field_3072 + round_[stor12].field_1792 / 50 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 <= 0:
                                                if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                                rID_++
                                                round_[stor12 + 1].field_1024 = block.timestamp
                                                if block.timestamp + (6 * 3600) < block.timestamp:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                else:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                        revert with 0, 'SafeMath mul failed'
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                    plyr_[stor7[msg.sender]].field_512 = 0
                                                    plyr_[stor7[msg.sender]].field_768 = 0
                                                    plyr_[stor7[msg.sender]].field_1024 = 0
                                                    call plyr_[stor7[msg.sender]].field_0 with:
                                                       value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                            else:
                                                if not nTFoundationAddr_:
                                                    if 0 < -(round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100:
                                                        revert with 0, 'SafeMath add failed'
                                                    if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                                else:
                                                    call nTFoundationAddr_ with:
                                                       value (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                    else:
                                        if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 > (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
                                            revert with 0, 'SafeMath sub failed'
                                        if 0 < -(round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
                                            revert with 0, 'SafeMath add failed'
                                        if plyr_[stor15[stor12].field_0].field_512 + ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) < (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100:
                                            revert with 0, 'SafeMath add failed'
                                        plyr_[stor15[stor12].field_0].field_512 += (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100
                                        if not communityAddr_:
                                            if 0 < -round_[stor12].field_3072 + round_[stor12].field_1792 / 50:
                                                revert with 0, 'SafeMath add failed'
                                            if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 <= 0:
                                                if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                                rID_++
                                                round_[stor12 + 1].field_1024 = block.timestamp
                                                if block.timestamp + (6 * 3600) < block.timestamp:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                else:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                        revert with 0, 'SafeMath mul failed'
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                    plyr_[stor7[msg.sender]].field_512 = 0
                                                    plyr_[stor7[msg.sender]].field_768 = 0
                                                    plyr_[stor7[msg.sender]].field_1024 = 0
                                                    call plyr_[stor7[msg.sender]].field_0 with:
                                                       value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, 0);
                                            else:
                                                if not nTFoundationAddr_:
                                                    if 0 < -(round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100:
                                                        revert with 0, 'SafeMath add failed'
                                                    if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100), 0, 0);
                                                else:
                                                    call nTFoundationAddr_ with:
                                                       value (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, 0);
                                        else:
                                            call communityAddr_ with:
                                               value round_[stor12].field_3072 + round_[stor12].field_1792 / 50 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 <= 0:
                                                if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                                rID_++
                                                round_[stor12 + 1].field_1024 = block.timestamp
                                                if block.timestamp + (6 * 3600) < block.timestamp:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                else:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                        revert with 0, 'SafeMath mul failed'
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                    plyr_[stor7[msg.sender]].field_512 = 0
                                                    plyr_[stor7[msg.sender]].field_768 = 0
                                                    plyr_[stor7[msg.sender]].field_1024 = 0
                                                    call plyr_[stor7[msg.sender]].field_0 with:
                                                       value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, 0);
                                            else:
                                                if not nTFoundationAddr_:
                                                    if 0 < -(round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100:
                                                        revert with 0, 'SafeMath add failed'
                                                    if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50), 0, 0);
                                                else:
                                                    call nTFoundationAddr_ with:
                                                       value (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, 0);
                                else:
                                    if round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 != round_[stor12].field_1280:
                                        revert with 0, 'SafeMath mul failed'
                                    if round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18 > (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
                                        revert with 0, 'SafeMath sub failed'
                                    if ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - (round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18) <= 0:
                                        if plyr_[stor15[stor12].field_0].field_512 + ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) < (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100:
                                            revert with 0, 'SafeMath add failed'
                                        plyr_[stor15[stor12].field_0].field_512 += (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100
                                        if not communityAddr_:
                                            if 0 < -round_[stor12].field_3072 + round_[stor12].field_1792 / 50:
                                                revert with 0, 'SafeMath add failed'
                                            if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 <= 0:
                                                if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                                rID_++
                                                round_[stor12 + 1].field_1024 = block.timestamp
                                                if block.timestamp + (6 * 3600) < block.timestamp:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                else:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                        revert with 0, 'SafeMath mul failed'
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                    plyr_[stor7[msg.sender]].field_512 = 0
                                                    plyr_[stor7[msg.sender]].field_768 = 0
                                                    plyr_[stor7[msg.sender]].field_1024 = 0
                                                    call plyr_[stor7[msg.sender]].field_0 with:
                                                       value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                            else:
                                                if not nTFoundationAddr_:
                                                    if 0 < -(round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100:
                                                        revert with 0, 'SafeMath add failed'
                                                    if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                                else:
                                                    call nTFoundationAddr_ with:
                                                       value (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                        else:
                                            call communityAddr_ with:
                                               value round_[stor12].field_3072 + round_[stor12].field_1792 / 50 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 <= 0:
                                                if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                                rID_++
                                                round_[stor12 + 1].field_1024 = block.timestamp
                                                if block.timestamp + (6 * 3600) < block.timestamp:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                else:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                        revert with 0, 'SafeMath mul failed'
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                    plyr_[stor7[msg.sender]].field_512 = 0
                                                    plyr_[stor7[msg.sender]].field_768 = 0
                                                    plyr_[stor7[msg.sender]].field_1024 = 0
                                                    call plyr_[stor7[msg.sender]].field_0 with:
                                                       value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                            else:
                                                if not nTFoundationAddr_:
                                                    if 0 < -(round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100:
                                                        revert with 0, 'SafeMath add failed'
                                                    if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                                else:
                                                    call nTFoundationAddr_ with:
                                                       value (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100);
                                    else:
                                        if ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100) - (round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18) > (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
                                            revert with 0, 'SafeMath sub failed'
                                        if -round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18 < -(round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100:
                                            revert with 0, 'SafeMath add failed'
                                        if plyr_[stor15[stor12].field_0].field_512 + ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) < (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100:
                                            revert with 0, 'SafeMath add failed'
                                        plyr_[stor15[stor12].field_0].field_512 += (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100
                                        if not communityAddr_:
                                            if 0 < -round_[stor12].field_3072 + round_[stor12].field_1792 / 50:
                                                revert with 0, 'SafeMath add failed'
                                            if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 <= 0:
                                                if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                                rID_++
                                                round_[stor12 + 1].field_1024 = block.timestamp
                                                if block.timestamp + (6 * 3600) < block.timestamp:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                round_[stor12 + 1].field_3072 = -(round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                else:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                        revert with 0, 'SafeMath mul failed'
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                    plyr_[stor7[msg.sender]].field_512 = 0
                                                    plyr_[stor7[msg.sender]].field_768 = 0
                                                    plyr_[stor7[msg.sender]].field_1024 = 0
                                                    call plyr_[stor7[msg.sender]].field_0 with:
                                                       value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, -(round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18);
                                            else:
                                                if not nTFoundationAddr_:
                                                    if 0 < -(round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100:
                                                        revert with 0, 'SafeMath add failed'
                                                    if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = -(round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, -(round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100), 0, round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18);
                                                else:
                                                    call nTFoundationAddr_ with:
                                                       value (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = -(round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, -(round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18);
                                        else:
                                            call communityAddr_ with:
                                               value round_[stor12].field_3072 + round_[stor12].field_1792 / 50 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 <= 0:
                                                if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                                rID_++
                                                round_[stor12 + 1].field_1024 = block.timestamp
                                                if block.timestamp + (6 * 3600) < block.timestamp:
                                                    revert with 0, 'SafeMath add failed'
                                                round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                round_[stor12 + 1].field_3072 = -(round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                else:
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                        revert with 0, 'SafeMath mul failed'
                                                    if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                        revert with 0, 'SafeMath sub failed'
                                                    if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                        if plyr_[stor7[msg.sender]].field_768 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                            revert with 0, 'SafeMath add failed'
                                                        plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                    revert with 0, 'SafeMath add failed'
                                                if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                    plyr_[stor7[msg.sender]].field_512 = 0
                                                    plyr_[stor7[msg.sender]].field_768 = 0
                                                    plyr_[stor7[msg.sender]].field_1024 = 0
                                                    call plyr_[stor7[msg.sender]].field_0 with:
                                                       value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, -(round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18);
                                            else:
                                                if not nTFoundationAddr_:
                                                    if 0 < -(round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100:
                                                        revert with 0, 'SafeMath add failed'
                                                    if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = -(round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, -(round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50), 0, round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18);
                                                else:
                                                    call nTFoundationAddr_ with:
                                                       value (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100 wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if round_[stor12].field_2048 + (10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280) < 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12].field_2048 += 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280
                                                    rID_++
                                                    round_[stor12 + 1].field_1024 = block.timestamp
                                                    if block.timestamp + (6 * 3600) < block.timestamp:
                                                        revert with 0, 'SafeMath add failed'
                                                    round_[stor12 + 1].field_512 = block.timestamp + (6 * 3600)
                                                    round_[stor12 + 1].field_3072 = -(round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100)
                                                    if not round_[stor9[stor7[msg.sender]].field_1280].field_2048:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 -= plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if 0 < -plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = 0
                                                    else:
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / round_[stor9[stor7[msg.sender]].field_1280].field_2048 != plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256:
                                                            revert with 0, 'SafeMath mul failed'
                                                        if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18:
                                                            revert with 0, 'SafeMath sub failed'
                                                        if (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 > 0:
                                                            if plyr_[stor7[msg.sender]].field_768 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyr_[stor7[msg.sender]].field_768 = plyr_[stor7[msg.sender]].field_768 + (plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18) - plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512
                                                            if plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 < 0:
                                                                revert with 0, 'SafeMath add failed'
                                                            plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_512 = plyrRnds_[stor7[msg.sender]][stor9[stor7[msg.sender]].field_1280].field_256 * round_[stor9[stor7[msg.sender]].field_1280].field_2048 / 10^18
                                                    if plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 < plyr_[stor7[msg.sender]].field_512:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 < 0:
                                                        revert with 0, 'SafeMath add failed'
                                                    if plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 > 0:
                                                        plyr_[stor7[msg.sender]].field_512 = 0
                                                        plyr_[stor7[msg.sender]].field_768 = 0
                                                        plyr_[stor7[msg.sender]].field_1024 = 0
                                                        call plyr_[stor7[msg.sender]].field_0 with:
                                                           value plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                    emit onWithdrawAndDistribute(msg.sender, plyr_[stor7[msg.sender]].field_256, plyr_[stor7[msg.sender]].field_1024 + plyr_[stor7[msg.sender]].field_768 + plyr_[stor7[msg.sender]].field_512, (10^6 * round_[stor12].field_512) + (10^18 * block.timestamp), (100000000 * 10^18 * round_[stor12].field_0) + (10^17 * round_[stor12].field_256) + pIDxAddr_[msg.sender], plyr_[stor15[stor12].field_0].field_0, plyr_[stor15[stor12].field_0].field_256, (48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100, -(round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18) + round_[stor12].field_3072 + round_[stor12].field_1792 - ((48 * round_[stor12].field_3072) + (48 * round_[stor12].field_1792) / 100) - (round_[stor12].field_3072 + round_[stor12].field_1792 / 50) - ((round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_256) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_256) / 100), 0, round_[stor12].field_1280 * 10^18 * (round_[stor12].field_3072 * potSplit_[stor15[stor12].field_256].field_0) + (round_[stor12].field_1792 * potSplit_[stor15[stor12].field_256].field_0) / 100 / round_[stor12].field_1280 / 10^18);
}



}
