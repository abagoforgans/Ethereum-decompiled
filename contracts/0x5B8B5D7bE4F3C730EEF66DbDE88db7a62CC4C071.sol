contract main {


// =======================  Init code  ======================


address stor5;
address stor6;
address stor7;
mapping of uint8 stor22;

function _fallback() {
    stor7 = msg.sender
    stor6 = msg.sender
    stor5 = msg.sender
    stor22[address(msg.sender)] = 1
    return code.data[110 len 14471]
}



// =====================  Runtime code  =====================


#
#  - sub_1f541ba4(?)
#
const decimals = 6


uint256 totalSupply;
array of uint256 name;
array of uint256 symbol;
array of uint256 message;
uint256 sub_8f41bb58;
address stor5;
address stor6;
uint8 stor7; offset 160
uint128 stor7; offset 160
address stor7;
mapping of uint256 balanceOf;
mapping of uint256 sub_064d5a8b;
mapping of address sub_c1198ea1;
mapping of address stor11;
mapping of uint256 stor12;
mapping of uint256 stor13;
mapping of uint256 stor14;
mapping of address stor15;
mapping of address stor16;
mapping of address stor17;
mapping of address stor18;
mapping of uint256 stor19;
mapping of uint256 stor20;
mapping of uint256 stor21;
mapping of uint8 stor22;
mapping of uint8 stor23;
mapping of uint8 stor24;
mapping of uint8 stor25;
mapping of struct stor27;
uint256 stor28;
uint256 stor29;
uint256 stor30;
uint256 stor31;
uint256 stor32;
uint256 stor33;
uint256 stor34;
uint256 stor35;
uint32 stor36;
uint256 stor36; offset 32
uint256 stor36;
mapping of address stor99;

function sub_064d5a8b(?) {
    return sub_064d5a8b[arg1]
}

function name() {
    return name[0 len name.length]
}

function totalSupply() {
    return totalSupply
}

function balanceOf(address arg1) {
    return balanceOf[arg1]
}

function sub_8f41bb58(?) {
    return sub_8f41bb58
}

function symbol() {
    return symbol[0 len symbol.length]
}

function sub_c1198ea1(?) {
    return sub_c1198ea1[arg1]
}

function message() {
    return message[0 len message.length]
}

function sub_455d4d6e(?) {
    require stor5 == msg.sender
    if arg1:
        stor5 = arg1
    else:
        if arg2:
            stor6 = arg2
            stor22[address(arg2)] = 1
        else:
            if not arg3:
                selfdestruct(stor5)
            address(stor7.field_0) = arg3
            stor22[address(arg3)] = 1
}

function sub_e44cfefb(?) {
    if arg1 == stor13[address(msg.sender)]:
        stor13[address(msg.sender)] = arg2
}

function sub_9d0398a1(?) {
    if stor11[address(arg1)] != msg.sender:
        require stor6 == msg.sender
    stor25[address(arg1)] = uint8(arg2)
}

function sub_88d8de4c(?) {
    require not stor22[address(msg.sender)]
    require balanceOf[address(msg.sender)] > stor35
    balanceOf[address(msg.sender)] -= stor35
    stor12[stor6] += stor35
    stor22[address(msg.sender)] = 1
}

function sub_9865932c(?) {
    require stor6 == msg.sender
    if arg1.length:
        name[] = Array(len=arg1.length, data=arg1[all])
    if arg2.length:
        symbol[] = Array(len=arg2.length, data=arg2[all])
    message[] = Array(len=arg3.length, data=arg3[all])
}

function sub_b09f1c93(?) {
    if arg1:
        sub_c1198ea1[address(msg.sender)] = stor11[address(msg.sender)]
    else:
        if arg2:
            sub_c1198ea1[address(msg.sender)] = stor16[address(msg.sender)]
        else:
            if arg3:
                sub_c1198ea1[address(msg.sender)] = stor17[address(msg.sender)]
            else:
                if not arg4:
                    sub_c1198ea1[address(msg.sender)] = 0
                else:
                    sub_c1198ea1[address(msg.sender)] = stor18[address(msg.sender)]
}

function sub_7ee37c7b(?) {
    require stor6 == msg.sender
    require arg8 + arg7 + arg6 + arg5 + arg4 <= 1000
    stor30 = arg4
    stor31 = arg5
    stor32 = arg6
    stor33 = arg7
    stor34 = arg8
    stor29 = -arg8 + -arg7 + -arg6 + -arg5 + -arg4 + 1000
    uint32(stor36.field_0) = arg2
    Mask(224, 0, stor36.field_32) = 0
    stor35 = arg1
    stor28 = arg3
    Mask(96, 0, stor7.field_160) = Mask(96, 0, arg9)
    emit 0xf630f87f: arg1, arg1 / 100, uint256(stor36.field_0), stor28, stor30 / 5, stor31 / 5, stor32 / 5, stor33 / 5, stor34 / 5
}

function sub_589f0336(?) {
    mem[256] = uint256(stor27[address(msg.sender)].field_0)
    idx = 256
    s = 0
    while stor27[address(msg.sender)].length + 256 > idx + 32:
        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
        idx = idx + 32
        s = s + 1
        continue 
    emit 0xd4c889c8: Array(len=stor27[address(msg.sender)].length, data=mem[256 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), bool(stor22[address(msg.sender)]), bool(uint8(stor24[address(msg.sender)])), bool(uint8(stor23[address(msg.sender)]))
}

function sub_8706ae3e(?) {
    require not stor25[address(msg.sender)]
    uint8(stor24[address(msg.sender)]) = uint8(arg2)
    uint8(stor23[address(msg.sender)]) = uint8(arg3)
    if arg4 <= 450:
        stor14[address(msg.sender)] = arg4
    else:
        stor14[address(msg.sender)] = 450
    if not arg1:
        if arg5:
            stor11[address(msg.sender)] = 0
            uint8(stor23[address(msg.sender)]) = 0
            uint8(stor24[address(msg.sender)]) = 0
    else:
        if arg1 != msg.sender:
            stor11[address(msg.sender)] = arg1
        if arg5:
            stor11[address(msg.sender)] = 0
            uint8(stor23[address(msg.sender)]) = 0
            uint8(stor24[address(msg.sender)]) = 0
}

function sub_135c5256(?) {
    require not stor25[address(msg.sender)]
    if stor11[address(msg.sender)] == arg1:
        uint256(stor24[address(msg.sender)]) = not uint8(stor24[address(msg.sender)]) or Mask(248, 8, uint256(stor24[address(msg.sender)]))
    else:
        if not arg1:
            uint8(stor24[address(msg.sender)]) = 0
        else:
            if arg1 == msg.sender:
                uint8(stor24[address(msg.sender)]) = 0
            else:
                uint8(stor24[address(msg.sender)]) = 1
                stor11[address(msg.sender)] = arg1
    require balanceOf[address(msg.sender)] > stor35 / 100
    if not stor22[address(msg.sender)]:
        balanceOf[address(msg.sender)] -= stor35 / 100
        totalSupply -= stor35 / 100
}

function sub_090630a1(?) {
    if arg1:
        sub_064d5a8b[address(msg.sender)] = stor12[address(msg.sender)]
    else:
        if arg3:
            sub_064d5a8b[address(msg.sender)] = stor14[address(msg.sender)]
        else:
            if arg4:
                sub_064d5a8b[address(msg.sender)] = stor19[address(msg.sender)]
            else:
                if arg5:
                    sub_064d5a8b[address(msg.sender)] = stor20[address(msg.sender)]
                else:
                    if arg6:
                        sub_064d5a8b[address(msg.sender)] = stor21[address(msg.sender)]
                    else:
                        if not arg2:
                            sub_064d5a8b[address(msg.sender)] = 0
                        else:
                            sub_064d5a8b[address(msg.sender)] = stor13[address(msg.sender)]
}

function sub_fac0256c(?) {
    if stor19[address(msg.sender)] > uint256(stor36.field_0):
        if arg1:
            if stor16[address(msg.sender)] != arg1:
                stor19[address(msg.sender)] -= uint256(stor36.field_0)
                stor16[address(msg.sender)] = arg1
    if stor20[address(msg.sender)] > uint256(stor36.field_0):
        if arg2:
            if stor17[address(msg.sender)] != arg2:
                stor20[address(msg.sender)] -= uint256(stor36.field_0)
                stor17[address(msg.sender)] = arg2
    if stor21[address(msg.sender)] > uint256(stor36.field_0):
        if arg3:
            if stor18[address(msg.sender)] != arg3:
                stor21[address(msg.sender)] -= uint256(stor36.field_0)
                stor18[address(msg.sender)] = arg3
    require balanceOf[address(msg.sender)] > stor35 / 100
    if not stor22[address(msg.sender)]:
        balanceOf[address(msg.sender)] -= stor35 / 100
        totalSupply -= stor35 / 100
    mem[352] = uint256(stor27[address(msg.sender)].field_0)
    idx = 352
    s = 0
    while stor27[address(msg.sender)].length + 352 > idx + 32:
        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
        idx = idx + 32
        s = s + 1
        continue 
    emit 0xed0719f1: Array(len=stor27[address(msg.sender)].length, data=mem[352 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), stor16[address(msg.sender)], stor17[address(msg.sender)], stor18[address(msg.sender)], stor19[address(msg.sender)], stor20[address(msg.sender)], stor21[address(msg.sender)]
}

function sub_9b754c5f(?) {
    mem[128 len arg2.length] = arg2[all]
    mem[ceil32(arg2.length) + 128] = 0
    require stor6 == msg.sender
    mem[ceil32(arg2.length) + 160 len floor32(arg2.length)] = call.data[arg2 + 36 len floor32(arg2.length)]
    mem[ceil32(arg2.length) + floor32(arg2.length) + -(arg2.length % 32) + 192 len arg2.length % 32] = mem[-(arg2.length % 32) + floor32(arg2.length) + 160 len arg2.length % 32]
    mem[arg2.length + ceil32(arg2.length) + 160] = 26
    if stor[mem[ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
        stor22[address(arg1)] = 1
        stor18[address(arg1)] = arg1
        stor17[address(arg1)] = arg1
        stor16[address(arg1)] = arg1
        stor15[address(arg1)] = arg1
        if not arg3:
            stor15[address(arg1)] = stor6
    else:
        if arg2.length:
            mem[ceil32(arg2.length) + 160 len floor32(arg2.length)] = call.data[arg2 + 36 len floor32(arg2.length)]
            mem[ceil32(arg2.length) + floor32(arg2.length) + -(arg2.length % 32) + 192 len arg2.length % 32] = mem[-(arg2.length % 32) + floor32(arg2.length) + 160 len arg2.length % 32]
            mem[arg2.length + ceil32(arg2.length) + 160] = 26
            stor[mem[ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] = msg.sender
        stor22[address(arg1)] = 1
        stor18[address(arg1)] = arg1
        stor17[address(arg1)] = arg1
        stor16[address(arg1)] = arg1
        stor15[address(arg1)] = arg1
        if not arg3:
            stor15[address(arg1)] = stor6
    stor21[address(arg1)] = arg3 * uint256(stor36.field_0)
    stor20[address(arg1)] = arg3 * uint256(stor36.field_0)
    stor19[address(arg1)] = arg3 * uint256(stor36.field_0)
}

function sub_a6441514(?) {
    require not stor25[address(msg.sender)]
    uint256(stor23[address(msg.sender)]) = not uint8(stor23[address(msg.sender)]) or Mask(248, 8, uint256(stor23[address(msg.sender)]))
    mem[224] = uint256(stor27[address(msg.sender)].field_0)
    idx = 224
    s = 0
    while stor27[address(msg.sender)].length + 224 > idx + 32:
        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
        idx = idx + 32
        s = s + 1
        continue 
    mem[stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32) + 224] = stor27[stor11[address(msg.sender)]].length
    mem[stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32) + 256] = uint256(stor27[stor11[address(msg.sender)]].field_0)
    idx = stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32) + 256
    s = 0
    while stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32) + stor27[stor11[address(msg.sender)]].length + 256 > idx + 32:
        mem[idx + 32] = uint256(stor27[stor11[address(msg.sender)]][s].field_256)
        idx = idx + 32
        s = s + 1
        continue 
    emit 0xf4bf15f5: Array(len=stor27[address(msg.sender)].length, data=mem[224 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32) + stor27[stor11[address(msg.sender)]].length + (floor32(stor27[stor11[address(msg.sender)]].length - 1) + -stor27[stor11[address(msg.sender)]].length + 32 % 32) + 32]), stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32) + 128, bool(uint8(not uint8(stor23[address(msg.sender)])))
    require balanceOf[address(msg.sender)] > stor35 / 100
    if not stor22[address(msg.sender)]:
        balanceOf[address(msg.sender)] -= stor35 / 100
        totalSupply -= stor35 / 100
}

function sub_2212142b(?) {
    mem[128 len arg1.length] = arg1[all]
    mem[ceil32(arg1.length) + 128 len floor32(arg1.length)] = call.data[arg1 + 36 len floor32(arg1.length)]
    mem[ceil32(arg1.length) + floor32(arg1.length) + -(arg1.length % 32) + 160 len arg1.length % 32] = mem[-(arg1.length % 32) + floor32(arg1.length) + 160 len arg1.length % 32]
    mem[arg1.length + ceil32(arg1.length) + 128] = 26
    if stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]] != msg.sender:
        if not stor15[address(msg.sender)]:
            if stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]]:
                stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]]
                stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]]]
                stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]]]
                stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]]]
                stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]]]
                uint8(stor23[address(msg.sender)]) = 0
                stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]]] / 10
                stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]]] / 10
                stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]]] / 10
}

function sub_8eeb8a73(?) {
    mem[128 len arg1.length] = arg1[all]
    mem[ceil32(arg1.length) + 128] = arg2.length
    mem[ceil32(arg1.length) + 160 len arg2.length] = arg2[all]
    mem[ceil32(arg1.length) + ceil32(arg2.length) + 160] = 0
    require stor22[address(msg.sender)]
    mem[ceil32(arg1.length) + ceil32(arg2.length) + 192 len floor32(arg1.length)] = call.data[arg1 + 36 len floor32(arg1.length)]
    mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg1.length) + -(arg1.length % 32) + 224 len arg1.length % 32] = mem[-(arg1.length % 32) + floor32(arg1.length) + 160 len arg1.length % 32]
    mem[arg1.length + ceil32(arg1.length) + ceil32(arg2.length) + 192] = 26
    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg1.length) + 192 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]] != msg.sender:
        mem[ceil32(arg1.length) + ceil32(arg2.length) + 192 len floor32(arg2.length)] = call.data[arg2 + 36 len floor32(arg2.length)]
        mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + -(arg2.length % 32) + 224 len arg2.length % 32] = mem[ceil32(arg1.length) + -(arg2.length % 32) + floor32(arg2.length) + 192 len arg2.length % 32]
        mem[arg2.length + ceil32(arg1.length) + ceil32(arg2.length) + 192] = 26
        if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 192 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
            if arg2.length:
                mem[ceil32(arg1.length) + ceil32(arg2.length) + 192 len floor32(arg2.length)] = call.data[arg2 + 36 len floor32(arg2.length)]
                mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + -(arg2.length % 32) + 224 len arg2.length % 32] = mem[ceil32(arg1.length) + -(arg2.length % 32) + floor32(arg2.length) + 192 len arg2.length % 32]
                mem[arg2.length + ceil32(arg1.length) + ceil32(arg2.length) + 192] = 26
                stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 192 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] = msg.sender
                uint256(stor27[address(msg.sender)][].field_0) = Array(len=arg2.length, data=arg2[all])
    else:
        mem[ceil32(arg1.length) + ceil32(arg2.length) + 192 len floor32(arg1.length)] = call.data[arg1 + 36 len floor32(arg1.length)]
        mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg1.length) + -(arg1.length % 32) + 224 len arg1.length % 32] = mem[-(arg1.length % 32) + floor32(arg1.length) + 160 len arg1.length % 32]
        mem[arg1.length + ceil32(arg1.length) + ceil32(arg2.length) + 192] = 26
        mem[ceil32(arg1.length) + ceil32(arg2.length) + 192] = 0
        bool(stor27[address(msg.sender)].field_0) = 0
        uint255(stor27[address(msg.sender)].field_1) = 0
        Mask(248, 0, stor27[address(msg.sender)].field_8) = mem[ceil32(arg1.length) + ceil32(arg2.length) + 224 len 31]
        idx = 0
        while stor27[address(msg.sender)].length + 31 / 32 > idx:
            uint256(stor27[address(msg.sender)][idx].field_0) = 0
            idx = idx + 1
            continue 
        mem[ceil32(arg1.length) + ceil32(arg2.length) + 224 len floor32(arg2.length)] = call.data[arg2 + 36 len floor32(arg2.length)]
        mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + -(arg2.length % 32) + 256 len arg2.length % 32] = mem[ceil32(arg1.length) + -(arg2.length % 32) + floor32(arg2.length) + 192 len arg2.length % 32]
        mem[arg2.length + ceil32(arg1.length) + ceil32(arg2.length) + 224] = 26
        if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 224 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
            if arg2.length:
                mem[ceil32(arg1.length) + ceil32(arg2.length) + 224 len floor32(arg2.length)] = call.data[arg2 + 36 len floor32(arg2.length)]
                mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + -(arg2.length % 32) + 256 len arg2.length % 32] = mem[ceil32(arg1.length) + -(arg2.length % 32) + floor32(arg2.length) + 192 len arg2.length % 32]
                mem[arg2.length + ceil32(arg1.length) + ceil32(arg2.length) + 224] = 26
                stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 224 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] = msg.sender
                uint256(stor27[address(msg.sender)][].field_0) = Array(len=arg2.length, data=arg2[all])
}

function _fallback() payable {
    if msg.value <= 10^16:
        require stor6 == msg.sender
    require not uint8(stor7.field_160)
    balanceOf[address(msg.sender)] += 1000 * msg.value / 10^16
    balanceOf[address(stor7.field_0)] += 250 * msg.value / 10^16 / 1000 * stor29
    stor12[address(msg.sender)] += 250 * msg.value / 10^16 / 1000 * stor34
    if not stor15[address(msg.sender)]:
        if not stor16[address(msg.sender)]:
            if not stor17[address(msg.sender)]:
                if not stor18[address(msg.sender)]:
                    totalSupply = (1250 * msg.value / 10^16) - (stor30 * 250 * msg.value / 10^16 / 1000) - (stor31 * 250 * msg.value / 10^16 / 1000) - (stor32 * 250 * msg.value / 10^16 / 1000) - (stor33 * 250 * msg.value / 10^16 / 1000) + totalSupply
                else:
                    balanceOf[stor18[address(msg.sender)]] += 250 * msg.value / 10^16 / 1000 * stor33
                    totalSupply = (1250 * msg.value / 10^16) - (stor30 * 250 * msg.value / 10^16 / 1000) - (stor31 * 250 * msg.value / 10^16 / 1000) - (stor32 * 250 * msg.value / 10^16 / 1000) + totalSupply
            else:
                balanceOf[stor17[address(msg.sender)]] += 250 * msg.value / 10^16 / 1000 * stor32
                stor21[stor17[address(msg.sender)]] += msg.value / 10^16
                if not stor18[address(msg.sender)]:
                    totalSupply = (1250 * msg.value / 10^16) - (stor30 * 250 * msg.value / 10^16 / 1000) - (stor31 * 250 * msg.value / 10^16 / 1000) - (stor33 * 250 * msg.value / 10^16 / 1000) + totalSupply
                else:
                    balanceOf[stor18[address(msg.sender)]] += 250 * msg.value / 10^16 / 1000 * stor33
                    totalSupply = (1250 * msg.value / 10^16) - (stor30 * 250 * msg.value / 10^16 / 1000) - (stor31 * 250 * msg.value / 10^16 / 1000) + totalSupply
        else:
            balanceOf[stor16[address(msg.sender)]] += 250 * msg.value / 10^16 / 1000 * stor31
            stor20[stor16[address(msg.sender)]] += 10 * msg.value / 10^16
            if not stor17[address(msg.sender)]:
                if not stor18[address(msg.sender)]:
                    totalSupply = (1250 * msg.value / 10^16) - (stor30 * 250 * msg.value / 10^16 / 1000) - (stor32 * 250 * msg.value / 10^16 / 1000) - (stor33 * 250 * msg.value / 10^16 / 1000) + totalSupply
                else:
                    balanceOf[stor18[address(msg.sender)]] += 250 * msg.value / 10^16 / 1000 * stor33
                    totalSupply = (1250 * msg.value / 10^16) - (stor30 * 250 * msg.value / 10^16 / 1000) - (stor32 * 250 * msg.value / 10^16 / 1000) + totalSupply
            else:
                balanceOf[stor17[address(msg.sender)]] += 250 * msg.value / 10^16 / 1000 * stor32
                stor21[stor17[address(msg.sender)]] += msg.value / 10^16
                if not stor18[address(msg.sender)]:
                    totalSupply = (1250 * msg.value / 10^16) - (stor30 * 250 * msg.value / 10^16 / 1000) - (stor33 * 250 * msg.value / 10^16 / 1000) + totalSupply
                else:
                    balanceOf[stor18[address(msg.sender)]] += 250 * msg.value / 10^16 / 1000 * stor33
                    totalSupply = (1250 * msg.value / 10^16) - (stor30 * 250 * msg.value / 10^16 / 1000) + totalSupply
    else:
        balanceOf[stor15[address(msg.sender)]] += 250 * msg.value / 10^16 / 1000 * stor30 / 1000
        stor19[stor15[address(msg.sender)]] += 100 * msg.value / 10^16
        if not stor16[address(msg.sender)]:
            if not stor17[address(msg.sender)]:
                if not stor18[address(msg.sender)]:
                    totalSupply = (1250 * msg.value / 10^16) - (stor31 * 250 * msg.value / 10^16 / 1000) - (stor32 * 250 * msg.value / 10^16 / 1000) - (stor33 * 250 * msg.value / 10^16 / 1000) + totalSupply
                else:
                    balanceOf[stor18[address(msg.sender)]] += 250 * msg.value / 10^16 / 1000 * stor33
                    totalSupply = (1250 * msg.value / 10^16) - (stor31 * 250 * msg.value / 10^16 / 1000) - (stor32 * 250 * msg.value / 10^16 / 1000) + totalSupply
            else:
                balanceOf[stor17[address(msg.sender)]] += 250 * msg.value / 10^16 / 1000 * stor32
                stor21[stor17[address(msg.sender)]] += msg.value / 10^16
                if not stor18[address(msg.sender)]:
                    totalSupply = (1250 * msg.value / 10^16) - (stor31 * 250 * msg.value / 10^16 / 1000) - (stor33 * 250 * msg.value / 10^16 / 1000) + totalSupply
                else:
                    balanceOf[stor18[address(msg.sender)]] += 250 * msg.value / 10^16 / 1000 * stor33
                    totalSupply = (1250 * msg.value / 10^16) - (stor31 * 250 * msg.value / 10^16 / 1000) + totalSupply
        else:
            balanceOf[stor16[address(msg.sender)]] += 250 * msg.value / 10^16 / 1000 * stor31
            stor20[stor16[address(msg.sender)]] += 10 * msg.value / 10^16
            if not stor17[address(msg.sender)]:
                if not stor18[address(msg.sender)]:
                    totalSupply = (1250 * msg.value / 10^16) - (stor32 * 250 * msg.value / 10^16 / 1000) - (stor33 * 250 * msg.value / 10^16 / 1000) + totalSupply
                else:
                    balanceOf[stor18[address(msg.sender)]] += 250 * msg.value / 10^16 / 1000 * stor33
                    totalSupply = (1250 * msg.value / 10^16) - (stor32 * 250 * msg.value / 10^16 / 1000) + totalSupply
            else:
                balanceOf[stor17[address(msg.sender)]] += 250 * msg.value / 10^16 / 1000 * stor32
                stor21[stor17[address(msg.sender)]] += msg.value / 10^16
                if not stor18[address(msg.sender)]:
                    totalSupply = (1250 * msg.value / 10^16) - (stor33 * 250 * msg.value / 10^16 / 1000) + totalSupply
                else:
                    balanceOf[stor18[address(msg.sender)]] += 250 * msg.value / 10^16 / 1000 * stor33
                    totalSupply += 1250 * msg.value / 10^16
}

function sub_c4684a2d(?) payable {
    if msg.value <= 10^16:
        require stor6 == msg.sender
    require not uint8(stor7.field_160)
    balanceOf[address(msg.sender)] += 1000 * msg.value / 10^16
    balanceOf[address(stor7.field_0)] += 250 * msg.value / 10^16 / 1000 * stor29
    stor12[address(msg.sender)] += 250 * msg.value / 10^16 / 1000 * stor34
    if not stor15[address(msg.sender)]:
        if not stor16[address(msg.sender)]:
            if not stor17[address(msg.sender)]:
                if not stor18[address(msg.sender)]:
                    totalSupply = (1250 * msg.value / 10^16) - (stor30 * 250 * msg.value / 10^16 / 1000) - (stor31 * 250 * msg.value / 10^16 / 1000) - (stor32 * 250 * msg.value / 10^16 / 1000) - (stor33 * 250 * msg.value / 10^16 / 1000) + totalSupply
                else:
                    balanceOf[stor18[address(msg.sender)]] += 250 * msg.value / 10^16 / 1000 * stor33
                    totalSupply = (1250 * msg.value / 10^16) - (stor30 * 250 * msg.value / 10^16 / 1000) - (stor31 * 250 * msg.value / 10^16 / 1000) - (stor32 * 250 * msg.value / 10^16 / 1000) + totalSupply
            else:
                balanceOf[stor17[address(msg.sender)]] += 250 * msg.value / 10^16 / 1000 * stor32
                stor21[stor17[address(msg.sender)]] += msg.value / 10^16
                if not stor18[address(msg.sender)]:
                    totalSupply = (1250 * msg.value / 10^16) - (stor30 * 250 * msg.value / 10^16 / 1000) - (stor31 * 250 * msg.value / 10^16 / 1000) - (stor33 * 250 * msg.value / 10^16 / 1000) + totalSupply
                else:
                    balanceOf[stor18[address(msg.sender)]] += 250 * msg.value / 10^16 / 1000 * stor33
                    totalSupply = (1250 * msg.value / 10^16) - (stor30 * 250 * msg.value / 10^16 / 1000) - (stor31 * 250 * msg.value / 10^16 / 1000) + totalSupply
        else:
            balanceOf[stor16[address(msg.sender)]] += 250 * msg.value / 10^16 / 1000 * stor31
            stor20[stor16[address(msg.sender)]] += 10 * msg.value / 10^16
            if not stor17[address(msg.sender)]:
                if not stor18[address(msg.sender)]:
                    totalSupply = (1250 * msg.value / 10^16) - (stor30 * 250 * msg.value / 10^16 / 1000) - (stor32 * 250 * msg.value / 10^16 / 1000) - (stor33 * 250 * msg.value / 10^16 / 1000) + totalSupply
                else:
                    balanceOf[stor18[address(msg.sender)]] += 250 * msg.value / 10^16 / 1000 * stor33
                    totalSupply = (1250 * msg.value / 10^16) - (stor30 * 250 * msg.value / 10^16 / 1000) - (stor32 * 250 * msg.value / 10^16 / 1000) + totalSupply
            else:
                balanceOf[stor17[address(msg.sender)]] += 250 * msg.value / 10^16 / 1000 * stor32
                stor21[stor17[address(msg.sender)]] += msg.value / 10^16
                if not stor18[address(msg.sender)]:
                    totalSupply = (1250 * msg.value / 10^16) - (stor30 * 250 * msg.value / 10^16 / 1000) - (stor33 * 250 * msg.value / 10^16 / 1000) + totalSupply
                else:
                    balanceOf[stor18[address(msg.sender)]] += 250 * msg.value / 10^16 / 1000 * stor33
                    totalSupply = (1250 * msg.value / 10^16) - (stor30 * 250 * msg.value / 10^16 / 1000) + totalSupply
    else:
        balanceOf[stor15[address(msg.sender)]] += 250 * msg.value / 10^16 / 1000 * stor30 / 1000
        stor19[stor15[address(msg.sender)]] += 100 * msg.value / 10^16
        if not stor16[address(msg.sender)]:
            if not stor17[address(msg.sender)]:
                if not stor18[address(msg.sender)]:
                    totalSupply = (1250 * msg.value / 10^16) - (stor31 * 250 * msg.value / 10^16 / 1000) - (stor32 * 250 * msg.value / 10^16 / 1000) - (stor33 * 250 * msg.value / 10^16 / 1000) + totalSupply
                else:
                    balanceOf[stor18[address(msg.sender)]] += 250 * msg.value / 10^16 / 1000 * stor33
                    totalSupply = (1250 * msg.value / 10^16) - (stor31 * 250 * msg.value / 10^16 / 1000) - (stor32 * 250 * msg.value / 10^16 / 1000) + totalSupply
            else:
                balanceOf[stor17[address(msg.sender)]] += 250 * msg.value / 10^16 / 1000 * stor32
                stor21[stor17[address(msg.sender)]] += msg.value / 10^16
                if not stor18[address(msg.sender)]:
                    totalSupply = (1250 * msg.value / 10^16) - (stor31 * 250 * msg.value / 10^16 / 1000) - (stor33 * 250 * msg.value / 10^16 / 1000) + totalSupply
                else:
                    balanceOf[stor18[address(msg.sender)]] += 250 * msg.value / 10^16 / 1000 * stor33
                    totalSupply = (1250 * msg.value / 10^16) - (stor31 * 250 * msg.value / 10^16 / 1000) + totalSupply
        else:
            balanceOf[stor16[address(msg.sender)]] += 250 * msg.value / 10^16 / 1000 * stor31
            stor20[stor16[address(msg.sender)]] += 10 * msg.value / 10^16
            if not stor17[address(msg.sender)]:
                if not stor18[address(msg.sender)]:
                    totalSupply = (1250 * msg.value / 10^16) - (stor32 * 250 * msg.value / 10^16 / 1000) - (stor33 * 250 * msg.value / 10^16 / 1000) + totalSupply
                else:
                    balanceOf[stor18[address(msg.sender)]] += 250 * msg.value / 10^16 / 1000 * stor33
                    totalSupply = (1250 * msg.value / 10^16) - (stor32 * 250 * msg.value / 10^16 / 1000) + totalSupply
            else:
                balanceOf[stor17[address(msg.sender)]] += 250 * msg.value / 10^16 / 1000 * stor32
                stor21[stor17[address(msg.sender)]] += msg.value / 10^16
                if not stor18[address(msg.sender)]:
                    totalSupply = (1250 * msg.value / 10^16) - (stor33 * 250 * msg.value / 10^16 / 1000) + totalSupply
                else:
                    balanceOf[stor18[address(msg.sender)]] += 250 * msg.value / 10^16 / 1000 * stor33
                    totalSupply += 1250 * msg.value / 10^16
}

function sub_26dcf8e9(?) {
    require not stor25[address(msg.sender)]
    require eth.balance(this.address)
    if 10^16 * totalSupply / eth.balance(this.address) < 1000:
        stor12[stor6] += (eth.balance(this.address) / 10^12) - (10 * totalSupply) / 10
        totalSupply += (eth.balance(this.address) / 10^12) - (10 * totalSupply) / 10
        sub_8f41bb58 = 10 * 10^6
        emit 0x3b98ac72: 10 * 10^6
        if arg1:
            if not arg3:
                if balanceOf[address(msg.sender)] >= arg2:
                    balanceOf[address(msg.sender)] -= arg2
                    totalSupply -= arg2
                    call arg1 with:
                       value 10^16 * arg2 / 1000 wei
                         gas 2300 * is_zero(value) wei
                else:
                    balanceOf[address(msg.sender)] = 0
                    totalSupply -= balanceOf[address(msg.sender)]
                    call arg1 with:
                       value 10^16 * balanceOf[address(msg.sender)] / 1000 wei
                         gas 2300 * is_zero(value) wei
            else:
                if stor12[address(msg.sender)] >= arg2:
                    stor12[address(msg.sender)] -= arg2
                    totalSupply -= arg2
                    call arg1 with:
                       value 10^16 * arg2 / 1000 wei
                         gas 2300 * is_zero(value) wei
                else:
                    stor12[address(msg.sender)] = 0
                    totalSupply -= stor12[address(msg.sender)]
                    call arg1 with:
                       value 10^16 * stor12[address(msg.sender)] / 1000 wei
                         gas 2300 * is_zero(value) wei
        else:
            if not arg3:
                if balanceOf[address(msg.sender)] >= arg2:
                    balanceOf[address(msg.sender)] -= arg2
                    totalSupply -= arg2
                    call msg.sender with:
                       value 10^16 * arg2 / 1000 wei
                         gas 2300 * is_zero(value) wei
                else:
                    balanceOf[address(msg.sender)] = 0
                    totalSupply -= balanceOf[address(msg.sender)]
                    call msg.sender with:
                       value 10^16 * balanceOf[address(msg.sender)] / 1000 wei
                         gas 2300 * is_zero(value) wei
            else:
                if stor12[address(msg.sender)] >= arg2:
                    stor12[address(msg.sender)] -= arg2
                    totalSupply -= arg2
                    call msg.sender with:
                       value 10^16 * arg2 / 1000 wei
                         gas 2300 * is_zero(value) wei
                else:
                    stor12[address(msg.sender)] = 0
                    totalSupply -= stor12[address(msg.sender)]
                    call msg.sender with:
                       value 10^16 * stor12[address(msg.sender)] / 1000 wei
                         gas 2300 * is_zero(value) wei
    else:
        require 10^16 * totalSupply / eth.balance(this.address)
        sub_8f41bb58 = 10^10 / 10^16 * totalSupply / eth.balance(this.address)
        emit 0x3b98ac72: (10^10 / 10^16 * totalSupply / eth.balance(this.address))
        require 10^16 * totalSupply / eth.balance(this.address) <= 1250
        if arg1:
            if not arg3:
                if balanceOf[address(msg.sender)] >= arg2:
                    balanceOf[address(msg.sender)] -= arg2
                    totalSupply -= arg2
                    require 10^16 * totalSupply / eth.balance(this.address)
                    call arg1 with:
                       value 10^16 * arg2 / 10^16 * totalSupply / eth.balance(this.address) wei
                         gas 2300 * is_zero(value) wei
                else:
                    balanceOf[address(msg.sender)] = 0
                    totalSupply -= balanceOf[address(msg.sender)]
                    require 10^16 * totalSupply / eth.balance(this.address)
                    call arg1 with:
                       value 10^16 * balanceOf[address(msg.sender)] / 10^16 * totalSupply / eth.balance(this.address) wei
                         gas 2300 * is_zero(value) wei
            else:
                if stor12[address(msg.sender)] >= arg2:
                    stor12[address(msg.sender)] -= arg2
                    totalSupply -= arg2
                    require 10^16 * totalSupply / eth.balance(this.address)
                    call arg1 with:
                       value 10^16 * arg2 / 10^16 * totalSupply / eth.balance(this.address) wei
                         gas 2300 * is_zero(value) wei
                else:
                    stor12[address(msg.sender)] = 0
                    totalSupply -= stor12[address(msg.sender)]
                    require 10^16 * totalSupply / eth.balance(this.address)
                    call arg1 with:
                       value 10^16 * stor12[address(msg.sender)] / 10^16 * totalSupply / eth.balance(this.address) wei
                         gas 2300 * is_zero(value) wei
        else:
            if not arg3:
                if balanceOf[address(msg.sender)] >= arg2:
                    balanceOf[address(msg.sender)] -= arg2
                    totalSupply -= arg2
                    require 10^16 * totalSupply / eth.balance(this.address)
                    call msg.sender with:
                       value 10^16 * arg2 / 10^16 * totalSupply / eth.balance(this.address) wei
                         gas 2300 * is_zero(value) wei
                else:
                    balanceOf[address(msg.sender)] = 0
                    totalSupply -= balanceOf[address(msg.sender)]
                    require 10^16 * totalSupply / eth.balance(this.address)
                    call msg.sender with:
                       value 10^16 * balanceOf[address(msg.sender)] / 10^16 * totalSupply / eth.balance(this.address) wei
                         gas 2300 * is_zero(value) wei
            else:
                if stor12[address(msg.sender)] >= arg2:
                    stor12[address(msg.sender)] -= arg2
                    totalSupply -= arg2
                    require 10^16 * totalSupply / eth.balance(this.address)
                    call msg.sender with:
                       value 10^16 * arg2 / 10^16 * totalSupply / eth.balance(this.address) wei
                         gas 2300 * is_zero(value) wei
                else:
                    stor12[address(msg.sender)] = 0
                    totalSupply -= stor12[address(msg.sender)]
                    require 10^16 * totalSupply / eth.balance(this.address)
                    call msg.sender with:
                       value 10^16 * stor12[address(msg.sender)] / 10^16 * totalSupply / eth.balance(this.address) wei
                         gas 2300 * is_zero(value) wei
    require ext_call.success
}

function transfer(address arg1, uint256 arg2) {
    if not uint8(stor24[address(arg1)]):
        require arg1
        require not stor25[address(msg.sender)]
        require balanceOf[address(arg1)] + arg2 >= balanceOf[address(arg1)]
        require balanceOf[address(msg.sender)] >= arg2
        if arg1 != msg.sender:
            if not arg2:
                require not stor25[address(msg.sender)]
                if stor11[address(msg.sender)] == arg1:
                    uint256(stor24[address(msg.sender)]) = not uint8(stor24[address(msg.sender)]) or Mask(248, 8, uint256(stor24[address(msg.sender)]))
                else:
                    if not arg1:
                        uint8(stor24[address(msg.sender)]) = 0
                    else:
                        if arg1 == msg.sender:
                            uint8(stor24[address(msg.sender)]) = 0
                        else:
                            uint8(stor24[address(msg.sender)]) = 1
                            stor11[address(msg.sender)] = arg1
                require balanceOf[address(msg.sender)] > stor35 / 100
                if not stor22[address(msg.sender)]:
                    balanceOf[address(msg.sender)] -= stor35 / 100
                    totalSupply -= stor35 / 100
            else:
                if this.address == arg1:
                    require not stor25[address(msg.sender)]
                    require eth.balance(this.address)
                    if 10^16 * totalSupply / eth.balance(this.address) < 1000:
                        stor12[stor6] += (eth.balance(this.address) / 10^12) - (10 * totalSupply) / 10
                        totalSupply += (eth.balance(this.address) / 10^12) - (10 * totalSupply) / 10
                        sub_8f41bb58 = 10 * 10^6
                        emit 0x3b98ac72: 10 * 10^6
                        if balanceOf[address(msg.sender)] >= arg2 / 10^6:
                            balanceOf[address(msg.sender)] -= arg2 / 10^6
                            totalSupply -= arg2 / 10^6
                            call msg.sender with:
                               value 10^16 * arg2 / 10^6 / 1000 wei
                                 gas 2300 * is_zero(value) wei
                        else:
                            balanceOf[address(msg.sender)] = 0
                            totalSupply -= balanceOf[address(msg.sender)]
                            call msg.sender with:
                               value 10^16 * balanceOf[address(msg.sender)] / 1000 wei
                                 gas 2300 * is_zero(value) wei
                    else:
                        require 10^16 * totalSupply / eth.balance(this.address)
                        sub_8f41bb58 = 10^10 / 10^16 * totalSupply / eth.balance(this.address)
                        emit 0x3b98ac72: (10^10 / 10^16 * totalSupply / eth.balance(this.address))
                        require 10^16 * totalSupply / eth.balance(this.address) <= 1250
                        if balanceOf[address(msg.sender)] >= arg2 / 10^6:
                            balanceOf[address(msg.sender)] -= arg2 / 10^6
                            totalSupply -= arg2 / 10^6
                            require 10^16 * totalSupply / eth.balance(this.address)
                            call msg.sender with:
                               value 10^16 * arg2 / 10^6 / 10^16 * totalSupply / eth.balance(this.address) wei
                                 gas 2300 * is_zero(value) wei
                        else:
                            balanceOf[address(msg.sender)] = 0
                            totalSupply -= balanceOf[address(msg.sender)]
                            require 10^16 * totalSupply / eth.balance(this.address)
                            call msg.sender with:
                               value 10^16 * balanceOf[address(msg.sender)] / 10^16 * totalSupply / eth.balance(this.address) wei
                                 gas 2300 * is_zero(value) wei
                    require ext_call.success
                else:
                    if msg.sender == arg1:
                        balanceOf[address(msg.sender)] -= arg2
                        stor12[address(arg1)] += arg2
                        emit Transfer(arg2, arg1, this.address);
                    else:
                        if stor22[address(arg1)]:
                            if arg1 == msg.sender:
                                stor19[address(arg1)] += arg2 / 10
                                stor20[address(arg1)] += arg2 / 100
                                stor21[address(arg1)] += arg2 / 1000
                                idx = 160
                                s = 0
                                while stor27[address(arg1)].length + 128 > idx:
                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                    idx = idx + 32
                                    s = s + 1
                                    continue 
                                if not uint8(stor23[address(arg1)]):
                                    balanceOf[address(msg.sender)] -= arg2
                                    if stor22[address(arg1)]:
                                        balanceOf[address(arg1)] += (1000 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                    else:
                                        totalSupply -= arg2 * stor28 / 1000
                                        balanceOf[address(arg1)] += (1000 * arg2) - (stor28 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                    stor12[address(arg1)] += arg2 * stor14[address(arg1)] / 1000
                                    if not stor27[address(arg1)].length:
                                        if not stor22[address(msg.sender)]:
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            emit Transfer(arg2, this.address, arg1);
                                    else:
                                        mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                        if not stor22[address(msg.sender)]:
                                            idx = ceil32(stor27[address(arg1)].length) + 288
                                            s = 0
                                            while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                idx = idx + 32
                                                s = s + 1
                                                continue 
                                            emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                        else:
                                            idx = ceil32(stor27[address(arg1)].length) + 288
                                            s = 0
                                            while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                idx = idx + 32
                                                s = s + 1
                                                continue 
                                            emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                else:
                                    if not stor11[address(arg1)]:
                                        balanceOf[address(msg.sender)] -= arg2
                                        if stor22[address(arg1)]:
                                            balanceOf[address(arg1)] += (1000 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                        else:
                                            totalSupply -= arg2 * stor28 / 1000
                                            balanceOf[address(arg1)] += (1000 * arg2) - (stor28 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                        stor12[address(arg1)] += arg2 * stor14[address(arg1)] / 1000
                                        if not stor27[address(arg1)].length:
                                            if not stor22[address(msg.sender)]:
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                emit Transfer(arg2, this.address, arg1);
                                        else:
                                            mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                            if not stor22[address(msg.sender)]:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                            else:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                    else:
                                        emit Transfer((stor14[stor11[address(arg1)]] * arg2 / 1000), arg1, stor11[address(arg1)]);
                                        balanceOf[address(msg.sender)] -= arg2
                                        if stor22[address(arg1)]:
                                            balanceOf[address(arg1)] += (1000 * arg2) - (stor14[address(arg1)] * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                        else:
                                            totalSupply -= arg2 * stor28 / 1000
                                            balanceOf[address(arg1)] += (1000 * arg2) - (stor28 * arg2) - (stor14[address(arg1)] * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                        balanceOf[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                        stor12[address(arg1)] += arg2 * stor14[address(arg1)] / 1000
                                        if not stor27[address(arg1)].length:
                                            if not stor22[address(msg.sender)]:
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                emit Transfer(arg2, this.address, arg1);
                                        else:
                                            mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                            if not stor22[address(msg.sender)]:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                            else:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                            else:
                                if stor15[address(msg.sender)]:
                                    stor19[address(arg1)] += arg2 / 10
                                    stor20[address(arg1)] += arg2 / 100
                                    stor21[address(arg1)] += arg2 / 1000
                                    idx = 160
                                    s = 0
                                    while stor27[address(arg1)].length + 128 > idx:
                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    if not uint8(stor23[address(arg1)]):
                                        balanceOf[address(msg.sender)] -= arg2
                                        if stor22[address(arg1)]:
                                            balanceOf[address(arg1)] += (1000 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                        else:
                                            totalSupply -= arg2 * stor28 / 1000
                                            balanceOf[address(arg1)] += (1000 * arg2) - (stor28 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                        stor12[address(arg1)] += arg2 * stor14[address(arg1)] / 1000
                                        if not stor27[address(arg1)].length:
                                            if not stor22[address(msg.sender)]:
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                emit Transfer(arg2, this.address, arg1);
                                        else:
                                            mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                            if not stor22[address(msg.sender)]:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                            else:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                    else:
                                        if not stor11[address(arg1)]:
                                            balanceOf[address(msg.sender)] -= arg2
                                            if stor22[address(arg1)]:
                                                balanceOf[address(arg1)] += (1000 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                            else:
                                                totalSupply -= arg2 * stor28 / 1000
                                                balanceOf[address(arg1)] += (1000 * arg2) - (stor28 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                            stor12[address(arg1)] += arg2 * stor14[address(arg1)] / 1000
                                            if not stor27[address(arg1)].length:
                                                if not stor22[address(msg.sender)]:
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    emit Transfer(arg2, this.address, arg1);
                                            else:
                                                mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                                if not stor22[address(msg.sender)]:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                                else:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                        else:
                                            emit Transfer((stor14[stor11[address(arg1)]] * arg2 / 1000), arg1, stor11[address(arg1)]);
                                            balanceOf[address(msg.sender)] -= arg2
                                            if stor22[address(arg1)]:
                                                balanceOf[address(arg1)] += (1000 * arg2) - (stor14[address(arg1)] * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                            else:
                                                totalSupply -= arg2 * stor28 / 1000
                                                balanceOf[address(arg1)] += (1000 * arg2) - (stor28 * arg2) - (stor14[address(arg1)] * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                            balanceOf[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                            stor12[address(arg1)] += arg2 * stor14[address(arg1)] / 1000
                                            if not stor27[address(arg1)].length:
                                                if not stor22[address(msg.sender)]:
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    emit Transfer(arg2, this.address, arg1);
                                            else:
                                                mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                                if not stor22[address(msg.sender)]:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                                else:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                else:
                                    if arg1:
                                        stor15[address(msg.sender)] = arg1
                                        stor16[msg.sender] = stor16[address(arg1)]
                                        stor17[msg.sender] = stor17[address(arg1)]
                                        stor18[msg.sender] = stor18[address(arg1)]
                                        stor11[msg.sender] = stor11[address(arg1)]
                                        uint8(stor23[address(msg.sender)]) = 0
                                        stor19[address(msg.sender)] += stor19[address(arg1)] / 10
                                        stor20[address(msg.sender)] += stor20[address(arg1)] / 10
                                        stor21[address(msg.sender)] += stor21[address(arg1)] / 10
                                    stor19[address(arg1)] += arg2 / 10
                                    stor20[address(arg1)] += arg2 / 100
                                    stor21[address(arg1)] += arg2 / 1000
                                    idx = 160
                                    s = 0
                                    while stor27[address(arg1)].length + 128 > idx:
                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    if not uint8(stor23[address(arg1)]):
                                        balanceOf[address(msg.sender)] -= arg2
                                        if stor22[address(arg1)]:
                                            balanceOf[address(arg1)] += (1000 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                        else:
                                            totalSupply -= arg2 * stor28 / 1000
                                            balanceOf[address(arg1)] += (1000 * arg2) - (stor28 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                        stor12[address(arg1)] += arg2 * stor14[address(arg1)] / 1000
                                        if not stor27[address(arg1)].length:
                                            if not stor22[address(msg.sender)]:
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                emit Transfer(arg2, this.address, arg1);
                                        else:
                                            mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                            if not stor22[address(msg.sender)]:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                            else:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                    else:
                                        if not stor11[address(arg1)]:
                                            balanceOf[address(msg.sender)] -= arg2
                                            if stor22[address(arg1)]:
                                                balanceOf[address(arg1)] += (1000 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                            else:
                                                totalSupply -= arg2 * stor28 / 1000
                                                balanceOf[address(arg1)] += (1000 * arg2) - (stor28 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                            stor12[address(arg1)] += arg2 * stor14[address(arg1)] / 1000
                                            if not stor27[address(arg1)].length:
                                                if not stor22[address(msg.sender)]:
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    emit Transfer(arg2, this.address, arg1);
                                            else:
                                                mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                                if not stor22[address(msg.sender)]:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                                else:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                        else:
                                            emit Transfer((stor14[stor11[address(arg1)]] * arg2 / 1000), arg1, stor11[address(arg1)]);
                                            balanceOf[address(msg.sender)] -= arg2
                                            if stor22[address(arg1)]:
                                                balanceOf[address(arg1)] += (1000 * arg2) - (stor14[address(arg1)] * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                            else:
                                                totalSupply -= arg2 * stor28 / 1000
                                                balanceOf[address(arg1)] += (1000 * arg2) - (stor28 * arg2) - (stor14[address(arg1)] * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                            balanceOf[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                            stor12[address(arg1)] += arg2 * stor14[address(arg1)] / 1000
                                            if not stor27[address(arg1)].length:
                                                if not stor22[address(msg.sender)]:
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    emit Transfer(arg2, this.address, arg1);
                                            else:
                                                mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                                if not stor22[address(msg.sender)]:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                                else:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                        else:
                            if stor15[address(msg.sender)]:
                                idx = 160
                                s = 0
                                while stor27[address(arg1)].length + 128 > idx:
                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                    idx = idx + 32
                                    s = s + 1
                                    continue 
                                if not uint8(stor23[address(arg1)]):
                                    balanceOf[address(msg.sender)] -= arg2
                                    if stor22[address(arg1)]:
                                        balanceOf[address(arg1)] += (1000 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                    else:
                                        totalSupply -= arg2 * stor28 / 1000
                                        balanceOf[address(arg1)] += (1000 * arg2) - (stor28 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                    stor12[address(arg1)] += arg2 * stor14[address(arg1)] / 1000
                                    if not stor27[address(arg1)].length:
                                        if not stor22[address(msg.sender)]:
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            emit Transfer(arg2, this.address, arg1);
                                    else:
                                        mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                        if not stor22[address(msg.sender)]:
                                            idx = ceil32(stor27[address(arg1)].length) + 288
                                            s = 0
                                            while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                idx = idx + 32
                                                s = s + 1
                                                continue 
                                            emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                        else:
                                            idx = ceil32(stor27[address(arg1)].length) + 288
                                            s = 0
                                            while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                idx = idx + 32
                                                s = s + 1
                                                continue 
                                            emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                else:
                                    if not stor11[address(arg1)]:
                                        balanceOf[address(msg.sender)] -= arg2
                                        if stor22[address(arg1)]:
                                            balanceOf[address(arg1)] += (1000 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                        else:
                                            totalSupply -= arg2 * stor28 / 1000
                                            balanceOf[address(arg1)] += (1000 * arg2) - (stor28 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                        stor12[address(arg1)] += arg2 * stor14[address(arg1)] / 1000
                                        if not stor27[address(arg1)].length:
                                            if not stor22[address(msg.sender)]:
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                emit Transfer(arg2, this.address, arg1);
                                        else:
                                            mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                            if not stor22[address(msg.sender)]:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                            else:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                    else:
                                        emit Transfer((stor14[stor11[address(arg1)]] * arg2 / 1000), arg1, stor11[address(arg1)]);
                                        balanceOf[address(msg.sender)] -= arg2
                                        if stor22[address(arg1)]:
                                            balanceOf[address(arg1)] += (1000 * arg2) - (stor14[address(arg1)] * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                        else:
                                            totalSupply -= arg2 * stor28 / 1000
                                            balanceOf[address(arg1)] += (1000 * arg2) - (stor28 * arg2) - (stor14[address(arg1)] * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                        balanceOf[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                        stor12[address(arg1)] += arg2 * stor14[address(arg1)] / 1000
                                        if not stor27[address(arg1)].length:
                                            if not stor22[address(msg.sender)]:
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                emit Transfer(arg2, this.address, arg1);
                                        else:
                                            mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                            if not stor22[address(msg.sender)]:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                            else:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                            else:
                                if arg1 == msg.sender:
                                    stor19[address(arg1)] += arg2 / 10
                                    stor20[address(arg1)] += arg2 / 100
                                    stor21[address(arg1)] += arg2 / 1000
                                    idx = 160
                                    s = 0
                                    while stor27[address(arg1)].length + 128 > idx:
                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    if not uint8(stor23[address(arg1)]):
                                        balanceOf[address(msg.sender)] -= arg2
                                        if stor22[address(arg1)]:
                                            balanceOf[address(arg1)] += (1000 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                        else:
                                            totalSupply -= arg2 * stor28 / 1000
                                            balanceOf[address(arg1)] += (1000 * arg2) - (stor28 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                        stor12[address(arg1)] += arg2 * stor14[address(arg1)] / 1000
                                        if not stor27[address(arg1)].length:
                                            if not stor22[address(msg.sender)]:
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                emit Transfer(arg2, this.address, arg1);
                                        else:
                                            mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                            if not stor22[address(msg.sender)]:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                            else:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                    else:
                                        if not stor11[address(arg1)]:
                                            balanceOf[address(msg.sender)] -= arg2
                                            if stor22[address(arg1)]:
                                                balanceOf[address(arg1)] += (1000 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                            else:
                                                totalSupply -= arg2 * stor28 / 1000
                                                balanceOf[address(arg1)] += (1000 * arg2) - (stor28 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                            stor12[address(arg1)] += arg2 * stor14[address(arg1)] / 1000
                                            if not stor27[address(arg1)].length:
                                                if not stor22[address(msg.sender)]:
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    emit Transfer(arg2, this.address, arg1);
                                            else:
                                                mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                                if not stor22[address(msg.sender)]:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                                else:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                        else:
                                            emit Transfer((stor14[stor11[address(arg1)]] * arg2 / 1000), arg1, stor11[address(arg1)]);
                                            balanceOf[address(msg.sender)] -= arg2
                                            if stor22[address(arg1)]:
                                                balanceOf[address(arg1)] += (1000 * arg2) - (stor14[address(arg1)] * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                            else:
                                                totalSupply -= arg2 * stor28 / 1000
                                                balanceOf[address(arg1)] += (1000 * arg2) - (stor28 * arg2) - (stor14[address(arg1)] * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                            balanceOf[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                            stor12[address(arg1)] += arg2 * stor14[address(arg1)] / 1000
                                            if not stor27[address(arg1)].length:
                                                if not stor22[address(msg.sender)]:
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    emit Transfer(arg2, this.address, arg1);
                                            else:
                                                mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                                if not stor22[address(msg.sender)]:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                                else:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                else:
                                    if stor15[address(msg.sender)]:
                                        stor19[address(arg1)] += arg2 / 10
                                        stor20[address(arg1)] += arg2 / 100
                                        stor21[address(arg1)] += arg2 / 1000
                                        idx = 160
                                        s = 0
                                        while stor27[address(arg1)].length + 128 > idx:
                                            mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                            idx = idx + 32
                                            s = s + 1
                                            continue 
                                        if not uint8(stor23[address(arg1)]):
                                            balanceOf[address(msg.sender)] -= arg2
                                            if stor22[address(arg1)]:
                                                balanceOf[address(arg1)] += (1000 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                            else:
                                                totalSupply -= arg2 * stor28 / 1000
                                                balanceOf[address(arg1)] += (1000 * arg2) - (stor28 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                            stor12[address(arg1)] += arg2 * stor14[address(arg1)] / 1000
                                            if not stor27[address(arg1)].length:
                                                if not stor22[address(msg.sender)]:
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    emit Transfer(arg2, this.address, arg1);
                                            else:
                                                mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                                if not stor22[address(msg.sender)]:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                                else:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                        else:
                                            if not stor11[address(arg1)]:
                                                balanceOf[address(msg.sender)] -= arg2
                                                if stor22[address(arg1)]:
                                                    balanceOf[address(arg1)] += (1000 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                                else:
                                                    totalSupply -= arg2 * stor28 / 1000
                                                    balanceOf[address(arg1)] += (1000 * arg2) - (stor28 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                                stor12[address(arg1)] += arg2 * stor14[address(arg1)] / 1000
                                                if not stor27[address(arg1)].length:
                                                    if not stor22[address(msg.sender)]:
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        emit Transfer(arg2, this.address, arg1);
                                                else:
                                                    mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                                    if not stor22[address(msg.sender)]:
                                                        idx = ceil32(stor27[address(arg1)].length) + 288
                                                        s = 0
                                                        while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                                    else:
                                                        idx = ceil32(stor27[address(arg1)].length) + 288
                                                        s = 0
                                                        while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                            else:
                                                emit Transfer((stor14[stor11[address(arg1)]] * arg2 / 1000), arg1, stor11[address(arg1)]);
                                                balanceOf[address(msg.sender)] -= arg2
                                                if stor22[address(arg1)]:
                                                    balanceOf[address(arg1)] += (1000 * arg2) - (stor14[address(arg1)] * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                                else:
                                                    totalSupply -= arg2 * stor28 / 1000
                                                    balanceOf[address(arg1)] += (1000 * arg2) - (stor28 * arg2) - (stor14[address(arg1)] * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                                balanceOf[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                                stor12[address(arg1)] += arg2 * stor14[address(arg1)] / 1000
                                                if not stor27[address(arg1)].length:
                                                    if not stor22[address(msg.sender)]:
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        emit Transfer(arg2, this.address, arg1);
                                                else:
                                                    mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                                    if not stor22[address(msg.sender)]:
                                                        idx = ceil32(stor27[address(arg1)].length) + 288
                                                        s = 0
                                                        while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                                    else:
                                                        idx = ceil32(stor27[address(arg1)].length) + 288
                                                        s = 0
                                                        while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                    else:
                                        if arg1:
                                            stor15[address(msg.sender)] = arg1
                                            stor16[msg.sender] = stor16[address(arg1)]
                                            stor17[msg.sender] = stor17[address(arg1)]
                                            stor18[msg.sender] = stor18[address(arg1)]
                                            stor11[msg.sender] = stor11[address(arg1)]
                                            uint8(stor23[address(msg.sender)]) = 0
                                            stor19[address(msg.sender)] += stor19[address(arg1)] / 10
                                            stor20[address(msg.sender)] += stor20[address(arg1)] / 10
                                            stor21[address(msg.sender)] += stor21[address(arg1)] / 10
                                        stor19[address(arg1)] += arg2 / 10
                                        stor20[address(arg1)] += arg2 / 100
                                        stor21[address(arg1)] += arg2 / 1000
                                        idx = 160
                                        s = 0
                                        while stor27[address(arg1)].length + 128 > idx:
                                            mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                            idx = idx + 32
                                            s = s + 1
                                            continue 
                                        if not uint8(stor23[address(arg1)]):
                                            balanceOf[address(msg.sender)] -= arg2
                                            if stor22[address(arg1)]:
                                                balanceOf[address(arg1)] += (1000 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                            else:
                                                totalSupply -= arg2 * stor28 / 1000
                                                balanceOf[address(arg1)] += (1000 * arg2) - (stor28 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                            stor12[address(arg1)] += arg2 * stor14[address(arg1)] / 1000
                                            if not stor27[address(arg1)].length:
                                                if not stor22[address(msg.sender)]:
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    emit Transfer(arg2, this.address, arg1);
                                            else:
                                                mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                                if not stor22[address(msg.sender)]:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                                else:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                        else:
                                            if not stor11[address(arg1)]:
                                                balanceOf[address(msg.sender)] -= arg2
                                                if stor22[address(arg1)]:
                                                    balanceOf[address(arg1)] += (1000 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                                else:
                                                    totalSupply -= arg2 * stor28 / 1000
                                                    balanceOf[address(arg1)] += (1000 * arg2) - (stor28 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                                stor12[address(arg1)] += arg2 * stor14[address(arg1)] / 1000
                                                if not stor27[address(arg1)].length:
                                                    if not stor22[address(msg.sender)]:
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        emit Transfer(arg2, this.address, arg1);
                                                else:
                                                    mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                                    if not stor22[address(msg.sender)]:
                                                        idx = ceil32(stor27[address(arg1)].length) + 288
                                                        s = 0
                                                        while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                                    else:
                                                        idx = ceil32(stor27[address(arg1)].length) + 288
                                                        s = 0
                                                        while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                            else:
                                                emit Transfer((stor14[stor11[address(arg1)]] * arg2 / 1000), arg1, stor11[address(arg1)]);
                                                balanceOf[address(msg.sender)] -= arg2
                                                if stor22[address(arg1)]:
                                                    balanceOf[address(arg1)] += (1000 * arg2) - (stor14[address(arg1)] * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                                else:
                                                    totalSupply -= arg2 * stor28 / 1000
                                                    balanceOf[address(arg1)] += (1000 * arg2) - (stor28 * arg2) - (stor14[address(arg1)] * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                                balanceOf[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                                stor12[address(arg1)] += arg2 * stor14[address(arg1)] / 1000
                                                if not stor27[address(arg1)].length:
                                                    if not stor22[address(msg.sender)]:
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        emit Transfer(arg2, this.address, arg1);
                                                else:
                                                    mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                                    if not stor22[address(msg.sender)]:
                                                        idx = ceil32(stor27[address(arg1)].length) + 288
                                                        s = 0
                                                        while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                                    else:
                                                        idx = ceil32(stor27[address(arg1)].length) + 288
                                                        s = 0
                                                        while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                        sub_064d5a8b[address(msg.sender)] = 0
                        sub_c1198ea1[address(msg.sender)] = 0
        else:
            if not arg2:
                require not stor25[address(msg.sender)]
                uint256(stor23[address(msg.sender)]) = not uint8(stor23[address(msg.sender)]) or Mask(248, 8, uint256(stor23[address(msg.sender)]))
                mem[256] = uint256(stor27[address(msg.sender)].field_0)
                idx = 256
                s = 0
                while stor27[address(msg.sender)].length + 256 > idx + 32:
                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                    idx = idx + 32
                    s = s + 1
                    continue 
                mem[stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32) + 256] = stor27[stor11[address(msg.sender)]].length
                mem[stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32) + 288] = uint256(stor27[stor11[address(msg.sender)]].field_0)
                idx = stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32) + 288
                s = 0
                while stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32) + stor27[stor11[address(msg.sender)]].length + 288 > idx + 32:
                    mem[idx + 32] = uint256(stor27[stor11[address(msg.sender)]][s].field_256)
                    idx = idx + 32
                    s = s + 1
                    continue 
                emit 0xf4bf15f5: Array(len=stor27[address(msg.sender)].length, data=mem[256 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32) + stor27[stor11[address(msg.sender)]].length + (floor32(stor27[stor11[address(msg.sender)]].length - 1) + -stor27[stor11[address(msg.sender)]].length + 32 % 32) + 32]), stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32) + 128, bool(uint8(not uint8(stor23[address(msg.sender)])))
                require balanceOf[address(msg.sender)] > stor35 / 100
                if not stor22[address(msg.sender)]:
                    balanceOf[address(msg.sender)] -= stor35 / 100
                    totalSupply -= stor35 / 100
            else:
                if this.address == arg1:
                    require not stor25[address(msg.sender)]
                    require eth.balance(this.address)
                    if 10^16 * totalSupply / eth.balance(this.address) < 1000:
                        stor12[stor6] += (eth.balance(this.address) / 10^12) - (10 * totalSupply) / 10
                        totalSupply += (eth.balance(this.address) / 10^12) - (10 * totalSupply) / 10
                        sub_8f41bb58 = 10 * 10^6
                        emit 0x3b98ac72: 10 * 10^6
                        if balanceOf[address(msg.sender)] >= arg2 / 10^6:
                            balanceOf[address(msg.sender)] -= arg2 / 10^6
                            totalSupply -= arg2 / 10^6
                            call msg.sender with:
                               value 10^16 * arg2 / 10^6 / 1000 wei
                                 gas 2300 * is_zero(value) wei
                        else:
                            balanceOf[address(msg.sender)] = 0
                            totalSupply -= balanceOf[address(msg.sender)]
                            call msg.sender with:
                               value 10^16 * balanceOf[address(msg.sender)] / 1000 wei
                                 gas 2300 * is_zero(value) wei
                    else:
                        require 10^16 * totalSupply / eth.balance(this.address)
                        sub_8f41bb58 = 10^10 / 10^16 * totalSupply / eth.balance(this.address)
                        emit 0x3b98ac72: (10^10 / 10^16 * totalSupply / eth.balance(this.address))
                        require 10^16 * totalSupply / eth.balance(this.address) <= 1250
                        if balanceOf[address(msg.sender)] >= arg2 / 10^6:
                            balanceOf[address(msg.sender)] -= arg2 / 10^6
                            totalSupply -= arg2 / 10^6
                            require 10^16 * totalSupply / eth.balance(this.address)
                            call msg.sender with:
                               value 10^16 * arg2 / 10^6 / 10^16 * totalSupply / eth.balance(this.address) wei
                                 gas 2300 * is_zero(value) wei
                        else:
                            balanceOf[address(msg.sender)] = 0
                            totalSupply -= balanceOf[address(msg.sender)]
                            require 10^16 * totalSupply / eth.balance(this.address)
                            call msg.sender with:
                               value 10^16 * balanceOf[address(msg.sender)] / 10^16 * totalSupply / eth.balance(this.address) wei
                                 gas 2300 * is_zero(value) wei
                    require ext_call.success
                else:
                    if msg.sender == arg1:
                        balanceOf[address(msg.sender)] -= arg2
                        stor12[address(arg1)] += arg2
                        emit Transfer(arg2, arg1, this.address);
                    else:
                        if stor22[address(arg1)]:
                            if arg1 == msg.sender:
                                stor19[address(arg1)] += arg2 / 10
                                stor20[address(arg1)] += arg2 / 100
                                stor21[address(arg1)] += arg2 / 1000
                                idx = 160
                                s = 0
                                while stor27[address(arg1)].length + 128 > idx:
                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                    idx = idx + 32
                                    s = s + 1
                                    continue 
                                if not uint8(stor23[address(arg1)]):
                                    balanceOf[address(msg.sender)] -= arg2
                                    if stor22[address(arg1)]:
                                        balanceOf[address(arg1)] += (1000 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                    else:
                                        totalSupply -= arg2 * stor28 / 1000
                                        balanceOf[address(arg1)] += (1000 * arg2) - (stor28 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                    stor12[address(arg1)] += arg2 * stor14[address(arg1)] / 1000
                                    if not stor27[address(arg1)].length:
                                        if not stor22[address(msg.sender)]:
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            emit Transfer(arg2, this.address, arg1);
                                    else:
                                        mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                        if not stor22[address(msg.sender)]:
                                            idx = ceil32(stor27[address(arg1)].length) + 288
                                            s = 0
                                            while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                idx = idx + 32
                                                s = s + 1
                                                continue 
                                            emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                        else:
                                            idx = ceil32(stor27[address(arg1)].length) + 288
                                            s = 0
                                            while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                idx = idx + 32
                                                s = s + 1
                                                continue 
                                            emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                else:
                                    if not stor11[address(arg1)]:
                                        balanceOf[address(msg.sender)] -= arg2
                                        if stor22[address(arg1)]:
                                            balanceOf[address(arg1)] += (1000 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                        else:
                                            totalSupply -= arg2 * stor28 / 1000
                                            balanceOf[address(arg1)] += (1000 * arg2) - (stor28 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                        stor12[address(arg1)] += arg2 * stor14[address(arg1)] / 1000
                                        if not stor27[address(arg1)].length:
                                            if not stor22[address(msg.sender)]:
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                emit Transfer(arg2, this.address, arg1);
                                        else:
                                            mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                            if not stor22[address(msg.sender)]:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                            else:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                    else:
                                        emit Transfer((stor14[stor11[address(arg1)]] * arg2 / 1000), arg1, stor11[address(arg1)]);
                                        balanceOf[address(msg.sender)] -= arg2
                                        if stor22[address(arg1)]:
                                            balanceOf[address(arg1)] += (1000 * arg2) - (stor14[address(arg1)] * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                        else:
                                            totalSupply -= arg2 * stor28 / 1000
                                            balanceOf[address(arg1)] += (1000 * arg2) - (stor28 * arg2) - (stor14[address(arg1)] * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                        balanceOf[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                        stor12[address(arg1)] += arg2 * stor14[address(arg1)] / 1000
                                        if not stor27[address(arg1)].length:
                                            if not stor22[address(msg.sender)]:
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                emit Transfer(arg2, this.address, arg1);
                                        else:
                                            mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                            if not stor22[address(msg.sender)]:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                            else:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                            else:
                                if stor15[address(msg.sender)]:
                                    stor19[address(arg1)] += arg2 / 10
                                    stor20[address(arg1)] += arg2 / 100
                                    stor21[address(arg1)] += arg2 / 1000
                                    idx = 160
                                    s = 0
                                    while stor27[address(arg1)].length + 128 > idx:
                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    if not uint8(stor23[address(arg1)]):
                                        balanceOf[address(msg.sender)] -= arg2
                                        if stor22[address(arg1)]:
                                            balanceOf[address(arg1)] += (1000 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                        else:
                                            totalSupply -= arg2 * stor28 / 1000
                                            balanceOf[address(arg1)] += (1000 * arg2) - (stor28 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                        stor12[address(arg1)] += arg2 * stor14[address(arg1)] / 1000
                                        if not stor27[address(arg1)].length:
                                            if not stor22[address(msg.sender)]:
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                emit Transfer(arg2, this.address, arg1);
                                        else:
                                            mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                            if not stor22[address(msg.sender)]:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                            else:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                    else:
                                        if not stor11[address(arg1)]:
                                            balanceOf[address(msg.sender)] -= arg2
                                            if stor22[address(arg1)]:
                                                balanceOf[address(arg1)] += (1000 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                            else:
                                                totalSupply -= arg2 * stor28 / 1000
                                                balanceOf[address(arg1)] += (1000 * arg2) - (stor28 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                            stor12[address(arg1)] += arg2 * stor14[address(arg1)] / 1000
                                            if not stor27[address(arg1)].length:
                                                if not stor22[address(msg.sender)]:
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    emit Transfer(arg2, this.address, arg1);
                                            else:
                                                mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                                if not stor22[address(msg.sender)]:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                                else:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                        else:
                                            emit Transfer((stor14[stor11[address(arg1)]] * arg2 / 1000), arg1, stor11[address(arg1)]);
                                            balanceOf[address(msg.sender)] -= arg2
                                            if stor22[address(arg1)]:
                                                balanceOf[address(arg1)] += (1000 * arg2) - (stor14[address(arg1)] * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                            else:
                                                totalSupply -= arg2 * stor28 / 1000
                                                balanceOf[address(arg1)] += (1000 * arg2) - (stor28 * arg2) - (stor14[address(arg1)] * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                            balanceOf[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                            stor12[address(arg1)] += arg2 * stor14[address(arg1)] / 1000
                                            if not stor27[address(arg1)].length:
                                                if not stor22[address(msg.sender)]:
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    emit Transfer(arg2, this.address, arg1);
                                            else:
                                                mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                                if not stor22[address(msg.sender)]:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                                else:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                else:
                                    if arg1:
                                        stor15[address(msg.sender)] = arg1
                                        stor16[msg.sender] = stor16[address(arg1)]
                                        stor17[msg.sender] = stor17[address(arg1)]
                                        stor18[msg.sender] = stor18[address(arg1)]
                                        stor11[msg.sender] = stor11[address(arg1)]
                                        uint8(stor23[address(msg.sender)]) = 0
                                        stor19[address(msg.sender)] += stor19[address(arg1)] / 10
                                        stor20[address(msg.sender)] += stor20[address(arg1)] / 10
                                        stor21[address(msg.sender)] += stor21[address(arg1)] / 10
                                    stor19[address(arg1)] += arg2 / 10
                                    stor20[address(arg1)] += arg2 / 100
                                    stor21[address(arg1)] += arg2 / 1000
                                    idx = 160
                                    s = 0
                                    while stor27[address(arg1)].length + 128 > idx:
                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    if not uint8(stor23[address(arg1)]):
                                        balanceOf[address(msg.sender)] -= arg2
                                        if stor22[address(arg1)]:
                                            balanceOf[address(arg1)] += (1000 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                        else:
                                            totalSupply -= arg2 * stor28 / 1000
                                            balanceOf[address(arg1)] += (1000 * arg2) - (stor28 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                        stor12[address(arg1)] += arg2 * stor14[address(arg1)] / 1000
                                        if not stor27[address(arg1)].length:
                                            if not stor22[address(msg.sender)]:
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                emit Transfer(arg2, this.address, arg1);
                                        else:
                                            mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                            if not stor22[address(msg.sender)]:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                            else:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                    else:
                                        if not stor11[address(arg1)]:
                                            balanceOf[address(msg.sender)] -= arg2
                                            if stor22[address(arg1)]:
                                                balanceOf[address(arg1)] += (1000 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                            else:
                                                totalSupply -= arg2 * stor28 / 1000
                                                balanceOf[address(arg1)] += (1000 * arg2) - (stor28 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                            stor12[address(arg1)] += arg2 * stor14[address(arg1)] / 1000
                                            if not stor27[address(arg1)].length:
                                                if not stor22[address(msg.sender)]:
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    emit Transfer(arg2, this.address, arg1);
                                            else:
                                                mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                                if not stor22[address(msg.sender)]:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                                else:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                        else:
                                            emit Transfer((stor14[stor11[address(arg1)]] * arg2 / 1000), arg1, stor11[address(arg1)]);
                                            balanceOf[address(msg.sender)] -= arg2
                                            if stor22[address(arg1)]:
                                                balanceOf[address(arg1)] += (1000 * arg2) - (stor14[address(arg1)] * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                            else:
                                                totalSupply -= arg2 * stor28 / 1000
                                                balanceOf[address(arg1)] += (1000 * arg2) - (stor28 * arg2) - (stor14[address(arg1)] * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                            balanceOf[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                            stor12[address(arg1)] += arg2 * stor14[address(arg1)] / 1000
                                            if not stor27[address(arg1)].length:
                                                if not stor22[address(msg.sender)]:
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    emit Transfer(arg2, this.address, arg1);
                                            else:
                                                mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                                if not stor22[address(msg.sender)]:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                                else:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                        else:
                            if stor15[address(msg.sender)]:
                                idx = 160
                                s = 0
                                while stor27[address(arg1)].length + 128 > idx:
                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                    idx = idx + 32
                                    s = s + 1
                                    continue 
                                if not uint8(stor23[address(arg1)]):
                                    balanceOf[address(msg.sender)] -= arg2
                                    if stor22[address(arg1)]:
                                        balanceOf[address(arg1)] += (1000 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                    else:
                                        totalSupply -= arg2 * stor28 / 1000
                                        balanceOf[address(arg1)] += (1000 * arg2) - (stor28 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                    stor12[address(arg1)] += arg2 * stor14[address(arg1)] / 1000
                                    if not stor27[address(arg1)].length:
                                        if not stor22[address(msg.sender)]:
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            emit Transfer(arg2, this.address, arg1);
                                    else:
                                        mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                        if not stor22[address(msg.sender)]:
                                            idx = ceil32(stor27[address(arg1)].length) + 288
                                            s = 0
                                            while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                idx = idx + 32
                                                s = s + 1
                                                continue 
                                            emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                        else:
                                            idx = ceil32(stor27[address(arg1)].length) + 288
                                            s = 0
                                            while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                idx = idx + 32
                                                s = s + 1
                                                continue 
                                            emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                else:
                                    if not stor11[address(arg1)]:
                                        balanceOf[address(msg.sender)] -= arg2
                                        if stor22[address(arg1)]:
                                            balanceOf[address(arg1)] += (1000 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                        else:
                                            totalSupply -= arg2 * stor28 / 1000
                                            balanceOf[address(arg1)] += (1000 * arg2) - (stor28 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                        stor12[address(arg1)] += arg2 * stor14[address(arg1)] / 1000
                                        if not stor27[address(arg1)].length:
                                            if not stor22[address(msg.sender)]:
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                emit Transfer(arg2, this.address, arg1);
                                        else:
                                            mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                            if not stor22[address(msg.sender)]:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                            else:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                    else:
                                        emit Transfer((stor14[stor11[address(arg1)]] * arg2 / 1000), arg1, stor11[address(arg1)]);
                                        balanceOf[address(msg.sender)] -= arg2
                                        if stor22[address(arg1)]:
                                            balanceOf[address(arg1)] += (1000 * arg2) - (stor14[address(arg1)] * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                        else:
                                            totalSupply -= arg2 * stor28 / 1000
                                            balanceOf[address(arg1)] += (1000 * arg2) - (stor28 * arg2) - (stor14[address(arg1)] * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                        balanceOf[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                        stor12[address(arg1)] += arg2 * stor14[address(arg1)] / 1000
                                        if not stor27[address(arg1)].length:
                                            if not stor22[address(msg.sender)]:
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                emit Transfer(arg2, this.address, arg1);
                                        else:
                                            mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                            if not stor22[address(msg.sender)]:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                            else:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                            else:
                                if arg1 == msg.sender:
                                    stor19[address(arg1)] += arg2 / 10
                                    stor20[address(arg1)] += arg2 / 100
                                    stor21[address(arg1)] += arg2 / 1000
                                    idx = 160
                                    s = 0
                                    while stor27[address(arg1)].length + 128 > idx:
                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    if not uint8(stor23[address(arg1)]):
                                        balanceOf[address(msg.sender)] -= arg2
                                        if stor22[address(arg1)]:
                                            balanceOf[address(arg1)] += (1000 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                        else:
                                            totalSupply -= arg2 * stor28 / 1000
                                            balanceOf[address(arg1)] += (1000 * arg2) - (stor28 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                        stor12[address(arg1)] += arg2 * stor14[address(arg1)] / 1000
                                        if not stor27[address(arg1)].length:
                                            if not stor22[address(msg.sender)]:
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                emit Transfer(arg2, this.address, arg1);
                                        else:
                                            mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                            if not stor22[address(msg.sender)]:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                            else:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                    else:
                                        if not stor11[address(arg1)]:
                                            balanceOf[address(msg.sender)] -= arg2
                                            if stor22[address(arg1)]:
                                                balanceOf[address(arg1)] += (1000 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                            else:
                                                totalSupply -= arg2 * stor28 / 1000
                                                balanceOf[address(arg1)] += (1000 * arg2) - (stor28 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                            stor12[address(arg1)] += arg2 * stor14[address(arg1)] / 1000
                                            if not stor27[address(arg1)].length:
                                                if not stor22[address(msg.sender)]:
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    emit Transfer(arg2, this.address, arg1);
                                            else:
                                                mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                                if not stor22[address(msg.sender)]:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                                else:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                        else:
                                            emit Transfer((stor14[stor11[address(arg1)]] * arg2 / 1000), arg1, stor11[address(arg1)]);
                                            balanceOf[address(msg.sender)] -= arg2
                                            if stor22[address(arg1)]:
                                                balanceOf[address(arg1)] += (1000 * arg2) - (stor14[address(arg1)] * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                            else:
                                                totalSupply -= arg2 * stor28 / 1000
                                                balanceOf[address(arg1)] += (1000 * arg2) - (stor28 * arg2) - (stor14[address(arg1)] * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                            balanceOf[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                            stor12[address(arg1)] += arg2 * stor14[address(arg1)] / 1000
                                            if not stor27[address(arg1)].length:
                                                if not stor22[address(msg.sender)]:
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    emit Transfer(arg2, this.address, arg1);
                                            else:
                                                mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                                if not stor22[address(msg.sender)]:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                                else:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                else:
                                    if stor15[address(msg.sender)]:
                                        stor19[address(arg1)] += arg2 / 10
                                        stor20[address(arg1)] += arg2 / 100
                                        stor21[address(arg1)] += arg2 / 1000
                                        idx = 160
                                        s = 0
                                        while stor27[address(arg1)].length + 128 > idx:
                                            mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                            idx = idx + 32
                                            s = s + 1
                                            continue 
                                        if not uint8(stor23[address(arg1)]):
                                            balanceOf[address(msg.sender)] -= arg2
                                            if stor22[address(arg1)]:
                                                balanceOf[address(arg1)] += (1000 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                            else:
                                                totalSupply -= arg2 * stor28 / 1000
                                                balanceOf[address(arg1)] += (1000 * arg2) - (stor28 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                            stor12[address(arg1)] += arg2 * stor14[address(arg1)] / 1000
                                            if not stor27[address(arg1)].length:
                                                if not stor22[address(msg.sender)]:
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    emit Transfer(arg2, this.address, arg1);
                                            else:
                                                mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                                if not stor22[address(msg.sender)]:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                                else:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                        else:
                                            if not stor11[address(arg1)]:
                                                balanceOf[address(msg.sender)] -= arg2
                                                if stor22[address(arg1)]:
                                                    balanceOf[address(arg1)] += (1000 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                                else:
                                                    totalSupply -= arg2 * stor28 / 1000
                                                    balanceOf[address(arg1)] += (1000 * arg2) - (stor28 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                                stor12[address(arg1)] += arg2 * stor14[address(arg1)] / 1000
                                                if not stor27[address(arg1)].length:
                                                    if not stor22[address(msg.sender)]:
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        emit Transfer(arg2, this.address, arg1);
                                                else:
                                                    mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                                    if not stor22[address(msg.sender)]:
                                                        idx = ceil32(stor27[address(arg1)].length) + 288
                                                        s = 0
                                                        while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                                    else:
                                                        idx = ceil32(stor27[address(arg1)].length) + 288
                                                        s = 0
                                                        while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                            else:
                                                emit Transfer((stor14[stor11[address(arg1)]] * arg2 / 1000), arg1, stor11[address(arg1)]);
                                                balanceOf[address(msg.sender)] -= arg2
                                                if stor22[address(arg1)]:
                                                    balanceOf[address(arg1)] += (1000 * arg2) - (stor14[address(arg1)] * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                                else:
                                                    totalSupply -= arg2 * stor28 / 1000
                                                    balanceOf[address(arg1)] += (1000 * arg2) - (stor28 * arg2) - (stor14[address(arg1)] * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                                balanceOf[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                                stor12[address(arg1)] += arg2 * stor14[address(arg1)] / 1000
                                                if not stor27[address(arg1)].length:
                                                    if not stor22[address(msg.sender)]:
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        emit Transfer(arg2, this.address, arg1);
                                                else:
                                                    mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                                    if not stor22[address(msg.sender)]:
                                                        idx = ceil32(stor27[address(arg1)].length) + 288
                                                        s = 0
                                                        while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                                    else:
                                                        idx = ceil32(stor27[address(arg1)].length) + 288
                                                        s = 0
                                                        while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                    else:
                                        if arg1:
                                            stor15[address(msg.sender)] = arg1
                                            stor16[msg.sender] = stor16[address(arg1)]
                                            stor17[msg.sender] = stor17[address(arg1)]
                                            stor18[msg.sender] = stor18[address(arg1)]
                                            stor11[msg.sender] = stor11[address(arg1)]
                                            uint8(stor23[address(msg.sender)]) = 0
                                            stor19[address(msg.sender)] += stor19[address(arg1)] / 10
                                            stor20[address(msg.sender)] += stor20[address(arg1)] / 10
                                            stor21[address(msg.sender)] += stor21[address(arg1)] / 10
                                        stor19[address(arg1)] += arg2 / 10
                                        stor20[address(arg1)] += arg2 / 100
                                        stor21[address(arg1)] += arg2 / 1000
                                        idx = 160
                                        s = 0
                                        while stor27[address(arg1)].length + 128 > idx:
                                            mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                            idx = idx + 32
                                            s = s + 1
                                            continue 
                                        if not uint8(stor23[address(arg1)]):
                                            balanceOf[address(msg.sender)] -= arg2
                                            if stor22[address(arg1)]:
                                                balanceOf[address(arg1)] += (1000 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                            else:
                                                totalSupply -= arg2 * stor28 / 1000
                                                balanceOf[address(arg1)] += (1000 * arg2) - (stor28 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                            stor12[address(arg1)] += arg2 * stor14[address(arg1)] / 1000
                                            if not stor27[address(arg1)].length:
                                                if not stor22[address(msg.sender)]:
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    emit Transfer(arg2, this.address, arg1);
                                            else:
                                                mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                                if not stor22[address(msg.sender)]:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                                else:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                        else:
                                            if not stor11[address(arg1)]:
                                                balanceOf[address(msg.sender)] -= arg2
                                                if stor22[address(arg1)]:
                                                    balanceOf[address(arg1)] += (1000 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                                else:
                                                    totalSupply -= arg2 * stor28 / 1000
                                                    balanceOf[address(arg1)] += (1000 * arg2) - (stor28 * arg2) - (stor14[address(arg1)] * arg2) / 1000
                                                stor12[address(arg1)] += arg2 * stor14[address(arg1)] / 1000
                                                if not stor27[address(arg1)].length:
                                                    if not stor22[address(msg.sender)]:
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        emit Transfer(arg2, this.address, arg1);
                                                else:
                                                    mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                                    if not stor22[address(msg.sender)]:
                                                        idx = ceil32(stor27[address(arg1)].length) + 288
                                                        s = 0
                                                        while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                                    else:
                                                        idx = ceil32(stor27[address(arg1)].length) + 288
                                                        s = 0
                                                        while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                            else:
                                                emit Transfer((stor14[stor11[address(arg1)]] * arg2 / 1000), arg1, stor11[address(arg1)]);
                                                balanceOf[address(msg.sender)] -= arg2
                                                if stor22[address(arg1)]:
                                                    balanceOf[address(arg1)] += (1000 * arg2) - (stor14[address(arg1)] * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                                else:
                                                    totalSupply -= arg2 * stor28 / 1000
                                                    balanceOf[address(arg1)] += (1000 * arg2) - (stor28 * arg2) - (stor14[address(arg1)] * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                                balanceOf[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                                stor12[address(arg1)] += arg2 * stor14[address(arg1)] / 1000
                                                if not stor27[address(arg1)].length:
                                                    if not stor22[address(msg.sender)]:
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        emit Transfer(arg2, this.address, arg1);
                                                else:
                                                    mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                                    if not stor22[address(msg.sender)]:
                                                        idx = ceil32(stor27[address(arg1)].length) + 288
                                                        s = 0
                                                        while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                                    else:
                                                        idx = ceil32(stor27[address(arg1)].length) + 288
                                                        s = 0
                                                        while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                        sub_064d5a8b[address(msg.sender)] = 0
                        sub_c1198ea1[address(msg.sender)] = 0
    else:
        require stor11[address(arg1)]
        require not stor25[address(msg.sender)]
        require balanceOf[stor11[address(arg1)]] + arg2 >= balanceOf[stor11[address(arg1)]]
        require balanceOf[address(msg.sender)] >= arg2
        if stor11[address(arg1)] != msg.sender:
            if not arg2:
                require not stor25[address(msg.sender)]
                if stor11[address(msg.sender)] == stor11[address(arg1)]:
                    uint256(stor24[address(msg.sender)]) = not uint8(stor24[address(msg.sender)]) or Mask(248, 8, uint256(stor24[address(msg.sender)]))
                else:
                    if not stor11[address(arg1)]:
                        uint8(stor24[address(msg.sender)]) = 0
                    else:
                        if stor11[address(arg1)] == msg.sender:
                            uint8(stor24[address(msg.sender)]) = 0
                        else:
                            uint8(stor24[address(msg.sender)]) = 1
                            stor11[address(msg.sender)] = stor11[address(arg1)]
                require balanceOf[address(msg.sender)] > stor35 / 100
                if not stor22[address(msg.sender)]:
                    balanceOf[address(msg.sender)] -= stor35 / 100
                    totalSupply -= stor35 / 100
            else:
                if this.address == stor11[address(arg1)]:
                    require not stor25[address(msg.sender)]
                    require eth.balance(this.address)
                    if 10^16 * totalSupply / eth.balance(this.address) < 1000:
                        stor12[stor6] += (eth.balance(this.address) / 10^12) - (10 * totalSupply) / 10
                        totalSupply += (eth.balance(this.address) / 10^12) - (10 * totalSupply) / 10
                        sub_8f41bb58 = 10 * 10^6
                        emit 0x3b98ac72: 10 * 10^6
                        if balanceOf[address(msg.sender)] >= arg2 / 10^6:
                            balanceOf[address(msg.sender)] -= arg2 / 10^6
                            totalSupply -= arg2 / 10^6
                            call msg.sender with:
                               value 10^16 * arg2 / 10^6 / 1000 wei
                                 gas 2300 * is_zero(value) wei
                        else:
                            balanceOf[address(msg.sender)] = 0
                            totalSupply -= balanceOf[address(msg.sender)]
                            call msg.sender with:
                               value 10^16 * balanceOf[address(msg.sender)] / 1000 wei
                                 gas 2300 * is_zero(value) wei
                    else:
                        require 10^16 * totalSupply / eth.balance(this.address)
                        sub_8f41bb58 = 10^10 / 10^16 * totalSupply / eth.balance(this.address)
                        emit 0x3b98ac72: (10^10 / 10^16 * totalSupply / eth.balance(this.address))
                        require 10^16 * totalSupply / eth.balance(this.address) <= 1250
                        if balanceOf[address(msg.sender)] >= arg2 / 10^6:
                            balanceOf[address(msg.sender)] -= arg2 / 10^6
                            totalSupply -= arg2 / 10^6
                            require 10^16 * totalSupply / eth.balance(this.address)
                            call msg.sender with:
                               value 10^16 * arg2 / 10^6 / 10^16 * totalSupply / eth.balance(this.address) wei
                                 gas 2300 * is_zero(value) wei
                        else:
                            balanceOf[address(msg.sender)] = 0
                            totalSupply -= balanceOf[address(msg.sender)]
                            require 10^16 * totalSupply / eth.balance(this.address)
                            call msg.sender with:
                               value 10^16 * balanceOf[address(msg.sender)] / 10^16 * totalSupply / eth.balance(this.address) wei
                                 gas 2300 * is_zero(value) wei
                    require ext_call.success
                else:
                    if msg.sender == stor11[address(arg1)]:
                        balanceOf[address(msg.sender)] -= arg2
                        stor12[stor11[address(arg1)]] += arg2
                        emit Transfer(arg2, arg1, this.address);
                    else:
                        if stor22[stor11[address(arg1)]]:
                            if stor11[address(arg1)] == msg.sender:
                                stor19[stor11[address(arg1)]] += arg2 / 10
                                stor20[stor11[address(arg1)]] += arg2 / 100
                                stor21[stor11[address(arg1)]] += arg2 / 1000
                                idx = 160
                                s = 0
                                while stor27[address(arg1)].length + 128 > idx:
                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                    idx = idx + 32
                                    s = s + 1
                                    continue 
                                if not uint8(stor23[stor11[address(arg1)]]):
                                    balanceOf[address(msg.sender)] -= arg2
                                    if stor22[stor11[address(arg1)]]:
                                        balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                    else:
                                        totalSupply -= arg2 * stor28 / 1000
                                        balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor28 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                    stor12[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                    if not stor27[address(arg1)].length:
                                        if not stor22[address(msg.sender)]:
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            emit Transfer(arg2, this.address, arg1);
                                    else:
                                        mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                        if not stor22[address(msg.sender)]:
                                            idx = ceil32(stor27[address(arg1)].length) + 288
                                            s = 0
                                            while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                idx = idx + 32
                                                s = s + 1
                                                continue 
                                            emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                        else:
                                            idx = ceil32(stor27[address(arg1)].length) + 288
                                            s = 0
                                            while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                idx = idx + 32
                                                s = s + 1
                                                continue 
                                            emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                else:
                                    if not stor11[stor11[address(arg1)]]:
                                        balanceOf[address(msg.sender)] -= arg2
                                        if stor22[stor11[address(arg1)]]:
                                            balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                        else:
                                            totalSupply -= arg2 * stor28 / 1000
                                            balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor28 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                        stor12[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                        if not stor27[address(arg1)].length:
                                            if not stor22[address(msg.sender)]:
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                emit Transfer(arg2, this.address, arg1);
                                        else:
                                            mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                            if not stor22[address(msg.sender)]:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                            else:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                    else:
                                        emit Transfer((stor14[stor11[stor11[address(arg1)]]] * arg2 / 1000), stor11[address(arg1)], stor11[stor11[address(arg1)]]);
                                        balanceOf[address(msg.sender)] -= arg2
                                        if stor22[stor11[address(arg1)]]:
                                            balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor14[stor11[address(arg1)]] * arg2) - (stor14[stor11[stor11[address(arg1)]]] * arg2) / 1000
                                        else:
                                            totalSupply -= arg2 * stor28 / 1000
                                            balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor28 * arg2) - (stor14[stor11[address(arg1)]] * arg2) - (stor14[stor11[stor11[address(arg1)]]] * arg2) / 1000
                                        balanceOf[stor11[stor11[address(arg1)]]] += arg2 * stor14[stor11[stor11[address(arg1)]]] / 1000
                                        stor12[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                        if not stor27[address(arg1)].length:
                                            if not stor22[address(msg.sender)]:
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                emit Transfer(arg2, this.address, arg1);
                                        else:
                                            mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                            if not stor22[address(msg.sender)]:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                            else:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                            else:
                                if stor15[address(msg.sender)]:
                                    stor19[stor11[address(arg1)]] += arg2 / 10
                                    stor20[stor11[address(arg1)]] += arg2 / 100
                                    stor21[stor11[address(arg1)]] += arg2 / 1000
                                    idx = 160
                                    s = 0
                                    while stor27[address(arg1)].length + 128 > idx:
                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    if not uint8(stor23[stor11[address(arg1)]]):
                                        balanceOf[address(msg.sender)] -= arg2
                                        if stor22[stor11[address(arg1)]]:
                                            balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                        else:
                                            totalSupply -= arg2 * stor28 / 1000
                                            balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor28 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                        stor12[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                        if not stor27[address(arg1)].length:
                                            if not stor22[address(msg.sender)]:
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                emit Transfer(arg2, this.address, arg1);
                                        else:
                                            mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                            if not stor22[address(msg.sender)]:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                            else:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                    else:
                                        if not stor11[stor11[address(arg1)]]:
                                            balanceOf[address(msg.sender)] -= arg2
                                            if stor22[stor11[address(arg1)]]:
                                                balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                            else:
                                                totalSupply -= arg2 * stor28 / 1000
                                                balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor28 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                            stor12[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                            if not stor27[address(arg1)].length:
                                                if not stor22[address(msg.sender)]:
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    emit Transfer(arg2, this.address, arg1);
                                            else:
                                                mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                                if not stor22[address(msg.sender)]:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                                else:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                        else:
                                            emit Transfer((stor14[stor11[stor11[address(arg1)]]] * arg2 / 1000), stor11[address(arg1)], stor11[stor11[address(arg1)]]);
                                            balanceOf[address(msg.sender)] -= arg2
                                            if stor22[stor11[address(arg1)]]:
                                                balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor14[stor11[address(arg1)]] * arg2) - (stor14[stor11[stor11[address(arg1)]]] * arg2) / 1000
                                            else:
                                                totalSupply -= arg2 * stor28 / 1000
                                                balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor28 * arg2) - (stor14[stor11[address(arg1)]] * arg2) - (stor14[stor11[stor11[address(arg1)]]] * arg2) / 1000
                                            balanceOf[stor11[stor11[address(arg1)]]] += arg2 * stor14[stor11[stor11[address(arg1)]]] / 1000
                                            stor12[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                            if not stor27[address(arg1)].length:
                                                if not stor22[address(msg.sender)]:
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    emit Transfer(arg2, this.address, arg1);
                                            else:
                                                mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                                if not stor22[address(msg.sender)]:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                                else:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                else:
                                    if stor11[address(arg1)]:
                                        stor15[address(msg.sender)] = stor11[address(arg1)]
                                        stor16[msg.sender] = stor16[stor11[address(arg1)]]
                                        stor17[msg.sender] = stor17[stor11[address(arg1)]]
                                        stor18[msg.sender] = stor18[stor11[address(arg1)]]
                                        stor11[msg.sender] = stor11[stor11[address(arg1)]]
                                        uint8(stor23[address(msg.sender)]) = 0
                                        stor19[address(msg.sender)] += stor19[stor11[address(arg1)]] / 10
                                        stor20[address(msg.sender)] += stor20[stor11[address(arg1)]] / 10
                                        stor21[address(msg.sender)] += stor21[stor11[address(arg1)]] / 10
                                    stor19[stor11[address(arg1)]] += arg2 / 10
                                    stor20[stor11[address(arg1)]] += arg2 / 100
                                    stor21[stor11[address(arg1)]] += arg2 / 1000
                                    idx = 160
                                    s = 0
                                    while stor27[address(arg1)].length + 128 > idx:
                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    if not uint8(stor23[stor11[address(arg1)]]):
                                        balanceOf[address(msg.sender)] -= arg2
                                        if stor22[stor11[address(arg1)]]:
                                            balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                        else:
                                            totalSupply -= arg2 * stor28 / 1000
                                            balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor28 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                        stor12[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                        if not stor27[address(arg1)].length:
                                            if not stor22[address(msg.sender)]:
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                emit Transfer(arg2, this.address, arg1);
                                        else:
                                            mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                            if not stor22[address(msg.sender)]:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                            else:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                    else:
                                        if not stor11[stor11[address(arg1)]]:
                                            balanceOf[address(msg.sender)] -= arg2
                                            if stor22[stor11[address(arg1)]]:
                                                balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                            else:
                                                totalSupply -= arg2 * stor28 / 1000
                                                balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor28 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                            stor12[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                            if not stor27[address(arg1)].length:
                                                if not stor22[address(msg.sender)]:
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    emit Transfer(arg2, this.address, arg1);
                                            else:
                                                mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                                if not stor22[address(msg.sender)]:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                                else:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                        else:
                                            emit Transfer((stor14[stor11[stor11[address(arg1)]]] * arg2 / 1000), stor11[address(arg1)], stor11[stor11[address(arg1)]]);
                                            balanceOf[address(msg.sender)] -= arg2
                                            if stor22[stor11[address(arg1)]]:
                                                balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor14[stor11[address(arg1)]] * arg2) - (stor14[stor11[stor11[address(arg1)]]] * arg2) / 1000
                                            else:
                                                totalSupply -= arg2 * stor28 / 1000
                                                balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor28 * arg2) - (stor14[stor11[address(arg1)]] * arg2) - (stor14[stor11[stor11[address(arg1)]]] * arg2) / 1000
                                            balanceOf[stor11[stor11[address(arg1)]]] += arg2 * stor14[stor11[stor11[address(arg1)]]] / 1000
                                            stor12[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                            if not stor27[address(arg1)].length:
                                                if not stor22[address(msg.sender)]:
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    emit Transfer(arg2, this.address, arg1);
                                            else:
                                                mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                                if not stor22[address(msg.sender)]:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                                else:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                        else:
                            if stor15[address(msg.sender)]:
                                idx = 160
                                s = 0
                                while stor27[address(arg1)].length + 128 > idx:
                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                    idx = idx + 32
                                    s = s + 1
                                    continue 
                                if not uint8(stor23[stor11[address(arg1)]]):
                                    balanceOf[address(msg.sender)] -= arg2
                                    if stor22[stor11[address(arg1)]]:
                                        balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                    else:
                                        totalSupply -= arg2 * stor28 / 1000
                                        balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor28 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                    stor12[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                    if not stor27[address(arg1)].length:
                                        if not stor22[address(msg.sender)]:
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            emit Transfer(arg2, this.address, arg1);
                                    else:
                                        mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                        if not stor22[address(msg.sender)]:
                                            idx = ceil32(stor27[address(arg1)].length) + 288
                                            s = 0
                                            while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                idx = idx + 32
                                                s = s + 1
                                                continue 
                                            emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                        else:
                                            idx = ceil32(stor27[address(arg1)].length) + 288
                                            s = 0
                                            while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                idx = idx + 32
                                                s = s + 1
                                                continue 
                                            emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                else:
                                    if not stor11[stor11[address(arg1)]]:
                                        balanceOf[address(msg.sender)] -= arg2
                                        if stor22[stor11[address(arg1)]]:
                                            balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                        else:
                                            totalSupply -= arg2 * stor28 / 1000
                                            balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor28 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                        stor12[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                        if not stor27[address(arg1)].length:
                                            if not stor22[address(msg.sender)]:
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                emit Transfer(arg2, this.address, arg1);
                                        else:
                                            mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                            if not stor22[address(msg.sender)]:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                            else:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                    else:
                                        emit Transfer((stor14[stor11[stor11[address(arg1)]]] * arg2 / 1000), stor11[address(arg1)], stor11[stor11[address(arg1)]]);
                                        balanceOf[address(msg.sender)] -= arg2
                                        if stor22[stor11[address(arg1)]]:
                                            balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor14[stor11[address(arg1)]] * arg2) - (stor14[stor11[stor11[address(arg1)]]] * arg2) / 1000
                                        else:
                                            totalSupply -= arg2 * stor28 / 1000
                                            balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor28 * arg2) - (stor14[stor11[address(arg1)]] * arg2) - (stor14[stor11[stor11[address(arg1)]]] * arg2) / 1000
                                        balanceOf[stor11[stor11[address(arg1)]]] += arg2 * stor14[stor11[stor11[address(arg1)]]] / 1000
                                        stor12[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                        if not stor27[address(arg1)].length:
                                            if not stor22[address(msg.sender)]:
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                emit Transfer(arg2, this.address, arg1);
                                        else:
                                            mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                            if not stor22[address(msg.sender)]:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                            else:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                            else:
                                if stor11[address(arg1)] == msg.sender:
                                    stor19[stor11[address(arg1)]] += arg2 / 10
                                    stor20[stor11[address(arg1)]] += arg2 / 100
                                    stor21[stor11[address(arg1)]] += arg2 / 1000
                                    idx = 160
                                    s = 0
                                    while stor27[address(arg1)].length + 128 > idx:
                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    if not uint8(stor23[stor11[address(arg1)]]):
                                        balanceOf[address(msg.sender)] -= arg2
                                        if stor22[stor11[address(arg1)]]:
                                            balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                        else:
                                            totalSupply -= arg2 * stor28 / 1000
                                            balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor28 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                        stor12[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                        if not stor27[address(arg1)].length:
                                            if not stor22[address(msg.sender)]:
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                emit Transfer(arg2, this.address, arg1);
                                        else:
                                            mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                            if not stor22[address(msg.sender)]:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                            else:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                    else:
                                        if not stor11[stor11[address(arg1)]]:
                                            balanceOf[address(msg.sender)] -= arg2
                                            if stor22[stor11[address(arg1)]]:
                                                balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                            else:
                                                totalSupply -= arg2 * stor28 / 1000
                                                balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor28 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                            stor12[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                            if not stor27[address(arg1)].length:
                                                if not stor22[address(msg.sender)]:
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    emit Transfer(arg2, this.address, arg1);
                                            else:
                                                mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                                if not stor22[address(msg.sender)]:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                                else:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                        else:
                                            emit Transfer((stor14[stor11[stor11[address(arg1)]]] * arg2 / 1000), stor11[address(arg1)], stor11[stor11[address(arg1)]]);
                                            balanceOf[address(msg.sender)] -= arg2
                                            if stor22[stor11[address(arg1)]]:
                                                balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor14[stor11[address(arg1)]] * arg2) - (stor14[stor11[stor11[address(arg1)]]] * arg2) / 1000
                                            else:
                                                totalSupply -= arg2 * stor28 / 1000
                                                balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor28 * arg2) - (stor14[stor11[address(arg1)]] * arg2) - (stor14[stor11[stor11[address(arg1)]]] * arg2) / 1000
                                            balanceOf[stor11[stor11[address(arg1)]]] += arg2 * stor14[stor11[stor11[address(arg1)]]] / 1000
                                            stor12[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                            if not stor27[address(arg1)].length:
                                                if not stor22[address(msg.sender)]:
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    emit Transfer(arg2, this.address, arg1);
                                            else:
                                                mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                                if not stor22[address(msg.sender)]:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                                else:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                else:
                                    if stor15[address(msg.sender)]:
                                        stor19[stor11[address(arg1)]] += arg2 / 10
                                        stor20[stor11[address(arg1)]] += arg2 / 100
                                        stor21[stor11[address(arg1)]] += arg2 / 1000
                                        idx = 160
                                        s = 0
                                        while stor27[address(arg1)].length + 128 > idx:
                                            mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                            idx = idx + 32
                                            s = s + 1
                                            continue 
                                        if not uint8(stor23[stor11[address(arg1)]]):
                                            balanceOf[address(msg.sender)] -= arg2
                                            if stor22[stor11[address(arg1)]]:
                                                balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                            else:
                                                totalSupply -= arg2 * stor28 / 1000
                                                balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor28 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                            stor12[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                            if not stor27[address(arg1)].length:
                                                if not stor22[address(msg.sender)]:
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    emit Transfer(arg2, this.address, arg1);
                                            else:
                                                mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                                if not stor22[address(msg.sender)]:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                                else:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                        else:
                                            if not stor11[stor11[address(arg1)]]:
                                                balanceOf[address(msg.sender)] -= arg2
                                                if stor22[stor11[address(arg1)]]:
                                                    balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                                else:
                                                    totalSupply -= arg2 * stor28 / 1000
                                                    balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor28 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                                stor12[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                                if not stor27[address(arg1)].length:
                                                    if not stor22[address(msg.sender)]:
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        emit Transfer(arg2, this.address, arg1);
                                                else:
                                                    mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                                    if not stor22[address(msg.sender)]:
                                                        idx = ceil32(stor27[address(arg1)].length) + 288
                                                        s = 0
                                                        while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                                    else:
                                                        idx = ceil32(stor27[address(arg1)].length) + 288
                                                        s = 0
                                                        while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                            else:
                                                emit Transfer((stor14[stor11[stor11[address(arg1)]]] * arg2 / 1000), stor11[address(arg1)], stor11[stor11[address(arg1)]]);
                                                balanceOf[address(msg.sender)] -= arg2
                                                if stor22[stor11[address(arg1)]]:
                                                    balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor14[stor11[address(arg1)]] * arg2) - (stor14[stor11[stor11[address(arg1)]]] * arg2) / 1000
                                                else:
                                                    totalSupply -= arg2 * stor28 / 1000
                                                    balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor28 * arg2) - (stor14[stor11[address(arg1)]] * arg2) - (stor14[stor11[stor11[address(arg1)]]] * arg2) / 1000
                                                balanceOf[stor11[stor11[address(arg1)]]] += arg2 * stor14[stor11[stor11[address(arg1)]]] / 1000
                                                stor12[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                                if not stor27[address(arg1)].length:
                                                    if not stor22[address(msg.sender)]:
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        emit Transfer(arg2, this.address, arg1);
                                                else:
                                                    mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                                    if not stor22[address(msg.sender)]:
                                                        idx = ceil32(stor27[address(arg1)].length) + 288
                                                        s = 0
                                                        while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                                    else:
                                                        idx = ceil32(stor27[address(arg1)].length) + 288
                                                        s = 0
                                                        while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                    else:
                                        if stor11[address(arg1)]:
                                            stor15[address(msg.sender)] = stor11[address(arg1)]
                                            stor16[msg.sender] = stor16[stor11[address(arg1)]]
                                            stor17[msg.sender] = stor17[stor11[address(arg1)]]
                                            stor18[msg.sender] = stor18[stor11[address(arg1)]]
                                            stor11[msg.sender] = stor11[stor11[address(arg1)]]
                                            uint8(stor23[address(msg.sender)]) = 0
                                            stor19[address(msg.sender)] += stor19[stor11[address(arg1)]] / 10
                                            stor20[address(msg.sender)] += stor20[stor11[address(arg1)]] / 10
                                            stor21[address(msg.sender)] += stor21[stor11[address(arg1)]] / 10
                                        stor19[stor11[address(arg1)]] += arg2 / 10
                                        stor20[stor11[address(arg1)]] += arg2 / 100
                                        stor21[stor11[address(arg1)]] += arg2 / 1000
                                        idx = 160
                                        s = 0
                                        while stor27[address(arg1)].length + 128 > idx:
                                            mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                            idx = idx + 32
                                            s = s + 1
                                            continue 
                                        if not uint8(stor23[stor11[address(arg1)]]):
                                            balanceOf[address(msg.sender)] -= arg2
                                            if stor22[stor11[address(arg1)]]:
                                                balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                            else:
                                                totalSupply -= arg2 * stor28 / 1000
                                                balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor28 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                            stor12[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                            if not stor27[address(arg1)].length:
                                                if not stor22[address(msg.sender)]:
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    emit Transfer(arg2, this.address, arg1);
                                            else:
                                                mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                                if not stor22[address(msg.sender)]:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                                else:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                        else:
                                            if not stor11[stor11[address(arg1)]]:
                                                balanceOf[address(msg.sender)] -= arg2
                                                if stor22[stor11[address(arg1)]]:
                                                    balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                                else:
                                                    totalSupply -= arg2 * stor28 / 1000
                                                    balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor28 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                                stor12[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                                if not stor27[address(arg1)].length:
                                                    if not stor22[address(msg.sender)]:
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        emit Transfer(arg2, this.address, arg1);
                                                else:
                                                    mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                                    if not stor22[address(msg.sender)]:
                                                        idx = ceil32(stor27[address(arg1)].length) + 288
                                                        s = 0
                                                        while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                                    else:
                                                        idx = ceil32(stor27[address(arg1)].length) + 288
                                                        s = 0
                                                        while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                            else:
                                                emit Transfer((stor14[stor11[stor11[address(arg1)]]] * arg2 / 1000), stor11[address(arg1)], stor11[stor11[address(arg1)]]);
                                                balanceOf[address(msg.sender)] -= arg2
                                                if stor22[stor11[address(arg1)]]:
                                                    balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor14[stor11[address(arg1)]] * arg2) - (stor14[stor11[stor11[address(arg1)]]] * arg2) / 1000
                                                else:
                                                    totalSupply -= arg2 * stor28 / 1000
                                                    balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor28 * arg2) - (stor14[stor11[address(arg1)]] * arg2) - (stor14[stor11[stor11[address(arg1)]]] * arg2) / 1000
                                                balanceOf[stor11[stor11[address(arg1)]]] += arg2 * stor14[stor11[stor11[address(arg1)]]] / 1000
                                                stor12[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                                if not stor27[address(arg1)].length:
                                                    if not stor22[address(msg.sender)]:
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        emit Transfer(arg2, this.address, arg1);
                                                else:
                                                    mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                                    if not stor22[address(msg.sender)]:
                                                        idx = ceil32(stor27[address(arg1)].length) + 288
                                                        s = 0
                                                        while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                                    else:
                                                        idx = ceil32(stor27[address(arg1)].length) + 288
                                                        s = 0
                                                        while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                        sub_064d5a8b[address(msg.sender)] = 0
                        sub_c1198ea1[address(msg.sender)] = 0
        else:
            if not arg2:
                require not stor25[address(msg.sender)]
                uint256(stor23[address(msg.sender)]) = not uint8(stor23[address(msg.sender)]) or Mask(248, 8, uint256(stor23[address(msg.sender)]))
                mem[256] = uint256(stor27[address(msg.sender)].field_0)
                idx = 256
                s = 0
                while stor27[address(msg.sender)].length + 256 > idx + 32:
                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                    idx = idx + 32
                    s = s + 1
                    continue 
                mem[stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32) + 256] = stor27[stor11[address(msg.sender)]].length
                mem[stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32) + 288] = uint256(stor27[stor11[address(msg.sender)]].field_0)
                idx = stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32) + 288
                s = 0
                while stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32) + stor27[stor11[address(msg.sender)]].length + 288 > idx + 32:
                    mem[idx + 32] = uint256(stor27[stor11[address(msg.sender)]][s].field_256)
                    idx = idx + 32
                    s = s + 1
                    continue 
                emit 0xf4bf15f5: Array(len=stor27[address(msg.sender)].length, data=mem[256 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32) + stor27[stor11[address(msg.sender)]].length + (floor32(stor27[stor11[address(msg.sender)]].length - 1) + -stor27[stor11[address(msg.sender)]].length + 32 % 32) + 32]), stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32) + 128, bool(uint8(not uint8(stor23[address(msg.sender)])))
                require balanceOf[address(msg.sender)] > stor35 / 100
                if not stor22[address(msg.sender)]:
                    balanceOf[address(msg.sender)] -= stor35 / 100
                    totalSupply -= stor35 / 100
            else:
                if this.address == stor11[address(arg1)]:
                    require not stor25[address(msg.sender)]
                    require eth.balance(this.address)
                    if 10^16 * totalSupply / eth.balance(this.address) < 1000:
                        stor12[stor6] += (eth.balance(this.address) / 10^12) - (10 * totalSupply) / 10
                        totalSupply += (eth.balance(this.address) / 10^12) - (10 * totalSupply) / 10
                        sub_8f41bb58 = 10 * 10^6
                        emit 0x3b98ac72: 10 * 10^6
                        if balanceOf[address(msg.sender)] >= arg2 / 10^6:
                            balanceOf[address(msg.sender)] -= arg2 / 10^6
                            totalSupply -= arg2 / 10^6
                            call msg.sender with:
                               value 10^16 * arg2 / 10^6 / 1000 wei
                                 gas 2300 * is_zero(value) wei
                        else:
                            balanceOf[address(msg.sender)] = 0
                            totalSupply -= balanceOf[address(msg.sender)]
                            call msg.sender with:
                               value 10^16 * balanceOf[address(msg.sender)] / 1000 wei
                                 gas 2300 * is_zero(value) wei
                    else:
                        require 10^16 * totalSupply / eth.balance(this.address)
                        sub_8f41bb58 = 10^10 / 10^16 * totalSupply / eth.balance(this.address)
                        emit 0x3b98ac72: (10^10 / 10^16 * totalSupply / eth.balance(this.address))
                        require 10^16 * totalSupply / eth.balance(this.address) <= 1250
                        if balanceOf[address(msg.sender)] >= arg2 / 10^6:
                            balanceOf[address(msg.sender)] -= arg2 / 10^6
                            totalSupply -= arg2 / 10^6
                            require 10^16 * totalSupply / eth.balance(this.address)
                            call msg.sender with:
                               value 10^16 * arg2 / 10^6 / 10^16 * totalSupply / eth.balance(this.address) wei
                                 gas 2300 * is_zero(value) wei
                        else:
                            balanceOf[address(msg.sender)] = 0
                            totalSupply -= balanceOf[address(msg.sender)]
                            require 10^16 * totalSupply / eth.balance(this.address)
                            call msg.sender with:
                               value 10^16 * balanceOf[address(msg.sender)] / 10^16 * totalSupply / eth.balance(this.address) wei
                                 gas 2300 * is_zero(value) wei
                    require ext_call.success
                else:
                    if msg.sender == stor11[address(arg1)]:
                        balanceOf[address(msg.sender)] -= arg2
                        stor12[stor11[address(arg1)]] += arg2
                        emit Transfer(arg2, arg1, this.address);
                    else:
                        if stor22[stor11[address(arg1)]]:
                            if stor11[address(arg1)] == msg.sender:
                                stor19[stor11[address(arg1)]] += arg2 / 10
                                stor20[stor11[address(arg1)]] += arg2 / 100
                                stor21[stor11[address(arg1)]] += arg2 / 1000
                                idx = 160
                                s = 0
                                while stor27[address(arg1)].length + 128 > idx:
                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                    idx = idx + 32
                                    s = s + 1
                                    continue 
                                if not uint8(stor23[stor11[address(arg1)]]):
                                    balanceOf[address(msg.sender)] -= arg2
                                    if stor22[stor11[address(arg1)]]:
                                        balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                    else:
                                        totalSupply -= arg2 * stor28 / 1000
                                        balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor28 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                    stor12[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                    if not stor27[address(arg1)].length:
                                        if not stor22[address(msg.sender)]:
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            emit Transfer(arg2, this.address, arg1);
                                    else:
                                        mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                        if not stor22[address(msg.sender)]:
                                            idx = ceil32(stor27[address(arg1)].length) + 288
                                            s = 0
                                            while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                idx = idx + 32
                                                s = s + 1
                                                continue 
                                            emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                        else:
                                            idx = ceil32(stor27[address(arg1)].length) + 288
                                            s = 0
                                            while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                idx = idx + 32
                                                s = s + 1
                                                continue 
                                            emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                else:
                                    if not stor11[stor11[address(arg1)]]:
                                        balanceOf[address(msg.sender)] -= arg2
                                        if stor22[stor11[address(arg1)]]:
                                            balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                        else:
                                            totalSupply -= arg2 * stor28 / 1000
                                            balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor28 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                        stor12[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                        if not stor27[address(arg1)].length:
                                            if not stor22[address(msg.sender)]:
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                emit Transfer(arg2, this.address, arg1);
                                        else:
                                            mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                            if not stor22[address(msg.sender)]:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                            else:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                    else:
                                        emit Transfer((stor14[stor11[stor11[address(arg1)]]] * arg2 / 1000), stor11[address(arg1)], stor11[stor11[address(arg1)]]);
                                        balanceOf[address(msg.sender)] -= arg2
                                        if stor22[stor11[address(arg1)]]:
                                            balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor14[stor11[address(arg1)]] * arg2) - (stor14[stor11[stor11[address(arg1)]]] * arg2) / 1000
                                        else:
                                            totalSupply -= arg2 * stor28 / 1000
                                            balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor28 * arg2) - (stor14[stor11[address(arg1)]] * arg2) - (stor14[stor11[stor11[address(arg1)]]] * arg2) / 1000
                                        balanceOf[stor11[stor11[address(arg1)]]] += arg2 * stor14[stor11[stor11[address(arg1)]]] / 1000
                                        stor12[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                        if not stor27[address(arg1)].length:
                                            if not stor22[address(msg.sender)]:
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                emit Transfer(arg2, this.address, arg1);
                                        else:
                                            mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                            if not stor22[address(msg.sender)]:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                            else:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                            else:
                                if stor15[address(msg.sender)]:
                                    stor19[stor11[address(arg1)]] += arg2 / 10
                                    stor20[stor11[address(arg1)]] += arg2 / 100
                                    stor21[stor11[address(arg1)]] += arg2 / 1000
                                    idx = 160
                                    s = 0
                                    while stor27[address(arg1)].length + 128 > idx:
                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    if not uint8(stor23[stor11[address(arg1)]]):
                                        balanceOf[address(msg.sender)] -= arg2
                                        if stor22[stor11[address(arg1)]]:
                                            balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                        else:
                                            totalSupply -= arg2 * stor28 / 1000
                                            balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor28 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                        stor12[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                        if not stor27[address(arg1)].length:
                                            if not stor22[address(msg.sender)]:
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                emit Transfer(arg2, this.address, arg1);
                                        else:
                                            mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                            if not stor22[address(msg.sender)]:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                            else:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                    else:
                                        if not stor11[stor11[address(arg1)]]:
                                            balanceOf[address(msg.sender)] -= arg2
                                            if stor22[stor11[address(arg1)]]:
                                                balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                            else:
                                                totalSupply -= arg2 * stor28 / 1000
                                                balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor28 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                            stor12[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                            if not stor27[address(arg1)].length:
                                                if not stor22[address(msg.sender)]:
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    emit Transfer(arg2, this.address, arg1);
                                            else:
                                                mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                                if not stor22[address(msg.sender)]:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                                else:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                        else:
                                            emit Transfer((stor14[stor11[stor11[address(arg1)]]] * arg2 / 1000), stor11[address(arg1)], stor11[stor11[address(arg1)]]);
                                            balanceOf[address(msg.sender)] -= arg2
                                            if stor22[stor11[address(arg1)]]:
                                                balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor14[stor11[address(arg1)]] * arg2) - (stor14[stor11[stor11[address(arg1)]]] * arg2) / 1000
                                            else:
                                                totalSupply -= arg2 * stor28 / 1000
                                                balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor28 * arg2) - (stor14[stor11[address(arg1)]] * arg2) - (stor14[stor11[stor11[address(arg1)]]] * arg2) / 1000
                                            balanceOf[stor11[stor11[address(arg1)]]] += arg2 * stor14[stor11[stor11[address(arg1)]]] / 1000
                                            stor12[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                            if not stor27[address(arg1)].length:
                                                if not stor22[address(msg.sender)]:
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    emit Transfer(arg2, this.address, arg1);
                                            else:
                                                mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                                if not stor22[address(msg.sender)]:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                                else:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                else:
                                    if stor11[address(arg1)]:
                                        stor15[address(msg.sender)] = stor11[address(arg1)]
                                        stor16[msg.sender] = stor16[stor11[address(arg1)]]
                                        stor17[msg.sender] = stor17[stor11[address(arg1)]]
                                        stor18[msg.sender] = stor18[stor11[address(arg1)]]
                                        stor11[msg.sender] = stor11[stor11[address(arg1)]]
                                        uint8(stor23[address(msg.sender)]) = 0
                                        stor19[address(msg.sender)] += stor19[stor11[address(arg1)]] / 10
                                        stor20[address(msg.sender)] += stor20[stor11[address(arg1)]] / 10
                                        stor21[address(msg.sender)] += stor21[stor11[address(arg1)]] / 10
                                    stor19[stor11[address(arg1)]] += arg2 / 10
                                    stor20[stor11[address(arg1)]] += arg2 / 100
                                    stor21[stor11[address(arg1)]] += arg2 / 1000
                                    idx = 160
                                    s = 0
                                    while stor27[address(arg1)].length + 128 > idx:
                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    if not uint8(stor23[stor11[address(arg1)]]):
                                        balanceOf[address(msg.sender)] -= arg2
                                        if stor22[stor11[address(arg1)]]:
                                            balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                        else:
                                            totalSupply -= arg2 * stor28 / 1000
                                            balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor28 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                        stor12[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                        if not stor27[address(arg1)].length:
                                            if not stor22[address(msg.sender)]:
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                emit Transfer(arg2, this.address, arg1);
                                        else:
                                            mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                            if not stor22[address(msg.sender)]:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                            else:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                    else:
                                        if not stor11[stor11[address(arg1)]]:
                                            balanceOf[address(msg.sender)] -= arg2
                                            if stor22[stor11[address(arg1)]]:
                                                balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                            else:
                                                totalSupply -= arg2 * stor28 / 1000
                                                balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor28 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                            stor12[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                            if not stor27[address(arg1)].length:
                                                if not stor22[address(msg.sender)]:
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    emit Transfer(arg2, this.address, arg1);
                                            else:
                                                mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                                if not stor22[address(msg.sender)]:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                                else:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                        else:
                                            emit Transfer((stor14[stor11[stor11[address(arg1)]]] * arg2 / 1000), stor11[address(arg1)], stor11[stor11[address(arg1)]]);
                                            balanceOf[address(msg.sender)] -= arg2
                                            if stor22[stor11[address(arg1)]]:
                                                balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor14[stor11[address(arg1)]] * arg2) - (stor14[stor11[stor11[address(arg1)]]] * arg2) / 1000
                                            else:
                                                totalSupply -= arg2 * stor28 / 1000
                                                balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor28 * arg2) - (stor14[stor11[address(arg1)]] * arg2) - (stor14[stor11[stor11[address(arg1)]]] * arg2) / 1000
                                            balanceOf[stor11[stor11[address(arg1)]]] += arg2 * stor14[stor11[stor11[address(arg1)]]] / 1000
                                            stor12[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                            if not stor27[address(arg1)].length:
                                                if not stor22[address(msg.sender)]:
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    emit Transfer(arg2, this.address, arg1);
                                            else:
                                                mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                                if not stor22[address(msg.sender)]:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                                else:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                        else:
                            if stor15[address(msg.sender)]:
                                idx = 160
                                s = 0
                                while stor27[address(arg1)].length + 128 > idx:
                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                    idx = idx + 32
                                    s = s + 1
                                    continue 
                                if not uint8(stor23[stor11[address(arg1)]]):
                                    balanceOf[address(msg.sender)] -= arg2
                                    if stor22[stor11[address(arg1)]]:
                                        balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                    else:
                                        totalSupply -= arg2 * stor28 / 1000
                                        balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor28 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                    stor12[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                    if not stor27[address(arg1)].length:
                                        if not stor22[address(msg.sender)]:
                                            emit Transfer(arg2, msg.sender, arg1);
                                        else:
                                            emit Transfer(arg2, this.address, arg1);
                                    else:
                                        mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                        if not stor22[address(msg.sender)]:
                                            idx = ceil32(stor27[address(arg1)].length) + 288
                                            s = 0
                                            while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                idx = idx + 32
                                                s = s + 1
                                                continue 
                                            emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                        else:
                                            idx = ceil32(stor27[address(arg1)].length) + 288
                                            s = 0
                                            while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                idx = idx + 32
                                                s = s + 1
                                                continue 
                                            emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                else:
                                    if not stor11[stor11[address(arg1)]]:
                                        balanceOf[address(msg.sender)] -= arg2
                                        if stor22[stor11[address(arg1)]]:
                                            balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                        else:
                                            totalSupply -= arg2 * stor28 / 1000
                                            balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor28 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                        stor12[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                        if not stor27[address(arg1)].length:
                                            if not stor22[address(msg.sender)]:
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                emit Transfer(arg2, this.address, arg1);
                                        else:
                                            mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                            if not stor22[address(msg.sender)]:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                            else:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                    else:
                                        emit Transfer((stor14[stor11[stor11[address(arg1)]]] * arg2 / 1000), stor11[address(arg1)], stor11[stor11[address(arg1)]]);
                                        balanceOf[address(msg.sender)] -= arg2
                                        if stor22[stor11[address(arg1)]]:
                                            balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor14[stor11[address(arg1)]] * arg2) - (stor14[stor11[stor11[address(arg1)]]] * arg2) / 1000
                                        else:
                                            totalSupply -= arg2 * stor28 / 1000
                                            balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor28 * arg2) - (stor14[stor11[address(arg1)]] * arg2) - (stor14[stor11[stor11[address(arg1)]]] * arg2) / 1000
                                        balanceOf[stor11[stor11[address(arg1)]]] += arg2 * stor14[stor11[stor11[address(arg1)]]] / 1000
                                        stor12[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                        if not stor27[address(arg1)].length:
                                            if not stor22[address(msg.sender)]:
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                emit Transfer(arg2, this.address, arg1);
                                        else:
                                            mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                            if not stor22[address(msg.sender)]:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                            else:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                            else:
                                if stor11[address(arg1)] == msg.sender:
                                    stor19[stor11[address(arg1)]] += arg2 / 10
                                    stor20[stor11[address(arg1)]] += arg2 / 100
                                    stor21[stor11[address(arg1)]] += arg2 / 1000
                                    idx = 160
                                    s = 0
                                    while stor27[address(arg1)].length + 128 > idx:
                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    if not uint8(stor23[stor11[address(arg1)]]):
                                        balanceOf[address(msg.sender)] -= arg2
                                        if stor22[stor11[address(arg1)]]:
                                            balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                        else:
                                            totalSupply -= arg2 * stor28 / 1000
                                            balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor28 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                        stor12[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                        if not stor27[address(arg1)].length:
                                            if not stor22[address(msg.sender)]:
                                                emit Transfer(arg2, msg.sender, arg1);
                                            else:
                                                emit Transfer(arg2, this.address, arg1);
                                        else:
                                            mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                            if not stor22[address(msg.sender)]:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                            else:
                                                idx = ceil32(stor27[address(arg1)].length) + 288
                                                s = 0
                                                while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                    else:
                                        if not stor11[stor11[address(arg1)]]:
                                            balanceOf[address(msg.sender)] -= arg2
                                            if stor22[stor11[address(arg1)]]:
                                                balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                            else:
                                                totalSupply -= arg2 * stor28 / 1000
                                                balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor28 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                            stor12[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                            if not stor27[address(arg1)].length:
                                                if not stor22[address(msg.sender)]:
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    emit Transfer(arg2, this.address, arg1);
                                            else:
                                                mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                                if not stor22[address(msg.sender)]:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                                else:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                        else:
                                            emit Transfer((stor14[stor11[stor11[address(arg1)]]] * arg2 / 1000), stor11[address(arg1)], stor11[stor11[address(arg1)]]);
                                            balanceOf[address(msg.sender)] -= arg2
                                            if stor22[stor11[address(arg1)]]:
                                                balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor14[stor11[address(arg1)]] * arg2) - (stor14[stor11[stor11[address(arg1)]]] * arg2) / 1000
                                            else:
                                                totalSupply -= arg2 * stor28 / 1000
                                                balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor28 * arg2) - (stor14[stor11[address(arg1)]] * arg2) - (stor14[stor11[stor11[address(arg1)]]] * arg2) / 1000
                                            balanceOf[stor11[stor11[address(arg1)]]] += arg2 * stor14[stor11[stor11[address(arg1)]]] / 1000
                                            stor12[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                            if not stor27[address(arg1)].length:
                                                if not stor22[address(msg.sender)]:
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    emit Transfer(arg2, this.address, arg1);
                                            else:
                                                mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                                if not stor22[address(msg.sender)]:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                                else:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                else:
                                    if stor15[address(msg.sender)]:
                                        stor19[stor11[address(arg1)]] += arg2 / 10
                                        stor20[stor11[address(arg1)]] += arg2 / 100
                                        stor21[stor11[address(arg1)]] += arg2 / 1000
                                        idx = 160
                                        s = 0
                                        while stor27[address(arg1)].length + 128 > idx:
                                            mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                            idx = idx + 32
                                            s = s + 1
                                            continue 
                                        if not uint8(stor23[stor11[address(arg1)]]):
                                            balanceOf[address(msg.sender)] -= arg2
                                            if stor22[stor11[address(arg1)]]:
                                                balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                            else:
                                                totalSupply -= arg2 * stor28 / 1000
                                                balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor28 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                            stor12[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                            if not stor27[address(arg1)].length:
                                                if not stor22[address(msg.sender)]:
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    emit Transfer(arg2, this.address, arg1);
                                            else:
                                                mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                                if not stor22[address(msg.sender)]:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                                else:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                        else:
                                            if not stor11[stor11[address(arg1)]]:
                                                balanceOf[address(msg.sender)] -= arg2
                                                if stor22[stor11[address(arg1)]]:
                                                    balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                                else:
                                                    totalSupply -= arg2 * stor28 / 1000
                                                    balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor28 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                                stor12[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                                if not stor27[address(arg1)].length:
                                                    if not stor22[address(msg.sender)]:
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        emit Transfer(arg2, this.address, arg1);
                                                else:
                                                    mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                                    if not stor22[address(msg.sender)]:
                                                        idx = ceil32(stor27[address(arg1)].length) + 288
                                                        s = 0
                                                        while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                                    else:
                                                        idx = ceil32(stor27[address(arg1)].length) + 288
                                                        s = 0
                                                        while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                            else:
                                                emit Transfer((stor14[stor11[stor11[address(arg1)]]] * arg2 / 1000), stor11[address(arg1)], stor11[stor11[address(arg1)]]);
                                                balanceOf[address(msg.sender)] -= arg2
                                                if stor22[stor11[address(arg1)]]:
                                                    balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor14[stor11[address(arg1)]] * arg2) - (stor14[stor11[stor11[address(arg1)]]] * arg2) / 1000
                                                else:
                                                    totalSupply -= arg2 * stor28 / 1000
                                                    balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor28 * arg2) - (stor14[stor11[address(arg1)]] * arg2) - (stor14[stor11[stor11[address(arg1)]]] * arg2) / 1000
                                                balanceOf[stor11[stor11[address(arg1)]]] += arg2 * stor14[stor11[stor11[address(arg1)]]] / 1000
                                                stor12[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                                if not stor27[address(arg1)].length:
                                                    if not stor22[address(msg.sender)]:
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        emit Transfer(arg2, this.address, arg1);
                                                else:
                                                    mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                                    if not stor22[address(msg.sender)]:
                                                        idx = ceil32(stor27[address(arg1)].length) + 288
                                                        s = 0
                                                        while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                                    else:
                                                        idx = ceil32(stor27[address(arg1)].length) + 288
                                                        s = 0
                                                        while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                    else:
                                        if stor11[address(arg1)]:
                                            stor15[address(msg.sender)] = stor11[address(arg1)]
                                            stor16[msg.sender] = stor16[stor11[address(arg1)]]
                                            stor17[msg.sender] = stor17[stor11[address(arg1)]]
                                            stor18[msg.sender] = stor18[stor11[address(arg1)]]
                                            stor11[msg.sender] = stor11[stor11[address(arg1)]]
                                            uint8(stor23[address(msg.sender)]) = 0
                                            stor19[address(msg.sender)] += stor19[stor11[address(arg1)]] / 10
                                            stor20[address(msg.sender)] += stor20[stor11[address(arg1)]] / 10
                                            stor21[address(msg.sender)] += stor21[stor11[address(arg1)]] / 10
                                        stor19[stor11[address(arg1)]] += arg2 / 10
                                        stor20[stor11[address(arg1)]] += arg2 / 100
                                        stor21[stor11[address(arg1)]] += arg2 / 1000
                                        idx = 160
                                        s = 0
                                        while stor27[address(arg1)].length + 128 > idx:
                                            mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                            idx = idx + 32
                                            s = s + 1
                                            continue 
                                        if not uint8(stor23[stor11[address(arg1)]]):
                                            balanceOf[address(msg.sender)] -= arg2
                                            if stor22[stor11[address(arg1)]]:
                                                balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                            else:
                                                totalSupply -= arg2 * stor28 / 1000
                                                balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor28 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                            stor12[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                            if not stor27[address(arg1)].length:
                                                if not stor22[address(msg.sender)]:
                                                    emit Transfer(arg2, msg.sender, arg1);
                                                else:
                                                    emit Transfer(arg2, this.address, arg1);
                                            else:
                                                mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                                if not stor22[address(msg.sender)]:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                                else:
                                                    idx = ceil32(stor27[address(arg1)].length) + 288
                                                    s = 0
                                                    while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                        else:
                                            if not stor11[stor11[address(arg1)]]:
                                                balanceOf[address(msg.sender)] -= arg2
                                                if stor22[stor11[address(arg1)]]:
                                                    balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                                else:
                                                    totalSupply -= arg2 * stor28 / 1000
                                                    balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor28 * arg2) - (stor14[stor11[address(arg1)]] * arg2) / 1000
                                                stor12[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                                if not stor27[address(arg1)].length:
                                                    if not stor22[address(msg.sender)]:
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        emit Transfer(arg2, this.address, arg1);
                                                else:
                                                    mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                                    if not stor22[address(msg.sender)]:
                                                        idx = ceil32(stor27[address(arg1)].length) + 288
                                                        s = 0
                                                        while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                                    else:
                                                        idx = ceil32(stor27[address(arg1)].length) + 288
                                                        s = 0
                                                        while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                            else:
                                                emit Transfer((stor14[stor11[stor11[address(arg1)]]] * arg2 / 1000), stor11[address(arg1)], stor11[stor11[address(arg1)]]);
                                                balanceOf[address(msg.sender)] -= arg2
                                                if stor22[stor11[address(arg1)]]:
                                                    balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor14[stor11[address(arg1)]] * arg2) - (stor14[stor11[stor11[address(arg1)]]] * arg2) / 1000
                                                else:
                                                    totalSupply -= arg2 * stor28 / 1000
                                                    balanceOf[stor11[address(arg1)]] += (1000 * arg2) - (stor28 * arg2) - (stor14[stor11[address(arg1)]] * arg2) - (stor14[stor11[stor11[address(arg1)]]] * arg2) / 1000
                                                balanceOf[stor11[stor11[address(arg1)]]] += arg2 * stor14[stor11[stor11[address(arg1)]]] / 1000
                                                stor12[stor11[address(arg1)]] += arg2 * stor14[stor11[address(arg1)]] / 1000
                                                if not stor27[address(arg1)].length:
                                                    if not stor22[address(msg.sender)]:
                                                        emit Transfer(arg2, msg.sender, arg1);
                                                    else:
                                                        emit Transfer(arg2, this.address, arg1);
                                                else:
                                                    mem[ceil32(stor27[address(arg1)].length) + 288] = uint256(stor27[address(arg1)].field_0)
                                                    if not stor22[address(msg.sender)]:
                                                        idx = ceil32(stor27[address(arg1)].length) + 288
                                                        s = 0
                                                        while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: msg.sender, Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                                                    else:
                                                        idx = ceil32(stor27[address(arg1)].length) + 288
                                                        s = 0
                                                        while ceil32(stor27[address(arg1)].length) + stor27[address(arg1)].length + 288 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(arg1)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(arg1)].length, data=mem[ceil32(stor27[address(arg1)].length) + 288 len stor27[address(arg1)].length + (floor32(stor27[address(arg1)].length - 1) + -stor27[address(arg1)].length + 32 % 32)]), arg2
                        sub_064d5a8b[address(msg.sender)] = 0
                        sub_c1198ea1[address(msg.sender)] = 0
}

function sub_2aa3f25b(?) {
    mem[128 len arg1.length] = arg1[all]
    mem[ceil32(arg1.length) + 128 len floor32(arg1.length)] = call.data[arg1 + 36 len floor32(arg1.length)]
    mem[ceil32(arg1.length) + floor32(arg1.length) + -(arg1.length % 32) + 160 len arg1.length % 32] = mem[-(arg1.length % 32) + floor32(arg1.length) + 160 len arg1.length % 32]
    mem[arg1.length + ceil32(arg1.length) + 128] = 26
    _47596 = sha3(call.data[arg1 + 36 len floor32(arg1.length)], mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32])
    require arg2 == stor13[stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]]]
    require arg2 >= 1000
    if not uint8(stor24[address(msg.sender)]):
        require msg.sender
        require not stor25[stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]]]
        require balanceOf[address(msg.sender)] + arg3 >= balanceOf[address(msg.sender)]
        require balanceOf[stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]]] >= arg3
        if stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]] != msg.sender:
            if not arg3:
                require not stor25[address(msg.sender)]
                if stor11[address(msg.sender)] == msg.sender:
                    uint256(stor24[address(msg.sender)]) = not uint8(stor24[address(msg.sender)]) or Mask(248, 8, uint256(stor24[address(msg.sender)]))
                else:
                    if not msg.sender:
                        uint8(stor24[address(msg.sender)]) = 0
                    else:
                        if msg.sender == msg.sender:
                            uint8(stor24[address(msg.sender)]) = 0
                        else:
                            uint8(stor24[address(msg.sender)]) = 1
                            stor11[address(msg.sender)] = msg.sender
                require balanceOf[address(msg.sender)] > stor35 / 100
                if not stor22[address(msg.sender)]:
                    balanceOf[address(msg.sender)] -= stor35 / 100
                    totalSupply -= stor35 / 100
                stor13[stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]]] += stor13[stor11[stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]]]]
            else:
                if this.address == msg.sender:
                    require not stor25[address(msg.sender)]
                    require eth.balance(this.address)
                    if 10^16 * totalSupply / eth.balance(this.address) < 1000:
                        stor12[stor6] += (eth.balance(this.address) / 10^12) - (10 * totalSupply) / 10
                        totalSupply += (eth.balance(this.address) / 10^12) - (10 * totalSupply) / 10
                        sub_8f41bb58 = 10 * 10^6
                        emit 0x3b98ac72: 10 * 10^6
                        if stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]]:
                            if balanceOf[address(msg.sender)] >= arg3 / 10^6:
                                balanceOf[address(msg.sender)] -= arg3 / 10^6
                                totalSupply -= arg3 / 10^6
                                call stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]] with:
                                   value 10^16 * arg3 / 10^6 / 1000 wei
                                     gas 2300 * is_zero(value) wei
                            else:
                                balanceOf[address(msg.sender)] = 0
                                totalSupply -= balanceOf[address(msg.sender)]
                                call stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]] with:
                                   value 10^16 * balanceOf[address(msg.sender)] / 1000 wei
                                     gas 2300 * is_zero(value) wei
                        else:
                            if balanceOf[address(msg.sender)] >= arg3 / 10^6:
                                balanceOf[address(msg.sender)] -= arg3 / 10^6
                                totalSupply -= arg3 / 10^6
                                call msg.sender with:
                                   value 10^16 * arg3 / 10^6 / 1000 wei
                                     gas 2300 * is_zero(value) wei
                            else:
                                balanceOf[address(msg.sender)] = 0
                                totalSupply -= balanceOf[address(msg.sender)]
                                call msg.sender with:
                                   value 10^16 * balanceOf[address(msg.sender)] / 1000 wei
                                     gas 2300 * is_zero(value) wei
                    else:
                        require 10^16 * totalSupply / eth.balance(this.address)
                        sub_8f41bb58 = 10^10 / 10^16 * totalSupply / eth.balance(this.address)
                        emit 0x3b98ac72: (10^10 / 10^16 * totalSupply / eth.balance(this.address))
                        require 10^16 * totalSupply / eth.balance(this.address) <= 1250
                        if stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]]:
                            if balanceOf[address(msg.sender)] >= arg3 / 10^6:
                                balanceOf[address(msg.sender)] -= arg3 / 10^6
                                totalSupply -= arg3 / 10^6
                                require 10^16 * totalSupply / eth.balance(this.address)
                                call stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]] with:
                                   value 10^16 * arg3 / 10^6 / 10^16 * totalSupply / eth.balance(this.address) wei
                                     gas 2300 * is_zero(value) wei
                            else:
                                balanceOf[address(msg.sender)] = 0
                                totalSupply -= balanceOf[address(msg.sender)]
                                require 10^16 * totalSupply / eth.balance(this.address)
                                call stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]] with:
                                   value 10^16 * balanceOf[address(msg.sender)] / 10^16 * totalSupply / eth.balance(this.address) wei
                                     gas 2300 * is_zero(value) wei
                        else:
                            if balanceOf[address(msg.sender)] >= arg3 / 10^6:
                                balanceOf[address(msg.sender)] -= arg3 / 10^6
                                totalSupply -= arg3 / 10^6
                                require 10^16 * totalSupply / eth.balance(this.address)
                                call msg.sender with:
                                   value 10^16 * arg3 / 10^6 / 10^16 * totalSupply / eth.balance(this.address) wei
                                     gas 2300 * is_zero(value) wei
                            else:
                                balanceOf[address(msg.sender)] = 0
                                totalSupply -= balanceOf[address(msg.sender)]
                                require 10^16 * totalSupply / eth.balance(this.address)
                                call msg.sender with:
                                   value 10^16 * balanceOf[address(msg.sender)] / 10^16 * totalSupply / eth.balance(this.address) wei
                                     gas 2300 * is_zero(value) wei
                    require ext_call.success
                    stor13[stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]]] += stor13[stor11[stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]]]]
                else:
                    if stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]] == msg.sender:
                        balanceOf[stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]]] -= arg3
                        stor12[address(msg.sender)] += arg3
                        emit Transfer(arg3, msg.sender, this.address);
                        stor13[stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]]] += stor13[stor11[stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]]]]
                    else:
                        if stor22[address(msg.sender)]:
                            if msg.sender == msg.sender:
                                stor19[address(msg.sender)] += arg3 / 10
                                stor20[address(msg.sender)] += arg3 / 100
                                stor21[address(msg.sender)] += arg3 / 1000
                                idx = ceil32(arg1.length) + 192
                                s = 0
                                while ceil32(arg1.length) + stor27[address(msg.sender)].length + 160 > idx:
                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                    idx = idx + 32
                                    s = s + 1
                                    continue 
                                if not uint8(stor23[address(msg.sender)]):
                                    balanceOf[stor[_47596]] -= arg3
                                    if stor22[address(msg.sender)]:
                                        balanceOf[address(msg.sender)] += (1000 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                    else:
                                        totalSupply -= arg3 * stor28 / 1000
                                        balanceOf[address(msg.sender)] += (1000 * arg3) - (stor28 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                    stor12[address(msg.sender)] += arg3 * stor14[address(msg.sender)] / 1000
                                    if not stor27[address(msg.sender)].length:
                                        if not stor22[stor[_47596]]:
                                            emit Transfer(arg3, stor[_47596], msg.sender);
                                        else:
                                            emit Transfer(arg3, this.address, msg.sender);
                                    else:
                                        mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                        if not stor22[stor[_47596]]:
                                            idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                            s = 0
                                            while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                idx = idx + 32
                                                s = s + 1
                                                continue 
                                            emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                        else:
                                            idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                            s = 0
                                            while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                idx = idx + 32
                                                s = s + 1
                                                continue 
                                            emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                else:
                                    if not stor11[address(msg.sender)]:
                                        balanceOf[stor[_47596]] -= arg3
                                        if stor22[address(msg.sender)]:
                                            balanceOf[address(msg.sender)] += (1000 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                        else:
                                            totalSupply -= arg3 * stor28 / 1000
                                            balanceOf[address(msg.sender)] += (1000 * arg3) - (stor28 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                        stor12[address(msg.sender)] += arg3 * stor14[address(msg.sender)] / 1000
                                        if not stor27[address(msg.sender)].length:
                                            if not stor22[stor[_47596]]:
                                                emit Transfer(arg3, stor[_47596], msg.sender);
                                            else:
                                                emit Transfer(arg3, this.address, msg.sender);
                                        else:
                                            mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                            if not stor22[stor[_47596]]:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                            else:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                    else:
                                        emit Transfer((stor14[stor11[address(msg.sender)]] * arg3 / 1000), msg.sender, stor11[address(msg.sender)]);
                                        balanceOf[stor[_47596]] -= arg3
                                        if stor22[address(msg.sender)]:
                                            balanceOf[address(msg.sender)] += (1000 * arg3) - (stor14[address(msg.sender)] * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                        else:
                                            totalSupply -= arg3 * stor28 / 1000
                                            balanceOf[address(msg.sender)] += (1000 * arg3) - (stor28 * arg3) - (stor14[address(msg.sender)] * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                        balanceOf[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                        stor12[address(msg.sender)] += arg3 * stor14[address(msg.sender)] / 1000
                                        if not stor27[address(msg.sender)].length:
                                            if not stor22[stor[_47596]]:
                                                emit Transfer(arg3, stor[_47596], msg.sender);
                                            else:
                                                emit Transfer(arg3, this.address, msg.sender);
                                        else:
                                            mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                            if not stor22[stor[_47596]]:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                            else:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                            else:
                                if stor15[address(msg.sender)]:
                                    stor19[address(msg.sender)] += arg3 / 10
                                    stor20[address(msg.sender)] += arg3 / 100
                                    stor21[address(msg.sender)] += arg3 / 1000
                                    idx = ceil32(arg1.length) + 192
                                    s = 0
                                    while ceil32(arg1.length) + stor27[address(msg.sender)].length + 160 > idx:
                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    if not uint8(stor23[address(msg.sender)]):
                                        balanceOf[stor[_47596]] -= arg3
                                        if stor22[address(msg.sender)]:
                                            balanceOf[address(msg.sender)] += (1000 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                        else:
                                            totalSupply -= arg3 * stor28 / 1000
                                            balanceOf[address(msg.sender)] += (1000 * arg3) - (stor28 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                        stor12[address(msg.sender)] += arg3 * stor14[address(msg.sender)] / 1000
                                        if not stor27[address(msg.sender)].length:
                                            if not stor22[stor[_47596]]:
                                                emit Transfer(arg3, stor[_47596], msg.sender);
                                            else:
                                                emit Transfer(arg3, this.address, msg.sender);
                                        else:
                                            mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                            if not stor22[stor[_47596]]:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                            else:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                    else:
                                        if not stor11[address(msg.sender)]:
                                            balanceOf[stor[_47596]] -= arg3
                                            if stor22[address(msg.sender)]:
                                                balanceOf[address(msg.sender)] += (1000 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                            else:
                                                totalSupply -= arg3 * stor28 / 1000
                                                balanceOf[address(msg.sender)] += (1000 * arg3) - (stor28 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                            stor12[address(msg.sender)] += arg3 * stor14[address(msg.sender)] / 1000
                                            if not stor27[address(msg.sender)].length:
                                                if not stor22[stor[_47596]]:
                                                    emit Transfer(arg3, stor[_47596], msg.sender);
                                                else:
                                                    emit Transfer(arg3, this.address, msg.sender);
                                            else:
                                                mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                                if not stor22[stor[_47596]]:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                                else:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                        else:
                                            emit Transfer((stor14[stor11[address(msg.sender)]] * arg3 / 1000), msg.sender, stor11[address(msg.sender)]);
                                            balanceOf[stor[_47596]] -= arg3
                                            if stor22[address(msg.sender)]:
                                                balanceOf[address(msg.sender)] += (1000 * arg3) - (stor14[address(msg.sender)] * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                            else:
                                                totalSupply -= arg3 * stor28 / 1000
                                                balanceOf[address(msg.sender)] += (1000 * arg3) - (stor28 * arg3) - (stor14[address(msg.sender)] * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                            balanceOf[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                            stor12[address(msg.sender)] += arg3 * stor14[address(msg.sender)] / 1000
                                            if not stor27[address(msg.sender)].length:
                                                if not stor22[stor[_47596]]:
                                                    emit Transfer(arg3, stor[_47596], msg.sender);
                                                else:
                                                    emit Transfer(arg3, this.address, msg.sender);
                                            else:
                                                mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                                if not stor22[stor[_47596]]:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                                else:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                else:
                                    if msg.sender:
                                        stor15[address(msg.sender)] = msg.sender
                                        stor16[msg.sender] = stor16[address(msg.sender)]
                                        stor17[msg.sender] = stor17[address(msg.sender)]
                                        stor18[msg.sender] = stor18[address(msg.sender)]
                                        stor11[msg.sender] = stor11[address(msg.sender)]
                                        uint8(stor23[address(msg.sender)]) = 0
                                        stor19[address(msg.sender)] += stor19[address(msg.sender)] / 10
                                        stor20[address(msg.sender)] += stor20[address(msg.sender)] / 10
                                        stor21[address(msg.sender)] += stor21[address(msg.sender)] / 10
                                    stor19[address(msg.sender)] += arg3 / 10
                                    stor20[address(msg.sender)] += arg3 / 100
                                    stor21[address(msg.sender)] += arg3 / 1000
                                    idx = ceil32(arg1.length) + 192
                                    s = 0
                                    while ceil32(arg1.length) + stor27[address(msg.sender)].length + 160 > idx:
                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    if not uint8(stor23[address(msg.sender)]):
                                        balanceOf[stor[_47596]] -= arg3
                                        if stor22[address(msg.sender)]:
                                            balanceOf[address(msg.sender)] += (1000 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                        else:
                                            totalSupply -= arg3 * stor28 / 1000
                                            balanceOf[address(msg.sender)] += (1000 * arg3) - (stor28 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                        stor12[address(msg.sender)] += arg3 * stor14[address(msg.sender)] / 1000
                                        if not stor27[address(msg.sender)].length:
                                            if not stor22[stor[_47596]]:
                                                emit Transfer(arg3, stor[_47596], msg.sender);
                                            else:
                                                emit Transfer(arg3, this.address, msg.sender);
                                        else:
                                            mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                            if not stor22[stor[_47596]]:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                            else:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                    else:
                                        if not stor11[address(msg.sender)]:
                                            balanceOf[stor[_47596]] -= arg3
                                            if stor22[address(msg.sender)]:
                                                balanceOf[address(msg.sender)] += (1000 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                            else:
                                                totalSupply -= arg3 * stor28 / 1000
                                                balanceOf[address(msg.sender)] += (1000 * arg3) - (stor28 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                            stor12[address(msg.sender)] += arg3 * stor14[address(msg.sender)] / 1000
                                            if not stor27[address(msg.sender)].length:
                                                if not stor22[stor[_47596]]:
                                                    emit Transfer(arg3, stor[_47596], msg.sender);
                                                else:
                                                    emit Transfer(arg3, this.address, msg.sender);
                                            else:
                                                mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                                if not stor22[stor[_47596]]:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                                else:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                        else:
                                            emit Transfer((stor14[stor11[address(msg.sender)]] * arg3 / 1000), msg.sender, stor11[address(msg.sender)]);
                                            balanceOf[stor[_47596]] -= arg3
                                            if stor22[address(msg.sender)]:
                                                balanceOf[address(msg.sender)] += (1000 * arg3) - (stor14[address(msg.sender)] * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                            else:
                                                totalSupply -= arg3 * stor28 / 1000
                                                balanceOf[address(msg.sender)] += (1000 * arg3) - (stor28 * arg3) - (stor14[address(msg.sender)] * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                            balanceOf[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                            stor12[address(msg.sender)] += arg3 * stor14[address(msg.sender)] / 1000
                                            if not stor27[address(msg.sender)].length:
                                                if not stor22[stor[_47596]]:
                                                    emit Transfer(arg3, stor[_47596], msg.sender);
                                                else:
                                                    emit Transfer(arg3, this.address, msg.sender);
                                            else:
                                                mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                                if not stor22[stor[_47596]]:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                                else:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                        else:
                            if stor15[stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]]]:
                                idx = ceil32(arg1.length) + 192
                                s = 0
                                while ceil32(arg1.length) + stor27[address(msg.sender)].length + 160 > idx:
                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                    idx = idx + 32
                                    s = s + 1
                                    continue 
                                if not uint8(stor23[address(msg.sender)]):
                                    balanceOf[stor[_47596]] -= arg3
                                    if stor22[address(msg.sender)]:
                                        balanceOf[address(msg.sender)] += (1000 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                    else:
                                        totalSupply -= arg3 * stor28 / 1000
                                        balanceOf[address(msg.sender)] += (1000 * arg3) - (stor28 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                    stor12[address(msg.sender)] += arg3 * stor14[address(msg.sender)] / 1000
                                    if not stor27[address(msg.sender)].length:
                                        if not stor22[stor[_47596]]:
                                            emit Transfer(arg3, stor[_47596], msg.sender);
                                        else:
                                            emit Transfer(arg3, this.address, msg.sender);
                                    else:
                                        mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                        if not stor22[stor[_47596]]:
                                            idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                            s = 0
                                            while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                idx = idx + 32
                                                s = s + 1
                                                continue 
                                            emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                        else:
                                            idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                            s = 0
                                            while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                idx = idx + 32
                                                s = s + 1
                                                continue 
                                            emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                else:
                                    if not stor11[address(msg.sender)]:
                                        balanceOf[stor[_47596]] -= arg3
                                        if stor22[address(msg.sender)]:
                                            balanceOf[address(msg.sender)] += (1000 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                        else:
                                            totalSupply -= arg3 * stor28 / 1000
                                            balanceOf[address(msg.sender)] += (1000 * arg3) - (stor28 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                        stor12[address(msg.sender)] += arg3 * stor14[address(msg.sender)] / 1000
                                        if not stor27[address(msg.sender)].length:
                                            if not stor22[stor[_47596]]:
                                                emit Transfer(arg3, stor[_47596], msg.sender);
                                            else:
                                                emit Transfer(arg3, this.address, msg.sender);
                                        else:
                                            mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                            if not stor22[stor[_47596]]:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                            else:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                    else:
                                        emit Transfer((stor14[stor11[address(msg.sender)]] * arg3 / 1000), msg.sender, stor11[address(msg.sender)]);
                                        balanceOf[stor[_47596]] -= arg3
                                        if stor22[address(msg.sender)]:
                                            balanceOf[address(msg.sender)] += (1000 * arg3) - (stor14[address(msg.sender)] * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                        else:
                                            totalSupply -= arg3 * stor28 / 1000
                                            balanceOf[address(msg.sender)] += (1000 * arg3) - (stor28 * arg3) - (stor14[address(msg.sender)] * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                        balanceOf[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                        stor12[address(msg.sender)] += arg3 * stor14[address(msg.sender)] / 1000
                                        if not stor27[address(msg.sender)].length:
                                            if not stor22[stor[_47596]]:
                                                emit Transfer(arg3, stor[_47596], msg.sender);
                                            else:
                                                emit Transfer(arg3, this.address, msg.sender);
                                        else:
                                            mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                            if not stor22[stor[_47596]]:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                            else:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                            else:
                                if msg.sender == msg.sender:
                                    stor19[address(msg.sender)] += arg3 / 10
                                    stor20[address(msg.sender)] += arg3 / 100
                                    stor21[address(msg.sender)] += arg3 / 1000
                                    idx = ceil32(arg1.length) + 192
                                    s = 0
                                    while ceil32(arg1.length) + stor27[address(msg.sender)].length + 160 > idx:
                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    if not uint8(stor23[address(msg.sender)]):
                                        balanceOf[stor[_47596]] -= arg3
                                        if stor22[address(msg.sender)]:
                                            balanceOf[address(msg.sender)] += (1000 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                        else:
                                            totalSupply -= arg3 * stor28 / 1000
                                            balanceOf[address(msg.sender)] += (1000 * arg3) - (stor28 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                        stor12[address(msg.sender)] += arg3 * stor14[address(msg.sender)] / 1000
                                        if not stor27[address(msg.sender)].length:
                                            if not stor22[stor[_47596]]:
                                                emit Transfer(arg3, stor[_47596], msg.sender);
                                            else:
                                                emit Transfer(arg3, this.address, msg.sender);
                                        else:
                                            mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                            if not stor22[stor[_47596]]:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                            else:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                    else:
                                        if not stor11[address(msg.sender)]:
                                            balanceOf[stor[_47596]] -= arg3
                                            if stor22[address(msg.sender)]:
                                                balanceOf[address(msg.sender)] += (1000 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                            else:
                                                totalSupply -= arg3 * stor28 / 1000
                                                balanceOf[address(msg.sender)] += (1000 * arg3) - (stor28 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                            stor12[address(msg.sender)] += arg3 * stor14[address(msg.sender)] / 1000
                                            if not stor27[address(msg.sender)].length:
                                                if not stor22[stor[_47596]]:
                                                    emit Transfer(arg3, stor[_47596], msg.sender);
                                                else:
                                                    emit Transfer(arg3, this.address, msg.sender);
                                            else:
                                                mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                                if not stor22[stor[_47596]]:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                                else:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                        else:
                                            emit Transfer((stor14[stor11[address(msg.sender)]] * arg3 / 1000), msg.sender, stor11[address(msg.sender)]);
                                            balanceOf[stor[_47596]] -= arg3
                                            if stor22[address(msg.sender)]:
                                                balanceOf[address(msg.sender)] += (1000 * arg3) - (stor14[address(msg.sender)] * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                            else:
                                                totalSupply -= arg3 * stor28 / 1000
                                                balanceOf[address(msg.sender)] += (1000 * arg3) - (stor28 * arg3) - (stor14[address(msg.sender)] * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                            balanceOf[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                            stor12[address(msg.sender)] += arg3 * stor14[address(msg.sender)] / 1000
                                            if not stor27[address(msg.sender)].length:
                                                if not stor22[stor[_47596]]:
                                                    emit Transfer(arg3, stor[_47596], msg.sender);
                                                else:
                                                    emit Transfer(arg3, this.address, msg.sender);
                                            else:
                                                mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                                if not stor22[stor[_47596]]:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                                else:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                else:
                                    if stor15[address(msg.sender)]:
                                        stor19[address(msg.sender)] += arg3 / 10
                                        stor20[address(msg.sender)] += arg3 / 100
                                        stor21[address(msg.sender)] += arg3 / 1000
                                        idx = ceil32(arg1.length) + 192
                                        s = 0
                                        while ceil32(arg1.length) + stor27[address(msg.sender)].length + 160 > idx:
                                            mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                            idx = idx + 32
                                            s = s + 1
                                            continue 
                                        if not uint8(stor23[address(msg.sender)]):
                                            balanceOf[stor[_47596]] -= arg3
                                            if stor22[address(msg.sender)]:
                                                balanceOf[address(msg.sender)] += (1000 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                            else:
                                                totalSupply -= arg3 * stor28 / 1000
                                                balanceOf[address(msg.sender)] += (1000 * arg3) - (stor28 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                            stor12[address(msg.sender)] += arg3 * stor14[address(msg.sender)] / 1000
                                            if not stor27[address(msg.sender)].length:
                                                if not stor22[stor[_47596]]:
                                                    emit Transfer(arg3, stor[_47596], msg.sender);
                                                else:
                                                    emit Transfer(arg3, this.address, msg.sender);
                                            else:
                                                mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                                if not stor22[stor[_47596]]:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                                else:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                        else:
                                            if not stor11[address(msg.sender)]:
                                                balanceOf[stor[_47596]] -= arg3
                                                if stor22[address(msg.sender)]:
                                                    balanceOf[address(msg.sender)] += (1000 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                                else:
                                                    totalSupply -= arg3 * stor28 / 1000
                                                    balanceOf[address(msg.sender)] += (1000 * arg3) - (stor28 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                                stor12[address(msg.sender)] += arg3 * stor14[address(msg.sender)] / 1000
                                                if not stor27[address(msg.sender)].length:
                                                    if not stor22[stor[_47596]]:
                                                        emit Transfer(arg3, stor[_47596], msg.sender);
                                                    else:
                                                        emit Transfer(arg3, this.address, msg.sender);
                                                else:
                                                    mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                                    if not stor22[stor[_47596]]:
                                                        idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                        s = 0
                                                        while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                                    else:
                                                        idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                        s = 0
                                                        while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                            else:
                                                emit Transfer((stor14[stor11[address(msg.sender)]] * arg3 / 1000), msg.sender, stor11[address(msg.sender)]);
                                                balanceOf[stor[_47596]] -= arg3
                                                if stor22[address(msg.sender)]:
                                                    balanceOf[address(msg.sender)] += (1000 * arg3) - (stor14[address(msg.sender)] * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                                else:
                                                    totalSupply -= arg3 * stor28 / 1000
                                                    balanceOf[address(msg.sender)] += (1000 * arg3) - (stor28 * arg3) - (stor14[address(msg.sender)] * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                                balanceOf[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                                stor12[address(msg.sender)] += arg3 * stor14[address(msg.sender)] / 1000
                                                if not stor27[address(msg.sender)].length:
                                                    if not stor22[stor[_47596]]:
                                                        emit Transfer(arg3, stor[_47596], msg.sender);
                                                    else:
                                                        emit Transfer(arg3, this.address, msg.sender);
                                                else:
                                                    mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                                    if not stor22[stor[_47596]]:
                                                        idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                        s = 0
                                                        while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                                    else:
                                                        idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                        s = 0
                                                        while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                    else:
                                        if msg.sender:
                                            stor15[address(msg.sender)] = msg.sender
                                            stor16[msg.sender] = stor16[address(msg.sender)]
                                            stor17[msg.sender] = stor17[address(msg.sender)]
                                            stor18[msg.sender] = stor18[address(msg.sender)]
                                            stor11[msg.sender] = stor11[address(msg.sender)]
                                            uint8(stor23[address(msg.sender)]) = 0
                                            stor19[address(msg.sender)] += stor19[address(msg.sender)] / 10
                                            stor20[address(msg.sender)] += stor20[address(msg.sender)] / 10
                                            stor21[address(msg.sender)] += stor21[address(msg.sender)] / 10
                                        stor19[address(msg.sender)] += arg3 / 10
                                        stor20[address(msg.sender)] += arg3 / 100
                                        stor21[address(msg.sender)] += arg3 / 1000
                                        idx = ceil32(arg1.length) + 192
                                        s = 0
                                        while ceil32(arg1.length) + stor27[address(msg.sender)].length + 160 > idx:
                                            mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                            idx = idx + 32
                                            s = s + 1
                                            continue 
                                        if not uint8(stor23[address(msg.sender)]):
                                            balanceOf[stor[_47596]] -= arg3
                                            if stor22[address(msg.sender)]:
                                                balanceOf[address(msg.sender)] += (1000 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                            else:
                                                totalSupply -= arg3 * stor28 / 1000
                                                balanceOf[address(msg.sender)] += (1000 * arg3) - (stor28 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                            stor12[address(msg.sender)] += arg3 * stor14[address(msg.sender)] / 1000
                                            if not stor27[address(msg.sender)].length:
                                                if not stor22[stor[_47596]]:
                                                    emit Transfer(arg3, stor[_47596], msg.sender);
                                                else:
                                                    emit Transfer(arg3, this.address, msg.sender);
                                            else:
                                                mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                                if not stor22[stor[_47596]]:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                                else:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                        else:
                                            if not stor11[address(msg.sender)]:
                                                balanceOf[stor[_47596]] -= arg3
                                                if stor22[address(msg.sender)]:
                                                    balanceOf[address(msg.sender)] += (1000 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                                else:
                                                    totalSupply -= arg3 * stor28 / 1000
                                                    balanceOf[address(msg.sender)] += (1000 * arg3) - (stor28 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                                stor12[address(msg.sender)] += arg3 * stor14[address(msg.sender)] / 1000
                                                if not stor27[address(msg.sender)].length:
                                                    if not stor22[stor[_47596]]:
                                                        emit Transfer(arg3, stor[_47596], msg.sender);
                                                    else:
                                                        emit Transfer(arg3, this.address, msg.sender);
                                                else:
                                                    mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                                    if not stor22[stor[_47596]]:
                                                        idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                        s = 0
                                                        while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                                    else:
                                                        idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                        s = 0
                                                        while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                            else:
                                                emit Transfer((stor14[stor11[address(msg.sender)]] * arg3 / 1000), msg.sender, stor11[address(msg.sender)]);
                                                balanceOf[stor[_47596]] -= arg3
                                                if stor22[address(msg.sender)]:
                                                    balanceOf[address(msg.sender)] += (1000 * arg3) - (stor14[address(msg.sender)] * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                                else:
                                                    totalSupply -= arg3 * stor28 / 1000
                                                    balanceOf[address(msg.sender)] += (1000 * arg3) - (stor28 * arg3) - (stor14[address(msg.sender)] * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                                balanceOf[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                                stor12[address(msg.sender)] += arg3 * stor14[address(msg.sender)] / 1000
                                                if not stor27[address(msg.sender)].length:
                                                    if not stor22[stor[_47596]]:
                                                        emit Transfer(arg3, stor[_47596], msg.sender);
                                                    else:
                                                        emit Transfer(arg3, this.address, msg.sender);
                                                else:
                                                    mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                                    if not stor22[stor[_47596]]:
                                                        idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                        s = 0
                                                        while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                                    else:
                                                        idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                        s = 0
                                                        while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                        sub_064d5a8b[address(msg.sender)] = 0
                        sub_c1198ea1[address(msg.sender)] = 0
                        stor13[stor[_47596]] += stor13[stor11[stor[_47596]]]
        else:
            if not arg3:
                require not stor25[address(msg.sender)]
                uint256(stor23[address(msg.sender)]) = not uint8(stor23[address(msg.sender)]) or Mask(248, 8, uint256(stor23[address(msg.sender)]))
                mem[ceil32(arg1.length) + 288] = uint256(stor27[address(msg.sender)].field_0)
                idx = ceil32(arg1.length) + 288
                s = 0
                while ceil32(arg1.length) + stor27[address(msg.sender)].length + 288 > idx + 32:
                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                    idx = idx + 32
                    s = s + 1
                    continue 
                mem[ceil32(arg1.length) + stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32) + 288] = stor27[stor11[address(msg.sender)]].length
                mem[ceil32(arg1.length) + stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32) + 320] = uint256(stor27[stor11[address(msg.sender)]].field_0)
                idx = ceil32(arg1.length) + stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32) + 320
                s = 0
                while ceil32(arg1.length) + stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32) + stor27[stor11[address(msg.sender)]].length + 320 > idx + 32:
                    mem[idx + 32] = uint256(stor27[stor11[address(msg.sender)]][s].field_256)
                    idx = idx + 32
                    s = s + 1
                    continue 
                emit 0xf4bf15f5: Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + 288 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32) + stor27[stor11[address(msg.sender)]].length + (floor32(stor27[stor11[address(msg.sender)]].length - 1) + -stor27[stor11[address(msg.sender)]].length + 32 % 32) + 32]), stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32) + 128, bool(uint8(not uint8(stor23[address(msg.sender)])))
                require balanceOf[address(msg.sender)] > stor35 / 100
                if not stor22[address(msg.sender)]:
                    balanceOf[address(msg.sender)] -= stor35 / 100
                    totalSupply -= stor35 / 100
                stor13[stor[_47596]] += stor13[stor11[stor[_47596]]]
            else:
                if this.address == msg.sender:
                    require not stor25[address(msg.sender)]
                    require eth.balance(this.address)
                    if 10^16 * totalSupply / eth.balance(this.address) < 1000:
                        stor12[stor6] += (eth.balance(this.address) / 10^12) - (10 * totalSupply) / 10
                        totalSupply += (eth.balance(this.address) / 10^12) - (10 * totalSupply) / 10
                        sub_8f41bb58 = 10 * 10^6
                        emit 0x3b98ac72: 10 * 10^6
                        if stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]]:
                            if balanceOf[address(msg.sender)] >= arg3 / 10^6:
                                balanceOf[address(msg.sender)] -= arg3 / 10^6
                                totalSupply -= arg3 / 10^6
                                call stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]] with:
                                   value 10^16 * arg3 / 10^6 / 1000 wei
                                     gas 2300 * is_zero(value) wei
                            else:
                                balanceOf[address(msg.sender)] = 0
                                totalSupply -= balanceOf[address(msg.sender)]
                                call stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]] with:
                                   value 10^16 * balanceOf[address(msg.sender)] / 1000 wei
                                     gas 2300 * is_zero(value) wei
                        else:
                            if balanceOf[address(msg.sender)] >= arg3 / 10^6:
                                balanceOf[address(msg.sender)] -= arg3 / 10^6
                                totalSupply -= arg3 / 10^6
                                call msg.sender with:
                                   value 10^16 * arg3 / 10^6 / 1000 wei
                                     gas 2300 * is_zero(value) wei
                            else:
                                balanceOf[address(msg.sender)] = 0
                                totalSupply -= balanceOf[address(msg.sender)]
                                call msg.sender with:
                                   value 10^16 * balanceOf[address(msg.sender)] / 1000 wei
                                     gas 2300 * is_zero(value) wei
                    else:
                        require 10^16 * totalSupply / eth.balance(this.address)
                        sub_8f41bb58 = 10^10 / 10^16 * totalSupply / eth.balance(this.address)
                        emit 0x3b98ac72: (10^10 / 10^16 * totalSupply / eth.balance(this.address))
                        require 10^16 * totalSupply / eth.balance(this.address) <= 1250
                        if stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]]:
                            if balanceOf[address(msg.sender)] >= arg3 / 10^6:
                                balanceOf[address(msg.sender)] -= arg3 / 10^6
                                totalSupply -= arg3 / 10^6
                                require 10^16 * totalSupply / eth.balance(this.address)
                                call stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]] with:
                                   value 10^16 * arg3 / 10^6 / 10^16 * totalSupply / eth.balance(this.address) wei
                                     gas 2300 * is_zero(value) wei
                            else:
                                balanceOf[address(msg.sender)] = 0
                                totalSupply -= balanceOf[address(msg.sender)]
                                require 10^16 * totalSupply / eth.balance(this.address)
                                call stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]] with:
                                   value 10^16 * balanceOf[address(msg.sender)] / 10^16 * totalSupply / eth.balance(this.address) wei
                                     gas 2300 * is_zero(value) wei
                        else:
                            if balanceOf[address(msg.sender)] >= arg3 / 10^6:
                                balanceOf[address(msg.sender)] -= arg3 / 10^6
                                totalSupply -= arg3 / 10^6
                                require 10^16 * totalSupply / eth.balance(this.address)
                                call msg.sender with:
                                   value 10^16 * arg3 / 10^6 / 10^16 * totalSupply / eth.balance(this.address) wei
                                     gas 2300 * is_zero(value) wei
                            else:
                                balanceOf[address(msg.sender)] = 0
                                totalSupply -= balanceOf[address(msg.sender)]
                                require 10^16 * totalSupply / eth.balance(this.address)
                                call msg.sender with:
                                   value 10^16 * balanceOf[address(msg.sender)] / 10^16 * totalSupply / eth.balance(this.address) wei
                                     gas 2300 * is_zero(value) wei
                    require ext_call.success
                    stor13[stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]]] += stor13[stor11[stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]]]]
                else:
                    if stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]] == msg.sender:
                        balanceOf[stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]]] -= arg3
                        stor12[address(msg.sender)] += arg3
                        emit Transfer(arg3, msg.sender, this.address);
                        stor13[stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]]] += stor13[stor11[stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]]]]
                    else:
                        if stor22[address(msg.sender)]:
                            if msg.sender == msg.sender:
                                stor19[address(msg.sender)] += arg3 / 10
                                stor20[address(msg.sender)] += arg3 / 100
                                stor21[address(msg.sender)] += arg3 / 1000
                                idx = ceil32(arg1.length) + 192
                                s = 0
                                while ceil32(arg1.length) + stor27[address(msg.sender)].length + 160 > idx:
                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                    idx = idx + 32
                                    s = s + 1
                                    continue 
                                if not uint8(stor23[address(msg.sender)]):
                                    balanceOf[stor[_47596]] -= arg3
                                    if stor22[address(msg.sender)]:
                                        balanceOf[address(msg.sender)] += (1000 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                    else:
                                        totalSupply -= arg3 * stor28 / 1000
                                        balanceOf[address(msg.sender)] += (1000 * arg3) - (stor28 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                    stor12[address(msg.sender)] += arg3 * stor14[address(msg.sender)] / 1000
                                    if not stor27[address(msg.sender)].length:
                                        if not stor22[stor[_47596]]:
                                            emit Transfer(arg3, stor[_47596], msg.sender);
                                        else:
                                            emit Transfer(arg3, this.address, msg.sender);
                                    else:
                                        mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                        if not stor22[stor[_47596]]:
                                            idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                            s = 0
                                            while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                idx = idx + 32
                                                s = s + 1
                                                continue 
                                            emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                        else:
                                            idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                            s = 0
                                            while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                idx = idx + 32
                                                s = s + 1
                                                continue 
                                            emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                else:
                                    if not stor11[address(msg.sender)]:
                                        balanceOf[stor[_47596]] -= arg3
                                        if stor22[address(msg.sender)]:
                                            balanceOf[address(msg.sender)] += (1000 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                        else:
                                            totalSupply -= arg3 * stor28 / 1000
                                            balanceOf[address(msg.sender)] += (1000 * arg3) - (stor28 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                        stor12[address(msg.sender)] += arg3 * stor14[address(msg.sender)] / 1000
                                        if not stor27[address(msg.sender)].length:
                                            if not stor22[stor[_47596]]:
                                                emit Transfer(arg3, stor[_47596], msg.sender);
                                            else:
                                                emit Transfer(arg3, this.address, msg.sender);
                                        else:
                                            mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                            if not stor22[stor[_47596]]:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                            else:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                    else:
                                        emit Transfer((stor14[stor11[address(msg.sender)]] * arg3 / 1000), msg.sender, stor11[address(msg.sender)]);
                                        balanceOf[stor[_47596]] -= arg3
                                        if stor22[address(msg.sender)]:
                                            balanceOf[address(msg.sender)] += (1000 * arg3) - (stor14[address(msg.sender)] * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                        else:
                                            totalSupply -= arg3 * stor28 / 1000
                                            balanceOf[address(msg.sender)] += (1000 * arg3) - (stor28 * arg3) - (stor14[address(msg.sender)] * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                        balanceOf[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                        stor12[address(msg.sender)] += arg3 * stor14[address(msg.sender)] / 1000
                                        if not stor27[address(msg.sender)].length:
                                            if not stor22[stor[_47596]]:
                                                emit Transfer(arg3, stor[_47596], msg.sender);
                                            else:
                                                emit Transfer(arg3, this.address, msg.sender);
                                        else:
                                            mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                            if not stor22[stor[_47596]]:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                            else:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                            else:
                                if stor15[address(msg.sender)]:
                                    stor19[address(msg.sender)] += arg3 / 10
                                    stor20[address(msg.sender)] += arg3 / 100
                                    stor21[address(msg.sender)] += arg3 / 1000
                                    idx = ceil32(arg1.length) + 192
                                    s = 0
                                    while ceil32(arg1.length) + stor27[address(msg.sender)].length + 160 > idx:
                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    if not uint8(stor23[address(msg.sender)]):
                                        balanceOf[stor[_47596]] -= arg3
                                        if stor22[address(msg.sender)]:
                                            balanceOf[address(msg.sender)] += (1000 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                        else:
                                            totalSupply -= arg3 * stor28 / 1000
                                            balanceOf[address(msg.sender)] += (1000 * arg3) - (stor28 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                        stor12[address(msg.sender)] += arg3 * stor14[address(msg.sender)] / 1000
                                        if not stor27[address(msg.sender)].length:
                                            if not stor22[stor[_47596]]:
                                                emit Transfer(arg3, stor[_47596], msg.sender);
                                            else:
                                                emit Transfer(arg3, this.address, msg.sender);
                                        else:
                                            mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                            if not stor22[stor[_47596]]:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                            else:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                    else:
                                        if not stor11[address(msg.sender)]:
                                            balanceOf[stor[_47596]] -= arg3
                                            if stor22[address(msg.sender)]:
                                                balanceOf[address(msg.sender)] += (1000 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                            else:
                                                totalSupply -= arg3 * stor28 / 1000
                                                balanceOf[address(msg.sender)] += (1000 * arg3) - (stor28 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                            stor12[address(msg.sender)] += arg3 * stor14[address(msg.sender)] / 1000
                                            if not stor27[address(msg.sender)].length:
                                                if not stor22[stor[_47596]]:
                                                    emit Transfer(arg3, stor[_47596], msg.sender);
                                                else:
                                                    emit Transfer(arg3, this.address, msg.sender);
                                            else:
                                                mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                                if not stor22[stor[_47596]]:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                                else:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                        else:
                                            emit Transfer((stor14[stor11[address(msg.sender)]] * arg3 / 1000), msg.sender, stor11[address(msg.sender)]);
                                            balanceOf[stor[_47596]] -= arg3
                                            if stor22[address(msg.sender)]:
                                                balanceOf[address(msg.sender)] += (1000 * arg3) - (stor14[address(msg.sender)] * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                            else:
                                                totalSupply -= arg3 * stor28 / 1000
                                                balanceOf[address(msg.sender)] += (1000 * arg3) - (stor28 * arg3) - (stor14[address(msg.sender)] * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                            balanceOf[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                            stor12[address(msg.sender)] += arg3 * stor14[address(msg.sender)] / 1000
                                            if not stor27[address(msg.sender)].length:
                                                if not stor22[stor[_47596]]:
                                                    emit Transfer(arg3, stor[_47596], msg.sender);
                                                else:
                                                    emit Transfer(arg3, this.address, msg.sender);
                                            else:
                                                mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                                if not stor22[stor[_47596]]:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                                else:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                else:
                                    if msg.sender:
                                        stor15[address(msg.sender)] = msg.sender
                                        stor16[msg.sender] = stor16[address(msg.sender)]
                                        stor17[msg.sender] = stor17[address(msg.sender)]
                                        stor18[msg.sender] = stor18[address(msg.sender)]
                                        stor11[msg.sender] = stor11[address(msg.sender)]
                                        uint8(stor23[address(msg.sender)]) = 0
                                        stor19[address(msg.sender)] += stor19[address(msg.sender)] / 10
                                        stor20[address(msg.sender)] += stor20[address(msg.sender)] / 10
                                        stor21[address(msg.sender)] += stor21[address(msg.sender)] / 10
                                    stor19[address(msg.sender)] += arg3 / 10
                                    stor20[address(msg.sender)] += arg3 / 100
                                    stor21[address(msg.sender)] += arg3 / 1000
                                    idx = ceil32(arg1.length) + 192
                                    s = 0
                                    while ceil32(arg1.length) + stor27[address(msg.sender)].length + 160 > idx:
                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    if not uint8(stor23[address(msg.sender)]):
                                        balanceOf[stor[_47596]] -= arg3
                                        if stor22[address(msg.sender)]:
                                            balanceOf[address(msg.sender)] += (1000 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                        else:
                                            totalSupply -= arg3 * stor28 / 1000
                                            balanceOf[address(msg.sender)] += (1000 * arg3) - (stor28 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                        stor12[address(msg.sender)] += arg3 * stor14[address(msg.sender)] / 1000
                                        if not stor27[address(msg.sender)].length:
                                            if not stor22[stor[_47596]]:
                                                emit Transfer(arg3, stor[_47596], msg.sender);
                                            else:
                                                emit Transfer(arg3, this.address, msg.sender);
                                        else:
                                            mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                            if not stor22[stor[_47596]]:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                            else:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                    else:
                                        if not stor11[address(msg.sender)]:
                                            balanceOf[stor[_47596]] -= arg3
                                            if stor22[address(msg.sender)]:
                                                balanceOf[address(msg.sender)] += (1000 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                            else:
                                                totalSupply -= arg3 * stor28 / 1000
                                                balanceOf[address(msg.sender)] += (1000 * arg3) - (stor28 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                            stor12[address(msg.sender)] += arg3 * stor14[address(msg.sender)] / 1000
                                            if not stor27[address(msg.sender)].length:
                                                if not stor22[stor[_47596]]:
                                                    emit Transfer(arg3, stor[_47596], msg.sender);
                                                else:
                                                    emit Transfer(arg3, this.address, msg.sender);
                                            else:
                                                mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                                if not stor22[stor[_47596]]:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                                else:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                        else:
                                            emit Transfer((stor14[stor11[address(msg.sender)]] * arg3 / 1000), msg.sender, stor11[address(msg.sender)]);
                                            balanceOf[stor[_47596]] -= arg3
                                            if stor22[address(msg.sender)]:
                                                balanceOf[address(msg.sender)] += (1000 * arg3) - (stor14[address(msg.sender)] * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                            else:
                                                totalSupply -= arg3 * stor28 / 1000
                                                balanceOf[address(msg.sender)] += (1000 * arg3) - (stor28 * arg3) - (stor14[address(msg.sender)] * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                            balanceOf[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                            stor12[address(msg.sender)] += arg3 * stor14[address(msg.sender)] / 1000
                                            if not stor27[address(msg.sender)].length:
                                                if not stor22[stor[_47596]]:
                                                    emit Transfer(arg3, stor[_47596], msg.sender);
                                                else:
                                                    emit Transfer(arg3, this.address, msg.sender);
                                            else:
                                                mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                                if not stor22[stor[_47596]]:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                                else:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                        else:
                            if stor15[stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]]]:
                                idx = ceil32(arg1.length) + 192
                                s = 0
                                while ceil32(arg1.length) + stor27[address(msg.sender)].length + 160 > idx:
                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                    idx = idx + 32
                                    s = s + 1
                                    continue 
                                if not uint8(stor23[address(msg.sender)]):
                                    balanceOf[stor[_47596]] -= arg3
                                    if stor22[address(msg.sender)]:
                                        balanceOf[address(msg.sender)] += (1000 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                    else:
                                        totalSupply -= arg3 * stor28 / 1000
                                        balanceOf[address(msg.sender)] += (1000 * arg3) - (stor28 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                    stor12[address(msg.sender)] += arg3 * stor14[address(msg.sender)] / 1000
                                    if not stor27[address(msg.sender)].length:
                                        if not stor22[stor[_47596]]:
                                            emit Transfer(arg3, stor[_47596], msg.sender);
                                        else:
                                            emit Transfer(arg3, this.address, msg.sender);
                                    else:
                                        mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                        if not stor22[stor[_47596]]:
                                            idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                            s = 0
                                            while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                idx = idx + 32
                                                s = s + 1
                                                continue 
                                            emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                        else:
                                            idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                            s = 0
                                            while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                idx = idx + 32
                                                s = s + 1
                                                continue 
                                            emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                else:
                                    if not stor11[address(msg.sender)]:
                                        balanceOf[stor[_47596]] -= arg3
                                        if stor22[address(msg.sender)]:
                                            balanceOf[address(msg.sender)] += (1000 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                        else:
                                            totalSupply -= arg3 * stor28 / 1000
                                            balanceOf[address(msg.sender)] += (1000 * arg3) - (stor28 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                        stor12[address(msg.sender)] += arg3 * stor14[address(msg.sender)] / 1000
                                        if not stor27[address(msg.sender)].length:
                                            if not stor22[stor[_47596]]:
                                                emit Transfer(arg3, stor[_47596], msg.sender);
                                            else:
                                                emit Transfer(arg3, this.address, msg.sender);
                                        else:
                                            mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                            if not stor22[stor[_47596]]:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                            else:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                    else:
                                        emit Transfer((stor14[stor11[address(msg.sender)]] * arg3 / 1000), msg.sender, stor11[address(msg.sender)]);
                                        balanceOf[stor[_47596]] -= arg3
                                        if stor22[address(msg.sender)]:
                                            balanceOf[address(msg.sender)] += (1000 * arg3) - (stor14[address(msg.sender)] * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                        else:
                                            totalSupply -= arg3 * stor28 / 1000
                                            balanceOf[address(msg.sender)] += (1000 * arg3) - (stor28 * arg3) - (stor14[address(msg.sender)] * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                        balanceOf[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                        stor12[address(msg.sender)] += arg3 * stor14[address(msg.sender)] / 1000
                                        if not stor27[address(msg.sender)].length:
                                            if not stor22[stor[_47596]]:
                                                emit Transfer(arg3, stor[_47596], msg.sender);
                                            else:
                                                emit Transfer(arg3, this.address, msg.sender);
                                        else:
                                            mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                            if not stor22[stor[_47596]]:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                            else:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                            else:
                                if msg.sender == msg.sender:
                                    stor19[address(msg.sender)] += arg3 / 10
                                    stor20[address(msg.sender)] += arg3 / 100
                                    stor21[address(msg.sender)] += arg3 / 1000
                                    idx = ceil32(arg1.length) + 192
                                    s = 0
                                    while ceil32(arg1.length) + stor27[address(msg.sender)].length + 160 > idx:
                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    if not uint8(stor23[address(msg.sender)]):
                                        balanceOf[stor[_47596]] -= arg3
                                        if stor22[address(msg.sender)]:
                                            balanceOf[address(msg.sender)] += (1000 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                        else:
                                            totalSupply -= arg3 * stor28 / 1000
                                            balanceOf[address(msg.sender)] += (1000 * arg3) - (stor28 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                        stor12[address(msg.sender)] += arg3 * stor14[address(msg.sender)] / 1000
                                        if not stor27[address(msg.sender)].length:
                                            if not stor22[stor[_47596]]:
                                                emit Transfer(arg3, stor[_47596], msg.sender);
                                            else:
                                                emit Transfer(arg3, this.address, msg.sender);
                                        else:
                                            mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                            if not stor22[stor[_47596]]:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                            else:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                    else:
                                        if not stor11[address(msg.sender)]:
                                            balanceOf[stor[_47596]] -= arg3
                                            if stor22[address(msg.sender)]:
                                                balanceOf[address(msg.sender)] += (1000 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                            else:
                                                totalSupply -= arg3 * stor28 / 1000
                                                balanceOf[address(msg.sender)] += (1000 * arg3) - (stor28 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                            stor12[address(msg.sender)] += arg3 * stor14[address(msg.sender)] / 1000
                                            if not stor27[address(msg.sender)].length:
                                                if not stor22[stor[_47596]]:
                                                    emit Transfer(arg3, stor[_47596], msg.sender);
                                                else:
                                                    emit Transfer(arg3, this.address, msg.sender);
                                            else:
                                                mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                                if not stor22[stor[_47596]]:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                                else:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                        else:
                                            emit Transfer((stor14[stor11[address(msg.sender)]] * arg3 / 1000), msg.sender, stor11[address(msg.sender)]);
                                            balanceOf[stor[_47596]] -= arg3
                                            if stor22[address(msg.sender)]:
                                                balanceOf[address(msg.sender)] += (1000 * arg3) - (stor14[address(msg.sender)] * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                            else:
                                                totalSupply -= arg3 * stor28 / 1000
                                                balanceOf[address(msg.sender)] += (1000 * arg3) - (stor28 * arg3) - (stor14[address(msg.sender)] * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                            balanceOf[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                            stor12[address(msg.sender)] += arg3 * stor14[address(msg.sender)] / 1000
                                            if not stor27[address(msg.sender)].length:
                                                if not stor22[stor[_47596]]:
                                                    emit Transfer(arg3, stor[_47596], msg.sender);
                                                else:
                                                    emit Transfer(arg3, this.address, msg.sender);
                                            else:
                                                mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                                if not stor22[stor[_47596]]:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                                else:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                else:
                                    if stor15[address(msg.sender)]:
                                        stor19[address(msg.sender)] += arg3 / 10
                                        stor20[address(msg.sender)] += arg3 / 100
                                        stor21[address(msg.sender)] += arg3 / 1000
                                        idx = ceil32(arg1.length) + 192
                                        s = 0
                                        while ceil32(arg1.length) + stor27[address(msg.sender)].length + 160 > idx:
                                            mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                            idx = idx + 32
                                            s = s + 1
                                            continue 
                                        if not uint8(stor23[address(msg.sender)]):
                                            balanceOf[stor[_47596]] -= arg3
                                            if stor22[address(msg.sender)]:
                                                balanceOf[address(msg.sender)] += (1000 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                            else:
                                                totalSupply -= arg3 * stor28 / 1000
                                                balanceOf[address(msg.sender)] += (1000 * arg3) - (stor28 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                            stor12[address(msg.sender)] += arg3 * stor14[address(msg.sender)] / 1000
                                            if not stor27[address(msg.sender)].length:
                                                if not stor22[stor[_47596]]:
                                                    emit Transfer(arg3, stor[_47596], msg.sender);
                                                else:
                                                    emit Transfer(arg3, this.address, msg.sender);
                                            else:
                                                mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                                if not stor22[stor[_47596]]:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                                else:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                        else:
                                            if not stor11[address(msg.sender)]:
                                                balanceOf[stor[_47596]] -= arg3
                                                if stor22[address(msg.sender)]:
                                                    balanceOf[address(msg.sender)] += (1000 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                                else:
                                                    totalSupply -= arg3 * stor28 / 1000
                                                    balanceOf[address(msg.sender)] += (1000 * arg3) - (stor28 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                                stor12[address(msg.sender)] += arg3 * stor14[address(msg.sender)] / 1000
                                                if not stor27[address(msg.sender)].length:
                                                    if not stor22[stor[_47596]]:
                                                        emit Transfer(arg3, stor[_47596], msg.sender);
                                                    else:
                                                        emit Transfer(arg3, this.address, msg.sender);
                                                else:
                                                    mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                                    if not stor22[stor[_47596]]:
                                                        idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                        s = 0
                                                        while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                                    else:
                                                        idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                        s = 0
                                                        while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                            else:
                                                emit Transfer((stor14[stor11[address(msg.sender)]] * arg3 / 1000), msg.sender, stor11[address(msg.sender)]);
                                                balanceOf[stor[_47596]] -= arg3
                                                if stor22[address(msg.sender)]:
                                                    balanceOf[address(msg.sender)] += (1000 * arg3) - (stor14[address(msg.sender)] * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                                else:
                                                    totalSupply -= arg3 * stor28 / 1000
                                                    balanceOf[address(msg.sender)] += (1000 * arg3) - (stor28 * arg3) - (stor14[address(msg.sender)] * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                                balanceOf[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                                stor12[address(msg.sender)] += arg3 * stor14[address(msg.sender)] / 1000
                                                if not stor27[address(msg.sender)].length:
                                                    if not stor22[stor[_47596]]:
                                                        emit Transfer(arg3, stor[_47596], msg.sender);
                                                    else:
                                                        emit Transfer(arg3, this.address, msg.sender);
                                                else:
                                                    mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                                    if not stor22[stor[_47596]]:
                                                        idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                        s = 0
                                                        while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                                    else:
                                                        idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                        s = 0
                                                        while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                    else:
                                        if msg.sender:
                                            stor15[address(msg.sender)] = msg.sender
                                            stor16[msg.sender] = stor16[address(msg.sender)]
                                            stor17[msg.sender] = stor17[address(msg.sender)]
                                            stor18[msg.sender] = stor18[address(msg.sender)]
                                            stor11[msg.sender] = stor11[address(msg.sender)]
                                            uint8(stor23[address(msg.sender)]) = 0
                                            stor19[address(msg.sender)] += stor19[address(msg.sender)] / 10
                                            stor20[address(msg.sender)] += stor20[address(msg.sender)] / 10
                                            stor21[address(msg.sender)] += stor21[address(msg.sender)] / 10
                                        stor19[address(msg.sender)] += arg3 / 10
                                        stor20[address(msg.sender)] += arg3 / 100
                                        stor21[address(msg.sender)] += arg3 / 1000
                                        idx = ceil32(arg1.length) + 192
                                        s = 0
                                        while ceil32(arg1.length) + stor27[address(msg.sender)].length + 160 > idx:
                                            mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                            idx = idx + 32
                                            s = s + 1
                                            continue 
                                        if not uint8(stor23[address(msg.sender)]):
                                            balanceOf[stor[_47596]] -= arg3
                                            if stor22[address(msg.sender)]:
                                                balanceOf[address(msg.sender)] += (1000 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                            else:
                                                totalSupply -= arg3 * stor28 / 1000
                                                balanceOf[address(msg.sender)] += (1000 * arg3) - (stor28 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                            stor12[address(msg.sender)] += arg3 * stor14[address(msg.sender)] / 1000
                                            if not stor27[address(msg.sender)].length:
                                                if not stor22[stor[_47596]]:
                                                    emit Transfer(arg3, stor[_47596], msg.sender);
                                                else:
                                                    emit Transfer(arg3, this.address, msg.sender);
                                            else:
                                                mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                                if not stor22[stor[_47596]]:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                                else:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                        else:
                                            if not stor11[address(msg.sender)]:
                                                balanceOf[stor[_47596]] -= arg3
                                                if stor22[address(msg.sender)]:
                                                    balanceOf[address(msg.sender)] += (1000 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                                else:
                                                    totalSupply -= arg3 * stor28 / 1000
                                                    balanceOf[address(msg.sender)] += (1000 * arg3) - (stor28 * arg3) - (stor14[address(msg.sender)] * arg3) / 1000
                                                stor12[address(msg.sender)] += arg3 * stor14[address(msg.sender)] / 1000
                                                if not stor27[address(msg.sender)].length:
                                                    if not stor22[stor[_47596]]:
                                                        emit Transfer(arg3, stor[_47596], msg.sender);
                                                    else:
                                                        emit Transfer(arg3, this.address, msg.sender);
                                                else:
                                                    mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                                    if not stor22[stor[_47596]]:
                                                        idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                        s = 0
                                                        while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                                    else:
                                                        idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                        s = 0
                                                        while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                            else:
                                                emit Transfer((stor14[stor11[address(msg.sender)]] * arg3 / 1000), msg.sender, stor11[address(msg.sender)]);
                                                balanceOf[stor[_47596]] -= arg3
                                                if stor22[address(msg.sender)]:
                                                    balanceOf[address(msg.sender)] += (1000 * arg3) - (stor14[address(msg.sender)] * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                                else:
                                                    totalSupply -= arg3 * stor28 / 1000
                                                    balanceOf[address(msg.sender)] += (1000 * arg3) - (stor28 * arg3) - (stor14[address(msg.sender)] * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                                balanceOf[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                                stor12[address(msg.sender)] += arg3 * stor14[address(msg.sender)] / 1000
                                                if not stor27[address(msg.sender)].length:
                                                    if not stor22[stor[_47596]]:
                                                        emit Transfer(arg3, stor[_47596], msg.sender);
                                                    else:
                                                        emit Transfer(arg3, this.address, msg.sender);
                                                else:
                                                    mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                                    if not stor22[stor[_47596]]:
                                                        idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                        s = 0
                                                        while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                                    else:
                                                        idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                        s = 0
                                                        while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                        sub_064d5a8b[address(msg.sender)] = 0
                        sub_c1198ea1[address(msg.sender)] = 0
                        stor13[stor[_47596]] += stor13[stor11[stor[_47596]]]
    else:
        require stor11[address(msg.sender)]
        require not stor25[stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]]]
        require balanceOf[stor11[address(msg.sender)]] + arg3 >= balanceOf[stor11[address(msg.sender)]]
        require balanceOf[stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]]] >= arg3
        if stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]] != stor11[address(msg.sender)]:
            if not arg3:
                require not stor25[address(msg.sender)]
                if stor11[address(msg.sender)] == stor11[address(msg.sender)]:
                    uint256(stor24[address(msg.sender)]) = not uint8(stor24[address(msg.sender)]) or Mask(248, 8, uint256(stor24[address(msg.sender)]))
                else:
                    if not stor11[address(msg.sender)]:
                        uint8(stor24[address(msg.sender)]) = 0
                    else:
                        if stor11[address(msg.sender)] == msg.sender:
                            uint8(stor24[address(msg.sender)]) = 0
                        else:
                            uint8(stor24[address(msg.sender)]) = 1
                            stor11[address(msg.sender)] = stor11[address(msg.sender)]
                require balanceOf[address(msg.sender)] > stor35 / 100
                if not stor22[address(msg.sender)]:
                    balanceOf[address(msg.sender)] -= stor35 / 100
                    totalSupply -= stor35 / 100
                stor13[stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]]] += stor13[stor11[stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]]]]
            else:
                if this.address == stor11[address(msg.sender)]:
                    require not stor25[address(msg.sender)]
                    require eth.balance(this.address)
                    if 10^16 * totalSupply / eth.balance(this.address) < 1000:
                        stor12[stor6] += (eth.balance(this.address) / 10^12) - (10 * totalSupply) / 10
                        totalSupply += (eth.balance(this.address) / 10^12) - (10 * totalSupply) / 10
                        sub_8f41bb58 = 10 * 10^6
                        emit 0x3b98ac72: 10 * 10^6
                        if stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]]:
                            if balanceOf[address(msg.sender)] >= arg3 / 10^6:
                                balanceOf[address(msg.sender)] -= arg3 / 10^6
                                totalSupply -= arg3 / 10^6
                                call stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]] with:
                                   value 10^16 * arg3 / 10^6 / 1000 wei
                                     gas 2300 * is_zero(value) wei
                            else:
                                balanceOf[address(msg.sender)] = 0
                                totalSupply -= balanceOf[address(msg.sender)]
                                call stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]] with:
                                   value 10^16 * balanceOf[address(msg.sender)] / 1000 wei
                                     gas 2300 * is_zero(value) wei
                        else:
                            if balanceOf[address(msg.sender)] >= arg3 / 10^6:
                                balanceOf[address(msg.sender)] -= arg3 / 10^6
                                totalSupply -= arg3 / 10^6
                                call msg.sender with:
                                   value 10^16 * arg3 / 10^6 / 1000 wei
                                     gas 2300 * is_zero(value) wei
                            else:
                                balanceOf[address(msg.sender)] = 0
                                totalSupply -= balanceOf[address(msg.sender)]
                                call msg.sender with:
                                   value 10^16 * balanceOf[address(msg.sender)] / 1000 wei
                                     gas 2300 * is_zero(value) wei
                    else:
                        require 10^16 * totalSupply / eth.balance(this.address)
                        sub_8f41bb58 = 10^10 / 10^16 * totalSupply / eth.balance(this.address)
                        emit 0x3b98ac72: (10^10 / 10^16 * totalSupply / eth.balance(this.address))
                        require 10^16 * totalSupply / eth.balance(this.address) <= 1250
                        if stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]]:
                            if balanceOf[address(msg.sender)] >= arg3 / 10^6:
                                balanceOf[address(msg.sender)] -= arg3 / 10^6
                                totalSupply -= arg3 / 10^6
                                require 10^16 * totalSupply / eth.balance(this.address)
                                call stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]] with:
                                   value 10^16 * arg3 / 10^6 / 10^16 * totalSupply / eth.balance(this.address) wei
                                     gas 2300 * is_zero(value) wei
                            else:
                                balanceOf[address(msg.sender)] = 0
                                totalSupply -= balanceOf[address(msg.sender)]
                                require 10^16 * totalSupply / eth.balance(this.address)
                                call stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]] with:
                                   value 10^16 * balanceOf[address(msg.sender)] / 10^16 * totalSupply / eth.balance(this.address) wei
                                     gas 2300 * is_zero(value) wei
                        else:
                            if balanceOf[address(msg.sender)] >= arg3 / 10^6:
                                balanceOf[address(msg.sender)] -= arg3 / 10^6
                                totalSupply -= arg3 / 10^6
                                require 10^16 * totalSupply / eth.balance(this.address)
                                call msg.sender with:
                                   value 10^16 * arg3 / 10^6 / 10^16 * totalSupply / eth.balance(this.address) wei
                                     gas 2300 * is_zero(value) wei
                            else:
                                balanceOf[address(msg.sender)] = 0
                                totalSupply -= balanceOf[address(msg.sender)]
                                require 10^16 * totalSupply / eth.balance(this.address)
                                call msg.sender with:
                                   value 10^16 * balanceOf[address(msg.sender)] / 10^16 * totalSupply / eth.balance(this.address) wei
                                     gas 2300 * is_zero(value) wei
                    require ext_call.success
                    stor13[stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]]] += stor13[stor11[stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]]]]
                else:
                    if stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]] == stor11[address(msg.sender)]:
                        balanceOf[stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]]] -= arg3
                        stor12[stor11[address(msg.sender)]] += arg3
                        emit Transfer(arg3, msg.sender, this.address);
                        stor13[stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]]] += stor13[stor11[stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]]]]
                    else:
                        if stor22[stor11[address(msg.sender)]]:
                            if stor11[address(msg.sender)] == msg.sender:
                                stor19[stor11[address(msg.sender)]] += arg3 / 10
                                stor20[stor11[address(msg.sender)]] += arg3 / 100
                                stor21[stor11[address(msg.sender)]] += arg3 / 1000
                                idx = ceil32(arg1.length) + 192
                                s = 0
                                while ceil32(arg1.length) + stor27[address(msg.sender)].length + 160 > idx:
                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                    idx = idx + 32
                                    s = s + 1
                                    continue 
                                if not uint8(stor23[stor11[address(msg.sender)]]):
                                    balanceOf[stor[_47596]] -= arg3
                                    if stor22[stor11[address(msg.sender)]]:
                                        balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                    else:
                                        totalSupply -= arg3 * stor28 / 1000
                                        balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor28 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                    stor12[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                    if not stor27[address(msg.sender)].length:
                                        if not stor22[stor[_47596]]:
                                            emit Transfer(arg3, stor[_47596], msg.sender);
                                        else:
                                            emit Transfer(arg3, this.address, msg.sender);
                                    else:
                                        mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                        if not stor22[stor[_47596]]:
                                            idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                            s = 0
                                            while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                idx = idx + 32
                                                s = s + 1
                                                continue 
                                            emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                        else:
                                            idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                            s = 0
                                            while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                idx = idx + 32
                                                s = s + 1
                                                continue 
                                            emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                else:
                                    if not stor11[stor11[address(msg.sender)]]:
                                        balanceOf[stor[_47596]] -= arg3
                                        if stor22[stor11[address(msg.sender)]]:
                                            balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                        else:
                                            totalSupply -= arg3 * stor28 / 1000
                                            balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor28 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                        stor12[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                        if not stor27[address(msg.sender)].length:
                                            if not stor22[stor[_47596]]:
                                                emit Transfer(arg3, stor[_47596], msg.sender);
                                            else:
                                                emit Transfer(arg3, this.address, msg.sender);
                                        else:
                                            mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                            if not stor22[stor[_47596]]:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                            else:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                    else:
                                        emit Transfer((stor14[stor11[stor11[address(msg.sender)]]] * arg3 / 1000), stor11[address(msg.sender)], stor11[stor11[address(msg.sender)]]);
                                        balanceOf[stor[_47596]] -= arg3
                                        if stor22[stor11[address(msg.sender)]]:
                                            balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) - (stor14[stor11[stor11[address(msg.sender)]]] * arg3) / 1000
                                        else:
                                            totalSupply -= arg3 * stor28 / 1000
                                            balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor28 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) - (stor14[stor11[stor11[address(msg.sender)]]] * arg3) / 1000
                                        balanceOf[stor11[stor11[address(msg.sender)]]] += arg3 * stor14[stor11[stor11[address(msg.sender)]]] / 1000
                                        stor12[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                        if not stor27[address(msg.sender)].length:
                                            if not stor22[stor[_47596]]:
                                                emit Transfer(arg3, stor[_47596], msg.sender);
                                            else:
                                                emit Transfer(arg3, this.address, msg.sender);
                                        else:
                                            mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                            if not stor22[stor[_47596]]:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                            else:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                            else:
                                if stor15[address(msg.sender)]:
                                    stor19[stor11[address(msg.sender)]] += arg3 / 10
                                    stor20[stor11[address(msg.sender)]] += arg3 / 100
                                    stor21[stor11[address(msg.sender)]] += arg3 / 1000
                                    idx = ceil32(arg1.length) + 192
                                    s = 0
                                    while ceil32(arg1.length) + stor27[address(msg.sender)].length + 160 > idx:
                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    if not uint8(stor23[stor11[address(msg.sender)]]):
                                        balanceOf[stor[_47596]] -= arg3
                                        if stor22[stor11[address(msg.sender)]]:
                                            balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                        else:
                                            totalSupply -= arg3 * stor28 / 1000
                                            balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor28 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                        stor12[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                        if not stor27[address(msg.sender)].length:
                                            if not stor22[stor[_47596]]:
                                                emit Transfer(arg3, stor[_47596], msg.sender);
                                            else:
                                                emit Transfer(arg3, this.address, msg.sender);
                                        else:
                                            mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                            if not stor22[stor[_47596]]:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                            else:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                    else:
                                        if not stor11[stor11[address(msg.sender)]]:
                                            balanceOf[stor[_47596]] -= arg3
                                            if stor22[stor11[address(msg.sender)]]:
                                                balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                            else:
                                                totalSupply -= arg3 * stor28 / 1000
                                                balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor28 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                            stor12[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                            if not stor27[address(msg.sender)].length:
                                                if not stor22[stor[_47596]]:
                                                    emit Transfer(arg3, stor[_47596], msg.sender);
                                                else:
                                                    emit Transfer(arg3, this.address, msg.sender);
                                            else:
                                                mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                                if not stor22[stor[_47596]]:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                                else:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                        else:
                                            emit Transfer((stor14[stor11[stor11[address(msg.sender)]]] * arg3 / 1000), stor11[address(msg.sender)], stor11[stor11[address(msg.sender)]]);
                                            balanceOf[stor[_47596]] -= arg3
                                            if stor22[stor11[address(msg.sender)]]:
                                                balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) - (stor14[stor11[stor11[address(msg.sender)]]] * arg3) / 1000
                                            else:
                                                totalSupply -= arg3 * stor28 / 1000
                                                balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor28 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) - (stor14[stor11[stor11[address(msg.sender)]]] * arg3) / 1000
                                            balanceOf[stor11[stor11[address(msg.sender)]]] += arg3 * stor14[stor11[stor11[address(msg.sender)]]] / 1000
                                            stor12[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                            if not stor27[address(msg.sender)].length:
                                                if not stor22[stor[_47596]]:
                                                    emit Transfer(arg3, stor[_47596], msg.sender);
                                                else:
                                                    emit Transfer(arg3, this.address, msg.sender);
                                            else:
                                                mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                                if not stor22[stor[_47596]]:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                                else:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                else:
                                    if stor11[address(msg.sender)]:
                                        stor15[address(msg.sender)] = stor11[address(msg.sender)]
                                        stor16[msg.sender] = stor16[stor11[address(msg.sender)]]
                                        stor17[msg.sender] = stor17[stor11[address(msg.sender)]]
                                        stor18[msg.sender] = stor18[stor11[address(msg.sender)]]
                                        stor11[msg.sender] = stor11[stor11[address(msg.sender)]]
                                        uint8(stor23[address(msg.sender)]) = 0
                                        stor19[address(msg.sender)] += stor19[stor11[address(msg.sender)]] / 10
                                        stor20[address(msg.sender)] += stor20[stor11[address(msg.sender)]] / 10
                                        stor21[address(msg.sender)] += stor21[stor11[address(msg.sender)]] / 10
                                    stor19[stor11[address(msg.sender)]] += arg3 / 10
                                    stor20[stor11[address(msg.sender)]] += arg3 / 100
                                    stor21[stor11[address(msg.sender)]] += arg3 / 1000
                                    idx = ceil32(arg1.length) + 192
                                    s = 0
                                    while ceil32(arg1.length) + stor27[address(msg.sender)].length + 160 > idx:
                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    if not uint8(stor23[stor11[address(msg.sender)]]):
                                        balanceOf[stor[_47596]] -= arg3
                                        if stor22[stor11[address(msg.sender)]]:
                                            balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                        else:
                                            totalSupply -= arg3 * stor28 / 1000
                                            balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor28 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                        stor12[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                        if not stor27[address(msg.sender)].length:
                                            if not stor22[stor[_47596]]:
                                                emit Transfer(arg3, stor[_47596], msg.sender);
                                            else:
                                                emit Transfer(arg3, this.address, msg.sender);
                                        else:
                                            mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                            if not stor22[stor[_47596]]:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                            else:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                    else:
                                        if not stor11[stor11[address(msg.sender)]]:
                                            balanceOf[stor[_47596]] -= arg3
                                            if stor22[stor11[address(msg.sender)]]:
                                                balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                            else:
                                                totalSupply -= arg3 * stor28 / 1000
                                                balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor28 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                            stor12[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                            if not stor27[address(msg.sender)].length:
                                                if not stor22[stor[_47596]]:
                                                    emit Transfer(arg3, stor[_47596], msg.sender);
                                                else:
                                                    emit Transfer(arg3, this.address, msg.sender);
                                            else:
                                                mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                                if not stor22[stor[_47596]]:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                                else:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                        else:
                                            emit Transfer((stor14[stor11[stor11[address(msg.sender)]]] * arg3 / 1000), stor11[address(msg.sender)], stor11[stor11[address(msg.sender)]]);
                                            balanceOf[stor[_47596]] -= arg3
                                            if stor22[stor11[address(msg.sender)]]:
                                                balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) - (stor14[stor11[stor11[address(msg.sender)]]] * arg3) / 1000
                                            else:
                                                totalSupply -= arg3 * stor28 / 1000
                                                balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor28 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) - (stor14[stor11[stor11[address(msg.sender)]]] * arg3) / 1000
                                            balanceOf[stor11[stor11[address(msg.sender)]]] += arg3 * stor14[stor11[stor11[address(msg.sender)]]] / 1000
                                            stor12[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                            if not stor27[address(msg.sender)].length:
                                                if not stor22[stor[_47596]]:
                                                    emit Transfer(arg3, stor[_47596], msg.sender);
                                                else:
                                                    emit Transfer(arg3, this.address, msg.sender);
                                            else:
                                                mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                                if not stor22[stor[_47596]]:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                                else:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                        else:
                            if stor15[stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]]]:
                                idx = ceil32(arg1.length) + 192
                                s = 0
                                while ceil32(arg1.length) + stor27[address(msg.sender)].length + 160 > idx:
                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                    idx = idx + 32
                                    s = s + 1
                                    continue 
                                if not uint8(stor23[stor11[address(msg.sender)]]):
                                    balanceOf[stor[_47596]] -= arg3
                                    if stor22[stor11[address(msg.sender)]]:
                                        balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                    else:
                                        totalSupply -= arg3 * stor28 / 1000
                                        balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor28 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                    stor12[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                    if not stor27[address(msg.sender)].length:
                                        if not stor22[stor[_47596]]:
                                            emit Transfer(arg3, stor[_47596], msg.sender);
                                        else:
                                            emit Transfer(arg3, this.address, msg.sender);
                                    else:
                                        mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                        if not stor22[stor[_47596]]:
                                            idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                            s = 0
                                            while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                idx = idx + 32
                                                s = s + 1
                                                continue 
                                            emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                        else:
                                            idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                            s = 0
                                            while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                idx = idx + 32
                                                s = s + 1
                                                continue 
                                            emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                else:
                                    if not stor11[stor11[address(msg.sender)]]:
                                        balanceOf[stor[_47596]] -= arg3
                                        if stor22[stor11[address(msg.sender)]]:
                                            balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                        else:
                                            totalSupply -= arg3 * stor28 / 1000
                                            balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor28 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                        stor12[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                        if not stor27[address(msg.sender)].length:
                                            if not stor22[stor[_47596]]:
                                                emit Transfer(arg3, stor[_47596], msg.sender);
                                            else:
                                                emit Transfer(arg3, this.address, msg.sender);
                                        else:
                                            mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                            if not stor22[stor[_47596]]:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                            else:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                    else:
                                        emit Transfer((stor14[stor11[stor11[address(msg.sender)]]] * arg3 / 1000), stor11[address(msg.sender)], stor11[stor11[address(msg.sender)]]);
                                        balanceOf[stor[_47596]] -= arg3
                                        if stor22[stor11[address(msg.sender)]]:
                                            balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) - (stor14[stor11[stor11[address(msg.sender)]]] * arg3) / 1000
                                        else:
                                            totalSupply -= arg3 * stor28 / 1000
                                            balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor28 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) - (stor14[stor11[stor11[address(msg.sender)]]] * arg3) / 1000
                                        balanceOf[stor11[stor11[address(msg.sender)]]] += arg3 * stor14[stor11[stor11[address(msg.sender)]]] / 1000
                                        stor12[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                        if not stor27[address(msg.sender)].length:
                                            if not stor22[stor[_47596]]:
                                                emit Transfer(arg3, stor[_47596], msg.sender);
                                            else:
                                                emit Transfer(arg3, this.address, msg.sender);
                                        else:
                                            mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                            if not stor22[stor[_47596]]:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                            else:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                            else:
                                if stor11[address(msg.sender)] == msg.sender:
                                    stor19[stor11[address(msg.sender)]] += arg3 / 10
                                    stor20[stor11[address(msg.sender)]] += arg3 / 100
                                    stor21[stor11[address(msg.sender)]] += arg3 / 1000
                                    idx = ceil32(arg1.length) + 192
                                    s = 0
                                    while ceil32(arg1.length) + stor27[address(msg.sender)].length + 160 > idx:
                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    if not uint8(stor23[stor11[address(msg.sender)]]):
                                        balanceOf[stor[_47596]] -= arg3
                                        if stor22[stor11[address(msg.sender)]]:
                                            balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                        else:
                                            totalSupply -= arg3 * stor28 / 1000
                                            balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor28 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                        stor12[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                        if not stor27[address(msg.sender)].length:
                                            if not stor22[stor[_47596]]:
                                                emit Transfer(arg3, stor[_47596], msg.sender);
                                            else:
                                                emit Transfer(arg3, this.address, msg.sender);
                                        else:
                                            mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                            if not stor22[stor[_47596]]:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                            else:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                    else:
                                        if not stor11[stor11[address(msg.sender)]]:
                                            balanceOf[stor[_47596]] -= arg3
                                            if stor22[stor11[address(msg.sender)]]:
                                                balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                            else:
                                                totalSupply -= arg3 * stor28 / 1000
                                                balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor28 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                            stor12[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                            if not stor27[address(msg.sender)].length:
                                                if not stor22[stor[_47596]]:
                                                    emit Transfer(arg3, stor[_47596], msg.sender);
                                                else:
                                                    emit Transfer(arg3, this.address, msg.sender);
                                            else:
                                                mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                                if not stor22[stor[_47596]]:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                                else:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                        else:
                                            emit Transfer((stor14[stor11[stor11[address(msg.sender)]]] * arg3 / 1000), stor11[address(msg.sender)], stor11[stor11[address(msg.sender)]]);
                                            balanceOf[stor[_47596]] -= arg3
                                            if stor22[stor11[address(msg.sender)]]:
                                                balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) - (stor14[stor11[stor11[address(msg.sender)]]] * arg3) / 1000
                                            else:
                                                totalSupply -= arg3 * stor28 / 1000
                                                balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor28 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) - (stor14[stor11[stor11[address(msg.sender)]]] * arg3) / 1000
                                            balanceOf[stor11[stor11[address(msg.sender)]]] += arg3 * stor14[stor11[stor11[address(msg.sender)]]] / 1000
                                            stor12[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                            if not stor27[address(msg.sender)].length:
                                                if not stor22[stor[_47596]]:
                                                    emit Transfer(arg3, stor[_47596], msg.sender);
                                                else:
                                                    emit Transfer(arg3, this.address, msg.sender);
                                            else:
                                                mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                                if not stor22[stor[_47596]]:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                                else:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                else:
                                    if stor15[address(msg.sender)]:
                                        stor19[stor11[address(msg.sender)]] += arg3 / 10
                                        stor20[stor11[address(msg.sender)]] += arg3 / 100
                                        stor21[stor11[address(msg.sender)]] += arg3 / 1000
                                        idx = ceil32(arg1.length) + 192
                                        s = 0
                                        while ceil32(arg1.length) + stor27[address(msg.sender)].length + 160 > idx:
                                            mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                            idx = idx + 32
                                            s = s + 1
                                            continue 
                                        if not uint8(stor23[stor11[address(msg.sender)]]):
                                            balanceOf[stor[_47596]] -= arg3
                                            if stor22[stor11[address(msg.sender)]]:
                                                balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                            else:
                                                totalSupply -= arg3 * stor28 / 1000
                                                balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor28 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                            stor12[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                            if not stor27[address(msg.sender)].length:
                                                if not stor22[stor[_47596]]:
                                                    emit Transfer(arg3, stor[_47596], msg.sender);
                                                else:
                                                    emit Transfer(arg3, this.address, msg.sender);
                                            else:
                                                mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                                if not stor22[stor[_47596]]:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                                else:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                        else:
                                            if not stor11[stor11[address(msg.sender)]]:
                                                balanceOf[stor[_47596]] -= arg3
                                                if stor22[stor11[address(msg.sender)]]:
                                                    balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                                else:
                                                    totalSupply -= arg3 * stor28 / 1000
                                                    balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor28 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                                stor12[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                                if not stor27[address(msg.sender)].length:
                                                    if not stor22[stor[_47596]]:
                                                        emit Transfer(arg3, stor[_47596], msg.sender);
                                                    else:
                                                        emit Transfer(arg3, this.address, msg.sender);
                                                else:
                                                    mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                                    if not stor22[stor[_47596]]:
                                                        idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                        s = 0
                                                        while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                                    else:
                                                        idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                        s = 0
                                                        while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                            else:
                                                emit Transfer((stor14[stor11[stor11[address(msg.sender)]]] * arg3 / 1000), stor11[address(msg.sender)], stor11[stor11[address(msg.sender)]]);
                                                balanceOf[stor[_47596]] -= arg3
                                                if stor22[stor11[address(msg.sender)]]:
                                                    balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) - (stor14[stor11[stor11[address(msg.sender)]]] * arg3) / 1000
                                                else:
                                                    totalSupply -= arg3 * stor28 / 1000
                                                    balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor28 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) - (stor14[stor11[stor11[address(msg.sender)]]] * arg3) / 1000
                                                balanceOf[stor11[stor11[address(msg.sender)]]] += arg3 * stor14[stor11[stor11[address(msg.sender)]]] / 1000
                                                stor12[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                                if not stor27[address(msg.sender)].length:
                                                    if not stor22[stor[_47596]]:
                                                        emit Transfer(arg3, stor[_47596], msg.sender);
                                                    else:
                                                        emit Transfer(arg3, this.address, msg.sender);
                                                else:
                                                    mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                                    if not stor22[stor[_47596]]:
                                                        idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                        s = 0
                                                        while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                                    else:
                                                        idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                        s = 0
                                                        while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                    else:
                                        if stor11[address(msg.sender)]:
                                            stor15[address(msg.sender)] = stor11[address(msg.sender)]
                                            stor16[msg.sender] = stor16[stor11[address(msg.sender)]]
                                            stor17[msg.sender] = stor17[stor11[address(msg.sender)]]
                                            stor18[msg.sender] = stor18[stor11[address(msg.sender)]]
                                            stor11[msg.sender] = stor11[stor11[address(msg.sender)]]
                                            uint8(stor23[address(msg.sender)]) = 0
                                            stor19[address(msg.sender)] += stor19[stor11[address(msg.sender)]] / 10
                                            stor20[address(msg.sender)] += stor20[stor11[address(msg.sender)]] / 10
                                            stor21[address(msg.sender)] += stor21[stor11[address(msg.sender)]] / 10
                                        stor19[stor11[address(msg.sender)]] += arg3 / 10
                                        stor20[stor11[address(msg.sender)]] += arg3 / 100
                                        stor21[stor11[address(msg.sender)]] += arg3 / 1000
                                        idx = ceil32(arg1.length) + 192
                                        s = 0
                                        while ceil32(arg1.length) + stor27[address(msg.sender)].length + 160 > idx:
                                            mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                            idx = idx + 32
                                            s = s + 1
                                            continue 
                                        if not uint8(stor23[stor11[address(msg.sender)]]):
                                            balanceOf[stor[_47596]] -= arg3
                                            if stor22[stor11[address(msg.sender)]]:
                                                balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                            else:
                                                totalSupply -= arg3 * stor28 / 1000
                                                balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor28 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                            stor12[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                            if not stor27[address(msg.sender)].length:
                                                if not stor22[stor[_47596]]:
                                                    emit Transfer(arg3, stor[_47596], msg.sender);
                                                else:
                                                    emit Transfer(arg3, this.address, msg.sender);
                                            else:
                                                mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                                if not stor22[stor[_47596]]:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                                else:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                        else:
                                            if not stor11[stor11[address(msg.sender)]]:
                                                balanceOf[stor[_47596]] -= arg3
                                                if stor22[stor11[address(msg.sender)]]:
                                                    balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                                else:
                                                    totalSupply -= arg3 * stor28 / 1000
                                                    balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor28 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                                stor12[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                                if not stor27[address(msg.sender)].length:
                                                    if not stor22[stor[_47596]]:
                                                        emit Transfer(arg3, stor[_47596], msg.sender);
                                                    else:
                                                        emit Transfer(arg3, this.address, msg.sender);
                                                else:
                                                    mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                                    if not stor22[stor[_47596]]:
                                                        idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                        s = 0
                                                        while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                                    else:
                                                        idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                        s = 0
                                                        while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                            else:
                                                emit Transfer((stor14[stor11[stor11[address(msg.sender)]]] * arg3 / 1000), stor11[address(msg.sender)], stor11[stor11[address(msg.sender)]]);
                                                balanceOf[stor[_47596]] -= arg3
                                                if stor22[stor11[address(msg.sender)]]:
                                                    balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) - (stor14[stor11[stor11[address(msg.sender)]]] * arg3) / 1000
                                                else:
                                                    totalSupply -= arg3 * stor28 / 1000
                                                    balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor28 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) - (stor14[stor11[stor11[address(msg.sender)]]] * arg3) / 1000
                                                balanceOf[stor11[stor11[address(msg.sender)]]] += arg3 * stor14[stor11[stor11[address(msg.sender)]]] / 1000
                                                stor12[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                                if not stor27[address(msg.sender)].length:
                                                    if not stor22[stor[_47596]]:
                                                        emit Transfer(arg3, stor[_47596], msg.sender);
                                                    else:
                                                        emit Transfer(arg3, this.address, msg.sender);
                                                else:
                                                    mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                                    if not stor22[stor[_47596]]:
                                                        idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                        s = 0
                                                        while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                                    else:
                                                        idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                        s = 0
                                                        while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                        sub_064d5a8b[address(msg.sender)] = 0
                        sub_c1198ea1[address(msg.sender)] = 0
                        stor13[stor[_47596]] += stor13[stor11[stor[_47596]]]
        else:
            if not arg3:
                require not stor25[address(msg.sender)]
                uint256(stor23[address(msg.sender)]) = not uint8(stor23[address(msg.sender)]) or Mask(248, 8, uint256(stor23[address(msg.sender)]))
                mem[ceil32(arg1.length) + 288] = uint256(stor27[address(msg.sender)].field_0)
                idx = ceil32(arg1.length) + 288
                s = 0
                while ceil32(arg1.length) + stor27[address(msg.sender)].length + 288 > idx + 32:
                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                    idx = idx + 32
                    s = s + 1
                    continue 
                mem[ceil32(arg1.length) + stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32) + 288] = stor27[stor11[address(msg.sender)]].length
                mem[ceil32(arg1.length) + stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32) + 320] = uint256(stor27[stor11[address(msg.sender)]].field_0)
                idx = ceil32(arg1.length) + stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32) + 320
                s = 0
                while ceil32(arg1.length) + stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32) + stor27[stor11[address(msg.sender)]].length + 320 > idx + 32:
                    mem[idx + 32] = uint256(stor27[stor11[address(msg.sender)]][s].field_256)
                    idx = idx + 32
                    s = s + 1
                    continue 
                emit 0xf4bf15f5: Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + 288 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32) + stor27[stor11[address(msg.sender)]].length + (floor32(stor27[stor11[address(msg.sender)]].length - 1) + -stor27[stor11[address(msg.sender)]].length + 32 % 32) + 32]), stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32) + 128, bool(uint8(not uint8(stor23[address(msg.sender)])))
                require balanceOf[address(msg.sender)] > stor35 / 100
                if not stor22[address(msg.sender)]:
                    balanceOf[address(msg.sender)] -= stor35 / 100
                    totalSupply -= stor35 / 100
                stor13[stor[_47596]] += stor13[stor11[stor[_47596]]]
            else:
                if this.address == stor11[address(msg.sender)]:
                    require not stor25[address(msg.sender)]
                    require eth.balance(this.address)
                    if 10^16 * totalSupply / eth.balance(this.address) < 1000:
                        stor12[stor6] += (eth.balance(this.address) / 10^12) - (10 * totalSupply) / 10
                        totalSupply += (eth.balance(this.address) / 10^12) - (10 * totalSupply) / 10
                        sub_8f41bb58 = 10 * 10^6
                        emit 0x3b98ac72: 10 * 10^6
                        if stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]]:
                            if balanceOf[address(msg.sender)] >= arg3 / 10^6:
                                balanceOf[address(msg.sender)] -= arg3 / 10^6
                                totalSupply -= arg3 / 10^6
                                call stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]] with:
                                   value 10^16 * arg3 / 10^6 / 1000 wei
                                     gas 2300 * is_zero(value) wei
                            else:
                                balanceOf[address(msg.sender)] = 0
                                totalSupply -= balanceOf[address(msg.sender)]
                                call stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]] with:
                                   value 10^16 * balanceOf[address(msg.sender)] / 1000 wei
                                     gas 2300 * is_zero(value) wei
                        else:
                            if balanceOf[address(msg.sender)] >= arg3 / 10^6:
                                balanceOf[address(msg.sender)] -= arg3 / 10^6
                                totalSupply -= arg3 / 10^6
                                call msg.sender with:
                                   value 10^16 * arg3 / 10^6 / 1000 wei
                                     gas 2300 * is_zero(value) wei
                            else:
                                balanceOf[address(msg.sender)] = 0
                                totalSupply -= balanceOf[address(msg.sender)]
                                call msg.sender with:
                                   value 10^16 * balanceOf[address(msg.sender)] / 1000 wei
                                     gas 2300 * is_zero(value) wei
                    else:
                        require 10^16 * totalSupply / eth.balance(this.address)
                        sub_8f41bb58 = 10^10 / 10^16 * totalSupply / eth.balance(this.address)
                        emit 0x3b98ac72: (10^10 / 10^16 * totalSupply / eth.balance(this.address))
                        require 10^16 * totalSupply / eth.balance(this.address) <= 1250
                        if stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]]:
                            if balanceOf[address(msg.sender)] >= arg3 / 10^6:
                                balanceOf[address(msg.sender)] -= arg3 / 10^6
                                totalSupply -= arg3 / 10^6
                                require 10^16 * totalSupply / eth.balance(this.address)
                                call stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]] with:
                                   value 10^16 * arg3 / 10^6 / 10^16 * totalSupply / eth.balance(this.address) wei
                                     gas 2300 * is_zero(value) wei
                            else:
                                balanceOf[address(msg.sender)] = 0
                                totalSupply -= balanceOf[address(msg.sender)]
                                require 10^16 * totalSupply / eth.balance(this.address)
                                call stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]] with:
                                   value 10^16 * balanceOf[address(msg.sender)] / 10^16 * totalSupply / eth.balance(this.address) wei
                                     gas 2300 * is_zero(value) wei
                        else:
                            if balanceOf[address(msg.sender)] >= arg3 / 10^6:
                                balanceOf[address(msg.sender)] -= arg3 / 10^6
                                totalSupply -= arg3 / 10^6
                                require 10^16 * totalSupply / eth.balance(this.address)
                                call msg.sender with:
                                   value 10^16 * arg3 / 10^6 / 10^16 * totalSupply / eth.balance(this.address) wei
                                     gas 2300 * is_zero(value) wei
                            else:
                                balanceOf[address(msg.sender)] = 0
                                totalSupply -= balanceOf[address(msg.sender)]
                                require 10^16 * totalSupply / eth.balance(this.address)
                                call msg.sender with:
                                   value 10^16 * balanceOf[address(msg.sender)] / 10^16 * totalSupply / eth.balance(this.address) wei
                                     gas 2300 * is_zero(value) wei
                    require ext_call.success
                    stor13[stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]]] += stor13[stor11[stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]]]]
                else:
                    if stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]] == stor11[address(msg.sender)]:
                        balanceOf[stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]]] -= arg3
                        stor12[stor11[address(msg.sender)]] += arg3
                        emit Transfer(arg3, msg.sender, this.address);
                        stor13[stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]]] += stor13[stor11[stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]]]]
                    else:
                        if stor22[stor11[address(msg.sender)]]:
                            if stor11[address(msg.sender)] == msg.sender:
                                stor19[stor11[address(msg.sender)]] += arg3 / 10
                                stor20[stor11[address(msg.sender)]] += arg3 / 100
                                stor21[stor11[address(msg.sender)]] += arg3 / 1000
                                idx = ceil32(arg1.length) + 192
                                s = 0
                                while ceil32(arg1.length) + stor27[address(msg.sender)].length + 160 > idx:
                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                    idx = idx + 32
                                    s = s + 1
                                    continue 
                                if not uint8(stor23[stor11[address(msg.sender)]]):
                                    balanceOf[stor[_47596]] -= arg3
                                    if stor22[stor11[address(msg.sender)]]:
                                        balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                    else:
                                        totalSupply -= arg3 * stor28 / 1000
                                        balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor28 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                    stor12[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                    if not stor27[address(msg.sender)].length:
                                        if not stor22[stor[_47596]]:
                                            emit Transfer(arg3, stor[_47596], msg.sender);
                                        else:
                                            emit Transfer(arg3, this.address, msg.sender);
                                    else:
                                        mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                        if not stor22[stor[_47596]]:
                                            idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                            s = 0
                                            while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                idx = idx + 32
                                                s = s + 1
                                                continue 
                                            emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                        else:
                                            idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                            s = 0
                                            while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                idx = idx + 32
                                                s = s + 1
                                                continue 
                                            emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                else:
                                    if not stor11[stor11[address(msg.sender)]]:
                                        balanceOf[stor[_47596]] -= arg3
                                        if stor22[stor11[address(msg.sender)]]:
                                            balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                        else:
                                            totalSupply -= arg3 * stor28 / 1000
                                            balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor28 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                        stor12[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                        if not stor27[address(msg.sender)].length:
                                            if not stor22[stor[_47596]]:
                                                emit Transfer(arg3, stor[_47596], msg.sender);
                                            else:
                                                emit Transfer(arg3, this.address, msg.sender);
                                        else:
                                            mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                            if not stor22[stor[_47596]]:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                            else:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                    else:
                                        emit Transfer((stor14[stor11[stor11[address(msg.sender)]]] * arg3 / 1000), stor11[address(msg.sender)], stor11[stor11[address(msg.sender)]]);
                                        balanceOf[stor[_47596]] -= arg3
                                        if stor22[stor11[address(msg.sender)]]:
                                            balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) - (stor14[stor11[stor11[address(msg.sender)]]] * arg3) / 1000
                                        else:
                                            totalSupply -= arg3 * stor28 / 1000
                                            balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor28 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) - (stor14[stor11[stor11[address(msg.sender)]]] * arg3) / 1000
                                        balanceOf[stor11[stor11[address(msg.sender)]]] += arg3 * stor14[stor11[stor11[address(msg.sender)]]] / 1000
                                        stor12[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                        if not stor27[address(msg.sender)].length:
                                            if not stor22[stor[_47596]]:
                                                emit Transfer(arg3, stor[_47596], msg.sender);
                                            else:
                                                emit Transfer(arg3, this.address, msg.sender);
                                        else:
                                            mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                            if not stor22[stor[_47596]]:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                            else:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                            else:
                                if stor15[address(msg.sender)]:
                                    stor19[stor11[address(msg.sender)]] += arg3 / 10
                                    stor20[stor11[address(msg.sender)]] += arg3 / 100
                                    stor21[stor11[address(msg.sender)]] += arg3 / 1000
                                    idx = ceil32(arg1.length) + 192
                                    s = 0
                                    while ceil32(arg1.length) + stor27[address(msg.sender)].length + 160 > idx:
                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    if not uint8(stor23[stor11[address(msg.sender)]]):
                                        balanceOf[stor[_47596]] -= arg3
                                        if stor22[stor11[address(msg.sender)]]:
                                            balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                        else:
                                            totalSupply -= arg3 * stor28 / 1000
                                            balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor28 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                        stor12[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                        if not stor27[address(msg.sender)].length:
                                            if not stor22[stor[_47596]]:
                                                emit Transfer(arg3, stor[_47596], msg.sender);
                                            else:
                                                emit Transfer(arg3, this.address, msg.sender);
                                        else:
                                            mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                            if not stor22[stor[_47596]]:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                            else:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                    else:
                                        if not stor11[stor11[address(msg.sender)]]:
                                            balanceOf[stor[_47596]] -= arg3
                                            if stor22[stor11[address(msg.sender)]]:
                                                balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                            else:
                                                totalSupply -= arg3 * stor28 / 1000
                                                balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor28 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                            stor12[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                            if not stor27[address(msg.sender)].length:
                                                if not stor22[stor[_47596]]:
                                                    emit Transfer(arg3, stor[_47596], msg.sender);
                                                else:
                                                    emit Transfer(arg3, this.address, msg.sender);
                                            else:
                                                mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                                if not stor22[stor[_47596]]:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                                else:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                        else:
                                            emit Transfer((stor14[stor11[stor11[address(msg.sender)]]] * arg3 / 1000), stor11[address(msg.sender)], stor11[stor11[address(msg.sender)]]);
                                            balanceOf[stor[_47596]] -= arg3
                                            if stor22[stor11[address(msg.sender)]]:
                                                balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) - (stor14[stor11[stor11[address(msg.sender)]]] * arg3) / 1000
                                            else:
                                                totalSupply -= arg3 * stor28 / 1000
                                                balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor28 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) - (stor14[stor11[stor11[address(msg.sender)]]] * arg3) / 1000
                                            balanceOf[stor11[stor11[address(msg.sender)]]] += arg3 * stor14[stor11[stor11[address(msg.sender)]]] / 1000
                                            stor12[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                            if not stor27[address(msg.sender)].length:
                                                if not stor22[stor[_47596]]:
                                                    emit Transfer(arg3, stor[_47596], msg.sender);
                                                else:
                                                    emit Transfer(arg3, this.address, msg.sender);
                                            else:
                                                mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                                if not stor22[stor[_47596]]:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                                else:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                else:
                                    if stor11[address(msg.sender)]:
                                        stor15[address(msg.sender)] = stor11[address(msg.sender)]
                                        stor16[msg.sender] = stor16[stor11[address(msg.sender)]]
                                        stor17[msg.sender] = stor17[stor11[address(msg.sender)]]
                                        stor18[msg.sender] = stor18[stor11[address(msg.sender)]]
                                        stor11[msg.sender] = stor11[stor11[address(msg.sender)]]
                                        uint8(stor23[address(msg.sender)]) = 0
                                        stor19[address(msg.sender)] += stor19[stor11[address(msg.sender)]] / 10
                                        stor20[address(msg.sender)] += stor20[stor11[address(msg.sender)]] / 10
                                        stor21[address(msg.sender)] += stor21[stor11[address(msg.sender)]] / 10
                                    stor19[stor11[address(msg.sender)]] += arg3 / 10
                                    stor20[stor11[address(msg.sender)]] += arg3 / 100
                                    stor21[stor11[address(msg.sender)]] += arg3 / 1000
                                    idx = ceil32(arg1.length) + 192
                                    s = 0
                                    while ceil32(arg1.length) + stor27[address(msg.sender)].length + 160 > idx:
                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    if not uint8(stor23[stor11[address(msg.sender)]]):
                                        balanceOf[stor[_47596]] -= arg3
                                        if stor22[stor11[address(msg.sender)]]:
                                            balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                        else:
                                            totalSupply -= arg3 * stor28 / 1000
                                            balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor28 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                        stor12[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                        if not stor27[address(msg.sender)].length:
                                            if not stor22[stor[_47596]]:
                                                emit Transfer(arg3, stor[_47596], msg.sender);
                                            else:
                                                emit Transfer(arg3, this.address, msg.sender);
                                        else:
                                            mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                            if not stor22[stor[_47596]]:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                            else:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                    else:
                                        if not stor11[stor11[address(msg.sender)]]:
                                            balanceOf[stor[_47596]] -= arg3
                                            if stor22[stor11[address(msg.sender)]]:
                                                balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                            else:
                                                totalSupply -= arg3 * stor28 / 1000
                                                balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor28 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                            stor12[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                            if not stor27[address(msg.sender)].length:
                                                if not stor22[stor[_47596]]:
                                                    emit Transfer(arg3, stor[_47596], msg.sender);
                                                else:
                                                    emit Transfer(arg3, this.address, msg.sender);
                                            else:
                                                mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                                if not stor22[stor[_47596]]:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                                else:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                        else:
                                            emit Transfer((stor14[stor11[stor11[address(msg.sender)]]] * arg3 / 1000), stor11[address(msg.sender)], stor11[stor11[address(msg.sender)]]);
                                            balanceOf[stor[_47596]] -= arg3
                                            if stor22[stor11[address(msg.sender)]]:
                                                balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) - (stor14[stor11[stor11[address(msg.sender)]]] * arg3) / 1000
                                            else:
                                                totalSupply -= arg3 * stor28 / 1000
                                                balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor28 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) - (stor14[stor11[stor11[address(msg.sender)]]] * arg3) / 1000
                                            balanceOf[stor11[stor11[address(msg.sender)]]] += arg3 * stor14[stor11[stor11[address(msg.sender)]]] / 1000
                                            stor12[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                            if not stor27[address(msg.sender)].length:
                                                if not stor22[stor[_47596]]:
                                                    emit Transfer(arg3, stor[_47596], msg.sender);
                                                else:
                                                    emit Transfer(arg3, this.address, msg.sender);
                                            else:
                                                mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                                if not stor22[stor[_47596]]:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                                else:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                        else:
                            if stor15[stor[mem[ceil32(arg1.length) + floor32(arg1.length) + 128 len (arg1.length % 32) + 32]][call.data[arg1 + 36 len floor32(arg1.length)]]]:
                                idx = ceil32(arg1.length) + 192
                                s = 0
                                while ceil32(arg1.length) + stor27[address(msg.sender)].length + 160 > idx:
                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                    idx = idx + 32
                                    s = s + 1
                                    continue 
                                if not uint8(stor23[stor11[address(msg.sender)]]):
                                    balanceOf[stor[_47596]] -= arg3
                                    if stor22[stor11[address(msg.sender)]]:
                                        balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                    else:
                                        totalSupply -= arg3 * stor28 / 1000
                                        balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor28 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                    stor12[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                    if not stor27[address(msg.sender)].length:
                                        if not stor22[stor[_47596]]:
                                            emit Transfer(arg3, stor[_47596], msg.sender);
                                        else:
                                            emit Transfer(arg3, this.address, msg.sender);
                                    else:
                                        mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                        if not stor22[stor[_47596]]:
                                            idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                            s = 0
                                            while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                idx = idx + 32
                                                s = s + 1
                                                continue 
                                            emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                        else:
                                            idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                            s = 0
                                            while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                idx = idx + 32
                                                s = s + 1
                                                continue 
                                            emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                else:
                                    if not stor11[stor11[address(msg.sender)]]:
                                        balanceOf[stor[_47596]] -= arg3
                                        if stor22[stor11[address(msg.sender)]]:
                                            balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                        else:
                                            totalSupply -= arg3 * stor28 / 1000
                                            balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor28 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                        stor12[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                        if not stor27[address(msg.sender)].length:
                                            if not stor22[stor[_47596]]:
                                                emit Transfer(arg3, stor[_47596], msg.sender);
                                            else:
                                                emit Transfer(arg3, this.address, msg.sender);
                                        else:
                                            mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                            if not stor22[stor[_47596]]:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                            else:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                    else:
                                        emit Transfer((stor14[stor11[stor11[address(msg.sender)]]] * arg3 / 1000), stor11[address(msg.sender)], stor11[stor11[address(msg.sender)]]);
                                        balanceOf[stor[_47596]] -= arg3
                                        if stor22[stor11[address(msg.sender)]]:
                                            balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) - (stor14[stor11[stor11[address(msg.sender)]]] * arg3) / 1000
                                        else:
                                            totalSupply -= arg3 * stor28 / 1000
                                            balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor28 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) - (stor14[stor11[stor11[address(msg.sender)]]] * arg3) / 1000
                                        balanceOf[stor11[stor11[address(msg.sender)]]] += arg3 * stor14[stor11[stor11[address(msg.sender)]]] / 1000
                                        stor12[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                        if not stor27[address(msg.sender)].length:
                                            if not stor22[stor[_47596]]:
                                                emit Transfer(arg3, stor[_47596], msg.sender);
                                            else:
                                                emit Transfer(arg3, this.address, msg.sender);
                                        else:
                                            mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                            if not stor22[stor[_47596]]:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                            else:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                            else:
                                if stor11[address(msg.sender)] == msg.sender:
                                    stor19[stor11[address(msg.sender)]] += arg3 / 10
                                    stor20[stor11[address(msg.sender)]] += arg3 / 100
                                    stor21[stor11[address(msg.sender)]] += arg3 / 1000
                                    idx = ceil32(arg1.length) + 192
                                    s = 0
                                    while ceil32(arg1.length) + stor27[address(msg.sender)].length + 160 > idx:
                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    if not uint8(stor23[stor11[address(msg.sender)]]):
                                        balanceOf[stor[_47596]] -= arg3
                                        if stor22[stor11[address(msg.sender)]]:
                                            balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                        else:
                                            totalSupply -= arg3 * stor28 / 1000
                                            balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor28 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                        stor12[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                        if not stor27[address(msg.sender)].length:
                                            if not stor22[stor[_47596]]:
                                                emit Transfer(arg3, stor[_47596], msg.sender);
                                            else:
                                                emit Transfer(arg3, this.address, msg.sender);
                                        else:
                                            mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                            if not stor22[stor[_47596]]:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                            else:
                                                idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                s = 0
                                                while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                    mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                    else:
                                        if not stor11[stor11[address(msg.sender)]]:
                                            balanceOf[stor[_47596]] -= arg3
                                            if stor22[stor11[address(msg.sender)]]:
                                                balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                            else:
                                                totalSupply -= arg3 * stor28 / 1000
                                                balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor28 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                            stor12[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                            if not stor27[address(msg.sender)].length:
                                                if not stor22[stor[_47596]]:
                                                    emit Transfer(arg3, stor[_47596], msg.sender);
                                                else:
                                                    emit Transfer(arg3, this.address, msg.sender);
                                            else:
                                                mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                                if not stor22[stor[_47596]]:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                                else:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                        else:
                                            emit Transfer((stor14[stor11[stor11[address(msg.sender)]]] * arg3 / 1000), stor11[address(msg.sender)], stor11[stor11[address(msg.sender)]]);
                                            balanceOf[stor[_47596]] -= arg3
                                            if stor22[stor11[address(msg.sender)]]:
                                                balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) - (stor14[stor11[stor11[address(msg.sender)]]] * arg3) / 1000
                                            else:
                                                totalSupply -= arg3 * stor28 / 1000
                                                balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor28 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) - (stor14[stor11[stor11[address(msg.sender)]]] * arg3) / 1000
                                            balanceOf[stor11[stor11[address(msg.sender)]]] += arg3 * stor14[stor11[stor11[address(msg.sender)]]] / 1000
                                            stor12[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                            if not stor27[address(msg.sender)].length:
                                                if not stor22[stor[_47596]]:
                                                    emit Transfer(arg3, stor[_47596], msg.sender);
                                                else:
                                                    emit Transfer(arg3, this.address, msg.sender);
                                            else:
                                                mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                                if not stor22[stor[_47596]]:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                                else:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                else:
                                    if stor15[address(msg.sender)]:
                                        stor19[stor11[address(msg.sender)]] += arg3 / 10
                                        stor20[stor11[address(msg.sender)]] += arg3 / 100
                                        stor21[stor11[address(msg.sender)]] += arg3 / 1000
                                        idx = ceil32(arg1.length) + 192
                                        s = 0
                                        while ceil32(arg1.length) + stor27[address(msg.sender)].length + 160 > idx:
                                            mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                            idx = idx + 32
                                            s = s + 1
                                            continue 
                                        if not uint8(stor23[stor11[address(msg.sender)]]):
                                            balanceOf[stor[_47596]] -= arg3
                                            if stor22[stor11[address(msg.sender)]]:
                                                balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                            else:
                                                totalSupply -= arg3 * stor28 / 1000
                                                balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor28 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                            stor12[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                            if not stor27[address(msg.sender)].length:
                                                if not stor22[stor[_47596]]:
                                                    emit Transfer(arg3, stor[_47596], msg.sender);
                                                else:
                                                    emit Transfer(arg3, this.address, msg.sender);
                                            else:
                                                mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                                if not stor22[stor[_47596]]:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                                else:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                        else:
                                            if not stor11[stor11[address(msg.sender)]]:
                                                balanceOf[stor[_47596]] -= arg3
                                                if stor22[stor11[address(msg.sender)]]:
                                                    balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                                else:
                                                    totalSupply -= arg3 * stor28 / 1000
                                                    balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor28 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                                stor12[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                                if not stor27[address(msg.sender)].length:
                                                    if not stor22[stor[_47596]]:
                                                        emit Transfer(arg3, stor[_47596], msg.sender);
                                                    else:
                                                        emit Transfer(arg3, this.address, msg.sender);
                                                else:
                                                    mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                                    if not stor22[stor[_47596]]:
                                                        idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                        s = 0
                                                        while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                                    else:
                                                        idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                        s = 0
                                                        while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                            else:
                                                emit Transfer((stor14[stor11[stor11[address(msg.sender)]]] * arg3 / 1000), stor11[address(msg.sender)], stor11[stor11[address(msg.sender)]]);
                                                balanceOf[stor[_47596]] -= arg3
                                                if stor22[stor11[address(msg.sender)]]:
                                                    balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) - (stor14[stor11[stor11[address(msg.sender)]]] * arg3) / 1000
                                                else:
                                                    totalSupply -= arg3 * stor28 / 1000
                                                    balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor28 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) - (stor14[stor11[stor11[address(msg.sender)]]] * arg3) / 1000
                                                balanceOf[stor11[stor11[address(msg.sender)]]] += arg3 * stor14[stor11[stor11[address(msg.sender)]]] / 1000
                                                stor12[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                                if not stor27[address(msg.sender)].length:
                                                    if not stor22[stor[_47596]]:
                                                        emit Transfer(arg3, stor[_47596], msg.sender);
                                                    else:
                                                        emit Transfer(arg3, this.address, msg.sender);
                                                else:
                                                    mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                                    if not stor22[stor[_47596]]:
                                                        idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                        s = 0
                                                        while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                                    else:
                                                        idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                        s = 0
                                                        while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                    else:
                                        if stor11[address(msg.sender)]:
                                            stor15[address(msg.sender)] = stor11[address(msg.sender)]
                                            stor16[msg.sender] = stor16[stor11[address(msg.sender)]]
                                            stor17[msg.sender] = stor17[stor11[address(msg.sender)]]
                                            stor18[msg.sender] = stor18[stor11[address(msg.sender)]]
                                            stor11[msg.sender] = stor11[stor11[address(msg.sender)]]
                                            uint8(stor23[address(msg.sender)]) = 0
                                            stor19[address(msg.sender)] += stor19[stor11[address(msg.sender)]] / 10
                                            stor20[address(msg.sender)] += stor20[stor11[address(msg.sender)]] / 10
                                            stor21[address(msg.sender)] += stor21[stor11[address(msg.sender)]] / 10
                                        stor19[stor11[address(msg.sender)]] += arg3 / 10
                                        stor20[stor11[address(msg.sender)]] += arg3 / 100
                                        stor21[stor11[address(msg.sender)]] += arg3 / 1000
                                        idx = ceil32(arg1.length) + 192
                                        s = 0
                                        while ceil32(arg1.length) + stor27[address(msg.sender)].length + 160 > idx:
                                            mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                            idx = idx + 32
                                            s = s + 1
                                            continue 
                                        if not uint8(stor23[stor11[address(msg.sender)]]):
                                            balanceOf[stor[_47596]] -= arg3
                                            if stor22[stor11[address(msg.sender)]]:
                                                balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                            else:
                                                totalSupply -= arg3 * stor28 / 1000
                                                balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor28 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                            stor12[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                            if not stor27[address(msg.sender)].length:
                                                if not stor22[stor[_47596]]:
                                                    emit Transfer(arg3, stor[_47596], msg.sender);
                                                else:
                                                    emit Transfer(arg3, this.address, msg.sender);
                                            else:
                                                mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                                if not stor22[stor[_47596]]:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                                else:
                                                    idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                    s = 0
                                                    while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                        mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                        else:
                                            if not stor11[stor11[address(msg.sender)]]:
                                                balanceOf[stor[_47596]] -= arg3
                                                if stor22[stor11[address(msg.sender)]]:
                                                    balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                                else:
                                                    totalSupply -= arg3 * stor28 / 1000
                                                    balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor28 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) / 1000
                                                stor12[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                                if not stor27[address(msg.sender)].length:
                                                    if not stor22[stor[_47596]]:
                                                        emit Transfer(arg3, stor[_47596], msg.sender);
                                                    else:
                                                        emit Transfer(arg3, this.address, msg.sender);
                                                else:
                                                    mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                                    if not stor22[stor[_47596]]:
                                                        idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                        s = 0
                                                        while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                                    else:
                                                        idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                        s = 0
                                                        while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                            else:
                                                emit Transfer((stor14[stor11[stor11[address(msg.sender)]]] * arg3 / 1000), stor11[address(msg.sender)], stor11[stor11[address(msg.sender)]]);
                                                balanceOf[stor[_47596]] -= arg3
                                                if stor22[stor11[address(msg.sender)]]:
                                                    balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) - (stor14[stor11[stor11[address(msg.sender)]]] * arg3) / 1000
                                                else:
                                                    totalSupply -= arg3 * stor28 / 1000
                                                    balanceOf[stor11[address(msg.sender)]] += (1000 * arg3) - (stor28 * arg3) - (stor14[stor11[address(msg.sender)]] * arg3) - (stor14[stor11[stor11[address(msg.sender)]]] * arg3) / 1000
                                                balanceOf[stor11[stor11[address(msg.sender)]]] += arg3 * stor14[stor11[stor11[address(msg.sender)]]] / 1000
                                                stor12[stor11[address(msg.sender)]] += arg3 * stor14[stor11[address(msg.sender)]] / 1000
                                                if not stor27[address(msg.sender)].length:
                                                    if not stor22[stor[_47596]]:
                                                        emit Transfer(arg3, stor[_47596], msg.sender);
                                                    else:
                                                        emit Transfer(arg3, this.address, msg.sender);
                                                else:
                                                    mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320] = uint256(stor27[address(msg.sender)].field_0)
                                                    if not stor22[stor[_47596]]:
                                                        idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                        s = 0
                                                        while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: stor[_47596], Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                                                    else:
                                                        idx = ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320
                                                        s = 0
                                                        while ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + stor27[address(msg.sender)].length + 320 > idx + 32:
                                                            mem[idx + 32] = uint256(stor27[address(msg.sender)][s].field_256)
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                        emit 0x7c0dcd28: address(this.address), Array(len=stor27[address(msg.sender)].length, data=mem[ceil32(arg1.length) + ceil32(stor27[address(msg.sender)].length) + 320 len stor27[address(msg.sender)].length + (floor32(stor27[address(msg.sender)].length - 1) + -stor27[address(msg.sender)].length + 32 % 32)]), arg3
                        sub_064d5a8b[address(msg.sender)] = 0
                        sub_c1198ea1[address(msg.sender)] = 0
                        stor13[stor[_47596]] += stor13[stor11[stor[_47596]]]
}

function sub_0613b3a1(?) payable {
    mem[128 len arg1.length] = arg1[all]
    mem[ceil32(arg1.length) + 128] = arg2.length
    mem[ceil32(arg1.length) + 160 len arg2.length] = arg2[all]
    if msg.value > 10^15:
        mem[ceil32(arg1.length) + ceil32(arg2.length) + 160 len floor32(arg1.length)] = call.data[arg1 + 36 len floor32(arg1.length)]
        mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg1.length) + -(arg1.length % 32) + 192 len arg1.length % 32] = mem[-(arg1.length % 32) + floor32(arg1.length) + 160 len arg1.length % 32]
        mem[arg1.length + ceil32(arg1.length) + ceil32(arg2.length) + 160] = 26
        _6148 = sha3(call.data[arg1 + 36 len floor32(arg1.length)], mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg1.length) + 160 len (arg1.length % 32) + 32])
        mem[ceil32(arg1.length) + ceil32(arg2.length) + 160 len floor32(arg2.length)] = call.data[arg2 + 36 len floor32(arg2.length)]
        mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + -(arg2.length % 32) + 192 len arg2.length % 32] = mem[ceil32(arg1.length) + -(arg2.length % 32) + floor32(arg2.length) + 192 len arg2.length % 32]
        mem[arg2.length + ceil32(arg1.length) + ceil32(arg2.length) + 160] = 26
        if not stor[_6148]:
            if stor5 != stor11[stor[_6148]]:
                if stor6 != stor11[stor[_6148]]:
                    if not stor[_6148]:
                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                        stor15[address(msg.sender)] = address(stor7.field_0)
                        if not stor16[address(msg.sender)]:
                            stor18[address(msg.sender)] = address(stor7.field_0)
                            stor17[address(msg.sender)] = address(stor7.field_0)
                            stor16[address(msg.sender)] = address(stor7.field_0)
                    else:
                        if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                            stor15[address(msg.sender)] = address(stor7.field_0)
                            if not stor16[address(msg.sender)]:
                                stor18[address(msg.sender)] = address(stor7.field_0)
                                stor17[address(msg.sender)] = address(stor7.field_0)
                                stor16[address(msg.sender)] = address(stor7.field_0)
                        else:
                            if msg.value / 10^12 <= stor12[stor[_6148]]:
                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                stor15[address(msg.sender)] = address(stor7.field_0)
                                if not stor16[address(msg.sender)]:
                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                    stor16[address(msg.sender)] = address(stor7.field_0)
                            else:
                                stor15[address(msg.sender)] = 0
                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                    if not stor15[address(msg.sender)]:
                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                            stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                            stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                            stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                            stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                            stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                            uint8(stor23[address(msg.sender)]) = 0
                                            stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                            stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                            stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                totalSupply += msg.value / 2 * 10^13
                else:
                    if stor6 != stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                        if not stor[_6148]:
                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                            stor15[address(msg.sender)] = address(stor7.field_0)
                            if not stor16[address(msg.sender)]:
                                stor18[address(msg.sender)] = address(stor7.field_0)
                                stor17[address(msg.sender)] = address(stor7.field_0)
                                stor16[address(msg.sender)] = address(stor7.field_0)
                        else:
                            if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                stor15[address(msg.sender)] = address(stor7.field_0)
                                if not stor16[address(msg.sender)]:
                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                    stor16[address(msg.sender)] = address(stor7.field_0)
                            else:
                                if msg.value / 10^12 <= stor12[stor[_6148]]:
                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                    if not stor16[address(msg.sender)]:
                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                else:
                                    stor15[address(msg.sender)] = 0
                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                        if not stor15[address(msg.sender)]:
                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                uint8(stor23[address(msg.sender)]) = 0
                                                stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                    balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                    totalSupply += msg.value / 2 * 10^13
                    else:
                        if stor[_6148] != stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                            stor18[address(msg.sender)] = msg.sender
                            stor17[address(msg.sender)] = msg.sender
                            stor16[address(msg.sender)] = msg.sender
                            stor15[address(msg.sender)] = stor6
                            stor19[address(msg.sender)] += msg.value / 10^12
                            stor20[address(msg.sender)] += msg.value / 10^12 / 10
                            stor21[address(msg.sender)] += msg.value / 10^12 / 100
                            stor22[address(msg.sender)] = 1
                        else:
                            if not stor[_6148]:
                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                stor15[address(msg.sender)] = address(stor7.field_0)
                                if not stor16[address(msg.sender)]:
                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                    stor16[address(msg.sender)] = address(stor7.field_0)
                            else:
                                if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                    if not stor16[address(msg.sender)]:
                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                else:
                                    if msg.value / 10^12 <= stor12[stor[_6148]]:
                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                        if not stor16[address(msg.sender)]:
                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                    else:
                                        stor15[address(msg.sender)] = 0
                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                            if not stor15[address(msg.sender)]:
                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                    stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                    stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                    stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                    stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                    stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                    uint8(stor23[address(msg.sender)]) = 0
                                                    stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                    stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                    stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                        balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                        totalSupply += msg.value / 2 * 10^13
            else:
                if stor5 != stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                    if stor6 != stor11[stor[_6148]]:
                        if not stor[_6148]:
                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                            stor15[address(msg.sender)] = address(stor7.field_0)
                            if not stor16[address(msg.sender)]:
                                stor18[address(msg.sender)] = address(stor7.field_0)
                                stor17[address(msg.sender)] = address(stor7.field_0)
                                stor16[address(msg.sender)] = address(stor7.field_0)
                        else:
                            if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                stor15[address(msg.sender)] = address(stor7.field_0)
                                if not stor16[address(msg.sender)]:
                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                    stor16[address(msg.sender)] = address(stor7.field_0)
                            else:
                                if msg.value / 10^12 <= stor12[stor[_6148]]:
                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                    if not stor16[address(msg.sender)]:
                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                else:
                                    stor15[address(msg.sender)] = 0
                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                        if not stor15[address(msg.sender)]:
                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                uint8(stor23[address(msg.sender)]) = 0
                                                stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                    balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                    totalSupply += msg.value / 2 * 10^13
                    else:
                        if stor6 != stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                            if not stor[_6148]:
                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                stor15[address(msg.sender)] = address(stor7.field_0)
                                if not stor16[address(msg.sender)]:
                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                    stor16[address(msg.sender)] = address(stor7.field_0)
                            else:
                                if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                    if not stor16[address(msg.sender)]:
                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                else:
                                    if msg.value / 10^12 <= stor12[stor[_6148]]:
                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                        if not stor16[address(msg.sender)]:
                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                    else:
                                        stor15[address(msg.sender)] = 0
                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                            if not stor15[address(msg.sender)]:
                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                    stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                    stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                    stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                    stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                    stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                    uint8(stor23[address(msg.sender)]) = 0
                                                    stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                    stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                    stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                        balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                        totalSupply += msg.value / 2 * 10^13
                        else:
                            if stor[_6148] != stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                stor18[address(msg.sender)] = msg.sender
                                stor17[address(msg.sender)] = msg.sender
                                stor16[address(msg.sender)] = msg.sender
                                stor15[address(msg.sender)] = stor6
                                stor19[address(msg.sender)] += msg.value / 10^12
                                stor20[address(msg.sender)] += msg.value / 10^12 / 10
                                stor21[address(msg.sender)] += msg.value / 10^12 / 100
                                stor22[address(msg.sender)] = 1
                            else:
                                if not stor[_6148]:
                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                    if not stor16[address(msg.sender)]:
                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                else:
                                    if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                        if not stor16[address(msg.sender)]:
                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                    else:
                                        if msg.value / 10^12 <= stor12[stor[_6148]]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            stor15[address(msg.sender)] = 0
                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                if not stor15[address(msg.sender)]:
                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                        stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                        stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        uint8(stor23[address(msg.sender)]) = 0
                                                        stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                            balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                            totalSupply += msg.value / 2 * 10^13
                else:
                    if stor[_6148] == stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                        if stor6 != stor11[stor[_6148]]:
                            if not stor[_6148]:
                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                stor15[address(msg.sender)] = address(stor7.field_0)
                                if not stor16[address(msg.sender)]:
                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                    stor16[address(msg.sender)] = address(stor7.field_0)
                            else:
                                if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                    if not stor16[address(msg.sender)]:
                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                else:
                                    if msg.value / 10^12 <= stor12[stor[_6148]]:
                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                        if not stor16[address(msg.sender)]:
                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                    else:
                                        stor15[address(msg.sender)] = 0
                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                            if not stor15[address(msg.sender)]:
                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                    stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                    stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                    stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                    stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                    stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                    uint8(stor23[address(msg.sender)]) = 0
                                                    stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                    stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                    stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                        balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                        totalSupply += msg.value / 2 * 10^13
                        else:
                            if stor6 != stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                                if not stor[_6148]:
                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                    if not stor16[address(msg.sender)]:
                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                else:
                                    if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                        if not stor16[address(msg.sender)]:
                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                    else:
                                        if msg.value / 10^12 <= stor12[stor[_6148]]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            stor15[address(msg.sender)] = 0
                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                if not stor15[address(msg.sender)]:
                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                        stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                        stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        uint8(stor23[address(msg.sender)]) = 0
                                                        stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                            balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                            totalSupply += msg.value / 2 * 10^13
                            else:
                                if stor[_6148] != stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                    stor18[address(msg.sender)] = msg.sender
                                    stor17[address(msg.sender)] = msg.sender
                                    stor16[address(msg.sender)] = msg.sender
                                    stor15[address(msg.sender)] = stor6
                                    stor19[address(msg.sender)] += msg.value / 10^12
                                    stor20[address(msg.sender)] += msg.value / 10^12 / 10
                                    stor21[address(msg.sender)] += msg.value / 10^12 / 100
                                    stor22[address(msg.sender)] = 1
                                else:
                                    if not stor[_6148]:
                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                        if not stor16[address(msg.sender)]:
                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                    else:
                                        if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            if msg.value / 10^12 <= stor12[stor[_6148]]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                stor15[address(msg.sender)] = 0
                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                    if not stor15[address(msg.sender)]:
                                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                            stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                            stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            uint8(stor23[address(msg.sender)]) = 0
                                                            stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                                totalSupply += msg.value / 2 * 10^13
                    else:
                        if stor12[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] <= 1250:
                            balanceOf[address(msg.sender)] += msg.value / 10^12 * stor12[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 100
                            totalSupply += 125 * msg.value / 10^12 / 10
                        else:
                            if stor6 != stor11[stor[_6148]]:
                                if not stor[_6148]:
                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                    if not stor16[address(msg.sender)]:
                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                else:
                                    if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                        if not stor16[address(msg.sender)]:
                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                    else:
                                        if msg.value / 10^12 <= stor12[stor[_6148]]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            stor15[address(msg.sender)] = 0
                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                if not stor15[address(msg.sender)]:
                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                        stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                        stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        uint8(stor23[address(msg.sender)]) = 0
                                                        stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                            balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                            totalSupply += msg.value / 2 * 10^13
                            else:
                                if stor6 != stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                                    if not stor[_6148]:
                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                        if not stor16[address(msg.sender)]:
                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                    else:
                                        if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            if msg.value / 10^12 <= stor12[stor[_6148]]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                stor15[address(msg.sender)] = 0
                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                    if not stor15[address(msg.sender)]:
                                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                            stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                            stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            uint8(stor23[address(msg.sender)]) = 0
                                                            stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                                totalSupply += msg.value / 2 * 10^13
                                else:
                                    if stor[_6148] != stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                        stor18[address(msg.sender)] = msg.sender
                                        stor17[address(msg.sender)] = msg.sender
                                        stor16[address(msg.sender)] = msg.sender
                                        stor15[address(msg.sender)] = stor6
                                        stor19[address(msg.sender)] += msg.value / 10^12
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor22[address(msg.sender)] = 1
                                    else:
                                        if not stor[_6148]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                if msg.value / 10^12 <= stor12[stor[_6148]]:
                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                    if not stor16[address(msg.sender)]:
                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                else:
                                                    stor15[address(msg.sender)] = 0
                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                        if not stor15[address(msg.sender)]:
                                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                uint8(stor23[address(msg.sender)]) = 0
                                                                stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                    balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                                    totalSupply += msg.value / 2 * 10^13
        else:
            if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                if stor5 != stor11[stor[_6148]]:
                    if stor6 != stor11[stor[_6148]]:
                        if not stor[_6148]:
                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                            stor15[address(msg.sender)] = address(stor7.field_0)
                            if not stor16[address(msg.sender)]:
                                stor18[address(msg.sender)] = address(stor7.field_0)
                                stor17[address(msg.sender)] = address(stor7.field_0)
                                stor16[address(msg.sender)] = address(stor7.field_0)
                        else:
                            if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                stor15[address(msg.sender)] = address(stor7.field_0)
                                if not stor16[address(msg.sender)]:
                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                    stor16[address(msg.sender)] = address(stor7.field_0)
                            else:
                                if msg.value / 10^12 <= stor12[stor[_6148]]:
                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                    if not stor16[address(msg.sender)]:
                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                else:
                                    stor15[address(msg.sender)] = 0
                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                        if not stor15[address(msg.sender)]:
                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                uint8(stor23[address(msg.sender)]) = 0
                                                stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                    balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                    totalSupply += msg.value / 2 * 10^13
                    else:
                        if stor6 != stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                            if not stor[_6148]:
                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                stor15[address(msg.sender)] = address(stor7.field_0)
                                if not stor16[address(msg.sender)]:
                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                    stor16[address(msg.sender)] = address(stor7.field_0)
                            else:
                                if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                    if not stor16[address(msg.sender)]:
                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                else:
                                    if msg.value / 10^12 <= stor12[stor[_6148]]:
                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                        if not stor16[address(msg.sender)]:
                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                    else:
                                        stor15[address(msg.sender)] = 0
                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                            if not stor15[address(msg.sender)]:
                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                    stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                    stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                    stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                    stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                    stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                    uint8(stor23[address(msg.sender)]) = 0
                                                    stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                    stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                    stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                        balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                        totalSupply += msg.value / 2 * 10^13
                        else:
                            if stor[_6148] != stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                stor18[address(msg.sender)] = msg.sender
                                stor17[address(msg.sender)] = msg.sender
                                stor16[address(msg.sender)] = msg.sender
                                stor15[address(msg.sender)] = stor6
                                stor19[address(msg.sender)] += msg.value / 10^12
                                stor20[address(msg.sender)] += msg.value / 10^12 / 10
                                stor21[address(msg.sender)] += msg.value / 10^12 / 100
                                stor22[address(msg.sender)] = 1
                            else:
                                if not stor[_6148]:
                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                    if not stor16[address(msg.sender)]:
                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                else:
                                    if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                        if not stor16[address(msg.sender)]:
                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                    else:
                                        if msg.value / 10^12 <= stor12[stor[_6148]]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            stor15[address(msg.sender)] = 0
                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                if not stor15[address(msg.sender)]:
                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                        stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                        stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        uint8(stor23[address(msg.sender)]) = 0
                                                        stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                            balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                            totalSupply += msg.value / 2 * 10^13
                else:
                    if stor5 != stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                        if stor6 != stor11[stor[_6148]]:
                            if not stor[_6148]:
                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                stor15[address(msg.sender)] = address(stor7.field_0)
                                if not stor16[address(msg.sender)]:
                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                    stor16[address(msg.sender)] = address(stor7.field_0)
                            else:
                                if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                    if not stor16[address(msg.sender)]:
                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                else:
                                    if msg.value / 10^12 <= stor12[stor[_6148]]:
                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                        if not stor16[address(msg.sender)]:
                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                    else:
                                        stor15[address(msg.sender)] = 0
                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                            if not stor15[address(msg.sender)]:
                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                    stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                    stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                    stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                    stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                    stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                    uint8(stor23[address(msg.sender)]) = 0
                                                    stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                    stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                    stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                        balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                        totalSupply += msg.value / 2 * 10^13
                        else:
                            if stor6 != stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                                if not stor[_6148]:
                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                    if not stor16[address(msg.sender)]:
                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                else:
                                    if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                        if not stor16[address(msg.sender)]:
                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                    else:
                                        if msg.value / 10^12 <= stor12[stor[_6148]]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            stor15[address(msg.sender)] = 0
                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                if not stor15[address(msg.sender)]:
                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                        stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                        stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        uint8(stor23[address(msg.sender)]) = 0
                                                        stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                            balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                            totalSupply += msg.value / 2 * 10^13
                            else:
                                if stor[_6148] != stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                    stor18[address(msg.sender)] = msg.sender
                                    stor17[address(msg.sender)] = msg.sender
                                    stor16[address(msg.sender)] = msg.sender
                                    stor15[address(msg.sender)] = stor6
                                    stor19[address(msg.sender)] += msg.value / 10^12
                                    stor20[address(msg.sender)] += msg.value / 10^12 / 10
                                    stor21[address(msg.sender)] += msg.value / 10^12 / 100
                                    stor22[address(msg.sender)] = 1
                                else:
                                    if not stor[_6148]:
                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                        if not stor16[address(msg.sender)]:
                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                    else:
                                        if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            if msg.value / 10^12 <= stor12[stor[_6148]]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                stor15[address(msg.sender)] = 0
                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                    if not stor15[address(msg.sender)]:
                                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                            stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                            stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            uint8(stor23[address(msg.sender)]) = 0
                                                            stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                                totalSupply += msg.value / 2 * 10^13
                    else:
                        if stor[_6148] == stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                            if stor6 != stor11[stor[_6148]]:
                                if not stor[_6148]:
                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                    if not stor16[address(msg.sender)]:
                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                else:
                                    if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                        if not stor16[address(msg.sender)]:
                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                    else:
                                        if msg.value / 10^12 <= stor12[stor[_6148]]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            stor15[address(msg.sender)] = 0
                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                if not stor15[address(msg.sender)]:
                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                        stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                        stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        uint8(stor23[address(msg.sender)]) = 0
                                                        stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                            balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                            totalSupply += msg.value / 2 * 10^13
                            else:
                                if stor6 != stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                                    if not stor[_6148]:
                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                        if not stor16[address(msg.sender)]:
                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                    else:
                                        if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            if msg.value / 10^12 <= stor12[stor[_6148]]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                stor15[address(msg.sender)] = 0
                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                    if not stor15[address(msg.sender)]:
                                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                            stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                            stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            uint8(stor23[address(msg.sender)]) = 0
                                                            stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                                totalSupply += msg.value / 2 * 10^13
                                else:
                                    if stor[_6148] != stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                        stor18[address(msg.sender)] = msg.sender
                                        stor17[address(msg.sender)] = msg.sender
                                        stor16[address(msg.sender)] = msg.sender
                                        stor15[address(msg.sender)] = stor6
                                        stor19[address(msg.sender)] += msg.value / 10^12
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor22[address(msg.sender)] = 1
                                    else:
                                        if not stor[_6148]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                if msg.value / 10^12 <= stor12[stor[_6148]]:
                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                    if not stor16[address(msg.sender)]:
                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                else:
                                                    stor15[address(msg.sender)] = 0
                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                        if not stor15[address(msg.sender)]:
                                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                uint8(stor23[address(msg.sender)]) = 0
                                                                stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                    balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                                    totalSupply += msg.value / 2 * 10^13
                        else:
                            if stor12[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] <= 1250:
                                balanceOf[address(msg.sender)] += msg.value / 10^12 * stor12[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 100
                                totalSupply += 125 * msg.value / 10^12 / 10
                            else:
                                if stor6 != stor11[stor[_6148]]:
                                    if not stor[_6148]:
                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                        if not stor16[address(msg.sender)]:
                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                    else:
                                        if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            if msg.value / 10^12 <= stor12[stor[_6148]]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                stor15[address(msg.sender)] = 0
                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                    if not stor15[address(msg.sender)]:
                                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                            stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                            stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            uint8(stor23[address(msg.sender)]) = 0
                                                            stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                                totalSupply += msg.value / 2 * 10^13
                                else:
                                    if stor6 != stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                                        if not stor[_6148]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                if msg.value / 10^12 <= stor12[stor[_6148]]:
                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                    if not stor16[address(msg.sender)]:
                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                else:
                                                    stor15[address(msg.sender)] = 0
                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                        if not stor15[address(msg.sender)]:
                                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                uint8(stor23[address(msg.sender)]) = 0
                                                                stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                    balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                                    totalSupply += msg.value / 2 * 10^13
                                    else:
                                        if stor[_6148] != stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                            stor18[address(msg.sender)] = msg.sender
                                            stor17[address(msg.sender)] = msg.sender
                                            stor16[address(msg.sender)] = msg.sender
                                            stor15[address(msg.sender)] = stor6
                                            stor19[address(msg.sender)] += msg.value / 10^12
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor22[address(msg.sender)] = 1
                                        else:
                                            if not stor[_6148]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                    if not stor16[address(msg.sender)]:
                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                else:
                                                    if msg.value / 10^12 <= stor12[stor[_6148]]:
                                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                                        if not stor16[address(msg.sender)]:
                                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                                    else:
                                                        stor15[address(msg.sender)] = 0
                                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                            if not stor15[address(msg.sender)]:
                                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                    stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                    stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    uint8(stor23[address(msg.sender)]) = 0
                                                                    stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                    stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                    stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                                        totalSupply += msg.value / 2 * 10^13
            else:
                if stor[_6148] == stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                    if stor5 != stor11[stor[_6148]]:
                        if stor6 != stor11[stor[_6148]]:
                            if not stor[_6148]:
                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                stor15[address(msg.sender)] = address(stor7.field_0)
                                if not stor16[address(msg.sender)]:
                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                    stor16[address(msg.sender)] = address(stor7.field_0)
                            else:
                                if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                    if not stor16[address(msg.sender)]:
                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                else:
                                    if msg.value / 10^12 <= stor12[stor[_6148]]:
                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                        if not stor16[address(msg.sender)]:
                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                    else:
                                        stor15[address(msg.sender)] = 0
                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                            if not stor15[address(msg.sender)]:
                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                    stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                    stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                    stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                    stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                    stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                    uint8(stor23[address(msg.sender)]) = 0
                                                    stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                    stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                    stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                        balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                        totalSupply += msg.value / 2 * 10^13
                        else:
                            if stor6 != stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                                if not stor[_6148]:
                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                    if not stor16[address(msg.sender)]:
                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                else:
                                    if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                        if not stor16[address(msg.sender)]:
                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                    else:
                                        if msg.value / 10^12 <= stor12[stor[_6148]]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            stor15[address(msg.sender)] = 0
                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                if not stor15[address(msg.sender)]:
                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                        stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                        stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        uint8(stor23[address(msg.sender)]) = 0
                                                        stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                            balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                            totalSupply += msg.value / 2 * 10^13
                            else:
                                if stor[_6148] != stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                    stor18[address(msg.sender)] = msg.sender
                                    stor17[address(msg.sender)] = msg.sender
                                    stor16[address(msg.sender)] = msg.sender
                                    stor15[address(msg.sender)] = stor6
                                    stor19[address(msg.sender)] += msg.value / 10^12
                                    stor20[address(msg.sender)] += msg.value / 10^12 / 10
                                    stor21[address(msg.sender)] += msg.value / 10^12 / 100
                                    stor22[address(msg.sender)] = 1
                                else:
                                    if not stor[_6148]:
                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                        if not stor16[address(msg.sender)]:
                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                    else:
                                        if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            if msg.value / 10^12 <= stor12[stor[_6148]]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                stor15[address(msg.sender)] = 0
                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                    if not stor15[address(msg.sender)]:
                                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                            stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                            stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            uint8(stor23[address(msg.sender)]) = 0
                                                            stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                                totalSupply += msg.value / 2 * 10^13
                    else:
                        if stor5 != stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                            if stor6 != stor11[stor[_6148]]:
                                if not stor[_6148]:
                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                    if not stor16[address(msg.sender)]:
                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                else:
                                    if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                        if not stor16[address(msg.sender)]:
                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                    else:
                                        if msg.value / 10^12 <= stor12[stor[_6148]]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            stor15[address(msg.sender)] = 0
                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                if not stor15[address(msg.sender)]:
                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                        stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                        stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        uint8(stor23[address(msg.sender)]) = 0
                                                        stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                            balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                            totalSupply += msg.value / 2 * 10^13
                            else:
                                if stor6 != stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                                    if not stor[_6148]:
                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                        if not stor16[address(msg.sender)]:
                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                    else:
                                        if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            if msg.value / 10^12 <= stor12[stor[_6148]]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                stor15[address(msg.sender)] = 0
                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                    if not stor15[address(msg.sender)]:
                                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                            stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                            stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            uint8(stor23[address(msg.sender)]) = 0
                                                            stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                                totalSupply += msg.value / 2 * 10^13
                                else:
                                    if stor[_6148] != stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                        stor18[address(msg.sender)] = msg.sender
                                        stor17[address(msg.sender)] = msg.sender
                                        stor16[address(msg.sender)] = msg.sender
                                        stor15[address(msg.sender)] = stor6
                                        stor19[address(msg.sender)] += msg.value / 10^12
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor22[address(msg.sender)] = 1
                                    else:
                                        if not stor[_6148]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                if msg.value / 10^12 <= stor12[stor[_6148]]:
                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                    if not stor16[address(msg.sender)]:
                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                else:
                                                    stor15[address(msg.sender)] = 0
                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                        if not stor15[address(msg.sender)]:
                                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                uint8(stor23[address(msg.sender)]) = 0
                                                                stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                    balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                                    totalSupply += msg.value / 2 * 10^13
                        else:
                            if stor[_6148] == stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                if stor6 != stor11[stor[_6148]]:
                                    if not stor[_6148]:
                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                        if not stor16[address(msg.sender)]:
                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                    else:
                                        if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            if msg.value / 10^12 <= stor12[stor[_6148]]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                stor15[address(msg.sender)] = 0
                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                    if not stor15[address(msg.sender)]:
                                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                            stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                            stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            uint8(stor23[address(msg.sender)]) = 0
                                                            stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                                totalSupply += msg.value / 2 * 10^13
                                else:
                                    if stor6 != stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                                        if not stor[_6148]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                if msg.value / 10^12 <= stor12[stor[_6148]]:
                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                    if not stor16[address(msg.sender)]:
                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                else:
                                                    stor15[address(msg.sender)] = 0
                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                        if not stor15[address(msg.sender)]:
                                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                uint8(stor23[address(msg.sender)]) = 0
                                                                stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                    balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                                    totalSupply += msg.value / 2 * 10^13
                                    else:
                                        if stor[_6148] != stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                            stor18[address(msg.sender)] = msg.sender
                                            stor17[address(msg.sender)] = msg.sender
                                            stor16[address(msg.sender)] = msg.sender
                                            stor15[address(msg.sender)] = stor6
                                            stor19[address(msg.sender)] += msg.value / 10^12
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor22[address(msg.sender)] = 1
                                        else:
                                            if not stor[_6148]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                    if not stor16[address(msg.sender)]:
                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                else:
                                                    if msg.value / 10^12 <= stor12[stor[_6148]]:
                                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                                        if not stor16[address(msg.sender)]:
                                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                                    else:
                                                        stor15[address(msg.sender)] = 0
                                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                            if not stor15[address(msg.sender)]:
                                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                    stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                    stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    uint8(stor23[address(msg.sender)]) = 0
                                                                    stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                    stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                    stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                                        totalSupply += msg.value / 2 * 10^13
                            else:
                                if stor12[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] <= 1250:
                                    balanceOf[address(msg.sender)] += msg.value / 10^12 * stor12[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 100
                                    totalSupply += 125 * msg.value / 10^12 / 10
                                else:
                                    if stor6 != stor11[stor[_6148]]:
                                        if not stor[_6148]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                if msg.value / 10^12 <= stor12[stor[_6148]]:
                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                    if not stor16[address(msg.sender)]:
                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                else:
                                                    stor15[address(msg.sender)] = 0
                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                        if not stor15[address(msg.sender)]:
                                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                uint8(stor23[address(msg.sender)]) = 0
                                                                stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                    balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                                    totalSupply += msg.value / 2 * 10^13
                                    else:
                                        if stor6 != stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                                            if not stor[_6148]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                    if not stor16[address(msg.sender)]:
                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                else:
                                                    if msg.value / 10^12 <= stor12[stor[_6148]]:
                                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                                        if not stor16[address(msg.sender)]:
                                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                                    else:
                                                        stor15[address(msg.sender)] = 0
                                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                            if not stor15[address(msg.sender)]:
                                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                    stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                    stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    uint8(stor23[address(msg.sender)]) = 0
                                                                    stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                    stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                    stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                                        totalSupply += msg.value / 2 * 10^13
                                        else:
                                            if stor[_6148] != stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                stor18[address(msg.sender)] = msg.sender
                                                stor17[address(msg.sender)] = msg.sender
                                                stor16[address(msg.sender)] = msg.sender
                                                stor15[address(msg.sender)] = stor6
                                                stor19[address(msg.sender)] += msg.value / 10^12
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor22[address(msg.sender)] = 1
                                            else:
                                                if not stor[_6148]:
                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                    if not stor16[address(msg.sender)]:
                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                else:
                                                    if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                                        if not stor16[address(msg.sender)]:
                                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                                    else:
                                                        if msg.value / 10^12 <= stor12[stor[_6148]]:
                                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                                            if not stor16[address(msg.sender)]:
                                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                                        else:
                                                            stor15[address(msg.sender)] = 0
                                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                                if not stor15[address(msg.sender)]:
                                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                        stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                        stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                        stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                        stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                        stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                        uint8(stor23[address(msg.sender)]) = 0
                                                                        stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                        stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                        stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                                            totalSupply += msg.value / 2 * 10^13
                else:
                    if stor11[stor[_6148]] != stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                        if stor5 != stor11[stor[_6148]]:
                            if stor6 != stor11[stor[_6148]]:
                                if not stor[_6148]:
                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                    if not stor16[address(msg.sender)]:
                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                else:
                                    if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                        if not stor16[address(msg.sender)]:
                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                    else:
                                        if msg.value / 10^12 <= stor12[stor[_6148]]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            stor15[address(msg.sender)] = 0
                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                if not stor15[address(msg.sender)]:
                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                        stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                        stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        uint8(stor23[address(msg.sender)]) = 0
                                                        stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                            balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                            totalSupply += msg.value / 2 * 10^13
                            else:
                                if stor6 != stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                                    if not stor[_6148]:
                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                        if not stor16[address(msg.sender)]:
                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                    else:
                                        if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            if msg.value / 10^12 <= stor12[stor[_6148]]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                stor15[address(msg.sender)] = 0
                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                    if not stor15[address(msg.sender)]:
                                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                            stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                            stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            uint8(stor23[address(msg.sender)]) = 0
                                                            stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                                totalSupply += msg.value / 2 * 10^13
                                else:
                                    if stor[_6148] != stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                        stor18[address(msg.sender)] = msg.sender
                                        stor17[address(msg.sender)] = msg.sender
                                        stor16[address(msg.sender)] = msg.sender
                                        stor15[address(msg.sender)] = stor6
                                        stor19[address(msg.sender)] += msg.value / 10^12
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor22[address(msg.sender)] = 1
                                    else:
                                        if not stor[_6148]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                if msg.value / 10^12 <= stor12[stor[_6148]]:
                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                    if not stor16[address(msg.sender)]:
                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                else:
                                                    stor15[address(msg.sender)] = 0
                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                        if not stor15[address(msg.sender)]:
                                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                uint8(stor23[address(msg.sender)]) = 0
                                                                stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                    balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                                    totalSupply += msg.value / 2 * 10^13
                        else:
                            if stor5 != stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                                if stor6 != stor11[stor[_6148]]:
                                    if not stor[_6148]:
                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                        if not stor16[address(msg.sender)]:
                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                    else:
                                        if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            if msg.value / 10^12 <= stor12[stor[_6148]]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                stor15[address(msg.sender)] = 0
                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                    if not stor15[address(msg.sender)]:
                                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                            stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                            stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            uint8(stor23[address(msg.sender)]) = 0
                                                            stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                                totalSupply += msg.value / 2 * 10^13
                                else:
                                    if stor6 != stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                                        if not stor[_6148]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                if msg.value / 10^12 <= stor12[stor[_6148]]:
                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                    if not stor16[address(msg.sender)]:
                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                else:
                                                    stor15[address(msg.sender)] = 0
                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                        if not stor15[address(msg.sender)]:
                                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                uint8(stor23[address(msg.sender)]) = 0
                                                                stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                    balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                                    totalSupply += msg.value / 2 * 10^13
                                    else:
                                        if stor[_6148] != stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                            stor18[address(msg.sender)] = msg.sender
                                            stor17[address(msg.sender)] = msg.sender
                                            stor16[address(msg.sender)] = msg.sender
                                            stor15[address(msg.sender)] = stor6
                                            stor19[address(msg.sender)] += msg.value / 10^12
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor22[address(msg.sender)] = 1
                                        else:
                                            if not stor[_6148]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                    if not stor16[address(msg.sender)]:
                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                else:
                                                    if msg.value / 10^12 <= stor12[stor[_6148]]:
                                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                                        if not stor16[address(msg.sender)]:
                                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                                    else:
                                                        stor15[address(msg.sender)] = 0
                                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                            if not stor15[address(msg.sender)]:
                                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                    stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                    stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    uint8(stor23[address(msg.sender)]) = 0
                                                                    stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                    stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                    stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                                        totalSupply += msg.value / 2 * 10^13
                            else:
                                if stor[_6148] == stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                    if stor6 != stor11[stor[_6148]]:
                                        if not stor[_6148]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                if msg.value / 10^12 <= stor12[stor[_6148]]:
                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                    if not stor16[address(msg.sender)]:
                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                else:
                                                    stor15[address(msg.sender)] = 0
                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                        if not stor15[address(msg.sender)]:
                                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                uint8(stor23[address(msg.sender)]) = 0
                                                                stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                    balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                                    totalSupply += msg.value / 2 * 10^13
                                    else:
                                        if stor6 != stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                                            if not stor[_6148]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                    if not stor16[address(msg.sender)]:
                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                else:
                                                    if msg.value / 10^12 <= stor12[stor[_6148]]:
                                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                                        if not stor16[address(msg.sender)]:
                                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                                    else:
                                                        stor15[address(msg.sender)] = 0
                                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                            if not stor15[address(msg.sender)]:
                                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                    stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                    stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    uint8(stor23[address(msg.sender)]) = 0
                                                                    stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                    stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                    stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                                        totalSupply += msg.value / 2 * 10^13
                                        else:
                                            if stor[_6148] != stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                stor18[address(msg.sender)] = msg.sender
                                                stor17[address(msg.sender)] = msg.sender
                                                stor16[address(msg.sender)] = msg.sender
                                                stor15[address(msg.sender)] = stor6
                                                stor19[address(msg.sender)] += msg.value / 10^12
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor22[address(msg.sender)] = 1
                                            else:
                                                if not stor[_6148]:
                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                    if not stor16[address(msg.sender)]:
                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                else:
                                                    if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                                        if not stor16[address(msg.sender)]:
                                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                                    else:
                                                        if msg.value / 10^12 <= stor12[stor[_6148]]:
                                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                                            if not stor16[address(msg.sender)]:
                                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                                        else:
                                                            stor15[address(msg.sender)] = 0
                                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                                if not stor15[address(msg.sender)]:
                                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                        stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                        stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                        stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                        stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                        stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                        uint8(stor23[address(msg.sender)]) = 0
                                                                        stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                        stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                        stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                                            totalSupply += msg.value / 2 * 10^13
                                else:
                                    if stor12[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] <= 1250:
                                        balanceOf[address(msg.sender)] += msg.value / 10^12 * stor12[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 100
                                        totalSupply += 125 * msg.value / 10^12 / 10
                                    else:
                                        if stor6 != stor11[stor[_6148]]:
                                            if not stor[_6148]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                    if not stor16[address(msg.sender)]:
                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                else:
                                                    if msg.value / 10^12 <= stor12[stor[_6148]]:
                                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                                        if not stor16[address(msg.sender)]:
                                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                                    else:
                                                        stor15[address(msg.sender)] = 0
                                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                            if not stor15[address(msg.sender)]:
                                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                    stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                    stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    uint8(stor23[address(msg.sender)]) = 0
                                                                    stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                    stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                    stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                                        totalSupply += msg.value / 2 * 10^13
                                        else:
                                            if stor6 != stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                                                if not stor[_6148]:
                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                    if not stor16[address(msg.sender)]:
                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                else:
                                                    if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                                        if not stor16[address(msg.sender)]:
                                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                                    else:
                                                        if msg.value / 10^12 <= stor12[stor[_6148]]:
                                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                                            if not stor16[address(msg.sender)]:
                                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                                        else:
                                                            stor15[address(msg.sender)] = 0
                                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                                if not stor15[address(msg.sender)]:
                                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                        stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                        stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                        stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                        stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                        stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                        uint8(stor23[address(msg.sender)]) = 0
                                                                        stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                        stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                        stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                                            totalSupply += msg.value / 2 * 10^13
                                            else:
                                                if stor[_6148] != stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                    stor18[address(msg.sender)] = msg.sender
                                                    stor17[address(msg.sender)] = msg.sender
                                                    stor16[address(msg.sender)] = msg.sender
                                                    stor15[address(msg.sender)] = stor6
                                                    stor19[address(msg.sender)] += msg.value / 10^12
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor22[address(msg.sender)] = 1
                                                else:
                                                    if not stor[_6148]:
                                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                                        if not stor16[address(msg.sender)]:
                                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                                    else:
                                                        if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                                            if not stor16[address(msg.sender)]:
                                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                                        else:
                                                            if msg.value / 10^12 <= stor12[stor[_6148]]:
                                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                                if not stor16[address(msg.sender)]:
                                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                                            else:
                                                                stor15[address(msg.sender)] = 0
                                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                                    if not stor15[address(msg.sender)]:
                                                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                            stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                            stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                            stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                            stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                            stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                            uint8(stor23[address(msg.sender)]) = 0
                                                                            stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                            stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                            stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                                                totalSupply += msg.value / 2 * 10^13
                    else:
                        if msg.value / 10^12 == stor12[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                            stor12[msg.sender] += stor12[stor[_6148]]
                            stor12[stor[_6148]] = 0
                            stor12[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] = 0
                            mem[ceil32(arg1.length) + ceil32(arg2.length) + 224] = uint256(stor27[stor[_6148]].field_0)
                            idx = ceil32(arg1.length) + ceil32(arg2.length) + 224
                            s = 0
                            while ceil32(arg1.length) + ceil32(arg2.length) + stor27[stor[_6148]].length + 224 > idx + 32:
                                mem[idx + 32] = uint256(stor27[stor[_6148]][s].field_256)
                                idx = idx + 32
                                s = s + 1
                                continue 
                            emit 0x3ca43ad4: Array(len=stor27[stor[_6148]].length, data=mem[ceil32(arg1.length) + ceil32(arg2.length) + 224 len stor27[stor[_6148]].length + (floor32(stor27[stor[_6148]].length - 1) + -stor27[stor[_6148]].length + 32 % 32)])
                        else:
                            if stor5 != stor11[stor[_6148]]:
                                if stor6 != stor11[stor[_6148]]:
                                    if not stor[_6148]:
                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                        if not stor16[address(msg.sender)]:
                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                    else:
                                        if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            if msg.value / 10^12 <= stor12[stor[_6148]]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                stor15[address(msg.sender)] = 0
                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                    if not stor15[address(msg.sender)]:
                                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                            stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                            stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            uint8(stor23[address(msg.sender)]) = 0
                                                            stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                                totalSupply += msg.value / 2 * 10^13
                                else:
                                    if stor6 != stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                                        if not stor[_6148]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                if msg.value / 10^12 <= stor12[stor[_6148]]:
                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                    if not stor16[address(msg.sender)]:
                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                else:
                                                    stor15[address(msg.sender)] = 0
                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                        if not stor15[address(msg.sender)]:
                                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                uint8(stor23[address(msg.sender)]) = 0
                                                                stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                    balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                                    totalSupply += msg.value / 2 * 10^13
                                    else:
                                        if stor[_6148] != stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                            stor18[address(msg.sender)] = msg.sender
                                            stor17[address(msg.sender)] = msg.sender
                                            stor16[address(msg.sender)] = msg.sender
                                            stor15[address(msg.sender)] = stor6
                                            stor19[address(msg.sender)] += msg.value / 10^12
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor22[address(msg.sender)] = 1
                                        else:
                                            if not stor[_6148]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                    if not stor16[address(msg.sender)]:
                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                else:
                                                    if msg.value / 10^12 <= stor12[stor[_6148]]:
                                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                                        if not stor16[address(msg.sender)]:
                                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                                    else:
                                                        stor15[address(msg.sender)] = 0
                                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                            if not stor15[address(msg.sender)]:
                                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                    stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                    stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    uint8(stor23[address(msg.sender)]) = 0
                                                                    stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                    stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                    stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                                        totalSupply += msg.value / 2 * 10^13
                            else:
                                if stor5 != stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                                    if stor6 != stor11[stor[_6148]]:
                                        if not stor[_6148]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                if msg.value / 10^12 <= stor12[stor[_6148]]:
                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                    if not stor16[address(msg.sender)]:
                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                else:
                                                    stor15[address(msg.sender)] = 0
                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                        if not stor15[address(msg.sender)]:
                                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                uint8(stor23[address(msg.sender)]) = 0
                                                                stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                    balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                                    totalSupply += msg.value / 2 * 10^13
                                    else:
                                        if stor6 != stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                                            if not stor[_6148]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                    if not stor16[address(msg.sender)]:
                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                else:
                                                    if msg.value / 10^12 <= stor12[stor[_6148]]:
                                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                                        if not stor16[address(msg.sender)]:
                                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                                    else:
                                                        stor15[address(msg.sender)] = 0
                                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                            if not stor15[address(msg.sender)]:
                                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                    stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                    stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    uint8(stor23[address(msg.sender)]) = 0
                                                                    stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                    stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                    stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                                        totalSupply += msg.value / 2 * 10^13
                                        else:
                                            if stor[_6148] != stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                stor18[address(msg.sender)] = msg.sender
                                                stor17[address(msg.sender)] = msg.sender
                                                stor16[address(msg.sender)] = msg.sender
                                                stor15[address(msg.sender)] = stor6
                                                stor19[address(msg.sender)] += msg.value / 10^12
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor22[address(msg.sender)] = 1
                                            else:
                                                if not stor[_6148]:
                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                    if not stor16[address(msg.sender)]:
                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                else:
                                                    if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                                        if not stor16[address(msg.sender)]:
                                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                                    else:
                                                        if msg.value / 10^12 <= stor12[stor[_6148]]:
                                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                                            if not stor16[address(msg.sender)]:
                                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                                        else:
                                                            stor15[address(msg.sender)] = 0
                                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                                if not stor15[address(msg.sender)]:
                                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                        stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                        stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                        stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                        stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                        stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                        uint8(stor23[address(msg.sender)]) = 0
                                                                        stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                        stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                        stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                                            totalSupply += msg.value / 2 * 10^13
                                else:
                                    if stor[_6148] == stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                        if stor6 != stor11[stor[_6148]]:
                                            if not stor[_6148]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                    if not stor16[address(msg.sender)]:
                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                else:
                                                    if msg.value / 10^12 <= stor12[stor[_6148]]:
                                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                                        if not stor16[address(msg.sender)]:
                                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                                    else:
                                                        stor15[address(msg.sender)] = 0
                                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                            if not stor15[address(msg.sender)]:
                                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                    stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                    stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    uint8(stor23[address(msg.sender)]) = 0
                                                                    stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                    stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                    stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                                        totalSupply += msg.value / 2 * 10^13
                                        else:
                                            if stor6 != stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                                                if not stor[_6148]:
                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                    if not stor16[address(msg.sender)]:
                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                else:
                                                    if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                                        if not stor16[address(msg.sender)]:
                                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                                    else:
                                                        if msg.value / 10^12 <= stor12[stor[_6148]]:
                                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                                            if not stor16[address(msg.sender)]:
                                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                                        else:
                                                            stor15[address(msg.sender)] = 0
                                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                                if not stor15[address(msg.sender)]:
                                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                        stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                        stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                        stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                        stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                        stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                        uint8(stor23[address(msg.sender)]) = 0
                                                                        stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                        stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                        stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                                            totalSupply += msg.value / 2 * 10^13
                                            else:
                                                if stor[_6148] != stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                    stor18[address(msg.sender)] = msg.sender
                                                    stor17[address(msg.sender)] = msg.sender
                                                    stor16[address(msg.sender)] = msg.sender
                                                    stor15[address(msg.sender)] = stor6
                                                    stor19[address(msg.sender)] += msg.value / 10^12
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor22[address(msg.sender)] = 1
                                                else:
                                                    if not stor[_6148]:
                                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                                        if not stor16[address(msg.sender)]:
                                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                                    else:
                                                        if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                                            if not stor16[address(msg.sender)]:
                                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                                        else:
                                                            if msg.value / 10^12 <= stor12[stor[_6148]]:
                                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                                if not stor16[address(msg.sender)]:
                                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                                            else:
                                                                stor15[address(msg.sender)] = 0
                                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                                    if not stor15[address(msg.sender)]:
                                                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                            stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                            stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                            stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                            stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                            stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                            uint8(stor23[address(msg.sender)]) = 0
                                                                            stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                            stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                            stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                                                totalSupply += msg.value / 2 * 10^13
                                    else:
                                        if stor12[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] <= 1250:
                                            balanceOf[address(msg.sender)] += msg.value / 10^12 * stor12[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 100
                                            totalSupply += 125 * msg.value / 10^12 / 10
                                        else:
                                            if stor6 != stor11[stor[_6148]]:
                                                if not stor[_6148]:
                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                    if not stor16[address(msg.sender)]:
                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                else:
                                                    if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                                        if not stor16[address(msg.sender)]:
                                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                                    else:
                                                        if msg.value / 10^12 <= stor12[stor[_6148]]:
                                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                                            if not stor16[address(msg.sender)]:
                                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                                        else:
                                                            stor15[address(msg.sender)] = 0
                                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                                if not stor15[address(msg.sender)]:
                                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                        stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                        stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                        stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                        stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                        stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                        uint8(stor23[address(msg.sender)]) = 0
                                                                        stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                        stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                        stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                                            totalSupply += msg.value / 2 * 10^13
                                            else:
                                                if stor6 != stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                                                    if not stor[_6148]:
                                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                                        if not stor16[address(msg.sender)]:
                                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                                    else:
                                                        if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                                            if not stor16[address(msg.sender)]:
                                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                                        else:
                                                            if msg.value / 10^12 <= stor12[stor[_6148]]:
                                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                                if not stor16[address(msg.sender)]:
                                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                                            else:
                                                                stor15[address(msg.sender)] = 0
                                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                                    if not stor15[address(msg.sender)]:
                                                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                            stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                            stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                            stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                            stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                            stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                            uint8(stor23[address(msg.sender)]) = 0
                                                                            stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                            stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                            stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                                                totalSupply += msg.value / 2 * 10^13
                                                else:
                                                    if stor[_6148] != stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                        stor18[address(msg.sender)] = msg.sender
                                                        stor17[address(msg.sender)] = msg.sender
                                                        stor16[address(msg.sender)] = msg.sender
                                                        stor15[address(msg.sender)] = stor6
                                                        stor19[address(msg.sender)] += msg.value / 10^12
                                                        stor20[address(msg.sender)] += msg.value / 10^12 / 10
                                                        stor21[address(msg.sender)] += msg.value / 10^12 / 100
                                                        stor22[address(msg.sender)] = 1
                                                    else:
                                                        if not stor[_6148]:
                                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                                            if not stor16[address(msg.sender)]:
                                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                                        else:
                                                            if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                                if not stor16[address(msg.sender)]:
                                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                                            else:
                                                                if msg.value / 10^12 <= stor12[stor[_6148]]:
                                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                                    if not stor16[address(msg.sender)]:
                                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                                else:
                                                                    stor15[address(msg.sender)] = 0
                                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                                        if not stor15[address(msg.sender)]:
                                                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                                stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                                stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                                stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                                stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                                stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                                uint8(stor23[address(msg.sender)]) = 0
                                                                                stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                                stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                                stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                    balanceOf[stor[_6148]] += msg.value / 2 * 10^13
                                                                    totalSupply += msg.value / 2 * 10^13
    else:
        require stor6 == msg.sender
        mem[ceil32(arg1.length) + ceil32(arg2.length) + 160 len floor32(arg1.length)] = call.data[arg1 + 36 len floor32(arg1.length)]
        mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg1.length) + -(arg1.length % 32) + 192 len arg1.length % 32] = mem[-(arg1.length % 32) + floor32(arg1.length) + 160 len arg1.length % 32]
        mem[arg1.length + ceil32(arg1.length) + ceil32(arg2.length) + 160] = 26
        _6155 = sha3(call.data[arg1 + 36 len floor32(arg1.length)], mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg1.length) + 160 len (arg1.length % 32) + 32])
        mem[ceil32(arg1.length) + ceil32(arg2.length) + 160 len floor32(arg2.length)] = call.data[arg2 + 36 len floor32(arg2.length)]
        mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + -(arg2.length % 32) + 192 len arg2.length % 32] = mem[ceil32(arg1.length) + -(arg2.length % 32) + floor32(arg2.length) + 192 len arg2.length % 32]
        mem[arg2.length + ceil32(arg1.length) + ceil32(arg2.length) + 160] = 26
        if not stor[_6155]:
            if stor5 != stor11[stor[_6155]]:
                if stor6 != stor11[stor[_6155]]:
                    if not stor[_6155]:
                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                        stor15[address(msg.sender)] = address(stor7.field_0)
                        if not stor16[address(msg.sender)]:
                            stor18[address(msg.sender)] = address(stor7.field_0)
                            stor17[address(msg.sender)] = address(stor7.field_0)
                            stor16[address(msg.sender)] = address(stor7.field_0)
                    else:
                        if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                            stor15[address(msg.sender)] = address(stor7.field_0)
                            if not stor16[address(msg.sender)]:
                                stor18[address(msg.sender)] = address(stor7.field_0)
                                stor17[address(msg.sender)] = address(stor7.field_0)
                                stor16[address(msg.sender)] = address(stor7.field_0)
                        else:
                            if msg.value / 10^12 <= stor12[stor[_6155]]:
                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                stor15[address(msg.sender)] = address(stor7.field_0)
                                if not stor16[address(msg.sender)]:
                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                    stor16[address(msg.sender)] = address(stor7.field_0)
                            else:
                                stor15[address(msg.sender)] = 0
                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                    if not stor15[address(msg.sender)]:
                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                            stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                            stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                            stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                            stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                            stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                            uint8(stor23[address(msg.sender)]) = 0
                                            stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                            stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                            stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                totalSupply += msg.value / 2 * 10^13
                else:
                    if stor6 != stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                        if not stor[_6155]:
                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                            stor15[address(msg.sender)] = address(stor7.field_0)
                            if not stor16[address(msg.sender)]:
                                stor18[address(msg.sender)] = address(stor7.field_0)
                                stor17[address(msg.sender)] = address(stor7.field_0)
                                stor16[address(msg.sender)] = address(stor7.field_0)
                        else:
                            if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                stor15[address(msg.sender)] = address(stor7.field_0)
                                if not stor16[address(msg.sender)]:
                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                    stor16[address(msg.sender)] = address(stor7.field_0)
                            else:
                                if msg.value / 10^12 <= stor12[stor[_6155]]:
                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                    if not stor16[address(msg.sender)]:
                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                else:
                                    stor15[address(msg.sender)] = 0
                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                        if not stor15[address(msg.sender)]:
                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                uint8(stor23[address(msg.sender)]) = 0
                                                stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                    balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                    totalSupply += msg.value / 2 * 10^13
                    else:
                        if stor[_6155] != stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                            stor18[address(msg.sender)] = msg.sender
                            stor17[address(msg.sender)] = msg.sender
                            stor16[address(msg.sender)] = msg.sender
                            stor15[address(msg.sender)] = stor6
                            stor19[address(msg.sender)] += msg.value / 10^12
                            stor20[address(msg.sender)] += msg.value / 10^12 / 10
                            stor21[address(msg.sender)] += msg.value / 10^12 / 100
                            stor22[address(msg.sender)] = 1
                        else:
                            if not stor[_6155]:
                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                stor15[address(msg.sender)] = address(stor7.field_0)
                                if not stor16[address(msg.sender)]:
                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                    stor16[address(msg.sender)] = address(stor7.field_0)
                            else:
                                if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                    if not stor16[address(msg.sender)]:
                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                else:
                                    if msg.value / 10^12 <= stor12[stor[_6155]]:
                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                        if not stor16[address(msg.sender)]:
                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                    else:
                                        stor15[address(msg.sender)] = 0
                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                            if not stor15[address(msg.sender)]:
                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                    stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                    stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                    stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                    stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                    stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                    uint8(stor23[address(msg.sender)]) = 0
                                                    stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                    stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                    stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                        balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                        totalSupply += msg.value / 2 * 10^13
            else:
                if stor5 != stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                    if stor6 != stor11[stor[_6155]]:
                        if not stor[_6155]:
                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                            stor15[address(msg.sender)] = address(stor7.field_0)
                            if not stor16[address(msg.sender)]:
                                stor18[address(msg.sender)] = address(stor7.field_0)
                                stor17[address(msg.sender)] = address(stor7.field_0)
                                stor16[address(msg.sender)] = address(stor7.field_0)
                        else:
                            if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                stor15[address(msg.sender)] = address(stor7.field_0)
                                if not stor16[address(msg.sender)]:
                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                    stor16[address(msg.sender)] = address(stor7.field_0)
                            else:
                                if msg.value / 10^12 <= stor12[stor[_6155]]:
                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                    if not stor16[address(msg.sender)]:
                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                else:
                                    stor15[address(msg.sender)] = 0
                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                        if not stor15[address(msg.sender)]:
                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                uint8(stor23[address(msg.sender)]) = 0
                                                stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                    balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                    totalSupply += msg.value / 2 * 10^13
                    else:
                        if stor6 != stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                            if not stor[_6155]:
                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                stor15[address(msg.sender)] = address(stor7.field_0)
                                if not stor16[address(msg.sender)]:
                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                    stor16[address(msg.sender)] = address(stor7.field_0)
                            else:
                                if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                    if not stor16[address(msg.sender)]:
                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                else:
                                    if msg.value / 10^12 <= stor12[stor[_6155]]:
                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                        if not stor16[address(msg.sender)]:
                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                    else:
                                        stor15[address(msg.sender)] = 0
                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                            if not stor15[address(msg.sender)]:
                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                    stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                    stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                    stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                    stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                    stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                    uint8(stor23[address(msg.sender)]) = 0
                                                    stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                    stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                    stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                        balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                        totalSupply += msg.value / 2 * 10^13
                        else:
                            if stor[_6155] != stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                stor18[address(msg.sender)] = msg.sender
                                stor17[address(msg.sender)] = msg.sender
                                stor16[address(msg.sender)] = msg.sender
                                stor15[address(msg.sender)] = stor6
                                stor19[address(msg.sender)] += msg.value / 10^12
                                stor20[address(msg.sender)] += msg.value / 10^12 / 10
                                stor21[address(msg.sender)] += msg.value / 10^12 / 100
                                stor22[address(msg.sender)] = 1
                            else:
                                if not stor[_6155]:
                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                    if not stor16[address(msg.sender)]:
                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                else:
                                    if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                        if not stor16[address(msg.sender)]:
                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                    else:
                                        if msg.value / 10^12 <= stor12[stor[_6155]]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            stor15[address(msg.sender)] = 0
                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                if not stor15[address(msg.sender)]:
                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                        stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                        stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        uint8(stor23[address(msg.sender)]) = 0
                                                        stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                            balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                            totalSupply += msg.value / 2 * 10^13
                else:
                    if stor[_6155] == stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                        if stor6 != stor11[stor[_6155]]:
                            if not stor[_6155]:
                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                stor15[address(msg.sender)] = address(stor7.field_0)
                                if not stor16[address(msg.sender)]:
                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                    stor16[address(msg.sender)] = address(stor7.field_0)
                            else:
                                if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                    if not stor16[address(msg.sender)]:
                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                else:
                                    if msg.value / 10^12 <= stor12[stor[_6155]]:
                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                        if not stor16[address(msg.sender)]:
                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                    else:
                                        stor15[address(msg.sender)] = 0
                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                            if not stor15[address(msg.sender)]:
                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                    stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                    stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                    stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                    stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                    stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                    uint8(stor23[address(msg.sender)]) = 0
                                                    stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                    stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                    stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                        balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                        totalSupply += msg.value / 2 * 10^13
                        else:
                            if stor6 != stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                                if not stor[_6155]:
                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                    if not stor16[address(msg.sender)]:
                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                else:
                                    if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                        if not stor16[address(msg.sender)]:
                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                    else:
                                        if msg.value / 10^12 <= stor12[stor[_6155]]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            stor15[address(msg.sender)] = 0
                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                if not stor15[address(msg.sender)]:
                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                        stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                        stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        uint8(stor23[address(msg.sender)]) = 0
                                                        stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                            balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                            totalSupply += msg.value / 2 * 10^13
                            else:
                                if stor[_6155] != stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                    stor18[address(msg.sender)] = msg.sender
                                    stor17[address(msg.sender)] = msg.sender
                                    stor16[address(msg.sender)] = msg.sender
                                    stor15[address(msg.sender)] = stor6
                                    stor19[address(msg.sender)] += msg.value / 10^12
                                    stor20[address(msg.sender)] += msg.value / 10^12 / 10
                                    stor21[address(msg.sender)] += msg.value / 10^12 / 100
                                    stor22[address(msg.sender)] = 1
                                else:
                                    if not stor[_6155]:
                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                        if not stor16[address(msg.sender)]:
                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                    else:
                                        if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            if msg.value / 10^12 <= stor12[stor[_6155]]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                stor15[address(msg.sender)] = 0
                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                    if not stor15[address(msg.sender)]:
                                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                            stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                            stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            uint8(stor23[address(msg.sender)]) = 0
                                                            stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                                totalSupply += msg.value / 2 * 10^13
                    else:
                        if stor12[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] <= 1250:
                            balanceOf[address(msg.sender)] += msg.value / 10^12 * stor12[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 100
                            totalSupply += 125 * msg.value / 10^12 / 10
                        else:
                            if stor6 != stor11[stor[_6155]]:
                                if not stor[_6155]:
                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                    if not stor16[address(msg.sender)]:
                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                else:
                                    if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                        if not stor16[address(msg.sender)]:
                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                    else:
                                        if msg.value / 10^12 <= stor12[stor[_6155]]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            stor15[address(msg.sender)] = 0
                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                if not stor15[address(msg.sender)]:
                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                        stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                        stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        uint8(stor23[address(msg.sender)]) = 0
                                                        stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                            balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                            totalSupply += msg.value / 2 * 10^13
                            else:
                                if stor6 != stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                                    if not stor[_6155]:
                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                        if not stor16[address(msg.sender)]:
                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                    else:
                                        if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            if msg.value / 10^12 <= stor12[stor[_6155]]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                stor15[address(msg.sender)] = 0
                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                    if not stor15[address(msg.sender)]:
                                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                            stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                            stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            uint8(stor23[address(msg.sender)]) = 0
                                                            stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                                totalSupply += msg.value / 2 * 10^13
                                else:
                                    if stor[_6155] != stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                        stor18[address(msg.sender)] = msg.sender
                                        stor17[address(msg.sender)] = msg.sender
                                        stor16[address(msg.sender)] = msg.sender
                                        stor15[address(msg.sender)] = stor6
                                        stor19[address(msg.sender)] += msg.value / 10^12
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor22[address(msg.sender)] = 1
                                    else:
                                        if not stor[_6155]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                if msg.value / 10^12 <= stor12[stor[_6155]]:
                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                    if not stor16[address(msg.sender)]:
                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                else:
                                                    stor15[address(msg.sender)] = 0
                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                        if not stor15[address(msg.sender)]:
                                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                uint8(stor23[address(msg.sender)]) = 0
                                                                stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                    balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                                    totalSupply += msg.value / 2 * 10^13
        else:
            if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                if stor5 != stor11[stor[_6155]]:
                    if stor6 != stor11[stor[_6155]]:
                        if not stor[_6155]:
                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                            stor15[address(msg.sender)] = address(stor7.field_0)
                            if not stor16[address(msg.sender)]:
                                stor18[address(msg.sender)] = address(stor7.field_0)
                                stor17[address(msg.sender)] = address(stor7.field_0)
                                stor16[address(msg.sender)] = address(stor7.field_0)
                        else:
                            if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                stor15[address(msg.sender)] = address(stor7.field_0)
                                if not stor16[address(msg.sender)]:
                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                    stor16[address(msg.sender)] = address(stor7.field_0)
                            else:
                                if msg.value / 10^12 <= stor12[stor[_6155]]:
                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                    if not stor16[address(msg.sender)]:
                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                else:
                                    stor15[address(msg.sender)] = 0
                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                        if not stor15[address(msg.sender)]:
                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                uint8(stor23[address(msg.sender)]) = 0
                                                stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                    balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                    totalSupply += msg.value / 2 * 10^13
                    else:
                        if stor6 != stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                            if not stor[_6155]:
                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                stor15[address(msg.sender)] = address(stor7.field_0)
                                if not stor16[address(msg.sender)]:
                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                    stor16[address(msg.sender)] = address(stor7.field_0)
                            else:
                                if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                    if not stor16[address(msg.sender)]:
                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                else:
                                    if msg.value / 10^12 <= stor12[stor[_6155]]:
                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                        if not stor16[address(msg.sender)]:
                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                    else:
                                        stor15[address(msg.sender)] = 0
                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                            if not stor15[address(msg.sender)]:
                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                    stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                    stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                    stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                    stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                    stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                    uint8(stor23[address(msg.sender)]) = 0
                                                    stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                    stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                    stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                        balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                        totalSupply += msg.value / 2 * 10^13
                        else:
                            if stor[_6155] != stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                stor18[address(msg.sender)] = msg.sender
                                stor17[address(msg.sender)] = msg.sender
                                stor16[address(msg.sender)] = msg.sender
                                stor15[address(msg.sender)] = stor6
                                stor19[address(msg.sender)] += msg.value / 10^12
                                stor20[address(msg.sender)] += msg.value / 10^12 / 10
                                stor21[address(msg.sender)] += msg.value / 10^12 / 100
                                stor22[address(msg.sender)] = 1
                            else:
                                if not stor[_6155]:
                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                    if not stor16[address(msg.sender)]:
                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                else:
                                    if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                        if not stor16[address(msg.sender)]:
                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                    else:
                                        if msg.value / 10^12 <= stor12[stor[_6155]]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            stor15[address(msg.sender)] = 0
                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                if not stor15[address(msg.sender)]:
                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                        stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                        stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        uint8(stor23[address(msg.sender)]) = 0
                                                        stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                            balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                            totalSupply += msg.value / 2 * 10^13
                else:
                    if stor5 != stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                        if stor6 != stor11[stor[_6155]]:
                            if not stor[_6155]:
                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                stor15[address(msg.sender)] = address(stor7.field_0)
                                if not stor16[address(msg.sender)]:
                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                    stor16[address(msg.sender)] = address(stor7.field_0)
                            else:
                                if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                    if not stor16[address(msg.sender)]:
                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                else:
                                    if msg.value / 10^12 <= stor12[stor[_6155]]:
                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                        if not stor16[address(msg.sender)]:
                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                    else:
                                        stor15[address(msg.sender)] = 0
                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                            if not stor15[address(msg.sender)]:
                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                    stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                    stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                    stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                    stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                    stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                    uint8(stor23[address(msg.sender)]) = 0
                                                    stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                    stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                    stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                        balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                        totalSupply += msg.value / 2 * 10^13
                        else:
                            if stor6 != stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                                if not stor[_6155]:
                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                    if not stor16[address(msg.sender)]:
                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                else:
                                    if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                        if not stor16[address(msg.sender)]:
                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                    else:
                                        if msg.value / 10^12 <= stor12[stor[_6155]]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            stor15[address(msg.sender)] = 0
                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                if not stor15[address(msg.sender)]:
                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                        stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                        stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        uint8(stor23[address(msg.sender)]) = 0
                                                        stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                            balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                            totalSupply += msg.value / 2 * 10^13
                            else:
                                if stor[_6155] != stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                    stor18[address(msg.sender)] = msg.sender
                                    stor17[address(msg.sender)] = msg.sender
                                    stor16[address(msg.sender)] = msg.sender
                                    stor15[address(msg.sender)] = stor6
                                    stor19[address(msg.sender)] += msg.value / 10^12
                                    stor20[address(msg.sender)] += msg.value / 10^12 / 10
                                    stor21[address(msg.sender)] += msg.value / 10^12 / 100
                                    stor22[address(msg.sender)] = 1
                                else:
                                    if not stor[_6155]:
                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                        if not stor16[address(msg.sender)]:
                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                    else:
                                        if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            if msg.value / 10^12 <= stor12[stor[_6155]]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                stor15[address(msg.sender)] = 0
                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                    if not stor15[address(msg.sender)]:
                                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                            stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                            stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            uint8(stor23[address(msg.sender)]) = 0
                                                            stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                                totalSupply += msg.value / 2 * 10^13
                    else:
                        if stor[_6155] == stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                            if stor6 != stor11[stor[_6155]]:
                                if not stor[_6155]:
                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                    if not stor16[address(msg.sender)]:
                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                else:
                                    if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                        if not stor16[address(msg.sender)]:
                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                    else:
                                        if msg.value / 10^12 <= stor12[stor[_6155]]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            stor15[address(msg.sender)] = 0
                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                if not stor15[address(msg.sender)]:
                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                        stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                        stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        uint8(stor23[address(msg.sender)]) = 0
                                                        stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                            balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                            totalSupply += msg.value / 2 * 10^13
                            else:
                                if stor6 != stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                                    if not stor[_6155]:
                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                        if not stor16[address(msg.sender)]:
                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                    else:
                                        if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            if msg.value / 10^12 <= stor12[stor[_6155]]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                stor15[address(msg.sender)] = 0
                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                    if not stor15[address(msg.sender)]:
                                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                            stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                            stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            uint8(stor23[address(msg.sender)]) = 0
                                                            stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                                totalSupply += msg.value / 2 * 10^13
                                else:
                                    if stor[_6155] != stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                        stor18[address(msg.sender)] = msg.sender
                                        stor17[address(msg.sender)] = msg.sender
                                        stor16[address(msg.sender)] = msg.sender
                                        stor15[address(msg.sender)] = stor6
                                        stor19[address(msg.sender)] += msg.value / 10^12
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor22[address(msg.sender)] = 1
                                    else:
                                        if not stor[_6155]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                if msg.value / 10^12 <= stor12[stor[_6155]]:
                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                    if not stor16[address(msg.sender)]:
                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                else:
                                                    stor15[address(msg.sender)] = 0
                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                        if not stor15[address(msg.sender)]:
                                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                uint8(stor23[address(msg.sender)]) = 0
                                                                stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                    balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                                    totalSupply += msg.value / 2 * 10^13
                        else:
                            if stor12[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] <= 1250:
                                balanceOf[address(msg.sender)] += msg.value / 10^12 * stor12[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 100
                                totalSupply += 125 * msg.value / 10^12 / 10
                            else:
                                if stor6 != stor11[stor[_6155]]:
                                    if not stor[_6155]:
                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                        if not stor16[address(msg.sender)]:
                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                    else:
                                        if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            if msg.value / 10^12 <= stor12[stor[_6155]]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                stor15[address(msg.sender)] = 0
                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                    if not stor15[address(msg.sender)]:
                                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                            stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                            stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            uint8(stor23[address(msg.sender)]) = 0
                                                            stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                                totalSupply += msg.value / 2 * 10^13
                                else:
                                    if stor6 != stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                                        if not stor[_6155]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                if msg.value / 10^12 <= stor12[stor[_6155]]:
                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                    if not stor16[address(msg.sender)]:
                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                else:
                                                    stor15[address(msg.sender)] = 0
                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                        if not stor15[address(msg.sender)]:
                                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                uint8(stor23[address(msg.sender)]) = 0
                                                                stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                    balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                                    totalSupply += msg.value / 2 * 10^13
                                    else:
                                        if stor[_6155] != stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                            stor18[address(msg.sender)] = msg.sender
                                            stor17[address(msg.sender)] = msg.sender
                                            stor16[address(msg.sender)] = msg.sender
                                            stor15[address(msg.sender)] = stor6
                                            stor19[address(msg.sender)] += msg.value / 10^12
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor22[address(msg.sender)] = 1
                                        else:
                                            if not stor[_6155]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                    if not stor16[address(msg.sender)]:
                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                else:
                                                    if msg.value / 10^12 <= stor12[stor[_6155]]:
                                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                                        if not stor16[address(msg.sender)]:
                                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                                    else:
                                                        stor15[address(msg.sender)] = 0
                                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                            if not stor15[address(msg.sender)]:
                                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                    stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                    stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    uint8(stor23[address(msg.sender)]) = 0
                                                                    stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                    stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                    stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                                        totalSupply += msg.value / 2 * 10^13
            else:
                if stor[_6155] == stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                    if stor5 != stor11[stor[_6155]]:
                        if stor6 != stor11[stor[_6155]]:
                            if not stor[_6155]:
                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                stor15[address(msg.sender)] = address(stor7.field_0)
                                if not stor16[address(msg.sender)]:
                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                    stor16[address(msg.sender)] = address(stor7.field_0)
                            else:
                                if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                    if not stor16[address(msg.sender)]:
                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                else:
                                    if msg.value / 10^12 <= stor12[stor[_6155]]:
                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                        if not stor16[address(msg.sender)]:
                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                    else:
                                        stor15[address(msg.sender)] = 0
                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                            if not stor15[address(msg.sender)]:
                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                    stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                    stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                    stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                    stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                    stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                    uint8(stor23[address(msg.sender)]) = 0
                                                    stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                    stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                    stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                        balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                        totalSupply += msg.value / 2 * 10^13
                        else:
                            if stor6 != stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                                if not stor[_6155]:
                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                    if not stor16[address(msg.sender)]:
                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                else:
                                    if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                        if not stor16[address(msg.sender)]:
                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                    else:
                                        if msg.value / 10^12 <= stor12[stor[_6155]]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            stor15[address(msg.sender)] = 0
                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                if not stor15[address(msg.sender)]:
                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                        stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                        stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        uint8(stor23[address(msg.sender)]) = 0
                                                        stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                            balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                            totalSupply += msg.value / 2 * 10^13
                            else:
                                if stor[_6155] != stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                    stor18[address(msg.sender)] = msg.sender
                                    stor17[address(msg.sender)] = msg.sender
                                    stor16[address(msg.sender)] = msg.sender
                                    stor15[address(msg.sender)] = stor6
                                    stor19[address(msg.sender)] += msg.value / 10^12
                                    stor20[address(msg.sender)] += msg.value / 10^12 / 10
                                    stor21[address(msg.sender)] += msg.value / 10^12 / 100
                                    stor22[address(msg.sender)] = 1
                                else:
                                    if not stor[_6155]:
                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                        if not stor16[address(msg.sender)]:
                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                    else:
                                        if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            if msg.value / 10^12 <= stor12[stor[_6155]]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                stor15[address(msg.sender)] = 0
                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                    if not stor15[address(msg.sender)]:
                                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                            stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                            stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            uint8(stor23[address(msg.sender)]) = 0
                                                            stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                                totalSupply += msg.value / 2 * 10^13
                    else:
                        if stor5 != stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                            if stor6 != stor11[stor[_6155]]:
                                if not stor[_6155]:
                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                    if not stor16[address(msg.sender)]:
                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                else:
                                    if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                        if not stor16[address(msg.sender)]:
                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                    else:
                                        if msg.value / 10^12 <= stor12[stor[_6155]]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            stor15[address(msg.sender)] = 0
                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                if not stor15[address(msg.sender)]:
                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                        stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                        stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        uint8(stor23[address(msg.sender)]) = 0
                                                        stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                            balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                            totalSupply += msg.value / 2 * 10^13
                            else:
                                if stor6 != stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                                    if not stor[_6155]:
                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                        if not stor16[address(msg.sender)]:
                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                    else:
                                        if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            if msg.value / 10^12 <= stor12[stor[_6155]]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                stor15[address(msg.sender)] = 0
                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                    if not stor15[address(msg.sender)]:
                                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                            stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                            stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            uint8(stor23[address(msg.sender)]) = 0
                                                            stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                                totalSupply += msg.value / 2 * 10^13
                                else:
                                    if stor[_6155] != stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                        stor18[address(msg.sender)] = msg.sender
                                        stor17[address(msg.sender)] = msg.sender
                                        stor16[address(msg.sender)] = msg.sender
                                        stor15[address(msg.sender)] = stor6
                                        stor19[address(msg.sender)] += msg.value / 10^12
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor22[address(msg.sender)] = 1
                                    else:
                                        if not stor[_6155]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                if msg.value / 10^12 <= stor12[stor[_6155]]:
                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                    if not stor16[address(msg.sender)]:
                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                else:
                                                    stor15[address(msg.sender)] = 0
                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                        if not stor15[address(msg.sender)]:
                                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                uint8(stor23[address(msg.sender)]) = 0
                                                                stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                    balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                                    totalSupply += msg.value / 2 * 10^13
                        else:
                            if stor[_6155] == stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                if stor6 != stor11[stor[_6155]]:
                                    if not stor[_6155]:
                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                        if not stor16[address(msg.sender)]:
                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                    else:
                                        if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            if msg.value / 10^12 <= stor12[stor[_6155]]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                stor15[address(msg.sender)] = 0
                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                    if not stor15[address(msg.sender)]:
                                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                            stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                            stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            uint8(stor23[address(msg.sender)]) = 0
                                                            stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                                totalSupply += msg.value / 2 * 10^13
                                else:
                                    if stor6 != stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                                        if not stor[_6155]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                if msg.value / 10^12 <= stor12[stor[_6155]]:
                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                    if not stor16[address(msg.sender)]:
                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                else:
                                                    stor15[address(msg.sender)] = 0
                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                        if not stor15[address(msg.sender)]:
                                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                uint8(stor23[address(msg.sender)]) = 0
                                                                stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                    balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                                    totalSupply += msg.value / 2 * 10^13
                                    else:
                                        if stor[_6155] != stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                            stor18[address(msg.sender)] = msg.sender
                                            stor17[address(msg.sender)] = msg.sender
                                            stor16[address(msg.sender)] = msg.sender
                                            stor15[address(msg.sender)] = stor6
                                            stor19[address(msg.sender)] += msg.value / 10^12
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor22[address(msg.sender)] = 1
                                        else:
                                            if not stor[_6155]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                    if not stor16[address(msg.sender)]:
                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                else:
                                                    if msg.value / 10^12 <= stor12[stor[_6155]]:
                                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                                        if not stor16[address(msg.sender)]:
                                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                                    else:
                                                        stor15[address(msg.sender)] = 0
                                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                            if not stor15[address(msg.sender)]:
                                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                    stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                    stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    uint8(stor23[address(msg.sender)]) = 0
                                                                    stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                    stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                    stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                                        totalSupply += msg.value / 2 * 10^13
                            else:
                                if stor12[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] <= 1250:
                                    balanceOf[address(msg.sender)] += msg.value / 10^12 * stor12[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 100
                                    totalSupply += 125 * msg.value / 10^12 / 10
                                else:
                                    if stor6 != stor11[stor[_6155]]:
                                        if not stor[_6155]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                if msg.value / 10^12 <= stor12[stor[_6155]]:
                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                    if not stor16[address(msg.sender)]:
                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                else:
                                                    stor15[address(msg.sender)] = 0
                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                        if not stor15[address(msg.sender)]:
                                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                uint8(stor23[address(msg.sender)]) = 0
                                                                stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                    balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                                    totalSupply += msg.value / 2 * 10^13
                                    else:
                                        if stor6 != stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                                            if not stor[_6155]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                    if not stor16[address(msg.sender)]:
                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                else:
                                                    if msg.value / 10^12 <= stor12[stor[_6155]]:
                                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                                        if not stor16[address(msg.sender)]:
                                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                                    else:
                                                        stor15[address(msg.sender)] = 0
                                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                            if not stor15[address(msg.sender)]:
                                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                    stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                    stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    uint8(stor23[address(msg.sender)]) = 0
                                                                    stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                    stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                    stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                                        totalSupply += msg.value / 2 * 10^13
                                        else:
                                            if stor[_6155] != stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                stor18[address(msg.sender)] = msg.sender
                                                stor17[address(msg.sender)] = msg.sender
                                                stor16[address(msg.sender)] = msg.sender
                                                stor15[address(msg.sender)] = stor6
                                                stor19[address(msg.sender)] += msg.value / 10^12
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor22[address(msg.sender)] = 1
                                            else:
                                                if not stor[_6155]:
                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                    if not stor16[address(msg.sender)]:
                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                else:
                                                    if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                                        if not stor16[address(msg.sender)]:
                                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                                    else:
                                                        if msg.value / 10^12 <= stor12[stor[_6155]]:
                                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                                            if not stor16[address(msg.sender)]:
                                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                                        else:
                                                            stor15[address(msg.sender)] = 0
                                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                                if not stor15[address(msg.sender)]:
                                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                        stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                        stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                        stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                        stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                        stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                        uint8(stor23[address(msg.sender)]) = 0
                                                                        stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                        stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                        stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                                            totalSupply += msg.value / 2 * 10^13
                else:
                    if stor11[stor[_6155]] != stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                        if stor5 != stor11[stor[_6155]]:
                            if stor6 != stor11[stor[_6155]]:
                                if not stor[_6155]:
                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                    if not stor16[address(msg.sender)]:
                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                else:
                                    if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                        if not stor16[address(msg.sender)]:
                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                    else:
                                        if msg.value / 10^12 <= stor12[stor[_6155]]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            stor15[address(msg.sender)] = 0
                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                if not stor15[address(msg.sender)]:
                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                        stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                        stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                        uint8(stor23[address(msg.sender)]) = 0
                                                        stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                            balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                            totalSupply += msg.value / 2 * 10^13
                            else:
                                if stor6 != stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                                    if not stor[_6155]:
                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                        if not stor16[address(msg.sender)]:
                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                    else:
                                        if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            if msg.value / 10^12 <= stor12[stor[_6155]]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                stor15[address(msg.sender)] = 0
                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                    if not stor15[address(msg.sender)]:
                                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                            stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                            stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            uint8(stor23[address(msg.sender)]) = 0
                                                            stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                                totalSupply += msg.value / 2 * 10^13
                                else:
                                    if stor[_6155] != stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                        stor18[address(msg.sender)] = msg.sender
                                        stor17[address(msg.sender)] = msg.sender
                                        stor16[address(msg.sender)] = msg.sender
                                        stor15[address(msg.sender)] = stor6
                                        stor19[address(msg.sender)] += msg.value / 10^12
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor22[address(msg.sender)] = 1
                                    else:
                                        if not stor[_6155]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                if msg.value / 10^12 <= stor12[stor[_6155]]:
                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                    if not stor16[address(msg.sender)]:
                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                else:
                                                    stor15[address(msg.sender)] = 0
                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                        if not stor15[address(msg.sender)]:
                                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                uint8(stor23[address(msg.sender)]) = 0
                                                                stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                    balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                                    totalSupply += msg.value / 2 * 10^13
                        else:
                            if stor5 != stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                                if stor6 != stor11[stor[_6155]]:
                                    if not stor[_6155]:
                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                        if not stor16[address(msg.sender)]:
                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                    else:
                                        if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            if msg.value / 10^12 <= stor12[stor[_6155]]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                stor15[address(msg.sender)] = 0
                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                    if not stor15[address(msg.sender)]:
                                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                            stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                            stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            uint8(stor23[address(msg.sender)]) = 0
                                                            stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                                totalSupply += msg.value / 2 * 10^13
                                else:
                                    if stor6 != stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                                        if not stor[_6155]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                if msg.value / 10^12 <= stor12[stor[_6155]]:
                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                    if not stor16[address(msg.sender)]:
                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                else:
                                                    stor15[address(msg.sender)] = 0
                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                        if not stor15[address(msg.sender)]:
                                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                uint8(stor23[address(msg.sender)]) = 0
                                                                stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                    balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                                    totalSupply += msg.value / 2 * 10^13
                                    else:
                                        if stor[_6155] != stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                            stor18[address(msg.sender)] = msg.sender
                                            stor17[address(msg.sender)] = msg.sender
                                            stor16[address(msg.sender)] = msg.sender
                                            stor15[address(msg.sender)] = stor6
                                            stor19[address(msg.sender)] += msg.value / 10^12
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor22[address(msg.sender)] = 1
                                        else:
                                            if not stor[_6155]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                    if not stor16[address(msg.sender)]:
                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                else:
                                                    if msg.value / 10^12 <= stor12[stor[_6155]]:
                                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                                        if not stor16[address(msg.sender)]:
                                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                                    else:
                                                        stor15[address(msg.sender)] = 0
                                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                            if not stor15[address(msg.sender)]:
                                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                    stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                    stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    uint8(stor23[address(msg.sender)]) = 0
                                                                    stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                    stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                    stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                                        totalSupply += msg.value / 2 * 10^13
                            else:
                                if stor[_6155] == stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                    if stor6 != stor11[stor[_6155]]:
                                        if not stor[_6155]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                if msg.value / 10^12 <= stor12[stor[_6155]]:
                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                    if not stor16[address(msg.sender)]:
                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                else:
                                                    stor15[address(msg.sender)] = 0
                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                        if not stor15[address(msg.sender)]:
                                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                uint8(stor23[address(msg.sender)]) = 0
                                                                stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                    balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                                    totalSupply += msg.value / 2 * 10^13
                                    else:
                                        if stor6 != stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                                            if not stor[_6155]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                    if not stor16[address(msg.sender)]:
                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                else:
                                                    if msg.value / 10^12 <= stor12[stor[_6155]]:
                                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                                        if not stor16[address(msg.sender)]:
                                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                                    else:
                                                        stor15[address(msg.sender)] = 0
                                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                            if not stor15[address(msg.sender)]:
                                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                    stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                    stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    uint8(stor23[address(msg.sender)]) = 0
                                                                    stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                    stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                    stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                                        totalSupply += msg.value / 2 * 10^13
                                        else:
                                            if stor[_6155] != stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                stor18[address(msg.sender)] = msg.sender
                                                stor17[address(msg.sender)] = msg.sender
                                                stor16[address(msg.sender)] = msg.sender
                                                stor15[address(msg.sender)] = stor6
                                                stor19[address(msg.sender)] += msg.value / 10^12
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor22[address(msg.sender)] = 1
                                            else:
                                                if not stor[_6155]:
                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                    if not stor16[address(msg.sender)]:
                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                else:
                                                    if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                                        if not stor16[address(msg.sender)]:
                                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                                    else:
                                                        if msg.value / 10^12 <= stor12[stor[_6155]]:
                                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                                            if not stor16[address(msg.sender)]:
                                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                                        else:
                                                            stor15[address(msg.sender)] = 0
                                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                                if not stor15[address(msg.sender)]:
                                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                        stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                        stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                        stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                        stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                        stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                        uint8(stor23[address(msg.sender)]) = 0
                                                                        stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                        stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                        stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                                            totalSupply += msg.value / 2 * 10^13
                                else:
                                    if stor12[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] <= 1250:
                                        balanceOf[address(msg.sender)] += msg.value / 10^12 * stor12[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 100
                                        totalSupply += 125 * msg.value / 10^12 / 10
                                    else:
                                        if stor6 != stor11[stor[_6155]]:
                                            if not stor[_6155]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                    if not stor16[address(msg.sender)]:
                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                else:
                                                    if msg.value / 10^12 <= stor12[stor[_6155]]:
                                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                                        if not stor16[address(msg.sender)]:
                                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                                    else:
                                                        stor15[address(msg.sender)] = 0
                                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                            if not stor15[address(msg.sender)]:
                                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                    stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                    stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    uint8(stor23[address(msg.sender)]) = 0
                                                                    stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                    stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                    stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                                        totalSupply += msg.value / 2 * 10^13
                                        else:
                                            if stor6 != stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                                                if not stor[_6155]:
                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                    if not stor16[address(msg.sender)]:
                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                else:
                                                    if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                                        if not stor16[address(msg.sender)]:
                                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                                    else:
                                                        if msg.value / 10^12 <= stor12[stor[_6155]]:
                                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                                            if not stor16[address(msg.sender)]:
                                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                                        else:
                                                            stor15[address(msg.sender)] = 0
                                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                                if not stor15[address(msg.sender)]:
                                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                        stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                        stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                        stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                        stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                        stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                        uint8(stor23[address(msg.sender)]) = 0
                                                                        stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                        stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                        stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                                            totalSupply += msg.value / 2 * 10^13
                                            else:
                                                if stor[_6155] != stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                    stor18[address(msg.sender)] = msg.sender
                                                    stor17[address(msg.sender)] = msg.sender
                                                    stor16[address(msg.sender)] = msg.sender
                                                    stor15[address(msg.sender)] = stor6
                                                    stor19[address(msg.sender)] += msg.value / 10^12
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor22[address(msg.sender)] = 1
                                                else:
                                                    if not stor[_6155]:
                                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                                        if not stor16[address(msg.sender)]:
                                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                                    else:
                                                        if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                                            if not stor16[address(msg.sender)]:
                                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                                        else:
                                                            if msg.value / 10^12 <= stor12[stor[_6155]]:
                                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                                if not stor16[address(msg.sender)]:
                                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                                            else:
                                                                stor15[address(msg.sender)] = 0
                                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                                    if not stor15[address(msg.sender)]:
                                                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                            stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                            stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                            stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                            stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                            stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                            uint8(stor23[address(msg.sender)]) = 0
                                                                            stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                            stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                            stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                                                totalSupply += msg.value / 2 * 10^13
                    else:
                        if msg.value / 10^12 == stor12[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                            stor12[msg.sender] += stor12[stor[_6155]]
                            stor12[stor[_6155]] = 0
                            stor12[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] = 0
                            mem[ceil32(arg1.length) + ceil32(arg2.length) + 224] = uint256(stor27[stor[_6155]].field_0)
                            idx = ceil32(arg1.length) + ceil32(arg2.length) + 224
                            s = 0
                            while ceil32(arg1.length) + ceil32(arg2.length) + stor27[stor[_6155]].length + 224 > idx + 32:
                                mem[idx + 32] = uint256(stor27[stor[_6155]][s].field_256)
                                idx = idx + 32
                                s = s + 1
                                continue 
                            emit 0x3ca43ad4: Array(len=stor27[stor[_6155]].length, data=mem[ceil32(arg1.length) + ceil32(arg2.length) + 224 len stor27[stor[_6155]].length + (floor32(stor27[stor[_6155]].length - 1) + -stor27[stor[_6155]].length + 32 % 32)])
                        else:
                            if stor5 != stor11[stor[_6155]]:
                                if stor6 != stor11[stor[_6155]]:
                                    if not stor[_6155]:
                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                        if not stor16[address(msg.sender)]:
                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                    else:
                                        if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            if msg.value / 10^12 <= stor12[stor[_6155]]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                stor15[address(msg.sender)] = 0
                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                    if not stor15[address(msg.sender)]:
                                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                            stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                            stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                            uint8(stor23[address(msg.sender)]) = 0
                                                            stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                                totalSupply += msg.value / 2 * 10^13
                                else:
                                    if stor6 != stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                                        if not stor[_6155]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                if msg.value / 10^12 <= stor12[stor[_6155]]:
                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                    if not stor16[address(msg.sender)]:
                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                else:
                                                    stor15[address(msg.sender)] = 0
                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                        if not stor15[address(msg.sender)]:
                                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                uint8(stor23[address(msg.sender)]) = 0
                                                                stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                    balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                                    totalSupply += msg.value / 2 * 10^13
                                    else:
                                        if stor[_6155] != stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                            stor18[address(msg.sender)] = msg.sender
                                            stor17[address(msg.sender)] = msg.sender
                                            stor16[address(msg.sender)] = msg.sender
                                            stor15[address(msg.sender)] = stor6
                                            stor19[address(msg.sender)] += msg.value / 10^12
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor22[address(msg.sender)] = 1
                                        else:
                                            if not stor[_6155]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                    if not stor16[address(msg.sender)]:
                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                else:
                                                    if msg.value / 10^12 <= stor12[stor[_6155]]:
                                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                                        if not stor16[address(msg.sender)]:
                                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                                    else:
                                                        stor15[address(msg.sender)] = 0
                                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                            if not stor15[address(msg.sender)]:
                                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                    stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                    stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    uint8(stor23[address(msg.sender)]) = 0
                                                                    stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                    stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                    stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                                        totalSupply += msg.value / 2 * 10^13
                            else:
                                if stor5 != stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                                    if stor6 != stor11[stor[_6155]]:
                                        if not stor[_6155]:
                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                            if not stor16[address(msg.sender)]:
                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                        else:
                                            if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                if msg.value / 10^12 <= stor12[stor[_6155]]:
                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                    if not stor16[address(msg.sender)]:
                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                else:
                                                    stor15[address(msg.sender)] = 0
                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                        if not stor15[address(msg.sender)]:
                                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                uint8(stor23[address(msg.sender)]) = 0
                                                                stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                    balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                                    totalSupply += msg.value / 2 * 10^13
                                    else:
                                        if stor6 != stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                                            if not stor[_6155]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                    if not stor16[address(msg.sender)]:
                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                else:
                                                    if msg.value / 10^12 <= stor12[stor[_6155]]:
                                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                                        if not stor16[address(msg.sender)]:
                                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                                    else:
                                                        stor15[address(msg.sender)] = 0
                                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                            if not stor15[address(msg.sender)]:
                                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                    stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                    stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    uint8(stor23[address(msg.sender)]) = 0
                                                                    stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                    stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                    stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                                        totalSupply += msg.value / 2 * 10^13
                                        else:
                                            if stor[_6155] != stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                stor18[address(msg.sender)] = msg.sender
                                                stor17[address(msg.sender)] = msg.sender
                                                stor16[address(msg.sender)] = msg.sender
                                                stor15[address(msg.sender)] = stor6
                                                stor19[address(msg.sender)] += msg.value / 10^12
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor22[address(msg.sender)] = 1
                                            else:
                                                if not stor[_6155]:
                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                    if not stor16[address(msg.sender)]:
                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                else:
                                                    if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                                        if not stor16[address(msg.sender)]:
                                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                                    else:
                                                        if msg.value / 10^12 <= stor12[stor[_6155]]:
                                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                                            if not stor16[address(msg.sender)]:
                                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                                        else:
                                                            stor15[address(msg.sender)] = 0
                                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                                if not stor15[address(msg.sender)]:
                                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                        stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                        stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                        stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                        stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                        stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                        uint8(stor23[address(msg.sender)]) = 0
                                                                        stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                        stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                        stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                                            totalSupply += msg.value / 2 * 10^13
                                else:
                                    if stor[_6155] == stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                        if stor6 != stor11[stor[_6155]]:
                                            if not stor[_6155]:
                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                if not stor16[address(msg.sender)]:
                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                            else:
                                                if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                    if not stor16[address(msg.sender)]:
                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                else:
                                                    if msg.value / 10^12 <= stor12[stor[_6155]]:
                                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                                        if not stor16[address(msg.sender)]:
                                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                                    else:
                                                        stor15[address(msg.sender)] = 0
                                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                            if not stor15[address(msg.sender)]:
                                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                    stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                    stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                    uint8(stor23[address(msg.sender)]) = 0
                                                                    stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                    stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                    stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                        balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                                        totalSupply += msg.value / 2 * 10^13
                                        else:
                                            if stor6 != stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                                                if not stor[_6155]:
                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                    if not stor16[address(msg.sender)]:
                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                else:
                                                    if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                                        if not stor16[address(msg.sender)]:
                                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                                    else:
                                                        if msg.value / 10^12 <= stor12[stor[_6155]]:
                                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                                            if not stor16[address(msg.sender)]:
                                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                                        else:
                                                            stor15[address(msg.sender)] = 0
                                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                                if not stor15[address(msg.sender)]:
                                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                        stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                        stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                        stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                        stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                        stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                        uint8(stor23[address(msg.sender)]) = 0
                                                                        stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                        stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                        stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                                            totalSupply += msg.value / 2 * 10^13
                                            else:
                                                if stor[_6155] != stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                    stor18[address(msg.sender)] = msg.sender
                                                    stor17[address(msg.sender)] = msg.sender
                                                    stor16[address(msg.sender)] = msg.sender
                                                    stor15[address(msg.sender)] = stor6
                                                    stor19[address(msg.sender)] += msg.value / 10^12
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor22[address(msg.sender)] = 1
                                                else:
                                                    if not stor[_6155]:
                                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                                        if not stor16[address(msg.sender)]:
                                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                                    else:
                                                        if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                                            if not stor16[address(msg.sender)]:
                                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                                        else:
                                                            if msg.value / 10^12 <= stor12[stor[_6155]]:
                                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                                if not stor16[address(msg.sender)]:
                                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                                            else:
                                                                stor15[address(msg.sender)] = 0
                                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                                    if not stor15[address(msg.sender)]:
                                                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                            stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                            stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                            stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                            stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                            stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                            uint8(stor23[address(msg.sender)]) = 0
                                                                            stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                            stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                            stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                                                totalSupply += msg.value / 2 * 10^13
                                    else:
                                        if stor12[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] <= 1250:
                                            balanceOf[address(msg.sender)] += msg.value / 10^12 * stor12[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 100
                                            totalSupply += 125 * msg.value / 10^12 / 10
                                        else:
                                            if stor6 != stor11[stor[_6155]]:
                                                if not stor[_6155]:
                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                    if not stor16[address(msg.sender)]:
                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                else:
                                                    if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                                        if not stor16[address(msg.sender)]:
                                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                                    else:
                                                        if msg.value / 10^12 <= stor12[stor[_6155]]:
                                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                                            if not stor16[address(msg.sender)]:
                                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                                        else:
                                                            stor15[address(msg.sender)] = 0
                                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                                if not stor15[address(msg.sender)]:
                                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                        stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                        stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                        stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                        stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                        stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                        uint8(stor23[address(msg.sender)]) = 0
                                                                        stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                        stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                        stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                            balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                                            totalSupply += msg.value / 2 * 10^13
                                            else:
                                                if stor6 != stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]:
                                                    if not stor[_6155]:
                                                        stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                        stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                        stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                        stor15[address(msg.sender)] = address(stor7.field_0)
                                                        if not stor16[address(msg.sender)]:
                                                            stor18[address(msg.sender)] = address(stor7.field_0)
                                                            stor17[address(msg.sender)] = address(stor7.field_0)
                                                            stor16[address(msg.sender)] = address(stor7.field_0)
                                                    else:
                                                        if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                                            if not stor16[address(msg.sender)]:
                                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                                        else:
                                                            if msg.value / 10^12 <= stor12[stor[_6155]]:
                                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                                if not stor16[address(msg.sender)]:
                                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                                            else:
                                                                stor15[address(msg.sender)] = 0
                                                                if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                                    if not stor15[address(msg.sender)]:
                                                                        if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                            stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                            stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                            stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                            stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                            stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                            uint8(stor23[address(msg.sender)]) = 0
                                                                            stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                            stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                            stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                                                totalSupply += msg.value / 2 * 10^13
                                                else:
                                                    if stor[_6155] != stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                        stor18[address(msg.sender)] = msg.sender
                                                        stor17[address(msg.sender)] = msg.sender
                                                        stor16[address(msg.sender)] = msg.sender
                                                        stor15[address(msg.sender)] = stor6
                                                        stor19[address(msg.sender)] += msg.value / 10^12
                                                        stor20[address(msg.sender)] += msg.value / 10^12 / 10
                                                        stor21[address(msg.sender)] += msg.value / 10^12 / 100
                                                        stor22[address(msg.sender)] = 1
                                                    else:
                                                        if not stor[_6155]:
                                                            stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                            stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                            stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                            stor15[address(msg.sender)] = address(stor7.field_0)
                                                            if not stor16[address(msg.sender)]:
                                                                stor18[address(msg.sender)] = address(stor7.field_0)
                                                                stor17[address(msg.sender)] = address(stor7.field_0)
                                                                stor16[address(msg.sender)] = address(stor7.field_0)
                                                        else:
                                                            if not stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                                stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                                stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                                stor15[address(msg.sender)] = address(stor7.field_0)
                                                                if not stor16[address(msg.sender)]:
                                                                    stor18[address(msg.sender)] = address(stor7.field_0)
                                                                    stor17[address(msg.sender)] = address(stor7.field_0)
                                                                    stor16[address(msg.sender)] = address(stor7.field_0)
                                                            else:
                                                                if msg.value / 10^12 <= stor12[stor[_6155]]:
                                                                    stor19[address(msg.sender)] += msg.value / 10^12 / 10
                                                                    stor20[address(msg.sender)] += msg.value / 10^12 / 100
                                                                    stor21[address(msg.sender)] += msg.value / 10^12 / 1000
                                                                    stor15[address(msg.sender)] = address(stor7.field_0)
                                                                    if not stor16[address(msg.sender)]:
                                                                        stor18[address(msg.sender)] = address(stor7.field_0)
                                                                        stor17[address(msg.sender)] = address(stor7.field_0)
                                                                        stor16[address(msg.sender)] = address(stor7.field_0)
                                                                else:
                                                                    stor15[address(msg.sender)] = 0
                                                                    if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]] != msg.sender:
                                                                        if not stor15[address(msg.sender)]:
                                                                            if stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]:
                                                                                stor15[address(msg.sender)] = stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]
                                                                                stor16[msg.sender] = stor16[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                                stor17[msg.sender] = stor17[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                                stor18[msg.sender] = stor18[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                                stor11[msg.sender] = stor11[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]]
                                                                                uint8(stor23[address(msg.sender)]) = 0
                                                                                stor19[address(msg.sender)] += stor19[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                                stor20[address(msg.sender)] += stor20[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                                stor21[address(msg.sender)] += stor21[stor[mem[ceil32(arg1.length) + ceil32(arg2.length) + floor32(arg2.length) + 160 len (arg2.length % 32) + 32]][call.data[arg2 + 36 len floor32(arg2.length)]]] / 10
                                                                    balanceOf[stor[_6155]] += msg.value / 2 * 10^13
                                                                    totalSupply += msg.value / 2 * 10^13
}



}
