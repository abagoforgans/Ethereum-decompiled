contract main {




// =====================  Runtime code  =====================


const name = 'One Crypto World'

const decimals = 0

const memo = Array(len=772, data=0x496e74726f647563696e67204f6e652043727970746f20576f726c6420284f4357290a204120626c6f636b636861696e2069732061206c65646765722073686f77696e6720746865207175616e74697479206f6620736f6d657468696e6720636f6e74726f6c6c6564206279206120757365722e20497420656e61626c6573206f6e6520746f207472616e7366657220636f6e74726f6c206f662074686174206469676974616c20726570726573656e746174696f6e20746f20736f6d656f6e6520656c73652e0a4f6e652043727970746f20576f726c6420284f435729206973206372656174656420616e642064657369676e65642062792054616977616e6573652043727970746f20436f6e67726573736d616e204a61736f6e204873752c2077686f2069732064726976696e6720666f7220696e6e6f76617469766520706f6c696369657320696e2063727970746f20616e6420626c6f636b636861696e2e2049742077696c6c2062652064657369676e65642061732061207574696c69747920746f6b656e20776974686f757420746865206e6174757265206f6620736563757269746965732e204f43572077696c6c206e6f7420676f206f6e2065786368616e67653b2075736572732077696c6c206e6f742062652061626c6520746f206d616b6520616e79206469726563742070726f666974207468726f756768204f43572e0a4f6e652043727970746f20576f726c6420697320612050726f6f66206f6620537570706f727428504f53292e20546865204f435720636f696e2077696c6c206f6e6c7920626520646973747269627574656420746f20676c6f62616c204b6579204f70696e696f6e204c65616465727320284b4f4c73292c207768696368206d616b6573206974206578636c75736976652e0a4279207573696e67204f435720636f696e732c2065616368204b4f4c2063616e20636f6e747269627574652074686569722076616c7561626c65206f70696e696f6e20746f207468652043727970746f20436f6e67726573736d616ee280997320706f6c696369657300, mem[900 len 28] >> 5888, mem[924 len 4])

const symbol = 'OCW'


mapping of struct stor0;
mapping of uint256 balanceOf;
mapping of uint256 stor2;
uint256 totalSupply;
uint256 totalMarks;

function totalSupply() {
    return totalSupply
}

function totalMarks() {
    return totalMarks
}

function balanceOf(address arg1) {
    return balanceOf[address(arg1)]
}

function _fallback() {
    require stor2[address(msg.sender)] + 1 <= balanceOf[address(msg.sender)]
    totalMarks++
    stor2[address(msg.sender)]++
    stor0[stor4].field_0 = msg.sender
    stor0[stor4][1][].field_0 = Array(len=calldata.size, data=call.data[0 len calldata.size])
}

function transfer(address arg1, uint256 arg2) {
    require arg2 + stor2[address(msg.sender)] <= balanceOf[address(msg.sender)]
    require arg2 <= balanceOf[address(msg.sender)]
    require arg2
    require arg1
    balanceOf[address(msg.sender)] -= arg2
    balanceOf[address(arg1)] += arg2
    emit Transfer(arg2, msg.sender, arg1);
    return 1
}

function marks(uint256 arg1) {
    mem[128] = stor0[arg1][1].field_0
    idx = 128
    s = 0
    while stor0[arg1][1].length + 96 > idx:
        mem[idx + 32] = stor0[arg1][s + 1].field_256
        idx = idx + 32
        s = s + 1
        continue 
    return stor0[arg1].field_0, Array(len=stor0[arg1][1].length, data=mem[128 len stor0[arg1][1].length])
}



}
