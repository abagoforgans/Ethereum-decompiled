contract main {




// =====================  Runtime code  =====================


#
#  - sub_79107e5c(?)
#
array of struct stor0;
uint256 stor3;
uint256 defaultAmount;

function defaultAmount() {
    return defaultAmount
}

function _fallback() payable {
  stop
}

function setGasLimit(uint256 arg1) {
    require msg.sender == 0xdead1241f2ee2a7950ad967993efb72d62bf6822
    stor3 = arg1
}

function getGasPrice() {
    require ext_code.size(0x607a5c47978e2eb6d59c6c6f51bc0bf411f4b85a)
    call 0x607a5c47978e2eb6d59c6c6f51bc0bf411f4b85a.gasPrice() with:
         gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return ext_call.return_data[0]
}

function sub_2a1fa30d(?) {
    mem[128 len 32 * arg1.length] = call.data[arg1 + 36 len 32 * arg1.length]
    require 0 < arg1.length
    require 1 < arg1.length
    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
         gas gas_remaining wei
        args address(mem[128]), address(mem[160]), arg3
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    mem[(32 * arg1.length) + 260 len floor32(arg1.length)] = call.data[arg1 + 36 len floor32(arg1.length)]
    require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
    call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0xcf93ebe3 with:
         gas gas_remaining wei
        args Array(len=arg1.length, data=call.data[arg1 + 36 len floor32(arg1.length)], mem[(32 * arg1.length) + floor32(arg1.length) + 260 len (32 * arg1.length) - floor32(arg1.length)]), address(arg2), ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return ext_call.return_data[0]
}

function sub_e1089425(?) {
    mem[128 len 32 * arg1.length] = call.data[arg1 + 36 len 32 * arg1.length]
    require 0 < arg1.length
    require ext_code.size(mem[140 len 20])
    call mem[140 len 20].0x313ce567 with:
         gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require 10^(-ext_call.return_data[0] + 18)
    mem[(32 * arg1.length) + 164] = arg2
    mem[(32 * arg1.length) + 196] = arg3 / 10^(-ext_call.return_data[0] + 18)
    mem[(32 * arg1.length) + 132] = 96
    mem[(32 * arg1.length) + 228] = arg1.length
    mem[(32 * arg1.length) + 260 len floor32(arg1.length)] = call.data[arg1 + 36 len floor32(arg1.length)]
    require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
    call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
         gas gas_remaining wei
        args Array(len=arg1.length, data=call.data[arg1 + 36 len floor32(arg1.length)], mem[(32 * arg1.length) + floor32(arg1.length) + 260 len (32 * arg1.length) - floor32(arg1.length)]), address(arg2), arg3 / 10^(-ext_call.return_data[0] + 18)
    mem[(32 * arg1.length) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require 2 < arg1.length
    require 4 < arg1.length
    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
         gas gas_remaining wei
        args address(mem[192]), address(mem[256]), ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    require arg3
    require 10^18 * ext_call.return_data[0] / arg3
    return (10^18 * arg4 / 10^18 * ext_call.return_data[0] / arg3)
}

function sub_7f520499(?) {
    mem[128 len 32 * arg1.length] = call.data[arg1 + 36 len 32 * arg1.length]
    require 4 < arg1.length
    require ext_code.size(mem[268 len 20])
    call mem[268 len 20].0x313ce567 with:
         gas gas_remaining wei
    mem[(32 * arg1.length) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require 0 < arg1.length
    require 1 < arg1.length
    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
         gas gas_remaining wei
        args address(mem[128]), address(mem[160]), arg3
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    mem[(32 * arg1.length) + 164] = arg2
    mem[(32 * arg1.length) + 196] = ext_call.return_data[0]
    mem[(32 * arg1.length) + 132] = 96
    mem[(32 * arg1.length) + 228] = arg1.length
    mem[(32 * arg1.length) + 260 len floor32(arg1.length)] = call.data[arg1 + 36 len floor32(arg1.length)]
    require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
    call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0xcf93ebe3 with:
         gas gas_remaining wei
        args Array(len=arg1.length, data=call.data[arg1 + 36 len floor32(arg1.length)], mem[(32 * arg1.length) + floor32(arg1.length) + 260 len (32 * arg1.length) - floor32(arg1.length)]), address(arg2), ext_call.return_data[0]
    mem[(32 * arg1.length) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require 4 < arg1.length
    require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
    call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
         gas gas_remaining wei
        args address(mem[256]), 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    require ext_call.return_data[0]
    return ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18), 10^18 * arg3 / ext_call.return_data[0]
}

function sub_03b6d838(?) {
    mem[128 len 32 * arg3.length] = call.data[arg3 + 36 len 32 * arg3.length]
    require 4 < arg3.length
    require ext_code.size(mem[268 len 20])
    call mem[268 len 20].0x313ce567 with:
         gas gas_remaining wei
    mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require 0 < arg3.length
    require 1 < arg3.length
    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
         gas gas_remaining wei
        args address(mem[128]), address(mem[160]), arg1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    mem[(32 * arg3.length) + 164] = arg4
    mem[(32 * arg3.length) + 196] = ext_call.return_data[0]
    mem[(32 * arg3.length) + 132] = 96
    mem[(32 * arg3.length) + 228] = arg3.length
    mem[(32 * arg3.length) + 260 len floor32(arg3.length)] = call.data[arg3 + 36 len floor32(arg3.length)]
    require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
    call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0xcf93ebe3 with:
         gas gas_remaining wei
        args Array(len=arg3.length, data=call.data[arg3 + 36 len floor32(arg3.length)], mem[(32 * arg3.length) + floor32(arg3.length) + 260 len (32 * arg3.length) - floor32(arg3.length)]), address(arg4), ext_call.return_data[0]
    mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require 4 < arg3.length
    require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
    call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
         gas gas_remaining wei
        args address(mem[256]), 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    require ext_call.return_data[0]
    if 10^18 * arg1 / ext_call.return_data[0] >= ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18):
        return 0, 0, 1
    require 10 * arg2
    return arg1, 
           (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * arg1 / ext_call.return_data[0]) / 10 * arg2,
           0
}

function sub_03a69b66(?) {
    mem[128 len 32 * arg1.length] = call.data[arg1 + 36 len 32 * arg1.length]
    require 0 < arg1.length
    require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
    call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
         gas gas_remaining wei
        args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[128]), arg3
    mem[(32 * arg1.length) + 128 len 64] = ext_call.return_data[0 len 64]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    require 0 < arg1.length
    require ext_code.size(mem[140 len 20])
    call mem[140 len 20].0x313ce567 with:
         gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require 10^(-ext_call.return_data[0] + 18)
    mem[(32 * arg1.length) + 164] = arg2
    mem[(32 * arg1.length) + 196] = ext_call.return_data[0] * arg3 / 10^18 / 10^(-ext_call.return_data[0] + 18)
    mem[(32 * arg1.length) + 132] = 96
    mem[(32 * arg1.length) + 228] = arg1.length
    mem[(32 * arg1.length) + 260 len floor32(arg1.length)] = call.data[arg1 + 36 len floor32(arg1.length)]
    require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
    call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
         gas gas_remaining wei
        args Array(len=arg1.length, data=call.data[arg1 + 36 len floor32(arg1.length)], mem[(32 * arg1.length) + floor32(arg1.length) + 260 len (32 * arg1.length) - floor32(arg1.length)]), address(arg2), ext_call.return_data[0] * arg3 / 10^18 / 10^(-ext_call.return_data[0] + 18)
    mem[(32 * arg1.length) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require 2 < arg1.length
    require 4 < arg1.length
    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
         gas gas_remaining wei
        args address(mem[192]), address(mem[256]), ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    require ext_call.return_data[0] * arg3 / 10^18
    require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * arg3 / 10^18
    return 10^18 * arg3 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * arg3 / 10^18, 
           ext_call.return_data[0] * arg3 / 10^18
}

function sub_3755ca02(?) {
    mem[128 len 32 * arg3.length] = call.data[arg3 + 36 len 32 * arg3.length]
    require 0 < arg3.length
    require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
    call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
         gas gas_remaining wei
        args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[128]), arg1
    mem[(32 * arg3.length) + 128 len 64] = ext_call.return_data[0 len 64]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    require 0 < arg3.length
    require ext_code.size(mem[140 len 20])
    call mem[140 len 20].0x313ce567 with:
         gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require 10^(-ext_call.return_data[0] + 18)
    mem[(32 * arg3.length) + 164] = arg4
    mem[(32 * arg3.length) + 196] = ext_call.return_data[0] * arg1 / 10^18 / 10^(-ext_call.return_data[0] + 18)
    mem[(32 * arg3.length) + 132] = 96
    mem[(32 * arg3.length) + 228] = arg3.length
    mem[(32 * arg3.length) + 260 len floor32(arg3.length)] = call.data[arg3 + 36 len floor32(arg3.length)]
    require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
    call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
         gas gas_remaining wei
        args Array(len=arg3.length, data=call.data[arg3 + 36 len floor32(arg3.length)], mem[(32 * arg3.length) + floor32(arg3.length) + 260 len (32 * arg3.length) - floor32(arg3.length)]), address(arg4), ext_call.return_data[0] * arg1 / 10^18 / 10^(-ext_call.return_data[0] + 18)
    mem[(32 * arg3.length) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require 2 < arg3.length
    require 4 < arg3.length
    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
         gas gas_remaining wei
        args address(mem[192]), address(mem[256]), ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    require ext_call.return_data[0] * arg1 / 10^18
    require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * arg1 / 10^18
    if ext_call.return_data[0] * arg1 / 10^18 <= 10^18 * arg1 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * arg1 / 10^18:
        return 0, 2, 1
    require 10 * arg2
    return arg1, 
           (10^18 * ext_call.return_data[0] * arg1 / 10^18) - (10^18 * 10^18 * arg1 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * arg1 / 10^18) / 10 * arg2,
           0
}

function sub_7086e7a4(?) {
    mem[64] = (32 * arg1.length) + 128
    mem[96] = arg1.length
    mem[128 len 32 * arg1.length] = call.data[arg1 + 36 len 32 * arg1.length]
    require 4 < arg1.length
    require ext_code.size(mem[268 len 20])
    call mem[268 len 20].0x313ce567 with:
         gas gas_remaining wei
    mem[(32 * arg1.length) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require 0 < arg1.length
    require 1 < arg1.length
    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
         gas gas_remaining wei
        args address(mem[128]), address(mem[160]), defaultAmount
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    mem[(32 * arg1.length) + 164] = arg2
    mem[(32 * arg1.length) + 196] = ext_call.return_data[0]
    mem[(32 * arg1.length) + 132] = 96
    mem[(32 * arg1.length) + 228] = arg1.length
    mem[(32 * arg1.length) + 260 len floor32(arg1.length)] = call.data[arg1 + 36 len floor32(arg1.length)]
    require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
    call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0xcf93ebe3 with:
         gas gas_remaining wei
        args Array(len=arg1.length, data=call.data[arg1 + 36 len floor32(arg1.length)], mem[(32 * arg1.length) + floor32(arg1.length) + 260 len (32 * arg1.length) - floor32(arg1.length)]), address(arg2), ext_call.return_data[0]
    mem[(32 * arg1.length) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require 4 < arg1.length
    _603 = mem[256]
    mem[(32 * arg1.length) + 164] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
    mem[(32 * arg1.length) + 196] = ext_call.return_data[0]
    require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
    call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
         gas gas_remaining wei
        args address(_603), 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
    mem[(32 * arg1.length) + 128 len 64] = ext_call.return_data[0 len 64]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    require ext_call.return_data[0]
    require 4 < arg1.length
    require ext_code.size(mem[268 len 20])
    call mem[268 len 20].0x313ce567 with:
         gas gas_remaining wei
    mem[(32 * arg1.length) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require 0 < arg1.length
    require 1 < arg1.length
    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
         gas gas_remaining wei
        args address(mem[128]), address(mem[160]), 2 * defaultAmount
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    mem[(32 * arg1.length) + 164] = arg2
    mem[(32 * arg1.length) + 196] = ext_call.return_data[0]
    mem[(32 * arg1.length) + 132] = 96
    mem[(32 * arg1.length) + 228] = arg1.length
    mem[(32 * arg1.length) + 260 len floor32(arg1.length)] = call.data[arg1 + 36 len floor32(arg1.length)]
    require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
    call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0xcf93ebe3 with:
         gas gas_remaining wei
        args Array(len=arg1.length, data=call.data[arg1 + 36 len floor32(arg1.length)], mem[(32 * arg1.length) + floor32(arg1.length) + 260 len (32 * arg1.length) - floor32(arg1.length)]), address(arg2), ext_call.return_data[0]
    mem[(32 * arg1.length) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require 4 < arg1.length
    _1181 = mem[256]
    mem[(32 * arg1.length) + 164] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
    mem[(32 * arg1.length) + 196] = ext_call.return_data[0]
    require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
    call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
         gas gas_remaining wei
        args address(_1181), 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
    mem[(32 * arg1.length) + 128 len 64] = ext_call.return_data[0 len 64]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    require ext_call.return_data[0]
    require (4 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) - (2 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0])
    require 4 < arg1.length
    require ext_code.size(mem[268 len 20])
    call mem[268 len 20].0x313ce567 with:
         gas gas_remaining wei
    mem[(32 * arg1.length) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require 0 < arg1.length
    require 1 < arg1.length
    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
         gas gas_remaining wei
        args address(mem[128]), address(mem[160]), (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * defaultAmount / ext_call.return_data[0] * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) / (4 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) - (2 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) / 10
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    mem[(32 * arg1.length) + 164] = arg2
    mem[(32 * arg1.length) + 196] = ext_call.return_data[0]
    mem[(32 * arg1.length) + 132] = 96
    mem[(32 * arg1.length) + 228] = arg1.length
    mem[(32 * arg1.length) + 260 len floor32(arg1.length)] = call.data[arg1 + 36 len floor32(arg1.length)]
    require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
    call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0xcf93ebe3 with:
         gas gas_remaining wei
        args Array(len=arg1.length, data=call.data[arg1 + 36 len floor32(arg1.length)], mem[(32 * arg1.length) + floor32(arg1.length) + 260 len (32 * arg1.length) - floor32(arg1.length)]), address(arg2), ext_call.return_data[0]
    mem[(32 * arg1.length) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require 4 < arg1.length
    _1730 = mem[256]
    mem[(32 * arg1.length) + 164] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
    mem[(32 * arg1.length) + 196] = ext_call.return_data[0]
    require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
    call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
         gas gas_remaining wei
        args address(_1730), 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
    mem[(32 * arg1.length) + 128 len 64] = ext_call.return_data[0 len 64]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    require ext_call.return_data[0]
    if 10^18 * (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * defaultAmount / ext_call.return_data[0] * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) / (4 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) - (2 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) / 10 / ext_call.return_data[0] >= ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18):
        require 4 < arg1.length
        require ext_code.size(mem[268 len 20])
        call mem[268 len 20].0x313ce567 with:
             gas gas_remaining wei
        mem[(32 * arg1.length) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 0 < arg1.length
        require 1 < arg1.length
        require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
        call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args address(mem[128]), address(mem[160]), 11 * (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * defaultAmount / ext_call.return_data[0] * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) / (4 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) - (2 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) / 10 / 10
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 64
        mem[(32 * arg1.length) + 164] = arg2
        mem[(32 * arg1.length) + 196] = ext_call.return_data[0]
        mem[(32 * arg1.length) + 132] = 96
        mem[(32 * arg1.length) + 228] = arg1.length
        mem[(32 * arg1.length) + 260 len floor32(arg1.length)] = call.data[arg1 + 36 len floor32(arg1.length)]
        require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
        call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0xcf93ebe3 with:
             gas gas_remaining wei
            args Array(len=arg1.length, data=call.data[arg1 + 36 len floor32(arg1.length)], mem[(32 * arg1.length) + floor32(arg1.length) + 260 len (32 * arg1.length) - floor32(arg1.length)]), address(arg2), ext_call.return_data[0]
        mem[(32 * arg1.length) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 4 < arg1.length
        _2255 = mem[256]
        mem[(32 * arg1.length) + 164] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
        mem[(32 * arg1.length) + 196] = ext_call.return_data[0]
        require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
        call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args address(_2255), 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
        mem[(32 * arg1.length) + 128 len 64] = ext_call.return_data[0 len 64]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 64
        require ext_call.return_data[0]
        if 10^18 * 11 * (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * defaultAmount / ext_call.return_data[0] * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) / (4 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) - (2 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) / 10 / 10 / ext_call.return_data[0] >= ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18):
            require 4 < arg1.length
            require ext_code.size(mem[268 len 20])
            call mem[268 len 20].0x313ce567 with:
                 gas gas_remaining wei
            mem[(32 * arg1.length) + 128] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 0 < arg1.length
            require 1 < arg1.length
            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(mem[128]), address(mem[160]), 9 * (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * defaultAmount / ext_call.return_data[0] * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) / (4 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) - (2 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) / 10 / 10
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            mem[(32 * arg1.length) + 164] = arg2
            mem[(32 * arg1.length) + 196] = ext_call.return_data[0]
            mem[(32 * arg1.length) + 132] = 96
            mem[(32 * arg1.length) + 228] = arg1.length
            mem[(32 * arg1.length) + 260 len floor32(arg1.length)] = call.data[arg1 + 36 len floor32(arg1.length)]
            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0xcf93ebe3 with:
                 gas gas_remaining wei
                args Array(len=arg1.length, data=call.data[arg1 + 36 len floor32(arg1.length)], mem[(32 * arg1.length) + floor32(arg1.length) + 260 len (32 * arg1.length) - floor32(arg1.length)]), address(arg2), ext_call.return_data[0]
            mem[(32 * arg1.length) + 128] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 4 < arg1.length
            _2738 = mem[256]
            mem[(32 * arg1.length) + 164] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
            mem[(32 * arg1.length) + 196] = ext_call.return_data[0]
            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(_2738), 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
            mem[(32 * arg1.length) + 128 len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require ext_call.return_data[0]
            if 10^18 * 9 * (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * defaultAmount / ext_call.return_data[0] * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) / (4 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) - (2 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) / 10 / 10 / ext_call.return_data[0] >= ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18):
                return ((10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * defaultAmount / ext_call.return_data[0] * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) / (4 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) - (2 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) / 10)
            require 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)
            s = 9
            t = (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * 9 * (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * defaultAmount / ext_call.return_data[0] * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) / (4 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) - (2 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) / 10 / 10 / mem[(32 * arg1.length) + 128]) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)
            u = 0
            v = (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * defaultAmount / ext_call.return_data[0] * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) / (4 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) - (2 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) / 10
            while t > u:
                require 4 < mem[96]
                require ext_code.size(mem[268 len 20])
                call mem[268 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * arg1.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 0 < mem[96]
                require 1 < mem[96]
                _3210 = mem[160]
                mem[(32 * arg1.length) + 132] = mem[140 len 20]
                require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg1.length) + 132], address(_3210), -(v * s / 10) + (s * v * s / 10) / 10
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                mem[(32 * arg1.length) + 128] = 0xcf93ebe300000000000000000000000000000000000000000000000000000000
                mem[(32 * arg1.length) + 164] = arg2
                mem[(32 * arg1.length) + 196] = ext_call.return_data[0]
                mem[(32 * arg1.length) + 132] = 96
                mem[(32 * arg1.length) + 228] = mem[96]
                idx = 0
                while idx < 32 * mem[96]:
                    mem[mem[64] + idx + 132] = mem[idx + 128]
                    idx = idx + 32
                    continue 
                require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len (32 * mem[96]) + (32 * arg1.length) + -mem[64] + 256]
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if 4 < mem[96]:
                    mem[mem[64] + 4] = mem[268 len 20]
                    mem[mem[64] + 36] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
                    mem[mem[64] + 68] = ext_call.return_data[0]
                    require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                    call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4], 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    if ext_call.return_data[0]:
                        if 10^18 * -(v * s / 10) + (s * v * s / 10) / 10 / ext_call.return_data[0] >= ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18):
                            s = s - 1
                            t = 0
                            u = t
                            v = v * s / 10
                            continue 
                        if 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18):
                            s = s - 1
                            t = (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * -(v * s / 10) + (s * v * s / 10) / 10 / ext_call.return_data[0]) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)
                            u = t
                            v = v * s / 10
                            continue 
                revert
            return v
        require 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)
        require 4 < arg1.length
        require ext_code.size(mem[268 len 20])
        call mem[268 len 20].0x313ce567 with:
             gas gas_remaining wei
        mem[(32 * arg1.length) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 0 < arg1.length
        require 1 < arg1.length
        require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
        call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args address(mem[128]), address(mem[160]), 9 * (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * defaultAmount / ext_call.return_data[0] * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) / (4 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) - (2 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) / 10 / 10
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 64
        mem[(32 * arg1.length) + 164] = arg2
        mem[(32 * arg1.length) + 196] = ext_call.return_data[0]
        mem[(32 * arg1.length) + 132] = 96
        mem[(32 * arg1.length) + 228] = arg1.length
        mem[(32 * arg1.length) + 260 len floor32(arg1.length)] = call.data[arg1 + 36 len floor32(arg1.length)]
        require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
        call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0xcf93ebe3 with:
             gas gas_remaining wei
            args Array(len=arg1.length, data=call.data[arg1 + 36 len floor32(arg1.length)], mem[(32 * arg1.length) + floor32(arg1.length) + 260 len (32 * arg1.length) - floor32(arg1.length)]), address(arg2), ext_call.return_data[0]
        mem[(32 * arg1.length) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 4 < arg1.length
        _2741 = mem[256]
        mem[(32 * arg1.length) + 164] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
        mem[(32 * arg1.length) + 196] = ext_call.return_data[0]
        require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
        call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args address(_2741), 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
        mem[(32 * arg1.length) + 128 len 64] = ext_call.return_data[0 len 64]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 64
        require ext_call.return_data[0]
        if 10^18 * 9 * (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * defaultAmount / ext_call.return_data[0] * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) / (4 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) - (2 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) / 10 / 10 / ext_call.return_data[0] >= ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18):
            s = 11
            t = (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * 11 * (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * defaultAmount / ext_call.return_data[0] * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) / (4 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) - (2 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) / 10 / 10 / ext_call.return_data[0]) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)
            u = 0
            v = (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * defaultAmount / ext_call.return_data[0] * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) / (4 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) - (2 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) / 10
            while t > u:
                require 4 < mem[96]
                require ext_code.size(mem[268 len 20])
                call mem[268 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 0 < mem[96]
                require 1 < mem[96]
                _3214 = mem[160]
                mem[mem[64] + 4] = mem[140 len 20]
                require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4], address(_3214), (v * s / 10) + (s * v * s / 10) / 10
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                _3281 = mem[64]
                mem[mem[64]] = 0xcf93ebe300000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 36] = arg2
                mem[mem[64] + 68] = ext_call.return_data[0]
                mem[mem[64] + 4] = 96
                mem[mem[64] + 100] = mem[96]
                idx = 0
                while idx < 32 * mem[96]:
                    mem[mem[64] + idx + 132] = mem[idx + 128]
                    idx = idx + 32
                    continue 
                require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len (32 * mem[96]) + _3281 + -mem[64] + 128]
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if 4 < mem[96]:
                    mem[mem[64] + 4] = mem[268 len 20]
                    mem[mem[64] + 36] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
                    mem[mem[64] + 68] = ext_call.return_data[0]
                    require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                    call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4], 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    if ext_call.return_data[0]:
                        if 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / ext_call.return_data[0] >= ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18):
                            s = s + 1
                            t = 0
                            u = t
                            v = v * s / 10
                            continue 
                        if 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18):
                            s = s + 1
                            t = (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / ext_call.return_data[0]) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)
                            u = t
                            v = v * s / 10
                            continue 
                revert
            s = 9
            t = 0
            w = u
            x = v
            while t > w:
                require 4 < mem[96]
                require ext_code.size(mem[268 len 20])
                call mem[268 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 0 < mem[96]
                require 1 < mem[96]
                _3631 = mem[160]
                mem[mem[64] + 4] = mem[140 len 20]
                require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4], address(_3631), -(x * s / 10) + (s * x * s / 10) / 10
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                _3657 = mem[64]
                mem[mem[64]] = 0xcf93ebe300000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 36] = arg2
                mem[mem[64] + 68] = ext_call.return_data[0]
                mem[mem[64] + 4] = 96
                mem[mem[64] + 100] = mem[96]
                idx = 0
                while idx < 32 * mem[96]:
                    mem[mem[64] + idx + 132] = mem[idx + 128]
                    idx = idx + 32
                    continue 
                require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len (32 * mem[96]) + _3657 + -mem[64] + 128]
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if 4 < mem[96]:
                    mem[mem[64] + 4] = mem[268 len 20]
                    mem[mem[64] + 36] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
                    mem[mem[64] + 68] = ext_call.return_data[0]
                    require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                    call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4], 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    if ext_call.return_data[0]:
                        if 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / ext_call.return_data[0] >= ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18):
                            s = s - 1
                            t = 0
                            w = t
                            x = x * s / 10
                            continue 
                        if 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18):
                            s = s - 1
                            t = (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / ext_call.return_data[0]) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)
                            w = t
                            x = x * s / 10
                            continue 
                revert
        else:
            require 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)
            s = 11
            t = (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * 11 * (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * defaultAmount / ext_call.return_data[0] * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) / (4 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) - (2 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) / 10 / 10 / ext_call.return_data[0]) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)
            u = 0
            v = (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * defaultAmount / ext_call.return_data[0] * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) / (4 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) - (2 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) / 10
            while t > u:
                require 4 < mem[96]
                require ext_code.size(mem[268 len 20])
                call mem[268 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * arg1.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 0 < mem[96]
                require 1 < mem[96]
                _3218 = mem[160]
                mem[(32 * arg1.length) + 132] = mem[140 len 20]
                require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg1.length) + 132], address(_3218), (v * s / 10) + (s * v * s / 10) / 10
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                mem[(32 * arg1.length) + 128] = 0xcf93ebe300000000000000000000000000000000000000000000000000000000
                mem[(32 * arg1.length) + 164] = arg2
                mem[(32 * arg1.length) + 196] = ext_call.return_data[0]
                mem[(32 * arg1.length) + 132] = 96
                mem[(32 * arg1.length) + 228] = mem[96]
                idx = 0
                while idx < 32 * mem[96]:
                    mem[mem[64] + idx + 132] = mem[idx + 128]
                    idx = idx + 32
                    continue 
                require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len (32 * mem[96]) + (32 * arg1.length) + -mem[64] + 256]
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if 4 < mem[96]:
                    mem[mem[64] + 4] = mem[268 len 20]
                    mem[mem[64] + 36] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
                    mem[mem[64] + 68] = ext_call.return_data[0]
                    require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                    call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4], 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    if ext_call.return_data[0]:
                        if 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / ext_call.return_data[0] >= ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18):
                            s = s + 1
                            t = 0
                            u = t
                            v = v * s / 10
                            continue 
                        if 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18):
                            s = s + 1
                            t = (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / ext_call.return_data[0]) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)
                            u = t
                            v = v * s / 10
                            continue 
                revert
            s = 9
            t = (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * 9 * (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * defaultAmount / ext_call.return_data[0] * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) / (4 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) - (2 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) / 10 / 10 / ext_call.return_data[0]) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)
            w = u
            x = v
            while t > w:
                require 4 < mem[96]
                require ext_code.size(mem[268 len 20])
                call mem[268 len 20].0x313ce567 with:
                     gas gas_remaining wei
                mem[(32 * arg1.length) + 128] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 0 < mem[96]
                require 1 < mem[96]
                _3634 = mem[160]
                mem[(32 * arg1.length) + 132] = mem[140 len 20]
                require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(32 * arg1.length) + 132], address(_3634), -(x * s / 10) + (s * x * s / 10) / 10
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                mem[(32 * arg1.length) + 128] = 0xcf93ebe300000000000000000000000000000000000000000000000000000000
                mem[(32 * arg1.length) + 164] = arg2
                mem[(32 * arg1.length) + 196] = ext_call.return_data[0]
                mem[(32 * arg1.length) + 132] = 96
                mem[(32 * arg1.length) + 228] = mem[96]
                idx = 0
                while idx < 32 * mem[96]:
                    mem[mem[64] + idx + 132] = mem[idx + 128]
                    idx = idx + 32
                    continue 
                require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len (32 * mem[96]) + (32 * arg1.length) + -mem[64] + 256]
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if 4 < mem[96]:
                    mem[mem[64] + 4] = mem[268 len 20]
                    mem[mem[64] + 36] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
                    mem[mem[64] + 68] = ext_call.return_data[0]
                    require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                    call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4], 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    if ext_call.return_data[0]:
                        if 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / ext_call.return_data[0] >= ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18):
                            s = s - 1
                            t = 0
                            w = t
                            x = x * s / 10
                            continue 
                        if 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18):
                            s = s - 1
                            t = (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / ext_call.return_data[0]) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)
                            w = t
                            x = x * s / 10
                            continue 
                revert
    else:
        require 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)
        require 4 < arg1.length
        require ext_code.size(mem[268 len 20])
        call mem[268 len 20].0x313ce567 with:
             gas gas_remaining wei
        mem[(32 * arg1.length) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 0 < arg1.length
        require 1 < arg1.length
        require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
        call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args address(mem[128]), address(mem[160]), 11 * (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * defaultAmount / ext_call.return_data[0] * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) / (4 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) - (2 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) / 10 / 10
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 64
        mem[(32 * arg1.length) + 164] = arg2
        mem[(32 * arg1.length) + 196] = ext_call.return_data[0]
        mem[(32 * arg1.length) + 132] = 96
        mem[(32 * arg1.length) + 228] = arg1.length
        mem[(32 * arg1.length) + 260 len floor32(arg1.length)] = call.data[arg1 + 36 len floor32(arg1.length)]
        require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
        call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0xcf93ebe3 with:
             gas gas_remaining wei
            args Array(len=arg1.length, data=call.data[arg1 + 36 len floor32(arg1.length)], mem[(32 * arg1.length) + floor32(arg1.length) + 260 len (32 * arg1.length) - floor32(arg1.length)]), address(arg2), ext_call.return_data[0]
        mem[(32 * arg1.length) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 4 < arg1.length
        _2258 = mem[256]
        mem[(32 * arg1.length) + 164] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
        mem[(32 * arg1.length) + 196] = ext_call.return_data[0]
        require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
        call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args address(_2258), 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
        mem[(32 * arg1.length) + 128 len 64] = ext_call.return_data[0 len 64]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 64
        require ext_call.return_data[0]
        if 10^18 * 11 * (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * defaultAmount / ext_call.return_data[0] * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) / (4 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) - (2 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) / 10 / 10 / ext_call.return_data[0] >= ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18):
            require 4 < arg1.length
            require ext_code.size(mem[268 len 20])
            call mem[268 len 20].0x313ce567 with:
                 gas gas_remaining wei
            mem[(32 * arg1.length) + 128] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 0 < arg1.length
            require 1 < arg1.length
            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(mem[128]), address(mem[160]), 9 * (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * defaultAmount / ext_call.return_data[0] * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) / (4 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) - (2 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) / 10 / 10
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            mem[(32 * arg1.length) + 164] = arg2
            mem[(32 * arg1.length) + 196] = ext_call.return_data[0]
            mem[(32 * arg1.length) + 132] = 96
            mem[(32 * arg1.length) + 228] = arg1.length
            mem[(32 * arg1.length) + 260 len floor32(arg1.length)] = call.data[arg1 + 36 len floor32(arg1.length)]
            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0xcf93ebe3 with:
                 gas gas_remaining wei
                args Array(len=arg1.length, data=call.data[arg1 + 36 len floor32(arg1.length)], mem[(32 * arg1.length) + floor32(arg1.length) + 260 len (32 * arg1.length) - floor32(arg1.length)]), address(arg2), ext_call.return_data[0]
            mem[(32 * arg1.length) + 128] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 4 < arg1.length
            _2744 = mem[256]
            mem[(32 * arg1.length) + 164] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
            mem[(32 * arg1.length) + 196] = ext_call.return_data[0]
            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(_2744), 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
            mem[(32 * arg1.length) + 128 len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require ext_call.return_data[0]
            if 10^18 * 9 * (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * defaultAmount / ext_call.return_data[0] * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) / (4 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) - (2 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) / 10 / 10 / ext_call.return_data[0] >= ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18):
                s = 11
                t = 0
                u = (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * defaultAmount / ext_call.return_data[0] * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) / (4 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) - (2 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) / 10 / ext_call.return_data[0]) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)
                v = (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * defaultAmount / ext_call.return_data[0] * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) / (4 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) - (2 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) / 10
                while t > u:
                    require 4 < mem[96]
                    require ext_code.size(mem[268 len 20])
                    call mem[268 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < mem[96]
                    require 1 < mem[96]
                    _3222 = mem[160]
                    mem[mem[64] + 4] = mem[140 len 20]
                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4], address(_3222), (v * s / 10) + (s * v * s / 10) / 10
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    _3291 = mem[64]
                    mem[mem[64]] = 0xcf93ebe300000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 36] = arg2
                    mem[mem[64] + 68] = ext_call.return_data[0]
                    mem[mem[64] + 4] = 96
                    mem[mem[64] + 100] = mem[96]
                    idx = 0
                    while idx < 32 * mem[96]:
                        mem[mem[64] + idx + 132] = mem[idx + 128]
                        idx = idx + 32
                        continue 
                    require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                    call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len (32 * mem[96]) + _3291 + -mem[64] + 128]
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if 4 < mem[96]:
                        mem[mem[64] + 4] = mem[268 len 20]
                        mem[mem[64] + 36] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
                        mem[mem[64] + 68] = ext_call.return_data[0]
                        require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                        call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4], 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        if ext_call.return_data[0]:
                            if 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / ext_call.return_data[0] >= ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18):
                                s = s + 1
                                t = 0
                                u = t
                                v = v * s / 10
                                continue 
                            if 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18):
                                s = s + 1
                                t = (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / ext_call.return_data[0]) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)
                                u = t
                                v = v * s / 10
                                continue 
                    revert
                s = 9
                t = 0
                w = u
                x = v
                while t > w:
                    require 4 < mem[96]
                    require ext_code.size(mem[268 len 20])
                    call mem[268 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < mem[96]
                    require 1 < mem[96]
                    _3637 = mem[160]
                    mem[mem[64] + 4] = mem[140 len 20]
                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4], address(_3637), -(x * s / 10) + (s * x * s / 10) / 10
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    _3667 = mem[64]
                    mem[mem[64]] = 0xcf93ebe300000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 36] = arg2
                    mem[mem[64] + 68] = ext_call.return_data[0]
                    mem[mem[64] + 4] = 96
                    mem[mem[64] + 100] = mem[96]
                    idx = 0
                    while idx < 32 * mem[96]:
                        mem[mem[64] + idx + 132] = mem[idx + 128]
                        idx = idx + 32
                        continue 
                    require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                    call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len (32 * mem[96]) + _3667 + -mem[64] + 128]
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if 4 < mem[96]:
                        mem[mem[64] + 4] = mem[268 len 20]
                        mem[mem[64] + 36] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
                        mem[mem[64] + 68] = ext_call.return_data[0]
                        require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                        call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4], 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        if ext_call.return_data[0]:
                            if 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / ext_call.return_data[0] >= ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18):
                                s = s - 1
                                t = 0
                                w = t
                                x = x * s / 10
                                continue 
                            if 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18):
                                s = s - 1
                                t = (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / ext_call.return_data[0]) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)
                                w = t
                                x = x * s / 10
                                continue 
                    revert
            else:
                require 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)
                s = 11
                t = 0
                u = (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * defaultAmount / ext_call.return_data[0] * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) / (4 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) - (2 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) / 10 / ext_call.return_data[0]) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)
                v = (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * defaultAmount / ext_call.return_data[0] * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) / (4 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) - (2 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) / 10
                while t > u:
                    require 4 < mem[96]
                    require ext_code.size(mem[268 len 20])
                    call mem[268 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg1.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < mem[96]
                    require 1 < mem[96]
                    _3226 = mem[160]
                    mem[(32 * arg1.length) + 132] = mem[140 len 20]
                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg1.length) + 132], address(_3226), (v * s / 10) + (s * v * s / 10) / 10
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    mem[(32 * arg1.length) + 128] = 0xcf93ebe300000000000000000000000000000000000000000000000000000000
                    mem[(32 * arg1.length) + 164] = arg2
                    mem[(32 * arg1.length) + 196] = ext_call.return_data[0]
                    mem[(32 * arg1.length) + 132] = 96
                    mem[(32 * arg1.length) + 228] = mem[96]
                    idx = 0
                    while idx < 32 * mem[96]:
                        mem[mem[64] + idx + 132] = mem[idx + 128]
                        idx = idx + 32
                        continue 
                    require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                    call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len (32 * mem[96]) + (32 * arg1.length) + -mem[64] + 256]
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if 4 < mem[96]:
                        mem[mem[64] + 4] = mem[268 len 20]
                        mem[mem[64] + 36] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
                        mem[mem[64] + 68] = ext_call.return_data[0]
                        require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                        call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4], 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        if ext_call.return_data[0]:
                            if 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / ext_call.return_data[0] >= ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18):
                                s = s + 1
                                t = 0
                                u = t
                                v = v * s / 10
                                continue 
                            if 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18):
                                s = s + 1
                                t = (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / ext_call.return_data[0]) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)
                                u = t
                                v = v * s / 10
                                continue 
                    revert
                s = 9
                t = (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * 9 * (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * defaultAmount / ext_call.return_data[0] * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) / (4 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) - (2 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) / 10 / 10 / ext_call.return_data[0]) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)
                w = u
                x = v
                while t > w:
                    require 4 < mem[96]
                    require ext_code.size(mem[268 len 20])
                    call mem[268 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg1.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < mem[96]
                    require 1 < mem[96]
                    _3640 = mem[160]
                    mem[(32 * arg1.length) + 132] = mem[140 len 20]
                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg1.length) + 132], address(_3640), -(x * s / 10) + (s * x * s / 10) / 10
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    mem[(32 * arg1.length) + 128] = 0xcf93ebe300000000000000000000000000000000000000000000000000000000
                    mem[(32 * arg1.length) + 164] = arg2
                    mem[(32 * arg1.length) + 196] = ext_call.return_data[0]
                    mem[(32 * arg1.length) + 132] = 96
                    mem[(32 * arg1.length) + 228] = mem[96]
                    idx = 0
                    while idx < 32 * mem[96]:
                        mem[mem[64] + idx + 132] = mem[idx + 128]
                        idx = idx + 32
                        continue 
                    require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                    call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len (32 * mem[96]) + (32 * arg1.length) + -mem[64] + 256]
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if 4 < mem[96]:
                        mem[mem[64] + 4] = mem[268 len 20]
                        mem[mem[64] + 36] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
                        mem[mem[64] + 68] = ext_call.return_data[0]
                        require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                        call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4], 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        if ext_call.return_data[0]:
                            if 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / ext_call.return_data[0] >= ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18):
                                s = s - 1
                                t = 0
                                w = t
                                x = x * s / 10
                                continue 
                            if 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18):
                                s = s - 1
                                t = (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / ext_call.return_data[0]) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)
                                w = t
                                x = x * s / 10
                                continue 
                    revert
        else:
            require 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)
            require 4 < arg1.length
            require ext_code.size(mem[268 len 20])
            call mem[268 len 20].0x313ce567 with:
                 gas gas_remaining wei
            mem[(32 * arg1.length) + 128] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 0 < arg1.length
            require 1 < arg1.length
            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(mem[128]), address(mem[160]), 9 * (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * defaultAmount / ext_call.return_data[0] * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) / (4 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) - (2 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) / 10 / 10
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            mem[(32 * arg1.length) + 164] = arg2
            mem[(32 * arg1.length) + 196] = ext_call.return_data[0]
            mem[(32 * arg1.length) + 132] = 96
            mem[(32 * arg1.length) + 228] = arg1.length
            mem[(32 * arg1.length) + 260 len floor32(arg1.length)] = call.data[arg1 + 36 len floor32(arg1.length)]
            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0xcf93ebe3 with:
                 gas gas_remaining wei
                args Array(len=arg1.length, data=call.data[arg1 + 36 len floor32(arg1.length)], mem[(32 * arg1.length) + floor32(arg1.length) + 260 len (32 * arg1.length) - floor32(arg1.length)]), address(arg2), ext_call.return_data[0]
            mem[(32 * arg1.length) + 128] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 4 < arg1.length
            _2747 = mem[256]
            mem[(32 * arg1.length) + 164] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
            mem[(32 * arg1.length) + 196] = ext_call.return_data[0]
            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(_2747), 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
            mem[(32 * arg1.length) + 128 len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require ext_call.return_data[0]
            if 10^18 * 9 * (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * defaultAmount / ext_call.return_data[0] * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) / (4 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) - (2 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) / 10 / 10 / ext_call.return_data[0] >= ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18):
                s = 11
                t = (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * 11 * (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * defaultAmount / ext_call.return_data[0] * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) / (4 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) - (2 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) / 10 / 10 / ext_call.return_data[0]) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)
                u = (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * defaultAmount / ext_call.return_data[0] * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) / (4 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) - (2 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) / 10 / ext_call.return_data[0]) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)
                v = (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * defaultAmount / ext_call.return_data[0] * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) / (4 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) - (2 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) / 10
                while t > u:
                    require 4 < mem[96]
                    require ext_code.size(mem[268 len 20])
                    call mem[268 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg1.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < mem[96]
                    require 1 < mem[96]
                    _3230 = mem[160]
                    mem[(32 * arg1.length) + 132] = mem[140 len 20]
                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg1.length) + 132], address(_3230), (v * s / 10) + (s * v * s / 10) / 10
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    mem[(32 * arg1.length) + 128] = 0xcf93ebe300000000000000000000000000000000000000000000000000000000
                    mem[(32 * arg1.length) + 164] = arg2
                    mem[(32 * arg1.length) + 196] = ext_call.return_data[0]
                    mem[(32 * arg1.length) + 132] = 96
                    mem[(32 * arg1.length) + 228] = mem[96]
                    idx = 0
                    while idx < 32 * mem[96]:
                        mem[mem[64] + idx + 132] = mem[idx + 128]
                        idx = idx + 32
                        continue 
                    require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                    call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len (32 * mem[96]) + (32 * arg1.length) + -mem[64] + 256]
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if 4 < mem[96]:
                        mem[mem[64] + 4] = mem[268 len 20]
                        mem[mem[64] + 36] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
                        mem[mem[64] + 68] = ext_call.return_data[0]
                        require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                        call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4], 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        if ext_call.return_data[0]:
                            if 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / ext_call.return_data[0] >= ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18):
                                s = s + 1
                                t = 0
                                u = t
                                v = v * s / 10
                                continue 
                            if 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18):
                                s = s + 1
                                t = (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / ext_call.return_data[0]) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)
                                u = t
                                v = v * s / 10
                                continue 
                    revert
                s = 9
                t = 0
                w = u
                x = v
                while t > w:
                    require 4 < mem[96]
                    require ext_code.size(mem[268 len 20])
                    call mem[268 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg1.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < mem[96]
                    require 1 < mem[96]
                    _3643 = mem[160]
                    mem[(32 * arg1.length) + 132] = mem[140 len 20]
                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg1.length) + 132], address(_3643), -(x * s / 10) + (s * x * s / 10) / 10
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    mem[(32 * arg1.length) + 128] = 0xcf93ebe300000000000000000000000000000000000000000000000000000000
                    mem[(32 * arg1.length) + 164] = arg2
                    mem[(32 * arg1.length) + 196] = ext_call.return_data[0]
                    mem[(32 * arg1.length) + 132] = 96
                    mem[(32 * arg1.length) + 228] = mem[96]
                    idx = 0
                    while idx < 32 * mem[96]:
                        mem[mem[64] + idx + 132] = mem[idx + 128]
                        idx = idx + 32
                        continue 
                    require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                    call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len (32 * mem[96]) + (32 * arg1.length) + -mem[64] + 256]
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if 4 < mem[96]:
                        mem[mem[64] + 4] = mem[268 len 20]
                        mem[mem[64] + 36] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
                        mem[mem[64] + 68] = ext_call.return_data[0]
                        require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                        call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4], 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        if ext_call.return_data[0]:
                            if 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / ext_call.return_data[0] >= ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18):
                                s = s - 1
                                t = 0
                                w = t
                                x = x * s / 10
                                continue 
                            if 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18):
                                s = s - 1
                                t = (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / ext_call.return_data[0]) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)
                                w = t
                                x = x * s / 10
                                continue 
                    revert
            else:
                require 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)
                s = 11
                t = (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * 11 * (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * defaultAmount / ext_call.return_data[0] * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) / (4 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) - (2 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) / 10 / 10 / ext_call.return_data[0]) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)
                u = (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * defaultAmount / ext_call.return_data[0] * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) / (4 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) - (2 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) / 10 / ext_call.return_data[0]) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)
                v = (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * defaultAmount / ext_call.return_data[0] * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) / (4 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) - (2 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) / 10
                while t > u:
                    require 4 < mem[96]
                    require ext_code.size(mem[268 len 20])
                    call mem[268 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg1.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < mem[96]
                    require 1 < mem[96]
                    _3234 = mem[160]
                    mem[(32 * arg1.length) + 132] = mem[140 len 20]
                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg1.length) + 132], address(_3234), (v * s / 10) + (s * v * s / 10) / 10
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    mem[(32 * arg1.length) + 128] = 0xcf93ebe300000000000000000000000000000000000000000000000000000000
                    mem[(32 * arg1.length) + 164] = arg2
                    mem[(32 * arg1.length) + 196] = ext_call.return_data[0]
                    mem[(32 * arg1.length) + 132] = 96
                    mem[(32 * arg1.length) + 228] = mem[96]
                    idx = 0
                    while idx < 32 * mem[96]:
                        mem[mem[64] + idx + 132] = mem[idx + 128]
                        idx = idx + 32
                        continue 
                    require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                    call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len (32 * mem[96]) + (32 * arg1.length) + -mem[64] + 256]
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if 4 < mem[96]:
                        mem[mem[64] + 4] = mem[268 len 20]
                        mem[mem[64] + 36] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
                        mem[mem[64] + 68] = ext_call.return_data[0]
                        require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                        call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4], 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        if ext_call.return_data[0]:
                            if 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / ext_call.return_data[0] >= ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18):
                                s = s + 1
                                t = 0
                                u = t
                                v = v * s / 10
                                continue 
                            if 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18):
                                s = s + 1
                                t = (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / ext_call.return_data[0]) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)
                                u = t
                                v = v * s / 10
                                continue 
                    revert
                s = 9
                t = (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * 9 * (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * defaultAmount / ext_call.return_data[0] * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) / (4 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) - (2 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18) * 10^18 * defaultAmount / ext_call.return_data[0]) / 10 / 10 / ext_call.return_data[0]) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)
                w = u
                x = v
                while t > w:
                    require 4 < mem[96]
                    require ext_code.size(mem[268 len 20])
                    call mem[268 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    mem[(32 * arg1.length) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 0 < mem[96]
                    require 1 < mem[96]
                    _3646 = mem[160]
                    mem[(32 * arg1.length) + 132] = mem[140 len 20]
                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(32 * arg1.length) + 132], address(_3646), -(x * s / 10) + (s * x * s / 10) / 10
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    mem[(32 * arg1.length) + 128] = 0xcf93ebe300000000000000000000000000000000000000000000000000000000
                    mem[(32 * arg1.length) + 164] = arg2
                    mem[(32 * arg1.length) + 196] = ext_call.return_data[0]
                    mem[(32 * arg1.length) + 132] = 96
                    mem[(32 * arg1.length) + 228] = mem[96]
                    idx = 0
                    while idx < 32 * mem[96]:
                        mem[mem[64] + idx + 132] = mem[idx + 128]
                        idx = idx + 32
                        continue 
                    require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                    call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len (32 * mem[96]) + (32 * arg1.length) + -mem[64] + 256]
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if 4 < mem[96]:
                        mem[mem[64] + 4] = mem[268 len 20]
                        mem[mem[64] + 36] = 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
                        mem[mem[64] + 68] = ext_call.return_data[0]
                        require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                        call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4], 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0]
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        if ext_call.return_data[0]:
                            if 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / ext_call.return_data[0] >= ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18):
                                s = s - 1
                                t = 0
                                w = t
                                x = x * s / 10
                                continue 
                            if 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18):
                                s = s - 1
                                t = (10^18 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)) - (10^18 * 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / ext_call.return_data[0]) / 10 * ext_call.return_data[0] * 10^(-ext_call.return_data[0] + 18)
                                w = t
                                x = x * s / 10
                                continue 
                    revert
    return x
}

function sub_f3e461a1(?) {
    mem[64] = (32 * arg1.length) + 128
    mem[96] = arg1.length
    mem[128 len 32 * arg1.length] = call.data[arg1 + 36 len 32 * arg1.length]
    require 0 < arg1.length
    require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
    call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
         gas gas_remaining wei
        args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[128]), defaultAmount
    mem[(32 * arg1.length) + 128 len 64] = ext_call.return_data[0 len 64]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    require 0 < arg1.length
    require ext_code.size(mem[140 len 20])
    call mem[140 len 20].0x313ce567 with:
         gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require 10^(-ext_call.return_data[0] + 18)
    mem[(32 * arg1.length) + 164] = arg2
    mem[(32 * arg1.length) + 196] = ext_call.return_data[0] * defaultAmount / 10^18 / 10^(-ext_call.return_data[0] + 18)
    mem[(32 * arg1.length) + 132] = 96
    mem[(32 * arg1.length) + 228] = arg1.length
    mem[(32 * arg1.length) + 260 len floor32(arg1.length)] = call.data[arg1 + 36 len floor32(arg1.length)]
    require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
    call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
         gas gas_remaining wei
        args Array(len=arg1.length, data=call.data[arg1 + 36 len floor32(arg1.length)], mem[(32 * arg1.length) + floor32(arg1.length) + 260 len (32 * arg1.length) - floor32(arg1.length)]), address(arg2), ext_call.return_data[0] * defaultAmount / 10^18 / 10^(-ext_call.return_data[0] + 18)
    mem[(32 * arg1.length) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require 2 < arg1.length
    require 4 < arg1.length
    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
         gas gas_remaining wei
        args address(mem[192]), address(mem[256]), ext_call.return_data[0]
    mem[(32 * arg1.length) + 128 len 64] = ext_call.return_data[0 len 64]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    require ext_call.return_data[0] * defaultAmount / 10^18
    require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
    require 0 < arg1.length
    require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
    call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
         gas gas_remaining wei
        args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[128]), 2 * defaultAmount
    mem[(32 * arg1.length) + 128 len 64] = ext_call.return_data[0 len 64]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    require 0 < arg1.length
    require ext_code.size(mem[140 len 20])
    call mem[140 len 20].0x313ce567 with:
         gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require 10^(-ext_call.return_data[0] + 18)
    mem[(32 * arg1.length) + 164] = arg2
    mem[(32 * arg1.length) + 196] = ext_call.return_data[0] * 2 * defaultAmount / 10^18 / 10^(-ext_call.return_data[0] + 18)
    mem[(32 * arg1.length) + 132] = 96
    mem[(32 * arg1.length) + 228] = arg1.length
    mem[(32 * arg1.length) + 260 len floor32(arg1.length)] = call.data[arg1 + 36 len floor32(arg1.length)]
    require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
    call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
         gas gas_remaining wei
        args Array(len=arg1.length, data=call.data[arg1 + 36 len floor32(arg1.length)], mem[(32 * arg1.length) + floor32(arg1.length) + 260 len (32 * arg1.length) - floor32(arg1.length)]), address(arg2), ext_call.return_data[0] * 2 * defaultAmount / 10^18 / 10^(-ext_call.return_data[0] + 18)
    mem[(32 * arg1.length) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require 2 < arg1.length
    require 4 < arg1.length
    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
         gas gas_remaining wei
        args address(mem[192]), address(mem[256]), ext_call.return_data[0]
    mem[(32 * arg1.length) + 128 len 64] = ext_call.return_data[0 len 64]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    require ext_call.return_data[0] * 2 * defaultAmount / 10^18
    require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18
    require (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18)
    require 0 < arg1.length
    require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
    call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
         gas gas_remaining wei
        args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[128]), 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10
    mem[(32 * arg1.length) + 128 len 64] = ext_call.return_data[0 len 64]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    require 0 < arg1.length
    require ext_code.size(mem[140 len 20])
    call mem[140 len 20].0x313ce567 with:
         gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require 10^(-ext_call.return_data[0] + 18)
    mem[(32 * arg1.length) + 164] = arg2
    mem[(32 * arg1.length) + 196] = ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
    mem[(32 * arg1.length) + 132] = 96
    mem[(32 * arg1.length) + 228] = arg1.length
    mem[(32 * arg1.length) + 260 len floor32(arg1.length)] = call.data[arg1 + 36 len floor32(arg1.length)]
    require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
    call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
         gas gas_remaining wei
        args Array(len=arg1.length, data=call.data[arg1 + 36 len floor32(arg1.length)], mem[(32 * arg1.length) + floor32(arg1.length) + 260 len (32 * arg1.length) - floor32(arg1.length)]), address(arg2), ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
    mem[(32 * arg1.length) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require 2 < arg1.length
    require 4 < arg1.length
    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
         gas gas_remaining wei
        args address(mem[192]), address(mem[256]), ext_call.return_data[0]
    mem[(32 * arg1.length) + 128 len 64] = ext_call.return_data[0 len 64]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    require ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18
    require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18
    if ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 <= 10^18 * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18:
        require 0 < arg1.length
        require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
        call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[128]), 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10
        mem[(32 * arg1.length) + 128 len 64] = ext_call.return_data[0 len 64]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 64
        require 0 < arg1.length
        require ext_code.size(mem[140 len 20])
        call mem[140 len 20].0x313ce567 with:
             gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 10^(-ext_call.return_data[0] + 18)
        mem[(32 * arg1.length) + 164] = arg2
        mem[(32 * arg1.length) + 196] = ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
        mem[(32 * arg1.length) + 132] = 96
        mem[(32 * arg1.length) + 228] = arg1.length
        mem[(32 * arg1.length) + 260 len floor32(arg1.length)] = call.data[arg1 + 36 len floor32(arg1.length)]
        require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
        call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
             gas gas_remaining wei
            args Array(len=arg1.length, data=call.data[arg1 + 36 len floor32(arg1.length)], mem[(32 * arg1.length) + floor32(arg1.length) + 260 len (32 * arg1.length) - floor32(arg1.length)]), address(arg2), ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
        mem[(32 * arg1.length) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 2 < arg1.length
        require 4 < arg1.length
        require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
        call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args address(mem[192]), address(mem[256]), ext_call.return_data[0]
        mem[(32 * arg1.length) + 128 len 64] = ext_call.return_data[0 len 64]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 64
        require ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18
        require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18
        if ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 <= 10^18 * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18:
            require 0 < arg1.length
            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[128]), (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
            mem[(32 * arg1.length) + 128 len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require 0 < arg1.length
            require ext_code.size(mem[140 len 20])
            call mem[140 len 20].0x313ce567 with:
                 gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 10^(-ext_call.return_data[0] + 18)
            mem[(32 * arg1.length) + 164] = arg2
            mem[(32 * arg1.length) + 196] = ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
            mem[(32 * arg1.length) + 132] = 96
            mem[(32 * arg1.length) + 228] = arg1.length
            mem[(32 * arg1.length) + 260 len floor32(arg1.length)] = call.data[arg1 + 36 len floor32(arg1.length)]
            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                 gas gas_remaining wei
                args Array(len=arg1.length, data=call.data[arg1 + 36 len floor32(arg1.length)], mem[(32 * arg1.length) + floor32(arg1.length) + 260 len (32 * arg1.length) - floor32(arg1.length)]), address(arg2), ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
            mem[(32 * arg1.length) + 128] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 2 < arg1.length
            _2748 = mem[192]
            require 4 < arg1.length
            _2756 = mem[256]
            mem[(32 * arg1.length) + 164] = mem[268 len 20]
            mem[(32 * arg1.length) + 196] = ext_call.return_data[0]
            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(_2748), address(_2756), ext_call.return_data[0]
            mem[(32 * arg1.length) + 128 len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18
            require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18
            if ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 <= 10^18 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18:
                return ((10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10)
            require 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
            s = 11
            t = (10^18 * ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18) - (10^18 * 10^18 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 * mem[mem[64]] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
            u = 2
            v = (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
            while u > t:
                require 0 < mem[96]
                _3136 = mem[128]
                mem[mem[64] + 36] = mem[140 len 20]
                require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_3136), (v * s / 10) + (s * v * s / 10) / 10
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require 0 < mem[96]
                require ext_code.size(mem[140 len 20])
                call mem[140 len 20].0x313ce567 with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 10^(-ext_call.return_data[0] + 18)
                _3287 = mem[64]
                mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 36] = arg2
                mem[mem[64] + 68] = ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                mem[mem[64] + 4] = 96
                mem[mem[64] + 100] = mem[96]
                idx = 0
                while idx < 32 * mem[96]:
                    mem[mem[64] + idx + 132] = mem[idx + 128]
                    idx = idx + 32
                    continue 
                require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len (32 * mem[96]) + _3287 + -mem[64] + 128]
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if 2 < mem[96]:
                    if 4 < mem[96]:
                        _3576 = mem[256]
                        mem[mem[64] + 4] = mem[204 len 20]
                        mem[mem[64] + 36] = address(_3576)
                        mem[mem[64] + 68] = ext_call.return_data[0]
                        require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                        call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4], address(_3576), ext_call.return_data[0]
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 <= 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                    s = s + 1
                                    t = u
                                    u = 2
                                    v = v * s / 10
                                    continue 
                                if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                    s = s + 1
                                    t = u
                                    u = (10^18 * ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) - (10^18 * 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                    v = v * s / 10
                                    continue 
                revert
            s = 9
            u = t
            w = 2
            x = v
            while w > u:
                require 0 < mem[96]
                _3573 = mem[128]
                mem[mem[64] + 36] = mem[140 len 20]
                require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_3573), -(x * s / 10) + (s * x * s / 10) / 10
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require 0 < mem[96]
                require ext_code.size(mem[140 len 20])
                call mem[140 len 20].0x313ce567 with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 10^(-ext_call.return_data[0] + 18)
                _3687 = mem[64]
                mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 36] = arg2
                mem[mem[64] + 68] = ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                mem[mem[64] + 4] = 96
                mem[mem[64] + 100] = mem[96]
                idx = 0
                while idx < 32 * mem[96]:
                    mem[mem[64] + idx + 132] = mem[idx + 128]
                    idx = idx + 32
                    continue 
                require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len (32 * mem[96]) + _3687 + -mem[64] + 128]
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if 2 < mem[96]:
                    if 4 < mem[96]:
                        _3825 = mem[256]
                        mem[mem[64] + 4] = mem[204 len 20]
                        mem[mem[64] + 36] = address(_3825)
                        mem[mem[64] + 68] = ext_call.return_data[0]
                        require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                        call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4], address(_3825), ext_call.return_data[0]
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 <= 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                    s = s - 1
                                    u = w
                                    w = 2
                                    x = x * s / 10
                                    continue 
                                if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                    s = s - 1
                                    u = w
                                    w = (10^18 * ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) - (10^18 * 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                    x = x * s / 10
                                    continue 
                revert
        else:
            require 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
            require 0 < arg1.length
            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[128]), (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
            mem[(32 * arg1.length) + 128 len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require 0 < arg1.length
            require ext_code.size(mem[140 len 20])
            call mem[140 len 20].0x313ce567 with:
                 gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 10^(-ext_call.return_data[0] + 18)
            mem[(32 * arg1.length) + 164] = arg2
            mem[(32 * arg1.length) + 196] = ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
            mem[(32 * arg1.length) + 132] = 96
            mem[(32 * arg1.length) + 228] = arg1.length
            mem[(32 * arg1.length) + 260 len floor32(arg1.length)] = call.data[arg1 + 36 len floor32(arg1.length)]
            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                 gas gas_remaining wei
                args Array(len=arg1.length, data=call.data[arg1 + 36 len floor32(arg1.length)], mem[(32 * arg1.length) + floor32(arg1.length) + 260 len (32 * arg1.length) - floor32(arg1.length)]), address(arg2), ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
            mem[(32 * arg1.length) + 128] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 2 < arg1.length
            _2750 = mem[192]
            require 4 < arg1.length
            _2759 = mem[256]
            mem[(32 * arg1.length) + 164] = mem[268 len 20]
            mem[(32 * arg1.length) + 196] = ext_call.return_data[0]
            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(_2750), address(_2759), ext_call.return_data[0]
            mem[(32 * arg1.length) + 128 len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18
            require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18
            if ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 <= 10^18 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18:
                s = 9
                t = 2
                u = (10^18 * ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) - (10^18 * 10^18 * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                v = (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                while u > t:
                    require 0 < mem[96]
                    require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                    call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[128]), -(v * s / 10) + (s * v * s / 10) / 10
                    mem[(32 * arg1.length) + 128 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 0 < mem[96]
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg1.length) + 128] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                    mem[(32 * arg1.length) + 164] = arg2
                    mem[(32 * arg1.length) + 196] = ext_call.return_data[0] * -(v * s / 10) + (s * v * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg1.length) + 132] = 96
                    mem[(32 * arg1.length) + 228] = mem[96]
                    idx = 0
                    while idx < 32 * mem[96]:
                        mem[mem[64] + idx + 132] = mem[idx + 128]
                        idx = idx + 32
                        continue 
                    require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                    call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len (32 * mem[96]) + (32 * arg1.length) + -mem[64] + 256]
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if 2 < mem[96]:
                        if 4 < mem[96]:
                            _3579 = mem[256]
                            mem[mem[64] + 4] = mem[204 len 20]
                            mem[mem[64] + 36] = address(_3579)
                            mem[mem[64] + 68] = ext_call.return_data[0]
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4], address(_3579), ext_call.return_data[0]
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            if ext_call.return_data[0] * -(v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                    if ext_call.return_data[0] * -(v * s / 10) + (s * v * s / 10) / 10 / 10^18 <= 10^18 * -(v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                        s = s - 1
                                        t = u
                                        u = 2
                                        v = v * s / 10
                                        continue 
                                    if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                        s = s - 1
                                        t = u
                                        u = (10^18 * ext_call.return_data[0] * -(v * s / 10) + (s * v * s / 10) / 10 / 10^18) - (10^18 * 10^18 * -(v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(v * s / 10) + (s * v * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                        v = v * s / 10
                                        continue 
                    revert
                return v
            require 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
            s = 11
            t = (10^18 * ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18) - (10^18 * 10^18 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 * mem[(32 * arg1.length) + 128] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
            u = 2
            v = (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
            while u > t:
                require 0 < mem[96]
                require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[128]), (v * s / 10) + (s * v * s / 10) / 10
                mem[(32 * arg1.length) + 128 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require 0 < mem[96]
                require ext_code.size(mem[140 len 20])
                call mem[140 len 20].0x313ce567 with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 10^(-ext_call.return_data[0] + 18)
                mem[(32 * arg1.length) + 128] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                mem[(32 * arg1.length) + 164] = arg2
                mem[(32 * arg1.length) + 196] = ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                mem[(32 * arg1.length) + 132] = 96
                mem[(32 * arg1.length) + 228] = mem[96]
                idx = 0
                while idx < 32 * mem[96]:
                    mem[mem[64] + idx + 132] = mem[idx + 128]
                    idx = idx + 32
                    continue 
                require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len (32 * mem[96]) + (32 * arg1.length) + -mem[64] + 256]
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if 2 < mem[96]:
                    if 4 < mem[96]:
                        _3585 = mem[256]
                        mem[mem[64] + 4] = mem[204 len 20]
                        mem[mem[64] + 36] = address(_3585)
                        mem[mem[64] + 68] = ext_call.return_data[0]
                        require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                        call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4], address(_3585), ext_call.return_data[0]
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 <= 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                    s = s + 1
                                    t = u
                                    u = 2
                                    v = v * s / 10
                                    continue 
                                if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                    s = s + 1
                                    t = u
                                    u = (10^18 * ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) - (10^18 * 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                    v = v * s / 10
                                    continue 
                revert
            s = 9
            u = t
            w = (10^18 * ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) - (10^18 * 10^18 * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
            x = v
            while w > u:
                require 0 < mem[96]
                _3582 = mem[128]
                mem[mem[64] + 36] = mem[140 len 20]
                require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_3582), -(x * s / 10) + (s * x * s / 10) / 10
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require 0 < mem[96]
                require ext_code.size(mem[140 len 20])
                call mem[140 len 20].0x313ce567 with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 10^(-ext_call.return_data[0] + 18)
                _3690 = mem[64]
                mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 36] = arg2
                mem[mem[64] + 68] = ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                mem[mem[64] + 4] = 96
                mem[mem[64] + 100] = mem[96]
                idx = 0
                while idx < 32 * mem[96]:
                    mem[mem[64] + idx + 132] = mem[idx + 128]
                    idx = idx + 32
                    continue 
                require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len (32 * mem[96]) + _3690 + -mem[64] + 128]
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if 2 < mem[96]:
                    if 4 < mem[96]:
                        _3828 = mem[256]
                        mem[mem[64] + 4] = mem[204 len 20]
                        mem[mem[64] + 36] = address(_3828)
                        mem[mem[64] + 68] = ext_call.return_data[0]
                        require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                        call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4], address(_3828), ext_call.return_data[0]
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                            if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 <= 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                    s = s - 1
                                    u = w
                                    w = 2
                                    x = x * s / 10
                                    continue 
                                if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                    s = s - 1
                                    u = w
                                    w = (10^18 * ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) - (10^18 * 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                    x = x * s / 10
                                    continue 
                revert
    else:
        require 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
        require 0 < arg1.length
        require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
        call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[128]), 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10
        mem[(32 * arg1.length) + 128 len 64] = ext_call.return_data[0 len 64]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 64
        require 0 < arg1.length
        require ext_code.size(mem[140 len 20])
        call mem[140 len 20].0x313ce567 with:
             gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 10^(-ext_call.return_data[0] + 18)
        mem[(32 * arg1.length) + 164] = arg2
        mem[(32 * arg1.length) + 196] = ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
        mem[(32 * arg1.length) + 132] = 96
        mem[(32 * arg1.length) + 228] = arg1.length
        mem[(32 * arg1.length) + 260 len floor32(arg1.length)] = call.data[arg1 + 36 len floor32(arg1.length)]
        require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
        call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
             gas gas_remaining wei
            args Array(len=arg1.length, data=call.data[arg1 + 36 len floor32(arg1.length)], mem[(32 * arg1.length) + floor32(arg1.length) + 260 len (32 * arg1.length) - floor32(arg1.length)]), address(arg2), ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
        mem[(32 * arg1.length) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 2 < arg1.length
        require 4 < arg1.length
        require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
        call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args address(mem[192]), address(mem[256]), ext_call.return_data[0]
        mem[(32 * arg1.length) + 128 len 64] = ext_call.return_data[0 len 64]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 64
        require ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18
        require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18
        if ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 <= 10^18 * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18:
            require 0 < arg1.length
            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[128]), (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
            mem[(32 * arg1.length) + 128 len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require 0 < arg1.length
            require ext_code.size(mem[140 len 20])
            call mem[140 len 20].0x313ce567 with:
                 gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 10^(-ext_call.return_data[0] + 18)
            mem[(32 * arg1.length) + 164] = arg2
            mem[(32 * arg1.length) + 196] = ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
            mem[(32 * arg1.length) + 132] = 96
            mem[(32 * arg1.length) + 228] = arg1.length
            mem[(32 * arg1.length) + 260 len floor32(arg1.length)] = call.data[arg1 + 36 len floor32(arg1.length)]
            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                 gas gas_remaining wei
                args Array(len=arg1.length, data=call.data[arg1 + 36 len floor32(arg1.length)], mem[(32 * arg1.length) + floor32(arg1.length) + 260 len (32 * arg1.length) - floor32(arg1.length)]), address(arg2), ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
            mem[(32 * arg1.length) + 128] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 2 < arg1.length
            _2752 = mem[192]
            require 4 < arg1.length
            _2762 = mem[256]
            mem[(32 * arg1.length) + 164] = mem[268 len 20]
            mem[(32 * arg1.length) + 196] = ext_call.return_data[0]
            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(_2752), address(_2762), ext_call.return_data[0]
            mem[(32 * arg1.length) + 128 len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18
            require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18
            if ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 <= 10^18 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18:
                s = 11
                t = 2
                u = (10^18 * ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) - (10^18 * 10^18 * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                v = (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                while u > t:
                    require 0 < mem[96]
                    _3145 = mem[128]
                    mem[mem[64] + 36] = mem[140 len 20]
                    require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                    call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_3145), (v * s / 10) + (s * v * s / 10) / 10
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 0 < mem[96]
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    _3298 = mem[64]
                    mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 36] = arg2
                    mem[mem[64] + 68] = ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                    mem[mem[64] + 4] = 96
                    mem[mem[64] + 100] = mem[96]
                    idx = 0
                    while idx < 32 * mem[96]:
                        mem[mem[64] + idx + 132] = mem[idx + 128]
                        idx = idx + 32
                        continue 
                    require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                    call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len (32 * mem[96]) + _3298 + -mem[64] + 128]
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if 2 < mem[96]:
                        if 4 < mem[96]:
                            _3591 = mem[256]
                            mem[mem[64] + 4] = mem[204 len 20]
                            mem[mem[64] + 36] = address(_3591)
                            mem[mem[64] + 68] = ext_call.return_data[0]
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4], address(_3591), ext_call.return_data[0]
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                    if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 <= 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                        s = s + 1
                                        t = u
                                        u = 2
                                        v = v * s / 10
                                        continue 
                                    if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                        s = s + 1
                                        t = u
                                        u = (10^18 * ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) - (10^18 * 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                        v = v * s / 10
                                        continue 
                    revert
                s = 9
                u = t
                w = 2
                x = v
                while w > u:
                    require 0 < mem[96]
                    _3588 = mem[128]
                    mem[mem[64] + 36] = mem[140 len 20]
                    require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                    call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_3588), -(x * s / 10) + (s * x * s / 10) / 10
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 0 < mem[96]
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    _3693 = mem[64]
                    mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 36] = arg2
                    mem[mem[64] + 68] = ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                    mem[mem[64] + 4] = 96
                    mem[mem[64] + 100] = mem[96]
                    idx = 0
                    while idx < 32 * mem[96]:
                        mem[mem[64] + idx + 132] = mem[idx + 128]
                        idx = idx + 32
                        continue 
                    require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                    call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len (32 * mem[96]) + _3693 + -mem[64] + 128]
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if 2 < mem[96]:
                        if 4 < mem[96]:
                            _3831 = mem[256]
                            mem[mem[64] + 4] = mem[204 len 20]
                            mem[mem[64] + 36] = address(_3831)
                            mem[mem[64] + 68] = ext_call.return_data[0]
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4], address(_3831), ext_call.return_data[0]
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                    if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 <= 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                        s = s - 1
                                        u = w
                                        w = 2
                                        x = x * s / 10
                                        continue 
                                    if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                        s = s - 1
                                        u = w
                                        w = (10^18 * ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) - (10^18 * 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                        x = x * s / 10
                                        continue 
                    revert
            else:
                require 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                s = 11
                t = (10^18 * ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18) - (10^18 * 10^18 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 * mem[(32 * arg1.length) + 128] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                u = (10^18 * ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) - (10^18 * 10^18 * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                v = (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                while u > t:
                    require 0 < mem[96]
                    require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                    call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[128]), (v * s / 10) + (s * v * s / 10) / 10
                    mem[(32 * arg1.length) + 128 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 0 < mem[96]
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg1.length) + 128] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                    mem[(32 * arg1.length) + 164] = arg2
                    mem[(32 * arg1.length) + 196] = ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg1.length) + 132] = 96
                    mem[(32 * arg1.length) + 228] = mem[96]
                    idx = 0
                    while idx < 32 * mem[96]:
                        mem[mem[64] + idx + 132] = mem[idx + 128]
                        idx = idx + 32
                        continue 
                    require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                    call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len (32 * mem[96]) + (32 * arg1.length) + -mem[64] + 256]
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if 2 < mem[96]:
                        if 4 < mem[96]:
                            _3597 = mem[256]
                            mem[mem[64] + 4] = mem[204 len 20]
                            mem[mem[64] + 36] = address(_3597)
                            mem[mem[64] + 68] = ext_call.return_data[0]
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4], address(_3597), ext_call.return_data[0]
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                    if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 <= 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                        s = s + 1
                                        t = u
                                        u = 2
                                        v = v * s / 10
                                        continue 
                                    if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                        s = s + 1
                                        t = u
                                        u = (10^18 * ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) - (10^18 * 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                        v = v * s / 10
                                        continue 
                    revert
                s = 9
                u = t
                w = 2
                x = v
                while w > u:
                    require 0 < mem[96]
                    _3594 = mem[128]
                    mem[mem[64] + 36] = mem[140 len 20]
                    require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                    call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_3594), -(x * s / 10) + (s * x * s / 10) / 10
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 0 < mem[96]
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    _3696 = mem[64]
                    mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 36] = arg2
                    mem[mem[64] + 68] = ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                    mem[mem[64] + 4] = 96
                    mem[mem[64] + 100] = mem[96]
                    idx = 0
                    while idx < 32 * mem[96]:
                        mem[mem[64] + idx + 132] = mem[idx + 128]
                        idx = idx + 32
                        continue 
                    require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                    call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len (32 * mem[96]) + _3696 + -mem[64] + 128]
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if 2 < mem[96]:
                        if 4 < mem[96]:
                            _3834 = mem[256]
                            mem[mem[64] + 4] = mem[204 len 20]
                            mem[mem[64] + 36] = address(_3834)
                            mem[mem[64] + 68] = ext_call.return_data[0]
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4], address(_3834), ext_call.return_data[0]
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                    if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 <= 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                        s = s - 1
                                        u = w
                                        w = 2
                                        x = x * s / 10
                                        continue 
                                    if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                        s = s - 1
                                        u = w
                                        w = (10^18 * ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) - (10^18 * 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                        x = x * s / 10
                                        continue 
                    revert
        else:
            require 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
            require 0 < arg1.length
            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[128]), (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
            mem[(32 * arg1.length) + 128 len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require 0 < arg1.length
            require ext_code.size(mem[140 len 20])
            call mem[140 len 20].0x313ce567 with:
                 gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 10^(-ext_call.return_data[0] + 18)
            mem[(32 * arg1.length) + 164] = arg2
            mem[(32 * arg1.length) + 196] = ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
            mem[(32 * arg1.length) + 132] = 96
            mem[(32 * arg1.length) + 228] = arg1.length
            mem[(32 * arg1.length) + 260 len floor32(arg1.length)] = call.data[arg1 + 36 len floor32(arg1.length)]
            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                 gas gas_remaining wei
                args Array(len=arg1.length, data=call.data[arg1 + 36 len floor32(arg1.length)], mem[(32 * arg1.length) + floor32(arg1.length) + 260 len (32 * arg1.length) - floor32(arg1.length)]), address(arg2), ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
            mem[(32 * arg1.length) + 128] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 2 < arg1.length
            _2754 = mem[192]
            require 4 < arg1.length
            _2765 = mem[256]
            mem[(32 * arg1.length) + 164] = mem[268 len 20]
            mem[(32 * arg1.length) + 196] = ext_call.return_data[0]
            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(_2754), address(_2765), ext_call.return_data[0]
            mem[(32 * arg1.length) + 128 len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18
            require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18
            if ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 <= 10^18 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18:
                s = 11
                t = 2
                u = (10^18 * ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) - (10^18 * 10^18 * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                v = (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                while u > t:
                    require 0 < mem[96]
                    require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                    call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[128]), (v * s / 10) + (s * v * s / 10) / 10
                    mem[(32 * arg1.length) + 128 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 0 < mem[96]
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg1.length) + 128] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                    mem[(32 * arg1.length) + 164] = arg2
                    mem[(32 * arg1.length) + 196] = ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg1.length) + 132] = 96
                    mem[(32 * arg1.length) + 228] = mem[96]
                    idx = 0
                    while idx < 32 * mem[96]:
                        mem[mem[64] + idx + 132] = mem[idx + 128]
                        idx = idx + 32
                        continue 
                    require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                    call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len (32 * mem[96]) + (32 * arg1.length) + -mem[64] + 256]
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if 2 < mem[96]:
                        if 4 < mem[96]:
                            _3603 = mem[256]
                            mem[mem[64] + 4] = mem[204 len 20]
                            mem[mem[64] + 36] = address(_3603)
                            mem[mem[64] + 68] = ext_call.return_data[0]
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4], address(_3603), ext_call.return_data[0]
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                    if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 <= 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                        s = s + 1
                                        t = u
                                        u = 2
                                        v = v * s / 10
                                        continue 
                                    if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                        s = s + 1
                                        t = u
                                        u = (10^18 * ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) - (10^18 * 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                        v = v * s / 10
                                        continue 
                    revert
                s = 9
                u = t
                w = (10^18 * ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) - (10^18 * 10^18 * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                x = v
                while w > u:
                    require 0 < mem[96]
                    _3600 = mem[128]
                    mem[mem[64] + 36] = mem[140 len 20]
                    require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                    call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_3600), -(x * s / 10) + (s * x * s / 10) / 10
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 0 < mem[96]
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    _3699 = mem[64]
                    mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 36] = arg2
                    mem[mem[64] + 68] = ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                    mem[mem[64] + 4] = 96
                    mem[mem[64] + 100] = mem[96]
                    idx = 0
                    while idx < 32 * mem[96]:
                        mem[mem[64] + idx + 132] = mem[idx + 128]
                        idx = idx + 32
                        continue 
                    require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                    call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len (32 * mem[96]) + _3699 + -mem[64] + 128]
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if 2 < mem[96]:
                        if 4 < mem[96]:
                            _3837 = mem[256]
                            mem[mem[64] + 4] = mem[204 len 20]
                            mem[mem[64] + 36] = address(_3837)
                            mem[mem[64] + 68] = ext_call.return_data[0]
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4], address(_3837), ext_call.return_data[0]
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                    if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 <= 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                        s = s - 1
                                        u = w
                                        w = 2
                                        x = x * s / 10
                                        continue 
                                    if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                        s = s - 1
                                        u = w
                                        w = (10^18 * ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) - (10^18 * 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                        x = x * s / 10
                                        continue 
                    revert
            else:
                require 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                s = 11
                t = (10^18 * ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18) - (10^18 * 10^18 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 * mem[(32 * arg1.length) + 128] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                u = (10^18 * ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) - (10^18 * 10^18 * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                v = (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                while u > t:
                    require 0 < mem[96]
                    require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                    call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[128]), (v * s / 10) + (s * v * s / 10) / 10
                    mem[(32 * arg1.length) + 128 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 0 < mem[96]
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg1.length) + 128] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                    mem[(32 * arg1.length) + 164] = arg2
                    mem[(32 * arg1.length) + 196] = ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                    mem[(32 * arg1.length) + 132] = 96
                    mem[(32 * arg1.length) + 228] = mem[96]
                    idx = 0
                    while idx < 32 * mem[96]:
                        mem[mem[64] + idx + 132] = mem[idx + 128]
                        idx = idx + 32
                        continue 
                    require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                    call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len (32 * mem[96]) + (32 * arg1.length) + -mem[64] + 256]
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if 2 < mem[96]:
                        if 4 < mem[96]:
                            _3609 = mem[256]
                            mem[mem[64] + 4] = mem[204 len 20]
                            mem[mem[64] + 36] = address(_3609)
                            mem[mem[64] + 68] = ext_call.return_data[0]
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4], address(_3609), ext_call.return_data[0]
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                    if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 <= 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                        s = s + 1
                                        t = u
                                        u = 2
                                        v = v * s / 10
                                        continue 
                                    if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                        s = s + 1
                                        t = u
                                        u = (10^18 * ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) - (10^18 * 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                        v = v * s / 10
                                        continue 
                    revert
                s = 9
                u = t
                w = (10^18 * ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) - (10^18 * 10^18 * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                x = v
                while w > u:
                    require 0 < mem[96]
                    _3606 = mem[128]
                    mem[mem[64] + 36] = mem[140 len 20]
                    require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                    call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_3606), -(x * s / 10) + (s * x * s / 10) / 10
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 0 < mem[96]
                    require ext_code.size(mem[140 len 20])
                    call mem[140 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    _3702 = mem[64]
                    mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 36] = arg2
                    mem[mem[64] + 68] = ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                    mem[mem[64] + 4] = 96
                    mem[mem[64] + 100] = mem[96]
                    idx = 0
                    while idx < 32 * mem[96]:
                        mem[mem[64] + idx + 132] = mem[idx + 128]
                        idx = idx + 32
                        continue 
                    require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                    call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len (32 * mem[96]) + _3702 + -mem[64] + 128]
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if 2 < mem[96]:
                        if 4 < mem[96]:
                            _3840 = mem[256]
                            mem[mem[64] + 4] = mem[204 len 20]
                            mem[mem[64] + 36] = address(_3840)
                            mem[mem[64] + 68] = ext_call.return_data[0]
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4], address(_3840), ext_call.return_data[0]
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                    if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 <= 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                        s = s - 1
                                        u = w
                                        w = 2
                                        x = x * s / 10
                                        continue 
                                    if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                        s = s - 1
                                        u = w
                                        w = (10^18 * ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) - (10^18 * 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                        x = x * s / 10
                                        continue 
                    revert
    return x
}

function sub_cde54f0e(?) {
    mem[96] = arg2
    mem[128] = 0x1f573d6fb3f13d689ff844b4ce37794d79a7ff1c
    mem[160] = 0x1f573d6fb3f13d689ff844b4ce37794d79a7ff1c
    mem[192] = 0x1f573d6fb3f13d689ff844b4ce37794d79a7ff1c
    mem[224] = 0xc0829421c1d260bd3cb3e0f06cfe2d52db2ce315
    stor0.length = 5
    mem[0] = 0
    s = 0
    idx = 96
    while 256 > idx:
        stor0[s].field_0 = mem[idx + 12 len 20]
        s = s + 1
        idx = idx + 32
        continue 
    idx = 5
    while stor0.length > idx:
        stor0[idx].field_0 = 0
        idx = idx + 1
        continue 
    mem[256] = stor0.length
    if not stor0.length:
        require 0 < stor0.length
        require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
        call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[288]), defaultAmount
        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 64
        require 0 < stor0.length
        require ext_code.size(mem[300 len 20])
        call mem[300 len 20].0x313ce567 with:
             gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 10^(-ext_call.return_data[0] + 18)
        mem[(32 * stor0.length) + 324] = arg1
        mem[(32 * stor0.length) + 356] = ext_call.return_data[0] * defaultAmount / 10^18 / 10^(-ext_call.return_data[0] + 18)
        mem[(32 * stor0.length) + 292] = 96
        mem[(32 * stor0.length) + 388] = stor0.length
        mem[(32 * stor0.length) + 420 len floor32(stor0.length)] = mem[288 len floor32(stor0.length)]
        require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
        call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
             gas gas_remaining wei
            args Array(len=stor0.length, data=mem[288 len floor32(stor0.length)], mem[(32 * stor0.length) + floor32(stor0.length) + 420 len (32 * stor0.length) - floor32(stor0.length)]), address(arg1), ext_call.return_data[0] * defaultAmount / 10^18 / 10^(-ext_call.return_data[0] + 18)
        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 2 < stor0.length
        _1084 = mem[352]
        require 4 < stor0.length
        _1086 = mem[416]
        mem[(32 * stor0.length) + 324] = mem[428 len 20]
        mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
        require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
        call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args address(_1084), address(_1086), ext_call.return_data[0]
        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 64
        require ext_call.return_data[0] * defaultAmount / 10^18
        require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
        if ext_call.return_data[0] * defaultAmount / 10^18 <= 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
            return 0, 0, 1, 0
        mem[64] = (64 * stor0.length) + 320
        mem[(32 * stor0.length) + 288] = stor0.length
        if not stor0.length:
            require 0 < stor0.length
            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(ext_call.return_data[32]), defaultAmount
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require 0 < stor0.length
            require ext_code.size(address(ext_call.return_data[32]))
            call address(ext_call.return_data[32]).0x313ce567 with:
                 gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 10^(-ext_call.return_data[0] + 18)
            mem[(64 * stor0.length) + 320] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
            mem[(64 * stor0.length) + 356] = arg1
            mem[(64 * stor0.length) + 388] = ext_call.return_data[0] * defaultAmount / 10^18 / 10^(-ext_call.return_data[0] + 18)
            mem[(64 * stor0.length) + 324] = 96
            mem[(64 * stor0.length) + 420] = stor0.length
            mem[(64 * stor0.length) + 452 len floor32(stor0.length)] = mem[(32 * stor0.length) + 320 len floor32(stor0.length)]
            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                 gas gas_remaining wei
                args mem[(64 * stor0.length) + 324 len (161 * stor0.length) + 128]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 2 < stor0.length
            require 4 < stor0.length
            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(stor0.length.field_32), address(mem[(32 * stor0.length) + 448]), ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require ext_call.return_data[0] * defaultAmount / 10^18
            require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
            require 0 < stor0.length
            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(ext_call.return_data[32]), 2 * defaultAmount
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require 0 < stor0.length
            require ext_code.size(address(ext_call.return_data[32]))
            call address(ext_call.return_data[32]).0x313ce567 with:
                 gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 10^(-ext_call.return_data[0] + 18)
            mem[(64 * stor0.length) + 320] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
            mem[(64 * stor0.length) + 356] = arg1
            mem[(64 * stor0.length) + 388] = ext_call.return_data[0] * 2 * defaultAmount / 10^18 / 10^(-ext_call.return_data[0] + 18)
            mem[(64 * stor0.length) + 324] = 96
            mem[(64 * stor0.length) + 420] = stor0.length
            mem[(64 * stor0.length) + 452 len floor32(stor0.length)] = mem[(32 * stor0.length) + 320 len floor32(stor0.length)]
            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                 gas gas_remaining wei
                args mem[(64 * stor0.length) + 324 len (32 * stor0.length) + 128]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 2 < stor0.length
            require 4 < stor0.length
            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(stor0.length.field_32), address(mem[(32 * stor0.length) + 448]), ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require ext_call.return_data[0] * 2 * defaultAmount / 10^18
            require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18
            require (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18)
            require 0 < stor0.length
            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(ext_call.return_data[32]), 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require 0 < stor0.length
            require ext_code.size(address(ext_call.return_data[32]))
            call address(ext_call.return_data[32]).0x313ce567 with:
                 gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 10^(-ext_call.return_data[0] + 18)
            mem[(64 * stor0.length) + 320] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
            mem[(64 * stor0.length) + 356] = arg1
            mem[(64 * stor0.length) + 388] = ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
            mem[(64 * stor0.length) + 324] = 96
            mem[(64 * stor0.length) + 420] = stor0.length
            mem[(64 * stor0.length) + 452 len floor32(stor0.length)] = mem[(32 * stor0.length) + 320 len floor32(stor0.length)]
            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                 gas gas_remaining wei
                args mem[(64 * stor0.length) + 324 len (32 * stor0.length) + 128]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 2 < stor0.length
            require 4 < stor0.length
            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(stor0.length.field_32), address(mem[(32 * stor0.length) + 448]), ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18
            require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18
            if ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 <= 10^18 * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18:
                require 0 < stor0.length
                require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(ext_call.return_data[32]), 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require 0 < stor0.length
                require ext_code.size(address(ext_call.return_data[32]))
                call address(ext_call.return_data[32]).0x313ce567 with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 10^(-ext_call.return_data[0] + 18)
                mem[(64 * stor0.length) + 320] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                mem[(64 * stor0.length) + 356] = arg1
                mem[(64 * stor0.length) + 388] = ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                mem[(64 * stor0.length) + 324] = 96
                mem[(64 * stor0.length) + 420] = stor0.length
                mem[(64 * stor0.length) + 452 len floor32(stor0.length)] = mem[(32 * stor0.length) + 320 len floor32(stor0.length)]
                require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                     gas gas_remaining wei
                    args mem[(64 * stor0.length) + 324 len (32 * stor0.length) + 128]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < stor0.length
                require 4 < stor0.length
                require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args address(stor0.length.field_32), address(mem[(32 * stor0.length) + 448]), ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18
                require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18
                if ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 <= 10^18 * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18:
                    require 0 < stor0.length
                    require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                    call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(ext_call.return_data[32]), (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 0 < stor0.length
                    require ext_code.size(address(ext_call.return_data[32]))
                    call address(ext_call.return_data[32]).0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(64 * stor0.length) + 320] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                    mem[(64 * stor0.length) + 356] = arg1
                    mem[(64 * stor0.length) + 388] = ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                    mem[(64 * stor0.length) + 324] = 96
                    mem[(64 * stor0.length) + 420] = stor0.length
                    mem[(64 * stor0.length) + 452 len floor32(stor0.length)] = mem[(32 * stor0.length) + 320 len floor32(stor0.length)]
                    require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                    call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                         gas gas_remaining wei
                        args mem[(64 * stor0.length) + 324 len (32 * stor0.length) + 128]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _12947 = mem[(32 * stor0.length) + 448]
                    mem[(64 * stor0.length) + 356] = mem[(32 * stor0.length) + 460 len 20]
                    mem[(64 * stor0.length) + 388] = ext_call.return_data[0]
                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args address(stor0.length.field_32), address(_12947), ext_call.return_data[0]
                    mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18
                    require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18
                    if ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 <= 10^18 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18:
                        if (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 <= 0:
                            return 0, 
                                   0,
                                   10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18,
                                   ext_call.return_data[0] * defaultAmount / 10^18
                        if not stor0.length:
                            require 0 < stor0.length
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(ext_call.return_data[32]), (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < stor0.length
                            require ext_code.size(address(ext_call.return_data[32]))
                            call address(ext_call.return_data[32]).0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[(98 * stor0.length) + 388] = arg1
                            mem[(98 * stor0.length) + 420] = ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[(98 * stor0.length) + 356] = 96
                            mem[(98 * stor0.length) + 452] = stor0.length
                            mem[(98 * stor0.length) + 484 len floor32(stor0.length)] = mem[(64 * stor0.length) + 352 len floor32(stor0.length)]
                            var227001 = floor32(stor0.length)
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args Array(len=stor0.length, data=mem[(64 * stor0.length) + 352 len floor32(stor0.length)], mem[(98 * stor0.length) + floor32(stor0.length) + 484 len (33 * stor0.length) - floor32(stor0.length)]), address(arg1), ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[(98 * stor0.length) + 352] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args address(stor0.length.field_32), address(mem[(64 * stor0.length) + 480]), ext_call.return_data[0]
                        else:
                            mem[(64 * stor0.length) + 352] = address(stor0.field_0)
                            idx = (64 * stor0.length) + 352
                            s = 0
                            while (98 * stor0.length) + 320 > idx:
                                mem[idx + 32] = stor0[s].field_256
                                idx = idx + 32
                                s = s + 1
                                continue 
                            require 0 < stor0.length
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[(64 * stor0.length) + 352]), (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                            mem[(98 * stor0.length) + 352 len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < stor0.length
                            require ext_code.size(mem[(64 * stor0.length) + 364 len 20])
                            call mem[(64 * stor0.length) + 364 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[(98 * stor0.length) + 388] = arg1
                            mem[(98 * stor0.length) + 420] = ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[(98 * stor0.length) + 356] = 96
                            mem[(98 * stor0.length) + 452] = stor0.length
                            mem[(98 * stor0.length) + 484 len floor32(stor0.length)] = mem[(64 * stor0.length) + 352 len floor32(stor0.length)]
                            var231001 = floor32(stor0.length)
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args Array(len=stor0.length, data=mem[(64 * stor0.length) + 352 len floor32(stor0.length)], mem[(98 * stor0.length) + floor32(stor0.length) + 484 len (33 * stor0.length) - floor32(stor0.length)]), address(arg1), ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[(98 * stor0.length) + 352] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _23394 = mem[(64 * stor0.length) + 480]
                            mem[(98 * stor0.length) + 356] = mem[(64 * stor0.length) + 428 len 20]
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[(98 * stor0.length) + 356], address(_23394), ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18
                        require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18
                        if ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 <= 10^18 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18:
                            require ext_code.size(arg2)
                            call arg2.0x70a08231 with:
                                 gas gas_remaining wei
                                args 0x63825c174ab367968ec60f061753d3bbd36a0d8f
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(arg2)
                            call arg2.0x70a08231 with:
                                 gas gas_remaining wei
                                args arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            return 0, 2, ext_call.return_data[0], ext_call.return_data[0]
                        require 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args 0x63825c174ab367968ec60f061753d3bbd36a0d8f
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args arg1
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        return (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10, 
                               (10^18 * ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18) - (10^18 * 10^18 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18,
                               ext_call.return_data[0],
                               ext_call.return_data[0]
                    require 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                    s = 11
                    t = (10^18 * ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18) - (10^18 * 10^18 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 * mem[mem[64]] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                    u = 2
                    v = (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                    while u > t:
                        require 0 < mem[(32 * stor0.length) + 288]
                        _16604 = mem[(32 * stor0.length) + 320]
                        mem[mem[64] + 36] = mem[(32 * stor0.length) + 332 len 20]
                        mem[mem[64] + 68] = (v * s / 10) + (s * v * s / 10) / 10
                        require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                        call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_16604), (v * s / 10) + (s * v * s / 10) / 10
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 0 < mem[(32 * stor0.length) + 288]
                        require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                        call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        _16883 = mem[64]
                        mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 36] = arg1
                        mem[mem[64] + 68] = ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64] + 4] = 96
                        mem[mem[64] + 100] = mem[(32 * stor0.length) + 288]
                        _16885 = mem[(32 * stor0.length) + 288]
                        idx = 0
                        while idx < 32 * _16885:
                            mem[mem[64] + idx + 132] = mem[(32 * stor0.length) + idx + 320]
                            idx = idx + 32
                            continue 
                        require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                        call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len (32 * _16885) + _16883 + -mem[64] + 128]
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if 2 < mem[(32 * stor0.length) + 288]:
                            if 4 < mem[(32 * stor0.length) + 288]:
                                _20211 = mem[(32 * stor0.length) + 448]
                                mem[mem[64] + 4] = mem[(32 * stor0.length) + 396 len 20]
                                mem[mem[64] + 36] = address(_20211)
                                mem[mem[64] + 68] = ext_call.return_data[0]
                                require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                                call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4], address(_20211), ext_call.return_data[0]
                                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 64
                                if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                        if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 <= 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                            s = s + 1
                                            t = u
                                            u = 2
                                            v = v * s / 10
                                            continue 
                                        if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                            s = s + 1
                                            t = u
                                            u = (10^18 * ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) - (10^18 * 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                            v = v * s / 10
                                            continue 
                        revert
                    s = 9
                    u = t
                    w = 2
                    x = v
                    while w > u:
                        require 0 < mem[(32 * stor0.length) + 288]
                        _20208 = mem[(32 * stor0.length) + 320]
                        mem[mem[64] + 36] = mem[(32 * stor0.length) + 332 len 20]
                        mem[mem[64] + 68] = -(x * s / 10) + (s * x * s / 10) / 10
                        require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                        call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_20208), -(x * s / 10) + (s * x * s / 10) / 10
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 0 < mem[(32 * stor0.length) + 288]
                        require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                        call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        _20465 = mem[64]
                        mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 36] = arg1
                        mem[mem[64] + 68] = ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64] + 4] = 96
                        mem[mem[64] + 100] = mem[(32 * stor0.length) + 288]
                        _20467 = mem[(32 * stor0.length) + 288]
                        idx = 0
                        while idx < 32 * _20467:
                            mem[mem[64] + idx + 132] = mem[(32 * stor0.length) + idx + 320]
                            idx = idx + 32
                            continue 
                        require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                        call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len (32 * _20467) + _20465 + -mem[64] + 128]
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if 2 < mem[(32 * stor0.length) + 288]:
                            if 4 < mem[(32 * stor0.length) + 288]:
                                _23400 = mem[(32 * stor0.length) + 448]
                                mem[mem[64] + 4] = mem[(32 * stor0.length) + 396 len 20]
                                mem[mem[64] + 36] = address(_23400)
                                mem[mem[64] + 68] = ext_call.return_data[0]
                                require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                                call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4], address(_23400), ext_call.return_data[0]
                                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 64
                                if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                        if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 <= 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                            s = s - 1
                                            u = w
                                            w = 2
                                            x = x * s / 10
                                            continue 
                                        if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                            s = s - 1
                                            u = w
                                            w = (10^18 * ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) - (10^18 * 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                            x = x * s / 10
                                            continue 
                        revert
                    if x <= 0:
                        return 0, 
                               0,
                               10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18,
                               ext_call.return_data[0] * defaultAmount / 10^18
                    _20089 = mem[64]
                    mem[64] = mem[64] + (32 * stor0.length) + 32
                    mem[_20089] = stor0.length
                    if not stor0.length:
                        require 0 < stor0.length
                        _20282 = mem[_20089 + 32]
                        mem[mem[64] + 36] = mem[_20089 + 44 len 20]
                        mem[mem[64] + 68] = x
                        require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                        call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_20282), x
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 0 < stor0.length
                        require ext_code.size(mem[_20089 + 44 len 20])
                        call mem[_20089 + 44 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 36] = arg1
                        mem[mem[64] + 68] = ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64] + 4] = 96
                        mem[mem[64] + 100] = stor0.length
                        mem[mem[64] + 132 len floor32(stor0.length)] = mem[_20089 + 32 len floor32(stor0.length)]
                        var230001 = floor32(stor0.length)
                        require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                        call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                             gas gas_remaining wei
                            args Array(len=stor0.length, data=mem[mem[64] + 132 len 32 * stor0.length]), address(arg1), ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _23397 = mem[_20089 + 160]
                        mem[mem[64] + 4] = mem[_20089 + 108 len 20]
                        require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                        call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4], address(_23397), ext_call.return_data[0]
                    else:
                        mem[_20089 + 32] = address(stor0.field_0)
                        idx = _20089 + 32
                        s = 0
                        while _20089 + (32 * stor0.length) > idx:
                            mem[idx + 32] = stor0[s].field_256
                            idx = idx + 32
                            s = s + 1
                            continue 
                        require 0 < stor0.length
                        _26091 = mem[_20089 + 32]
                        mem[mem[64] + 36] = mem[_20089 + 44 len 20]
                        mem[mem[64] + 68] = x
                        require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                        call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_26091), x
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 0 < stor0.length
                        require ext_code.size(mem[_20089 + 44 len 20])
                        call mem[_20089 + 44 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 36] = arg1
                        mem[mem[64] + 68] = ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64] + 4] = 96
                        mem[mem[64] + 100] = stor0.length
                        mem[mem[64] + 132 len floor32(stor0.length)] = mem[_20089 + 32 len floor32(stor0.length)]
                        var234001 = floor32(stor0.length)
                        require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                        call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                             gas gas_remaining wei
                            args Array(len=stor0.length, data=mem[mem[64] + 132 len 32 * stor0.length]), address(arg1), ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _28751 = mem[_20089 + 160]
                        mem[mem[64] + 4] = mem[_20089 + 108 len 20]
                        require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                        call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4], address(_28751), ext_call.return_data[0]
                else:
                    require 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                    require 0 < stor0.length
                    require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                    call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(ext_call.return_data[32]), (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 0 < stor0.length
                    require ext_code.size(address(ext_call.return_data[32]))
                    call address(ext_call.return_data[32]).0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(64 * stor0.length) + 320] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                    mem[(64 * stor0.length) + 356] = arg1
                    mem[(64 * stor0.length) + 388] = ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                    mem[(64 * stor0.length) + 324] = 96
                    mem[(64 * stor0.length) + 420] = stor0.length
                    mem[(64 * stor0.length) + 452 len floor32(stor0.length)] = mem[(32 * stor0.length) + 320 len floor32(stor0.length)]
                    require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                    call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                         gas gas_remaining wei
                        args mem[(64 * stor0.length) + 324 len (32 * stor0.length) + 128]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _12950 = mem[(32 * stor0.length) + 448]
                    mem[(64 * stor0.length) + 356] = mem[(32 * stor0.length) + 460 len 20]
                    mem[(64 * stor0.length) + 388] = ext_call.return_data[0]
                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args address(stor0.length.field_32), address(_12950), ext_call.return_data[0]
                    mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18
                    require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18
                    if ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 <= 10^18 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18:
                        s = 9
                        t = 2
                        u = (10^18 * ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) - (10^18 * 10^18 * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                        v = (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                        while u > t:
                            require 0 < mem[(32 * stor0.length) + 288]
                            mem[(64 * stor0.length) + 356] = mem[(32 * stor0.length) + 332 len 20]
                            mem[(64 * stor0.length) + 388] = -(v * s / 10) + (s * v * s / 10) / 10
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[(32 * stor0.length) + 320]), -(v * s / 10) + (s * v * s / 10) / 10
                            mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < mem[(32 * stor0.length) + 288]
                            require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                            call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[(64 * stor0.length) + 320] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[(64 * stor0.length) + 356] = arg1
                            mem[(64 * stor0.length) + 388] = ext_call.return_data[0] * -(v * s / 10) + (s * v * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[(64 * stor0.length) + 324] = 96
                            mem[(64 * stor0.length) + 420] = mem[(32 * stor0.length) + 288]
                            _16889 = mem[(32 * stor0.length) + 288]
                            idx = 0
                            while idx < 32 * _16889:
                                mem[mem[64] + idx + 132] = mem[(32 * stor0.length) + idx + 320]
                                idx = idx + 32
                                continue 
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len (32 * _16889) + (64 * stor0.length) + -mem[64] + 448]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 2 < mem[(32 * stor0.length) + 288]:
                                if 4 < mem[(32 * stor0.length) + 288]:
                                    _20217 = mem[(32 * stor0.length) + 448]
                                    mem[mem[64] + 4] = mem[(32 * stor0.length) + 396 len 20]
                                    mem[mem[64] + 36] = address(_20217)
                                    mem[mem[64] + 68] = ext_call.return_data[0]
                                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4], address(_20217), ext_call.return_data[0]
                                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 64
                                    if ext_call.return_data[0] * -(v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                            if ext_call.return_data[0] * -(v * s / 10) + (s * v * s / 10) / 10 / 10^18 <= 10^18 * -(v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                                s = s - 1
                                                t = u
                                                u = 2
                                                v = v * s / 10
                                                continue 
                                            if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                                s = s - 1
                                                t = u
                                                u = (10^18 * ext_call.return_data[0] * -(v * s / 10) + (s * v * s / 10) / 10 / 10^18) - (10^18 * 10^18 * -(v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(v * s / 10) + (s * v * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                                v = v * s / 10
                                                continue 
                            revert
                        if v <= 0:
                            return 0, 
                                   0,
                                   10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18,
                                   ext_call.return_data[0] * defaultAmount / 10^18
                        if not stor0.length:
                            require 0 < stor0.length
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[(64 * stor0.length) + 352]), v
                            mem[(98 * stor0.length) + 352 len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < stor0.length
                            require ext_code.size(mem[(64 * stor0.length) + 364 len 20])
                            call mem[(64 * stor0.length) + 364 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[(98 * stor0.length) + 388] = arg1
                            mem[(98 * stor0.length) + 420] = ext_call.return_data[0] * v / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[(98 * stor0.length) + 356] = 96
                            mem[(98 * stor0.length) + 452] = stor0.length
                            mem[(98 * stor0.length) + 484 len floor32(stor0.length)] = mem[(64 * stor0.length) + 352 len floor32(stor0.length)]
                            var229001 = floor32(stor0.length)
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args Array(len=stor0.length, data=mem[(64 * stor0.length) + 352 len floor32(stor0.length)], mem[(98 * stor0.length) + floor32(stor0.length) + 484 len (33 * stor0.length) - floor32(stor0.length)]), address(arg1), ext_call.return_data[0] * v / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[(98 * stor0.length) + 352] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _20214 = mem[(64 * stor0.length) + 480]
                            mem[(98 * stor0.length) + 356] = mem[(64 * stor0.length) + 428 len 20]
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[(98 * stor0.length) + 356], address(_20214), ext_call.return_data[0]
                        else:
                            mem[(64 * stor0.length) + 352] = address(stor0.field_0)
                            idx = (64 * stor0.length) + 352
                            s = 0
                            while (98 * stor0.length) + 320 > idx:
                                mem[idx + 32] = stor0[s].field_256
                                idx = idx + 32
                                s = s + 1
                                continue 
                            require 0 < stor0.length
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[(64 * stor0.length) + 352]), v
                            mem[(98 * stor0.length) + 352 len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < stor0.length
                            require ext_code.size(mem[(64 * stor0.length) + 364 len 20])
                            call mem[(64 * stor0.length) + 364 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[(98 * stor0.length) + 388] = arg1
                            mem[(98 * stor0.length) + 420] = ext_call.return_data[0] * v / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[(98 * stor0.length) + 356] = 96
                            mem[(98 * stor0.length) + 452] = stor0.length
                            mem[(98 * stor0.length) + 484 len floor32(stor0.length)] = mem[(64 * stor0.length) + 352 len floor32(stor0.length)]
                            var233001 = floor32(stor0.length)
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args Array(len=stor0.length, data=mem[(98 * stor0.length) + 484 len 32 * stor0.length]), address(arg1), ext_call.return_data[0] * v / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[(98 * stor0.length) + 352] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _26290 = mem[(64 * stor0.length) + 480]
                            mem[(98 * stor0.length) + 356] = mem[(64 * stor0.length) + 428 len 20]
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[(98 * stor0.length) + 356], address(_26290), ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require ext_call.return_data[0] * v / 10^18
                        require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * v / 10^18
                        if ext_call.return_data[0] * v / 10^18 <= 10^18 * v / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * v / 10^18:
                            require ext_code.size(arg2)
                            call arg2.0x70a08231 with:
                                 gas gas_remaining wei
                                args 0x63825c174ab367968ec60f061753d3bbd36a0d8f
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(arg2)
                            call arg2.0x70a08231 with:
                                 gas gas_remaining wei
                                args address(arg1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            return 0, 2, ext_call.return_data[0], ext_call.return_data[0]
                        require 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args 0x63825c174ab367968ec60f061753d3bbd36a0d8f
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(arg1)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        return v, 
                               (10^18 * ext_call.return_data[0] * v / 10^18) - (10^18 * 10^18 * v / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * v / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18,
                               ext_call.return_data[0],
                               ext_call.return_data[0]
                    require 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                    s = 11
                    t = (10^18 * ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18) - (10^18 * 10^18 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 * mem[(64 * stor0.length) + 320] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                    u = 2
                    v = (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                    while u > t:
                        require 0 < mem[(32 * stor0.length) + 288]
                        mem[(64 * stor0.length) + 356] = mem[(32 * stor0.length) + 332 len 20]
                        mem[(64 * stor0.length) + 388] = (v * s / 10) + (s * v * s / 10) / 10
                        require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                        call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[(32 * stor0.length) + 320]), (v * s / 10) + (s * v * s / 10) / 10
                        mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 0 < mem[(32 * stor0.length) + 288]
                        require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                        call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[(64 * stor0.length) + 320] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                        mem[(64 * stor0.length) + 356] = arg1
                        mem[(64 * stor0.length) + 388] = ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                        mem[(64 * stor0.length) + 324] = 96
                        mem[(64 * stor0.length) + 420] = mem[(32 * stor0.length) + 288]
                        _16893 = mem[(32 * stor0.length) + 288]
                        idx = 0
                        while idx < 32 * _16893:
                            mem[mem[64] + idx + 132] = mem[(32 * stor0.length) + idx + 320]
                            idx = idx + 32
                            continue 
                        require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                        call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len (32 * _16893) + (64 * stor0.length) + -mem[64] + 448]
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if 2 < mem[(32 * stor0.length) + 288]:
                            if 4 < mem[(32 * stor0.length) + 288]:
                                _20224 = mem[(32 * stor0.length) + 448]
                                mem[mem[64] + 4] = mem[(32 * stor0.length) + 396 len 20]
                                mem[mem[64] + 36] = address(_20224)
                                mem[mem[64] + 68] = ext_call.return_data[0]
                                require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                                call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4], address(_20224), ext_call.return_data[0]
                                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 64
                                if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                        if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 <= 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                            s = s + 1
                                            t = u
                                            u = 2
                                            v = v * s / 10
                                            continue 
                                        if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                            s = s + 1
                                            t = u
                                            u = (10^18 * ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) - (10^18 * 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                            v = v * s / 10
                                            continue 
                        revert
                    s = 9
                    u = t
                    w = (10^18 * ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) - (10^18 * 10^18 * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                    x = v
                    while w > u:
                        require 0 < mem[(32 * stor0.length) + 288]
                        _20221 = mem[(32 * stor0.length) + 320]
                        mem[mem[64] + 36] = mem[(32 * stor0.length) + 332 len 20]
                        mem[mem[64] + 68] = -(x * s / 10) + (s * x * s / 10) / 10
                        require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                        call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_20221), -(x * s / 10) + (s * x * s / 10) / 10
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 0 < mem[(32 * stor0.length) + 288]
                        require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                        call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 36] = arg1
                        mem[mem[64] + 68] = ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64] + 4] = 96
                        mem[mem[64] + 100] = mem[(32 * stor0.length) + 288]
                        _20471 = mem[(32 * stor0.length) + 288]
                        idx = 0
                        while idx < 32 * _20471:
                            mem[mem[64] + idx + 132] = mem[(32 * stor0.length) + idx + 320]
                            idx = idx + 32
                            continue 
                        require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                        call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                             gas gas_remaining wei
                            args 96, address(arg1), ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18), mem[mem[64] + 100 len (32 * _20471) + 32]
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if 2 < mem[(32 * stor0.length) + 288]:
                            if 4 < mem[(32 * stor0.length) + 288]:
                                _23408 = mem[(32 * stor0.length) + 448]
                                mem[mem[64] + 4] = mem[(32 * stor0.length) + 396 len 20]
                                mem[mem[64] + 36] = address(_23408)
                                mem[mem[64] + 68] = ext_call.return_data[0]
                                require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                                call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4], address(_23408), ext_call.return_data[0]
                                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 64
                                if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                        if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 <= 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                            s = s - 1
                                            u = w
                                            w = 2
                                            x = x * s / 10
                                            continue 
                                        if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                            s = s - 1
                                            u = w
                                            w = (10^18 * ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) - (10^18 * 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                            x = x * s / 10
                                            continue 
                        revert
                    if x <= 0:
                        return 0, 
                               0,
                               10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18,
                               ext_call.return_data[0] * defaultAmount / 10^18
                    _20093 = mem[64]
                    mem[64] = mem[64] + (32 * stor0.length) + 32
                    mem[_20093] = stor0.length
                    if not stor0.length:
                        require 0 < stor0.length
                        _20285 = mem[_20093 + 32]
                        mem[mem[64] + 36] = mem[_20093 + 44 len 20]
                        mem[mem[64] + 68] = x
                        require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                        call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_20285), x
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 0 < stor0.length
                        require ext_code.size(mem[_20093 + 44 len 20])
                        call mem[_20093 + 44 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 36] = arg1
                        mem[mem[64] + 68] = ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64] + 4] = 96
                        mem[mem[64] + 100] = stor0.length
                        mem[mem[64] + 132 len floor32(stor0.length)] = mem[_20093 + 32 len floor32(stor0.length)]
                        var231001 = floor32(stor0.length)
                        require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                        call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                             gas gas_remaining wei
                            args Array(len=stor0.length, data=mem[mem[64] + 132 len 32 * stor0.length]), address(arg1), ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _23405 = mem[_20093 + 160]
                        mem[mem[64] + 4] = mem[_20093 + 108 len 20]
                        require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                        call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4], address(_23405), ext_call.return_data[0]
                    else:
                        mem[_20093 + 32] = address(stor0.field_0)
                        idx = _20093 + 32
                        s = 0
                        while _20093 + (32 * stor0.length) > idx:
                            mem[idx + 32] = stor0[s].field_256
                            idx = idx + 32
                            s = s + 1
                            continue 
                        require 0 < stor0.length
                        _26095 = mem[_20093 + 32]
                        mem[mem[64] + 36] = mem[_20093 + 44 len 20]
                        mem[mem[64] + 68] = x
                        require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                        call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_26095), x
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 0 < stor0.length
                        require ext_code.size(mem[_20093 + 44 len 20])
                        call mem[_20093 + 44 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 36] = arg1
                        mem[mem[64] + 68] = ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64] + 4] = 96
                        mem[mem[64] + 100] = stor0.length
                        mem[mem[64] + 132 len floor32(stor0.length)] = mem[_20093 + 32 len floor32(stor0.length)]
                        var235001 = floor32(stor0.length)
                        require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                        call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                             gas gas_remaining wei
                            args Array(len=stor0.length, data=mem[mem[64] + 132 len 32 * stor0.length]), address(arg1), ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _28754 = mem[_20093 + 160]
                        mem[mem[64] + 4] = mem[_20093 + 108 len 20]
                        require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                        call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4], address(_28754), ext_call.return_data[0]
            else:
                require 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                require 0 < stor0.length
                require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(ext_call.return_data[32]), 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require 0 < stor0.length
                require ext_code.size(address(ext_call.return_data[32]))
                call address(ext_call.return_data[32]).0x313ce567 with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 10^(-ext_call.return_data[0] + 18)
                mem[(64 * stor0.length) + 320] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                mem[(64 * stor0.length) + 356] = arg1
                mem[(64 * stor0.length) + 388] = ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                mem[(64 * stor0.length) + 324] = 96
                mem[(64 * stor0.length) + 420] = stor0.length
                mem[(64 * stor0.length) + 452 len floor32(stor0.length)] = mem[(32 * stor0.length) + 320 len floor32(stor0.length)]
                require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                     gas gas_remaining wei
                    args mem[(64 * stor0.length) + 324 len (32 * stor0.length) + 128]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < stor0.length
                require 4 < stor0.length
                require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args address(stor0.length.field_32), address(mem[(32 * stor0.length) + 448]), ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18
                require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18
                if ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 <= 10^18 * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18:
                    require 0 < stor0.length
                    require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                    call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(ext_call.return_data[32]), (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 0 < stor0.length
                    require ext_code.size(address(ext_call.return_data[32]))
                    call address(ext_call.return_data[32]).0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(64 * stor0.length) + 320] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                    mem[(64 * stor0.length) + 356] = arg1
                    mem[(64 * stor0.length) + 388] = ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                    mem[(64 * stor0.length) + 324] = 96
                    mem[(64 * stor0.length) + 420] = stor0.length
                    mem[(64 * stor0.length) + 452 len floor32(stor0.length)] = mem[(32 * stor0.length) + 320 len floor32(stor0.length)]
                    require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                    call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                         gas gas_remaining wei
                        args mem[(64 * stor0.length) + 324 len (32 * stor0.length) + 128]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _12953 = mem[(32 * stor0.length) + 448]
                    mem[(64 * stor0.length) + 356] = mem[(32 * stor0.length) + 460 len 20]
                    mem[(64 * stor0.length) + 388] = ext_call.return_data[0]
                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args address(stor0.length.field_32), address(_12953), ext_call.return_data[0]
                    mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18
                    require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18
                    if ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 <= 10^18 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18:
                        s = 11
                        t = 2
                        u = (10^18 * ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) - (10^18 * 10^18 * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                        v = (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                        while u > t:
                            require 0 < mem[(32 * stor0.length) + 288]
                            _16616 = mem[(32 * stor0.length) + 320]
                            mem[mem[64] + 36] = mem[(32 * stor0.length) + 332 len 20]
                            mem[mem[64] + 68] = (v * s / 10) + (s * v * s / 10) / 10
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_16616), (v * s / 10) + (s * v * s / 10) / 10
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < mem[(32 * stor0.length) + 288]
                            require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                            call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = mem[(32 * stor0.length) + 288]
                            _16897 = mem[(32 * stor0.length) + 288]
                            idx = 0
                            while idx < 32 * _16897:
                                mem[mem[64] + idx + 132] = mem[(32 * stor0.length) + idx + 320]
                                idx = idx + 32
                                continue 
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args 96, address(arg1), ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18), mem[mem[64] + 100 len (32 * _16897) + 32]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 2 < mem[(32 * stor0.length) + 288]:
                                if 4 < mem[(32 * stor0.length) + 288]:
                                    _20231 = mem[(32 * stor0.length) + 448]
                                    mem[mem[64] + 4] = mem[(32 * stor0.length) + 396 len 20]
                                    mem[mem[64] + 36] = address(_20231)
                                    mem[mem[64] + 68] = ext_call.return_data[0]
                                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4], address(_20231), ext_call.return_data[0]
                                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 64
                                    if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                            if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 <= 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                                s = s + 1
                                                t = u
                                                u = 2
                                                v = v * s / 10
                                                continue 
                                            if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                                s = s + 1
                                                t = u
                                                u = (10^18 * ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) - (10^18 * 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                                v = v * s / 10
                                                continue 
                            revert
                        s = 9
                        u = t
                        w = 2
                        x = v
                        while w > u:
                            require 0 < mem[(32 * stor0.length) + 288]
                            _20228 = mem[(32 * stor0.length) + 320]
                            mem[mem[64] + 36] = mem[(32 * stor0.length) + 332 len 20]
                            mem[mem[64] + 68] = -(x * s / 10) + (s * x * s / 10) / 10
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_20228), -(x * s / 10) + (s * x * s / 10) / 10
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < mem[(32 * stor0.length) + 288]
                            require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                            call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            _20473 = mem[64]
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = mem[(32 * stor0.length) + 288]
                            _20475 = mem[(32 * stor0.length) + 288]
                            idx = 0
                            while idx < 32 * _20475:
                                mem[mem[64] + idx + 132] = mem[(32 * stor0.length) + idx + 320]
                                idx = idx + 32
                                continue 
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len (32 * _20475) + _20473 + -mem[64] + 128]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 2 < mem[(32 * stor0.length) + 288]:
                                if 4 < mem[(32 * stor0.length) + 288]:
                                    _23414 = mem[(32 * stor0.length) + 448]
                                    mem[mem[64] + 4] = mem[(32 * stor0.length) + 396 len 20]
                                    mem[mem[64] + 36] = address(_23414)
                                    mem[mem[64] + 68] = ext_call.return_data[0]
                                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4], address(_23414), ext_call.return_data[0]
                                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 64
                                    if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                            if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 <= 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                                s = s - 1
                                                u = w
                                                w = 2
                                                x = x * s / 10
                                                continue 
                                            if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                                s = s - 1
                                                u = w
                                                w = (10^18 * ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) - (10^18 * 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                                x = x * s / 10
                                                continue 
                            revert
                        if x <= 0:
                            return 0, 
                                   0,
                                   10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18,
                                   ext_call.return_data[0] * defaultAmount / 10^18
                        _20095 = mem[64]
                        mem[64] = mem[64] + (32 * stor0.length) + 32
                        mem[_20095] = stor0.length
                        if not stor0.length:
                            require 0 < stor0.length
                            _20288 = mem[_20095 + 32]
                            mem[mem[64] + 36] = mem[_20095 + 44 len 20]
                            mem[mem[64] + 68] = x
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_20288), x
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < stor0.length
                            require ext_code.size(mem[_20095 + 44 len 20])
                            call mem[_20095 + 44 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = stor0.length
                            mem[mem[64] + 132 len floor32(stor0.length)] = mem[_20095 + 32 len floor32(stor0.length)]
                            var230001 = floor32(stor0.length)
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args Array(len=stor0.length, data=mem[mem[64] + 132 len 32 * stor0.length]), address(arg1), ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _23411 = mem[_20095 + 160]
                            mem[mem[64] + 4] = mem[_20095 + 108 len 20]
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4], address(_23411), ext_call.return_data[0]
                        else:
                            mem[_20095 + 32] = address(stor0.field_0)
                            idx = _20095 + 32
                            s = 0
                            while _20095 + (32 * stor0.length) > idx:
                                mem[idx + 32] = stor0[s].field_256
                                idx = idx + 32
                                s = s + 1
                                continue 
                            require 0 < stor0.length
                            _26098 = mem[_20095 + 32]
                            mem[mem[64] + 36] = mem[_20095 + 44 len 20]
                            mem[mem[64] + 68] = x
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_26098), x
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < stor0.length
                            require ext_code.size(mem[_20095 + 44 len 20])
                            call mem[_20095 + 44 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = stor0.length
                            mem[mem[64] + 132 len floor32(stor0.length)] = mem[_20095 + 32 len floor32(stor0.length)]
                            var234001 = floor32(stor0.length)
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args Array(len=stor0.length, data=mem[mem[64] + 132 len 32 * stor0.length]), address(arg1), ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _28757 = mem[_20095 + 160]
                            mem[mem[64] + 4] = mem[_20095 + 108 len 20]
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4], address(_28757), ext_call.return_data[0]
                    else:
                        require 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                        s = 11
                        t = (10^18 * ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18) - (10^18 * 10^18 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 * mem[(64 * stor0.length) + 320] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                        u = (10^18 * ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) - (10^18 * 10^18 * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                        v = (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                        while u > t:
                            require 0 < mem[(32 * stor0.length) + 288]
                            mem[(64 * stor0.length) + 356] = mem[(32 * stor0.length) + 332 len 20]
                            mem[(64 * stor0.length) + 388] = (v * s / 10) + (s * v * s / 10) / 10
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[(32 * stor0.length) + 320]), (v * s / 10) + (s * v * s / 10) / 10
                            mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < mem[(32 * stor0.length) + 288]
                            require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                            call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[(64 * stor0.length) + 320] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[(64 * stor0.length) + 356] = arg1
                            mem[(64 * stor0.length) + 388] = ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[(64 * stor0.length) + 324] = 96
                            mem[(64 * stor0.length) + 420] = mem[(32 * stor0.length) + 288]
                            _16901 = mem[(32 * stor0.length) + 288]
                            idx = 0
                            while idx < 32 * _16901:
                                mem[(64 * stor0.length) + idx + 452] = mem[(32 * stor0.length) + idx + 320]
                                idx = idx + 32
                                continue 
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args 96, address(arg1), ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18), mem[(64 * stor0.length) + 420 len (32 * _16901) + 32]
                            mem[(64 * stor0.length) + 320] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 2 < mem[(32 * stor0.length) + 288]:
                                if 4 < mem[(32 * stor0.length) + 288]:
                                    _20238 = mem[(32 * stor0.length) + 448]
                                    mem[(64 * stor0.length) + 324] = mem[(32 * stor0.length) + 396 len 20]
                                    mem[(64 * stor0.length) + 356] = address(_20238)
                                    mem[(64 * stor0.length) + 388] = ext_call.return_data[0]
                                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[(64 * stor0.length) + 324], address(_20238), ext_call.return_data[0]
                                    mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 64
                                    if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                            if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 <= 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                                s = s + 1
                                                t = u
                                                u = 2
                                                v = v * s / 10
                                                continue 
                                            if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                                s = s + 1
                                                t = u
                                                u = (10^18 * ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) - (10^18 * 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                                v = v * s / 10
                                                continue 
                            revert
                        s = 9
                        u = t
                        w = 2
                        x = v
                        while w > u:
                            require 0 < mem[(32 * stor0.length) + 288]
                            _20235 = mem[(32 * stor0.length) + 320]
                            mem[mem[64] + 36] = mem[(32 * stor0.length) + 332 len 20]
                            mem[mem[64] + 68] = -(x * s / 10) + (s * x * s / 10) / 10
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_20235), -(x * s / 10) + (s * x * s / 10) / 10
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < mem[(32 * stor0.length) + 288]
                            require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                            call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = mem[(32 * stor0.length) + 288]
                            _20479 = mem[(32 * stor0.length) + 288]
                            idx = 0
                            while idx < 32 * _20479:
                                mem[mem[64] + idx + 132] = mem[(32 * stor0.length) + idx + 320]
                                idx = idx + 32
                                continue 
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args 96, address(arg1), ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18), mem[mem[64] + 100 len (32 * _20479) + 32]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 2 < mem[(32 * stor0.length) + 288]:
                                if 4 < mem[(32 * stor0.length) + 288]:
                                    _23420 = mem[(32 * stor0.length) + 448]
                                    mem[mem[64] + 4] = mem[(32 * stor0.length) + 396 len 20]
                                    mem[mem[64] + 36] = address(_23420)
                                    mem[mem[64] + 68] = ext_call.return_data[0]
                                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4], address(_23420), ext_call.return_data[0]
                                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 64
                                    if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                            if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 <= 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                                s = s - 1
                                                u = w
                                                w = 2
                                                x = x * s / 10
                                                continue 
                                            if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                                s = s - 1
                                                u = w
                                                w = (10^18 * ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) - (10^18 * 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                                x = x * s / 10
                                                continue 
                            revert
                        if x <= 0:
                            return 0, 
                                   0,
                                   10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18,
                                   ext_call.return_data[0] * defaultAmount / 10^18
                        _20097 = mem[64]
                        mem[64] = mem[64] + (32 * stor0.length) + 32
                        mem[_20097] = stor0.length
                        if not stor0.length:
                            require 0 < stor0.length
                            _20291 = mem[_20097 + 32]
                            mem[mem[64] + 36] = mem[_20097 + 44 len 20]
                            mem[mem[64] + 68] = x
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_20291), x
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < stor0.length
                            require ext_code.size(mem[_20097 + 44 len 20])
                            call mem[_20097 + 44 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = stor0.length
                            mem[mem[64] + 132 len floor32(stor0.length)] = mem[_20097 + 32 len floor32(stor0.length)]
                            var231001 = floor32(stor0.length)
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args Array(len=stor0.length, data=mem[mem[64] + 132 len 32 * stor0.length]), address(arg1), ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _23417 = mem[_20097 + 160]
                            mem[mem[64] + 4] = mem[_20097 + 108 len 20]
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4], address(_23417), ext_call.return_data[0]
                        else:
                            mem[_20097 + 32] = address(stor0.field_0)
                            idx = _20097 + 32
                            s = 0
                            while _20097 + (32 * stor0.length) > idx:
                                mem[idx + 32] = stor0[s].field_256
                                idx = idx + 32
                                s = s + 1
                                continue 
                            require 0 < stor0.length
                            _26101 = mem[_20097 + 32]
                            mem[mem[64] + 36] = mem[_20097 + 44 len 20]
                            mem[mem[64] + 68] = x
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_26101), x
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < stor0.length
                            require ext_code.size(mem[_20097 + 44 len 20])
                            call mem[_20097 + 44 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = stor0.length
                            mem[mem[64] + 132 len floor32(stor0.length)] = mem[_20097 + 32 len floor32(stor0.length)]
                            var235001 = floor32(stor0.length)
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args Array(len=stor0.length, data=mem[mem[64] + 132 len 32 * stor0.length]), address(arg1), ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _28760 = mem[_20097 + 160]
                            mem[mem[64] + 4] = mem[_20097 + 108 len 20]
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4], address(_28760), ext_call.return_data[0]
                else:
                    require 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                    require 0 < stor0.length
                    require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                    call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(ext_call.return_data[32]), (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 0 < stor0.length
                    require ext_code.size(address(ext_call.return_data[32]))
                    call address(ext_call.return_data[32]).0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(64 * stor0.length) + 320] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                    mem[(64 * stor0.length) + 356] = arg1
                    mem[(64 * stor0.length) + 388] = ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                    mem[(64 * stor0.length) + 324] = 96
                    mem[(64 * stor0.length) + 420] = stor0.length
                    mem[(64 * stor0.length) + 452 len floor32(stor0.length)] = mem[(32 * stor0.length) + 320 len floor32(stor0.length)]
                    require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                    call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                         gas gas_remaining wei
                        args mem[(64 * stor0.length) + 324 len (32 * stor0.length) + 128]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _12956 = mem[(32 * stor0.length) + 448]
                    mem[(64 * stor0.length) + 356] = mem[(32 * stor0.length) + 460 len 20]
                    mem[(64 * stor0.length) + 388] = ext_call.return_data[0]
                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args address(stor0.length.field_32), address(_12956), ext_call.return_data[0]
                    mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18
                    require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18
                    if ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 <= 10^18 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18:
                        s = 11
                        t = 2
                        u = (10^18 * ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) - (10^18 * 10^18 * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                        v = (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                        while u > t:
                            require 0 < mem[(32 * stor0.length) + 288]
                            mem[(64 * stor0.length) + 356] = mem[(32 * stor0.length) + 332 len 20]
                            mem[(64 * stor0.length) + 388] = (v * s / 10) + (s * v * s / 10) / 10
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[(32 * stor0.length) + 320]), (v * s / 10) + (s * v * s / 10) / 10
                            mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < mem[(32 * stor0.length) + 288]
                            require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                            call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[(64 * stor0.length) + 320] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[(64 * stor0.length) + 356] = arg1
                            mem[(64 * stor0.length) + 388] = ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[(64 * stor0.length) + 324] = 96
                            mem[(64 * stor0.length) + 420] = mem[(32 * stor0.length) + 288]
                            _16905 = mem[(32 * stor0.length) + 288]
                            idx = 0
                            while idx < 32 * _16905:
                                mem[(64 * stor0.length) + idx + 452] = mem[(32 * stor0.length) + idx + 320]
                                idx = idx + 32
                                continue 
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args 96, address(arg1), ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18), mem[(64 * stor0.length) + 420 len (32 * _16905) + 32]
                            mem[(64 * stor0.length) + 320] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 2 < mem[(32 * stor0.length) + 288]:
                                if 4 < mem[(32 * stor0.length) + 288]:
                                    _20245 = mem[(32 * stor0.length) + 448]
                                    mem[(64 * stor0.length) + 324] = mem[(32 * stor0.length) + 396 len 20]
                                    mem[(64 * stor0.length) + 356] = address(_20245)
                                    mem[(64 * stor0.length) + 388] = ext_call.return_data[0]
                                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[(64 * stor0.length) + 324], address(_20245), ext_call.return_data[0]
                                    mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 64
                                    if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                            if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 <= 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                                s = s + 1
                                                t = u
                                                u = 2
                                                v = v * s / 10
                                                continue 
                                            if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                                s = s + 1
                                                t = u
                                                u = (10^18 * ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) - (10^18 * 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                                v = v * s / 10
                                                continue 
                            revert
                        s = 9
                        u = t
                        w = (10^18 * ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) - (10^18 * 10^18 * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                        x = v
                        while w > u:
                            require 0 < mem[(32 * stor0.length) + 288]
                            _20242 = mem[(32 * stor0.length) + 320]
                            mem[mem[64] + 36] = mem[(32 * stor0.length) + 332 len 20]
                            mem[mem[64] + 68] = -(x * s / 10) + (s * x * s / 10) / 10
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_20242), -(x * s / 10) + (s * x * s / 10) / 10
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < mem[(32 * stor0.length) + 288]
                            require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                            call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = mem[(32 * stor0.length) + 288]
                            _20483 = mem[(32 * stor0.length) + 288]
                            idx = 0
                            while idx < 32 * _20483:
                                mem[mem[64] + idx + 132] = mem[(32 * stor0.length) + idx + 320]
                                idx = idx + 32
                                continue 
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args 96, address(arg1), ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18), mem[mem[64] + 100 len (32 * _20483) + 32]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 2 < mem[(32 * stor0.length) + 288]:
                                if 4 < mem[(32 * stor0.length) + 288]:
                                    _23426 = mem[(32 * stor0.length) + 448]
                                    mem[mem[64] + 4] = mem[(32 * stor0.length) + 396 len 20]
                                    mem[mem[64] + 36] = address(_23426)
                                    mem[mem[64] + 68] = ext_call.return_data[0]
                                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4], address(_23426), ext_call.return_data[0]
                                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 64
                                    if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                            if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 <= 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                                s = s - 1
                                                u = w
                                                w = 2
                                                x = x * s / 10
                                                continue 
                                            if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                                s = s - 1
                                                u = w
                                                w = (10^18 * ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) - (10^18 * 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                                x = x * s / 10
                                                continue 
                            revert
                        if x <= 0:
                            return 0, 
                                   0,
                                   10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18,
                                   ext_call.return_data[0] * defaultAmount / 10^18
                        _20099 = mem[64]
                        mem[64] = mem[64] + (32 * stor0.length) + 32
                        mem[_20099] = stor0.length
                        if not stor0.length:
                            require 0 < stor0.length
                            _20294 = mem[_20099 + 32]
                            mem[mem[64] + 36] = mem[_20099 + 44 len 20]
                            mem[mem[64] + 68] = x
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_20294), x
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < stor0.length
                            require ext_code.size(mem[_20099 + 44 len 20])
                            call mem[_20099 + 44 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = stor0.length
                            mem[mem[64] + 132 len floor32(stor0.length)] = mem[_20099 + 32 len floor32(stor0.length)]
                            var231001 = floor32(stor0.length)
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args Array(len=stor0.length, data=mem[mem[64] + 132 len 32 * stor0.length]), address(arg1), ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _23423 = mem[_20099 + 160]
                            mem[mem[64] + 4] = mem[_20099 + 108 len 20]
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4], address(_23423), ext_call.return_data[0]
                        else:
                            mem[_20099 + 32] = address(stor0.field_0)
                            idx = _20099 + 32
                            s = 0
                            while _20099 + (32 * stor0.length) > idx:
                                mem[idx + 32] = stor0[s].field_256
                                idx = idx + 32
                                s = s + 1
                                continue 
                            require 0 < stor0.length
                            _26104 = mem[_20099 + 32]
                            mem[mem[64] + 36] = mem[_20099 + 44 len 20]
                            mem[mem[64] + 68] = x
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_26104), x
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < stor0.length
                            require ext_code.size(mem[_20099 + 44 len 20])
                            call mem[_20099 + 44 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = stor0.length
                            mem[mem[64] + 132 len floor32(stor0.length)] = mem[_20099 + 32 len floor32(stor0.length)]
                            var235001 = floor32(stor0.length)
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args Array(len=stor0.length, data=mem[mem[64] + 132 len 32 * stor0.length]), address(arg1), ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _28763 = mem[_20099 + 160]
                            mem[mem[64] + 4] = mem[_20099 + 108 len 20]
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4], address(_28763), ext_call.return_data[0]
                    else:
                        require 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                        s = 11
                        t = (10^18 * ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18) - (10^18 * 10^18 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 * mem[(64 * stor0.length) + 320] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                        u = (10^18 * ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) - (10^18 * 10^18 * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                        v = (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                        while u > t:
                            require 0 < mem[(32 * stor0.length) + 288]
                            mem[(64 * stor0.length) + 356] = mem[(32 * stor0.length) + 332 len 20]
                            mem[(64 * stor0.length) + 388] = (v * s / 10) + (s * v * s / 10) / 10
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[(32 * stor0.length) + 320]), (v * s / 10) + (s * v * s / 10) / 10
                            mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < mem[(32 * stor0.length) + 288]
                            require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                            call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[(64 * stor0.length) + 320] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[(64 * stor0.length) + 356] = arg1
                            mem[(64 * stor0.length) + 388] = ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[(64 * stor0.length) + 324] = 96
                            mem[(64 * stor0.length) + 420] = mem[(32 * stor0.length) + 288]
                            _16909 = mem[(32 * stor0.length) + 288]
                            idx = 0
                            while idx < 32 * _16909:
                                mem[mem[64] + idx + 132] = mem[(32 * stor0.length) + idx + 320]
                                idx = idx + 32
                                continue 
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len (32 * _16909) + (64 * stor0.length) + -mem[64] + 448]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 2 < mem[(32 * stor0.length) + 288]:
                                if 4 < mem[(32 * stor0.length) + 288]:
                                    _20252 = mem[(32 * stor0.length) + 448]
                                    mem[mem[64] + 4] = mem[(32 * stor0.length) + 396 len 20]
                                    mem[mem[64] + 36] = address(_20252)
                                    mem[mem[64] + 68] = ext_call.return_data[0]
                                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4], address(_20252), ext_call.return_data[0]
                                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 64
                                    if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                            if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 <= 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                                s = s + 1
                                                t = u
                                                u = 2
                                                v = v * s / 10
                                                continue 
                                            if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                                s = s + 1
                                                t = u
                                                u = (10^18 * ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) - (10^18 * 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                                v = v * s / 10
                                                continue 
                            revert
                        s = 9
                        u = t
                        w = (10^18 * ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) - (10^18 * 10^18 * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                        x = v
                        while w > u:
                            require 0 < mem[(32 * stor0.length) + 288]
                            _20249 = mem[(32 * stor0.length) + 320]
                            mem[mem[64] + 36] = mem[(32 * stor0.length) + 332 len 20]
                            mem[mem[64] + 68] = -(x * s / 10) + (s * x * s / 10) / 10
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_20249), -(x * s / 10) + (s * x * s / 10) / 10
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < mem[(32 * stor0.length) + 288]
                            require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                            call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = mem[(32 * stor0.length) + 288]
                            _20487 = mem[(32 * stor0.length) + 288]
                            idx = 0
                            while idx < 32 * _20487:
                                mem[mem[64] + idx + 132] = mem[(32 * stor0.length) + idx + 320]
                                idx = idx + 32
                                continue 
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args 96, address(arg1), ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18), mem[mem[64] + 100 len (32 * _20487) + 32]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 2 < mem[(32 * stor0.length) + 288]:
                                if 4 < mem[(32 * stor0.length) + 288]:
                                    _23432 = mem[(32 * stor0.length) + 448]
                                    mem[mem[64] + 4] = mem[(32 * stor0.length) + 396 len 20]
                                    mem[mem[64] + 36] = address(_23432)
                                    mem[mem[64] + 68] = ext_call.return_data[0]
                                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4], address(_23432), ext_call.return_data[0]
                                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 64
                                    if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                            if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 <= 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                                s = s - 1
                                                u = w
                                                w = 2
                                                x = x * s / 10
                                                continue 
                                            if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                                s = s - 1
                                                u = w
                                                w = (10^18 * ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) - (10^18 * 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                                x = x * s / 10
                                                continue 
                            revert
                        if x <= 0:
                            return 0, 
                                   0,
                                   10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18,
                                   ext_call.return_data[0] * defaultAmount / 10^18
                        _20101 = mem[64]
                        mem[64] = mem[64] + (32 * stor0.length) + 32
                        mem[_20101] = stor0.length
                        if not stor0.length:
                            require 0 < stor0.length
                            _20297 = mem[_20101 + 32]
                            mem[mem[64] + 36] = mem[_20101 + 44 len 20]
                            mem[mem[64] + 68] = x
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_20297), x
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < stor0.length
                            require ext_code.size(mem[_20101 + 44 len 20])
                            call mem[_20101 + 44 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = stor0.length
                            mem[mem[64] + 132 len floor32(stor0.length)] = mem[_20101 + 32 len floor32(stor0.length)]
                            var232001 = floor32(stor0.length)
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args Array(len=stor0.length, data=mem[mem[64] + 132 len 32 * stor0.length]), address(arg1), ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _23429 = mem[_20101 + 160]
                            mem[mem[64] + 4] = mem[_20101 + 108 len 20]
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4], address(_23429), ext_call.return_data[0]
                        else:
                            mem[_20101 + 32] = address(stor0.field_0)
                            idx = _20101 + 32
                            s = 0
                            while _20101 + (32 * stor0.length) > idx:
                                mem[idx + 32] = stor0[s].field_256
                                idx = idx + 32
                                s = s + 1
                                continue 
                            require 0 < stor0.length
                            _26107 = mem[_20101 + 32]
                            mem[mem[64] + 36] = mem[_20101 + 44 len 20]
                            mem[mem[64] + 68] = x
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_26107), x
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < stor0.length
                            require ext_code.size(mem[_20101 + 44 len 20])
                            call mem[_20101 + 44 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = stor0.length
                            mem[mem[64] + 132 len floor32(stor0.length)] = mem[_20101 + 32 len floor32(stor0.length)]
                            var236001 = floor32(stor0.length)
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args Array(len=stor0.length, data=mem[mem[64] + 132 len 32 * stor0.length]), address(arg1), ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _28766 = mem[_20101 + 160]
                            mem[mem[64] + 4] = mem[_20101 + 108 len 20]
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4], address(_28766), ext_call.return_data[0]
        else:
            mem[0] = 0
            mem[(32 * stor0.length) + 320] = address(stor0.field_0)
            idx = (32 * stor0.length) + 320
            s = 0
            while (64 * stor0.length) + 288 > idx:
                mem[idx + 32] = stor0[s].field_256
                idx = idx + 32
                s = s + 1
                continue 
            require 0 < stor0.length
            mem[(64 * stor0.length) + 356] = mem[(32 * stor0.length) + 332 len 20]
            mem[(64 * stor0.length) + 388] = defaultAmount
            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[(32 * stor0.length) + 320]), defaultAmount
            mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require 0 < stor0.length
            require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
            call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                 gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 10^(-ext_call.return_data[0] + 18)
            mem[(64 * stor0.length) + 320] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
            mem[(64 * stor0.length) + 356] = arg1
            mem[(64 * stor0.length) + 388] = ext_call.return_data[0] * defaultAmount / 10^18 / 10^(-ext_call.return_data[0] + 18)
            mem[(64 * stor0.length) + 324] = 96
            mem[(64 * stor0.length) + 420] = stor0.length
            mem[(64 * stor0.length) + 452 len floor32(stor0.length)] = mem[(32 * stor0.length) + 320 len floor32(stor0.length)]
            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                 gas gas_remaining wei
                args mem[(64 * stor0.length) + 324 len (161 * stor0.length) + 128]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 2 < stor0.length
            require 4 < stor0.length
            _6257 = mem[(32 * stor0.length) + 448]
            mem[(64 * stor0.length) + 324] = mem[(32 * stor0.length) + 396 len 20]
            mem[(64 * stor0.length) + 356] = address(_6257)
            mem[(64 * stor0.length) + 388] = ext_call.return_data[0]
            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args mem[(64 * stor0.length) + 324], address(_6257), ext_call.return_data[0]
            mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require ext_call.return_data[0] * defaultAmount / 10^18
            require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
            require 0 < stor0.length
            mem[(64 * stor0.length) + 356] = mem[(32 * stor0.length) + 332 len 20]
            mem[(64 * stor0.length) + 388] = 2 * defaultAmount
            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[(32 * stor0.length) + 320]), 2 * defaultAmount
            mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require 0 < stor0.length
            require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
            call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                 gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 10^(-ext_call.return_data[0] + 18)
            mem[(64 * stor0.length) + 320] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
            mem[(64 * stor0.length) + 356] = arg1
            mem[(64 * stor0.length) + 388] = ext_call.return_data[0] * 2 * defaultAmount / 10^18 / 10^(-ext_call.return_data[0] + 18)
            mem[(64 * stor0.length) + 324] = 96
            mem[(64 * stor0.length) + 420] = stor0.length
            mem[(64 * stor0.length) + 452 len floor32(stor0.length)] = mem[(32 * stor0.length) + 320 len floor32(stor0.length)]
            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                 gas gas_remaining wei
                args mem[(64 * stor0.length) + 324 len (161 * stor0.length) + 128]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 2 < stor0.length
            require 4 < stor0.length
            _9178 = mem[(32 * stor0.length) + 448]
            mem[(64 * stor0.length) + 324] = mem[(32 * stor0.length) + 396 len 20]
            mem[(64 * stor0.length) + 356] = address(_9178)
            mem[(64 * stor0.length) + 388] = ext_call.return_data[0]
            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args mem[(64 * stor0.length) + 324], address(_9178), ext_call.return_data[0]
            mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require ext_call.return_data[0] * 2 * defaultAmount / 10^18
            require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18
            require (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18)
            require 0 < stor0.length
            mem[(64 * stor0.length) + 356] = mem[(32 * stor0.length) + 332 len 20]
            mem[(64 * stor0.length) + 388] = 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10
            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[(32 * stor0.length) + 320]), 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10
            mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require 0 < stor0.length
            require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
            call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                 gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 10^(-ext_call.return_data[0] + 18)
            mem[(64 * stor0.length) + 320] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
            mem[(64 * stor0.length) + 356] = arg1
            mem[(64 * stor0.length) + 388] = ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
            mem[(64 * stor0.length) + 324] = 96
            mem[(64 * stor0.length) + 420] = stor0.length
            mem[(64 * stor0.length) + 452 len floor32(stor0.length)] = mem[(32 * stor0.length) + 320 len floor32(stor0.length)]
            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                 gas gas_remaining wei
                args mem[(64 * stor0.length) + 324 len (161 * stor0.length) + 128]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 2 < stor0.length
            require 4 < stor0.length
            _12959 = mem[(32 * stor0.length) + 448]
            mem[(64 * stor0.length) + 324] = mem[(32 * stor0.length) + 396 len 20]
            mem[(64 * stor0.length) + 356] = address(_12959)
            mem[(64 * stor0.length) + 388] = ext_call.return_data[0]
            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args mem[(64 * stor0.length) + 324], address(_12959), ext_call.return_data[0]
            mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18
            require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18
            if ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 <= 10^18 * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18:
                require 0 < stor0.length
                mem[(64 * stor0.length) + 356] = mem[(32 * stor0.length) + 332 len 20]
                mem[(64 * stor0.length) + 388] = 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10
                require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[(32 * stor0.length) + 320]), 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10
                mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require 0 < stor0.length
                require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 10^(-ext_call.return_data[0] + 18)
                mem[(64 * stor0.length) + 320] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                mem[(64 * stor0.length) + 356] = arg1
                mem[(64 * stor0.length) + 388] = ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                mem[(64 * stor0.length) + 324] = 96
                mem[(64 * stor0.length) + 420] = stor0.length
                mem[(64 * stor0.length) + 452 len floor32(stor0.length)] = mem[(32 * stor0.length) + 320 len floor32(stor0.length)]
                require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                     gas gas_remaining wei
                    args mem[(64 * stor0.length) + 324 len (161 * stor0.length) + 128]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < stor0.length
                require 4 < stor0.length
                _16631 = mem[(32 * stor0.length) + 448]
                mem[(64 * stor0.length) + 324] = mem[(32 * stor0.length) + 396 len 20]
                mem[(64 * stor0.length) + 356] = address(_16631)
                mem[(64 * stor0.length) + 388] = ext_call.return_data[0]
                require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(64 * stor0.length) + 324], address(_16631), ext_call.return_data[0]
                mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18
                require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18
                if ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 <= 10^18 * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18:
                    require 0 < stor0.length
                    mem[(64 * stor0.length) + 356] = mem[(32 * stor0.length) + 332 len 20]
                    mem[(64 * stor0.length) + 388] = (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                    require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                    call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[(32 * stor0.length) + 320]), (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                    mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 0 < stor0.length
                    require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                    call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(64 * stor0.length) + 320] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                    mem[(64 * stor0.length) + 356] = arg1
                    mem[(64 * stor0.length) + 388] = ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                    mem[(64 * stor0.length) + 324] = 96
                    mem[(64 * stor0.length) + 420] = stor0.length
                    mem[(64 * stor0.length) + 452 len floor32(stor0.length)] = mem[(32 * stor0.length) + 320 len floor32(stor0.length)]
                    require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                    call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                         gas gas_remaining wei
                        args mem[(64 * stor0.length) + 324 len (161 * stor0.length) + 128]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _20255 = mem[(32 * stor0.length) + 448]
                    mem[(64 * stor0.length) + 324] = mem[(32 * stor0.length) + 396 len 20]
                    mem[(64 * stor0.length) + 356] = address(_20255)
                    mem[(64 * stor0.length) + 388] = ext_call.return_data[0]
                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(64 * stor0.length) + 324], address(_20255), ext_call.return_data[0]
                    mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18
                    require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18
                    if ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 <= 10^18 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18:
                        if (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 <= 0:
                            return 0, 
                                   0,
                                   10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18,
                                   ext_call.return_data[0] * defaultAmount / 10^18
                        if not stor0.length:
                            require 0 < stor0.length
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(ext_call.return_data[32]), (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < stor0.length
                            require ext_code.size(ext_call.return_data[44 len 20])
                            call ext_call.return_data[44 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[(98 * stor0.length) + 388] = arg1
                            mem[(98 * stor0.length) + 420] = ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[(98 * stor0.length) + 356] = 96
                            mem[(98 * stor0.length) + 452] = stor0.length
                            mem[(98 * stor0.length) + 484 len floor32(stor0.length)] = mem[(64 * stor0.length) + 352 len floor32(stor0.length)]
                            var231001 = floor32(stor0.length)
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args Array(len=stor0.length, data=mem[(64 * stor0.length) + 352 len floor32(stor0.length)], mem[(98 * stor0.length) + floor32(stor0.length) + 484 len (33 * stor0.length) - floor32(stor0.length)]), address(arg1), ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[(98 * stor0.length) + 352] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args address(stor0.length), address(mem[(64 * stor0.length) + 480]), ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18
                            require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18
                            if ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 <= 10^18 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18:
                                require ext_code.size(arg2)
                                call arg2.0x70a08231 with:
                                     gas gas_remaining wei
                                    args 0x63825c174ab367968ec60f061753d3bbd36a0d8f
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(arg2)
                                call arg2.0x70a08231 with:
                                     gas gas_remaining wei
                                    args arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                return 0, 2, ext_call.return_data[0], ext_call.return_data[0]
                            require 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                            require ext_code.size(arg2)
                            call arg2.0x70a08231 with:
                                 gas gas_remaining wei
                                args 0x63825c174ab367968ec60f061753d3bbd36a0d8f
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(arg2)
                            call arg2.0x70a08231 with:
                                 gas gas_remaining wei
                                args arg1
                        else:
                            mem[(64 * stor0.length) + 352] = address(stor0.field_0)
                            idx = (64 * stor0.length) + 352
                            s = 0
                            while (98 * stor0.length) + 320 > idx:
                                mem[idx + 32] = stor0[s].field_256
                                idx = idx + 32
                                s = s + 1
                                continue 
                            require 0 < stor0.length
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[(64 * stor0.length) + 352]), (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                            mem[(98 * stor0.length) + 352 len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < stor0.length
                            require ext_code.size(mem[(64 * stor0.length) + 364 len 20])
                            call mem[(64 * stor0.length) + 364 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[(98 * stor0.length) + 388] = arg1
                            mem[(98 * stor0.length) + 420] = ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[(98 * stor0.length) + 356] = 96
                            mem[(98 * stor0.length) + 452] = stor0.length
                            mem[(98 * stor0.length) + 484 len floor32(stor0.length)] = mem[(64 * stor0.length) + 352 len floor32(stor0.length)]
                            var235001 = floor32(stor0.length)
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args Array(len=stor0.length, data=mem[(64 * stor0.length) + 352 len floor32(stor0.length)], mem[(98 * stor0.length) + floor32(stor0.length) + 484 len (33 * stor0.length) - floor32(stor0.length)]), address(arg1), ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[(98 * stor0.length) + 352] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _28769 = mem[(64 * stor0.length) + 480]
                            mem[(98 * stor0.length) + 356] = mem[(64 * stor0.length) + 428 len 20]
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[(98 * stor0.length) + 356], address(_28769), ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18
                            require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18
                            if ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 <= 10^18 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18:
                                require ext_code.size(arg2)
                                call arg2.0x70a08231 with:
                                     gas gas_remaining wei
                                    args 0x63825c174ab367968ec60f061753d3bbd36a0d8f
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(arg2)
                                call arg2.0x70a08231 with:
                                     gas gas_remaining wei
                                    args address(arg1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                return 0, 2, ext_call.return_data[0], ext_call.return_data[0]
                            require 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                            require ext_code.size(arg2)
                            call arg2.0x70a08231 with:
                                 gas gas_remaining wei
                                args 0x63825c174ab367968ec60f061753d3bbd36a0d8f
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(arg2)
                            call arg2.0x70a08231 with:
                                 gas gas_remaining wei
                                args address(arg1)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        return (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10, 
                               (10^18 * ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18) - (10^18 * 10^18 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18,
                               ext_call.return_data[0],
                               ext_call.return_data[0]
                    require 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                    s = 11
                    t = (10^18 * ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18) - (10^18 * 10^18 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 * mem[mem[64]] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                    u = 2
                    v = (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                    while u > t:
                        require 0 < mem[(32 * stor0.length) + 288]
                        _23439 = mem[(32 * stor0.length) + 320]
                        mem[mem[64] + 36] = mem[(32 * stor0.length) + 332 len 20]
                        mem[mem[64] + 68] = (v * s / 10) + (s * v * s / 10) / 10
                        require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                        call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_23439), (v * s / 10) + (s * v * s / 10) / 10
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 0 < mem[(32 * stor0.length) + 288]
                        require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                        call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        _24002 = mem[64]
                        mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 36] = arg1
                        mem[mem[64] + 68] = ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64] + 4] = 96
                        mem[mem[64] + 100] = mem[(32 * stor0.length) + 288]
                        _24004 = mem[(32 * stor0.length) + 288]
                        idx = 0
                        while idx < 32 * _24004:
                            mem[mem[64] + idx + 132] = mem[(32 * stor0.length) + idx + 320]
                            idx = idx + 32
                            continue 
                        require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                        call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len (32 * _24004) + _24002 + -mem[64] + 128]
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if 2 < mem[(32 * stor0.length) + 288]:
                            if 4 < mem[(32 * stor0.length) + 288]:
                                _26309 = mem[(32 * stor0.length) + 448]
                                mem[mem[64] + 4] = mem[(32 * stor0.length) + 396 len 20]
                                mem[mem[64] + 36] = address(_26309)
                                mem[mem[64] + 68] = ext_call.return_data[0]
                                require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                                call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4], address(_26309), ext_call.return_data[0]
                                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 64
                                if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                        if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 <= 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                            s = s + 1
                                            t = u
                                            u = 2
                                            v = v * s / 10
                                            continue 
                                        if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                            s = s + 1
                                            t = u
                                            u = (10^18 * ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) - (10^18 * 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                            v = v * s / 10
                                            continue 
                        revert
                    s = 9
                    u = t
                    w = 2
                    x = v
                    while w > u:
                        require 0 < mem[(32 * stor0.length) + 288]
                        _26306 = mem[(32 * stor0.length) + 320]
                        mem[mem[64] + 36] = mem[(32 * stor0.length) + 332 len 20]
                        mem[mem[64] + 68] = -(x * s / 10) + (s * x * s / 10) / 10
                        require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                        call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_26306), -(x * s / 10) + (s * x * s / 10) / 10
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 0 < mem[(32 * stor0.length) + 288]
                        require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                        call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        _26807 = mem[64]
                        mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 36] = arg1
                        mem[mem[64] + 68] = ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64] + 4] = 96
                        mem[mem[64] + 100] = mem[(32 * stor0.length) + 288]
                        _26809 = mem[(32 * stor0.length) + 288]
                        idx = 0
                        while idx < 32 * _26809:
                            mem[mem[64] + idx + 132] = mem[(32 * stor0.length) + idx + 320]
                            idx = idx + 32
                            continue 
                        require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                        call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len (32 * _26809) + _26807 + -mem[64] + 128]
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if 2 < mem[(32 * stor0.length) + 288]:
                            if 4 < mem[(32 * stor0.length) + 288]:
                                _28775 = mem[(32 * stor0.length) + 448]
                                mem[mem[64] + 4] = mem[(32 * stor0.length) + 396 len 20]
                                mem[mem[64] + 36] = address(_28775)
                                mem[mem[64] + 68] = ext_call.return_data[0]
                                require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                                call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4], address(_28775), ext_call.return_data[0]
                                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 64
                                if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                        if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 <= 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                            s = s - 1
                                            u = w
                                            w = 2
                                            x = x * s / 10
                                            continue 
                                        if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                            s = s - 1
                                            u = w
                                            w = (10^18 * ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) - (10^18 * 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                            x = x * s / 10
                                            continue 
                        revert
                    if x <= 0:
                        return 0, 
                               0,
                               10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18,
                               ext_call.return_data[0] * defaultAmount / 10^18
                    _26113 = mem[64]
                    mem[64] = mem[64] + (32 * stor0.length) + 32
                    mem[_26113] = stor0.length
                    if not stor0.length:
                        require 0 < stor0.length
                        _26415 = mem[_26113 + 32]
                        mem[mem[64] + 36] = mem[_26113 + 44 len 20]
                        mem[mem[64] + 68] = x
                        require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                        call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_26415), x
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 0 < stor0.length
                        require ext_code.size(mem[_26113 + 44 len 20])
                        call mem[_26113 + 44 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 36] = arg1
                        mem[mem[64] + 68] = ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64] + 4] = 96
                        mem[mem[64] + 100] = stor0.length
                        mem[mem[64] + 132 len floor32(stor0.length)] = mem[_26113 + 32 len floor32(stor0.length)]
                        var234001 = floor32(stor0.length)
                        require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                        call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                             gas gas_remaining wei
                            args Array(len=stor0.length, data=mem[mem[64] + 132 len 32 * stor0.length]), address(arg1), ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _28772 = mem[_26113 + 160]
                        mem[mem[64] + 4] = mem[_26113 + 108 len 20]
                        require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                        call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4], address(_28772), ext_call.return_data[0]
                    else:
                        mem[_26113 + 32] = address(stor0.field_0)
                        idx = _26113 + 32
                        s = 0
                        while _26113 + (32 * stor0.length) > idx:
                            mem[idx + 32] = stor0[s].field_256
                            idx = idx + 32
                            s = s + 1
                            continue 
                        require 0 < stor0.length
                        _30221 = mem[_26113 + 32]
                        mem[mem[64] + 36] = mem[_26113 + 44 len 20]
                        mem[mem[64] + 68] = x
                        require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                        call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_30221), x
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 0 < stor0.length
                        require ext_code.size(mem[_26113 + 44 len 20])
                        call mem[_26113 + 44 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 36] = arg1
                        mem[mem[64] + 68] = ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64] + 4] = 96
                        mem[mem[64] + 100] = stor0.length
                        mem[mem[64] + 132 len floor32(stor0.length)] = mem[_26113 + 32 len floor32(stor0.length)]
                        var238001 = floor32(stor0.length)
                        require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                        call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                             gas gas_remaining wei
                            args Array(len=stor0.length, data=mem[mem[64] + 132 len 32 * stor0.length]), address(arg1), ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _31687 = mem[_26113 + 160]
                        mem[mem[64] + 4] = mem[_26113 + 108 len 20]
                        require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                        call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4], address(_31687), ext_call.return_data[0]
                else:
                    require 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                    require 0 < stor0.length
                    mem[(64 * stor0.length) + 356] = mem[(32 * stor0.length) + 332 len 20]
                    mem[(64 * stor0.length) + 388] = (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                    require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                    call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[(32 * stor0.length) + 320]), (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                    mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 0 < stor0.length
                    require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                    call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(64 * stor0.length) + 320] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                    mem[(64 * stor0.length) + 356] = arg1
                    mem[(64 * stor0.length) + 388] = ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                    mem[(64 * stor0.length) + 324] = 96
                    mem[(64 * stor0.length) + 420] = stor0.length
                    mem[(64 * stor0.length) + 452 len floor32(stor0.length)] = mem[(32 * stor0.length) + 320 len floor32(stor0.length)]
                    require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                    call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                         gas gas_remaining wei
                        args mem[(64 * stor0.length) + 324 len (161 * stor0.length) + 128]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _20258 = mem[(32 * stor0.length) + 448]
                    mem[(64 * stor0.length) + 324] = mem[(32 * stor0.length) + 396 len 20]
                    mem[(64 * stor0.length) + 356] = address(_20258)
                    mem[(64 * stor0.length) + 388] = ext_call.return_data[0]
                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(64 * stor0.length) + 324], address(_20258), ext_call.return_data[0]
                    mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18
                    require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18
                    if ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 <= 10^18 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18:
                        s = 9
                        t = 2
                        u = (10^18 * ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) - (10^18 * 10^18 * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                        v = (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                        while u > t:
                            require 0 < mem[(32 * stor0.length) + 288]
                            mem[(64 * stor0.length) + 356] = mem[(32 * stor0.length) + 332 len 20]
                            mem[(64 * stor0.length) + 388] = -(v * s / 10) + (s * v * s / 10) / 10
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[(32 * stor0.length) + 320]), -(v * s / 10) + (s * v * s / 10) / 10
                            mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < mem[(32 * stor0.length) + 288]
                            require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                            call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[(64 * stor0.length) + 320] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[(64 * stor0.length) + 356] = arg1
                            mem[(64 * stor0.length) + 388] = ext_call.return_data[0] * -(v * s / 10) + (s * v * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[(64 * stor0.length) + 324] = 96
                            mem[(64 * stor0.length) + 420] = mem[(32 * stor0.length) + 288]
                            _24008 = mem[(32 * stor0.length) + 288]
                            idx = 0
                            while idx < 32 * _24008:
                                mem[mem[64] + idx + 132] = mem[(32 * stor0.length) + idx + 320]
                                idx = idx + 32
                                continue 
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len (32 * _24008) + (64 * stor0.length) + -mem[64] + 448]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 2 < mem[(32 * stor0.length) + 288]:
                                if 4 < mem[(32 * stor0.length) + 288]:
                                    _26315 = mem[(32 * stor0.length) + 448]
                                    mem[mem[64] + 4] = mem[(32 * stor0.length) + 396 len 20]
                                    mem[mem[64] + 36] = address(_26315)
                                    mem[mem[64] + 68] = ext_call.return_data[0]
                                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4], address(_26315), ext_call.return_data[0]
                                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 64
                                    if ext_call.return_data[0] * -(v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                            if ext_call.return_data[0] * -(v * s / 10) + (s * v * s / 10) / 10 / 10^18 <= 10^18 * -(v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                                s = s - 1
                                                t = u
                                                u = 2
                                                v = v * s / 10
                                                continue 
                                            if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                                s = s - 1
                                                t = u
                                                u = (10^18 * ext_call.return_data[0] * -(v * s / 10) + (s * v * s / 10) / 10 / 10^18) - (10^18 * 10^18 * -(v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(v * s / 10) + (s * v * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                                v = v * s / 10
                                                continue 
                            revert
                        if v <= 0:
                            return 0, 
                                   0,
                                   10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18,
                                   ext_call.return_data[0] * defaultAmount / 10^18
                        if not stor0.length:
                            require 0 < stor0.length
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[(64 * stor0.length) + 352]), v
                            mem[(98 * stor0.length) + 352 len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < stor0.length
                            require ext_code.size(mem[(64 * stor0.length) + 364 len 20])
                            call mem[(64 * stor0.length) + 364 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[(98 * stor0.length) + 388] = arg1
                            mem[(98 * stor0.length) + 420] = ext_call.return_data[0] * v / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[(98 * stor0.length) + 356] = 96
                            mem[(98 * stor0.length) + 452] = stor0.length
                            mem[(98 * stor0.length) + 484 len floor32(stor0.length)] = mem[(64 * stor0.length) + 352 len floor32(stor0.length)]
                            var233001 = floor32(stor0.length)
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args Array(len=stor0.length, data=mem[(64 * stor0.length) + 352 len floor32(stor0.length)], mem[(98 * stor0.length) + floor32(stor0.length) + 484 len (33 * stor0.length) - floor32(stor0.length)]), address(arg1), ext_call.return_data[0] * v / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[(98 * stor0.length) + 352] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _26312 = mem[(64 * stor0.length) + 480]
                            mem[(98 * stor0.length) + 356] = mem[(64 * stor0.length) + 428 len 20]
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[(98 * stor0.length) + 356], address(_26312), ext_call.return_data[0]
                        else:
                            mem[(64 * stor0.length) + 352] = address(stor0.field_0)
                            idx = (64 * stor0.length) + 352
                            s = 0
                            while (98 * stor0.length) + 320 > idx:
                                mem[idx + 32] = stor0[s].field_256
                                idx = idx + 32
                                s = s + 1
                                continue 
                            require 0 < stor0.length
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[(64 * stor0.length) + 352]), v
                            mem[(98 * stor0.length) + 352 len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < stor0.length
                            require ext_code.size(mem[(64 * stor0.length) + 364 len 20])
                            call mem[(64 * stor0.length) + 364 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[(98 * stor0.length) + 388] = arg1
                            mem[(98 * stor0.length) + 420] = ext_call.return_data[0] * v / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[(98 * stor0.length) + 356] = 96
                            mem[(98 * stor0.length) + 452] = stor0.length
                            mem[(98 * stor0.length) + 484 len floor32(stor0.length)] = mem[(64 * stor0.length) + 352 len floor32(stor0.length)]
                            var237001 = floor32(stor0.length)
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args Array(len=stor0.length, data=mem[(98 * stor0.length) + 484 len 32 * stor0.length]), address(arg1), ext_call.return_data[0] * v / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[(98 * stor0.length) + 352] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _30355 = mem[(64 * stor0.length) + 480]
                            mem[(98 * stor0.length) + 356] = mem[(64 * stor0.length) + 428 len 20]
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[(98 * stor0.length) + 356], address(_30355), ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require ext_call.return_data[0] * v / 10^18
                        require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * v / 10^18
                        if ext_call.return_data[0] * v / 10^18 <= 10^18 * v / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * v / 10^18:
                            require ext_code.size(arg2)
                            call arg2.0x70a08231 with:
                                 gas gas_remaining wei
                                args 0x63825c174ab367968ec60f061753d3bbd36a0d8f
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(arg2)
                            call arg2.0x70a08231 with:
                                 gas gas_remaining wei
                                args address(arg1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            return 0, 2, ext_call.return_data[0], ext_call.return_data[0]
                        require 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args 0x63825c174ab367968ec60f061753d3bbd36a0d8f
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(arg1)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        return v, 
                               (10^18 * ext_call.return_data[0] * v / 10^18) - (10^18 * 10^18 * v / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * v / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18,
                               ext_call.return_data[0],
                               ext_call.return_data[0]
                    require 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                    s = 11
                    t = (10^18 * ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18) - (10^18 * 10^18 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 * mem[mem[64]] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                    u = 2
                    v = (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                    while u > t:
                        require 0 < mem[(32 * stor0.length) + 288]
                        _23447 = mem[(32 * stor0.length) + 320]
                        mem[mem[64] + 36] = mem[(32 * stor0.length) + 332 len 20]
                        mem[mem[64] + 68] = (v * s / 10) + (s * v * s / 10) / 10
                        require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                        call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_23447), (v * s / 10) + (s * v * s / 10) / 10
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 0 < mem[(32 * stor0.length) + 288]
                        require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                        call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 36] = arg1
                        mem[mem[64] + 68] = ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64] + 4] = 96
                        mem[mem[64] + 100] = mem[(32 * stor0.length) + 288]
                        _24012 = mem[(32 * stor0.length) + 288]
                        idx = 0
                        while idx < 32 * _24012:
                            mem[mem[64] + idx + 132] = mem[(32 * stor0.length) + idx + 320]
                            idx = idx + 32
                            continue 
                        require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                        call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                             gas gas_remaining wei
                            args 96, address(arg1), ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18), mem[mem[64] + 100 len (32 * _24012) + 32]
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if 2 < mem[(32 * stor0.length) + 288]:
                            if 4 < mem[(32 * stor0.length) + 288]:
                                _26322 = mem[(32 * stor0.length) + 448]
                                mem[mem[64] + 4] = mem[(32 * stor0.length) + 396 len 20]
                                mem[mem[64] + 36] = address(_26322)
                                mem[mem[64] + 68] = ext_call.return_data[0]
                                require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                                call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4], address(_26322), ext_call.return_data[0]
                                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 64
                                if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                        if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 <= 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                            s = s + 1
                                            t = u
                                            u = 2
                                            v = v * s / 10
                                            continue 
                                        if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                            s = s + 1
                                            t = u
                                            u = (10^18 * ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) - (10^18 * 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                            v = v * s / 10
                                            continue 
                        revert
                    s = 9
                    u = t
                    w = (10^18 * ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) - (10^18 * 10^18 * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                    x = v
                    while w > u:
                        require 0 < mem[(32 * stor0.length) + 288]
                        _26319 = mem[(32 * stor0.length) + 320]
                        mem[mem[64] + 36] = mem[(32 * stor0.length) + 332 len 20]
                        mem[mem[64] + 68] = -(x * s / 10) + (s * x * s / 10) / 10
                        require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                        call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_26319), -(x * s / 10) + (s * x * s / 10) / 10
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 0 < mem[(32 * stor0.length) + 288]
                        require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                        call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 36] = arg1
                        mem[mem[64] + 68] = ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64] + 4] = 96
                        mem[mem[64] + 100] = mem[(32 * stor0.length) + 288]
                        _26813 = mem[(32 * stor0.length) + 288]
                        idx = 0
                        while idx < 32 * _26813:
                            mem[mem[64] + idx + 132] = mem[(32 * stor0.length) + idx + 320]
                            idx = idx + 32
                            continue 
                        require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                        call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                             gas gas_remaining wei
                            args 96, address(arg1), ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18), mem[mem[64] + 100 len (32 * _26813) + 32]
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if 2 < mem[(32 * stor0.length) + 288]:
                            if 4 < mem[(32 * stor0.length) + 288]:
                                _28783 = mem[(32 * stor0.length) + 448]
                                mem[mem[64] + 4] = mem[(32 * stor0.length) + 396 len 20]
                                mem[mem[64] + 36] = address(_28783)
                                mem[mem[64] + 68] = ext_call.return_data[0]
                                require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                                call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4], address(_28783), ext_call.return_data[0]
                                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 64
                                if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                        if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 <= 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                            s = s - 1
                                            u = w
                                            w = 2
                                            x = x * s / 10
                                            continue 
                                        if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                            s = s - 1
                                            u = w
                                            w = (10^18 * ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) - (10^18 * 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                            x = x * s / 10
                                            continue 
                        revert
                    if x <= 0:
                        return 0, 
                               0,
                               10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18,
                               ext_call.return_data[0] * defaultAmount / 10^18
                    _26117 = mem[64]
                    mem[64] = mem[64] + (32 * stor0.length) + 32
                    mem[_26117] = stor0.length
                    if not stor0.length:
                        require 0 < stor0.length
                        _26418 = mem[_26117 + 32]
                        mem[mem[64] + 36] = mem[_26117 + 44 len 20]
                        mem[mem[64] + 68] = x
                        require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                        call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_26418), x
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 0 < stor0.length
                        require ext_code.size(mem[_26117 + 44 len 20])
                        call mem[_26117 + 44 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 36] = arg1
                        mem[mem[64] + 68] = ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64] + 4] = 96
                        mem[mem[64] + 100] = stor0.length
                        mem[mem[64] + 132 len floor32(stor0.length)] = mem[_26117 + 32 len floor32(stor0.length)]
                        var235001 = floor32(stor0.length)
                        require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                        call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                             gas gas_remaining wei
                            args Array(len=stor0.length, data=mem[mem[64] + 132 len 32 * stor0.length]), address(arg1), ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _28780 = mem[_26117 + 160]
                        mem[mem[64] + 4] = mem[_26117 + 108 len 20]
                        require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                        call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4], address(_28780), ext_call.return_data[0]
                    else:
                        mem[_26117 + 32] = address(stor0.field_0)
                        idx = _26117 + 32
                        s = 0
                        while _26117 + (32 * stor0.length) > idx:
                            mem[idx + 32] = stor0[s].field_256
                            idx = idx + 32
                            s = s + 1
                            continue 
                        require 0 < stor0.length
                        _30225 = mem[_26117 + 32]
                        mem[mem[64] + 36] = mem[_26117 + 44 len 20]
                        mem[mem[64] + 68] = x
                        require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                        call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_30225), x
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 0 < stor0.length
                        require ext_code.size(mem[_26117 + 44 len 20])
                        call mem[_26117 + 44 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 36] = arg1
                        mem[mem[64] + 68] = ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64] + 4] = 96
                        mem[mem[64] + 100] = stor0.length
                        mem[mem[64] + 132 len floor32(stor0.length)] = mem[_26117 + 32 len floor32(stor0.length)]
                        var239001 = floor32(stor0.length)
                        require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                        call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                             gas gas_remaining wei
                            args Array(len=stor0.length, data=mem[mem[64] + 132 len 32 * stor0.length]), address(arg1), ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _31690 = mem[_26117 + 160]
                        mem[mem[64] + 4] = mem[_26117 + 108 len 20]
                        require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                        call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4], address(_31690), ext_call.return_data[0]
            else:
                require 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                require 0 < stor0.length
                mem[(64 * stor0.length) + 356] = mem[(32 * stor0.length) + 332 len 20]
                mem[(64 * stor0.length) + 388] = 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10
                require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[(32 * stor0.length) + 320]), 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10
                mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require 0 < stor0.length
                require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 10^(-ext_call.return_data[0] + 18)
                mem[(64 * stor0.length) + 320] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                mem[(64 * stor0.length) + 356] = arg1
                mem[(64 * stor0.length) + 388] = ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                mem[(64 * stor0.length) + 324] = 96
                mem[(64 * stor0.length) + 420] = stor0.length
                mem[(64 * stor0.length) + 452 len floor32(stor0.length)] = mem[(32 * stor0.length) + 320 len floor32(stor0.length)]
                require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                     gas gas_remaining wei
                    args mem[(64 * stor0.length) + 324 len (161 * stor0.length) + 128]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < stor0.length
                require 4 < stor0.length
                _16634 = mem[(32 * stor0.length) + 448]
                mem[(64 * stor0.length) + 324] = mem[(32 * stor0.length) + 396 len 20]
                mem[(64 * stor0.length) + 356] = address(_16634)
                mem[(64 * stor0.length) + 388] = ext_call.return_data[0]
                require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(64 * stor0.length) + 324], address(_16634), ext_call.return_data[0]
                mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18
                require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18
                if ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 <= 10^18 * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18:
                    require 0 < stor0.length
                    mem[(64 * stor0.length) + 356] = mem[(32 * stor0.length) + 332 len 20]
                    mem[(64 * stor0.length) + 388] = (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                    require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                    call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[(32 * stor0.length) + 320]), (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                    mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 0 < stor0.length
                    require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                    call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(64 * stor0.length) + 320] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                    mem[(64 * stor0.length) + 356] = arg1
                    mem[(64 * stor0.length) + 388] = ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                    mem[(64 * stor0.length) + 324] = 96
                    mem[(64 * stor0.length) + 420] = stor0.length
                    mem[(64 * stor0.length) + 452 len floor32(stor0.length)] = mem[(32 * stor0.length) + 320 len floor32(stor0.length)]
                    require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                    call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                         gas gas_remaining wei
                        args mem[(64 * stor0.length) + 324 len (161 * stor0.length) + 128]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _20261 = mem[(32 * stor0.length) + 448]
                    mem[(64 * stor0.length) + 324] = mem[(32 * stor0.length) + 396 len 20]
                    mem[(64 * stor0.length) + 356] = address(_20261)
                    mem[(64 * stor0.length) + 388] = ext_call.return_data[0]
                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(64 * stor0.length) + 324], address(_20261), ext_call.return_data[0]
                    mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18
                    require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18
                    if ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 <= 10^18 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18:
                        s = 11
                        t = 2
                        u = (10^18 * ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) - (10^18 * 10^18 * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                        v = (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                        while u > t:
                            require 0 < mem[(32 * stor0.length) + 288]
                            _23451 = mem[(32 * stor0.length) + 320]
                            mem[mem[64] + 36] = mem[(32 * stor0.length) + 332 len 20]
                            mem[mem[64] + 68] = (v * s / 10) + (s * v * s / 10) / 10
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_23451), (v * s / 10) + (s * v * s / 10) / 10
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < mem[(32 * stor0.length) + 288]
                            require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                            call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = mem[(32 * stor0.length) + 288]
                            _24016 = mem[(32 * stor0.length) + 288]
                            idx = 0
                            while idx < 32 * _24016:
                                mem[mem[64] + idx + 132] = mem[(32 * stor0.length) + idx + 320]
                                idx = idx + 32
                                continue 
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args 96, address(arg1), ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18), mem[mem[64] + 100 len (32 * _24016) + 32]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 2 < mem[(32 * stor0.length) + 288]:
                                if 4 < mem[(32 * stor0.length) + 288]:
                                    _26329 = mem[(32 * stor0.length) + 448]
                                    mem[mem[64] + 4] = mem[(32 * stor0.length) + 396 len 20]
                                    mem[mem[64] + 36] = address(_26329)
                                    mem[mem[64] + 68] = ext_call.return_data[0]
                                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4], address(_26329), ext_call.return_data[0]
                                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 64
                                    if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                            if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 <= 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                                s = s + 1
                                                t = u
                                                u = 2
                                                v = v * s / 10
                                                continue 
                                            if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                                s = s + 1
                                                t = u
                                                u = (10^18 * ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) - (10^18 * 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                                v = v * s / 10
                                                continue 
                            revert
                        s = 9
                        u = t
                        w = 2
                        x = v
                        while w > u:
                            require 0 < mem[(32 * stor0.length) + 288]
                            _26326 = mem[(32 * stor0.length) + 320]
                            mem[mem[64] + 36] = mem[(32 * stor0.length) + 332 len 20]
                            mem[mem[64] + 68] = -(x * s / 10) + (s * x * s / 10) / 10
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_26326), -(x * s / 10) + (s * x * s / 10) / 10
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < mem[(32 * stor0.length) + 288]
                            require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                            call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = mem[(32 * stor0.length) + 288]
                            _26817 = mem[(32 * stor0.length) + 288]
                            idx = 0
                            while idx < 32 * _26817:
                                mem[mem[64] + idx + 132] = mem[(32 * stor0.length) + idx + 320]
                                idx = idx + 32
                                continue 
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args 96, address(arg1), ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18), mem[mem[64] + 100 len (32 * _26817) + 32]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 2 < mem[(32 * stor0.length) + 288]:
                                if 4 < mem[(32 * stor0.length) + 288]:
                                    _28789 = mem[(32 * stor0.length) + 448]
                                    mem[mem[64] + 4] = mem[(32 * stor0.length) + 396 len 20]
                                    mem[mem[64] + 36] = address(_28789)
                                    mem[mem[64] + 68] = ext_call.return_data[0]
                                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4], address(_28789), ext_call.return_data[0]
                                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 64
                                    if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                            if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 <= 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                                s = s - 1
                                                u = w
                                                w = 2
                                                x = x * s / 10
                                                continue 
                                            if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                                s = s - 1
                                                u = w
                                                w = (10^18 * ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) - (10^18 * 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                                x = x * s / 10
                                                continue 
                            revert
                        if x <= 0:
                            return 0, 
                                   0,
                                   10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18,
                                   ext_call.return_data[0] * defaultAmount / 10^18
                        _26119 = mem[64]
                        mem[64] = mem[64] + (32 * stor0.length) + 32
                        mem[_26119] = stor0.length
                        if not stor0.length:
                            require 0 < stor0.length
                            _26421 = mem[_26119 + 32]
                            mem[mem[64] + 36] = mem[_26119 + 44 len 20]
                            mem[mem[64] + 68] = x
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_26421), x
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < stor0.length
                            require ext_code.size(mem[_26119 + 44 len 20])
                            call mem[_26119 + 44 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = stor0.length
                            mem[mem[64] + 132 len floor32(stor0.length)] = mem[_26119 + 32 len floor32(stor0.length)]
                            var234001 = floor32(stor0.length)
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args Array(len=stor0.length, data=mem[mem[64] + 132 len 32 * stor0.length]), address(arg1), ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _28786 = mem[_26119 + 160]
                            mem[mem[64] + 4] = mem[_26119 + 108 len 20]
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4], address(_28786), ext_call.return_data[0]
                        else:
                            mem[_26119 + 32] = address(stor0.field_0)
                            idx = _26119 + 32
                            s = 0
                            while _26119 + (32 * stor0.length) > idx:
                                mem[idx + 32] = stor0[s].field_256
                                idx = idx + 32
                                s = s + 1
                                continue 
                            require 0 < stor0.length
                            _30228 = mem[_26119 + 32]
                            mem[mem[64] + 36] = mem[_26119 + 44 len 20]
                            mem[mem[64] + 68] = x
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_30228), x
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < stor0.length
                            require ext_code.size(mem[_26119 + 44 len 20])
                            call mem[_26119 + 44 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = stor0.length
                            mem[mem[64] + 132 len floor32(stor0.length)] = mem[_26119 + 32 len floor32(stor0.length)]
                            var238001 = floor32(stor0.length)
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args Array(len=stor0.length, data=mem[mem[64] + 132 len 32 * stor0.length]), address(arg1), ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _31693 = mem[_26119 + 160]
                            mem[mem[64] + 4] = mem[_26119 + 108 len 20]
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4], address(_31693), ext_call.return_data[0]
                    else:
                        require 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                        s = 11
                        t = (10^18 * ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18) - (10^18 * 10^18 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 * mem[mem[64]] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                        u = (10^18 * ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) - (10^18 * 10^18 * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                        v = (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                        while u > t:
                            require 0 < mem[(32 * stor0.length) + 288]
                            _23455 = mem[(32 * stor0.length) + 320]
                            mem[mem[64] + 36] = mem[(32 * stor0.length) + 332 len 20]
                            mem[mem[64] + 68] = (v * s / 10) + (s * v * s / 10) / 10
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_23455), (v * s / 10) + (s * v * s / 10) / 10
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < mem[(32 * stor0.length) + 288]
                            require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                            call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = mem[(32 * stor0.length) + 288]
                            _24020 = mem[(32 * stor0.length) + 288]
                            idx = 0
                            while idx < 32 * _24020:
                                mem[mem[64] + idx + 132] = mem[(32 * stor0.length) + idx + 320]
                                idx = idx + 32
                                continue 
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args 96, address(arg1), ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18), mem[mem[64] + 100 len (32 * _24020) + 32]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 2 < mem[(32 * stor0.length) + 288]:
                                if 4 < mem[(32 * stor0.length) + 288]:
                                    _26336 = mem[(32 * stor0.length) + 448]
                                    mem[mem[64] + 4] = mem[(32 * stor0.length) + 396 len 20]
                                    mem[mem[64] + 36] = address(_26336)
                                    mem[mem[64] + 68] = ext_call.return_data[0]
                                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4], address(_26336), ext_call.return_data[0]
                                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 64
                                    if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                            if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 <= 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                                s = s + 1
                                                t = u
                                                u = 2
                                                v = v * s / 10
                                                continue 
                                            if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                                s = s + 1
                                                t = u
                                                u = (10^18 * ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) - (10^18 * 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                                v = v * s / 10
                                                continue 
                            revert
                        s = 9
                        u = t
                        w = 2
                        x = v
                        while w > u:
                            require 0 < mem[(32 * stor0.length) + 288]
                            _26333 = mem[(32 * stor0.length) + 320]
                            mem[mem[64] + 36] = mem[(32 * stor0.length) + 332 len 20]
                            mem[mem[64] + 68] = -(x * s / 10) + (s * x * s / 10) / 10
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_26333), -(x * s / 10) + (s * x * s / 10) / 10
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < mem[(32 * stor0.length) + 288]
                            require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                            call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            _26819 = mem[64]
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = mem[(32 * stor0.length) + 288]
                            _26821 = mem[(32 * stor0.length) + 288]
                            idx = 0
                            while idx < 32 * _26821:
                                mem[mem[64] + idx + 132] = mem[(32 * stor0.length) + idx + 320]
                                idx = idx + 32
                                continue 
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len (32 * _26821) + _26819 + -mem[64] + 128]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 2 < mem[(32 * stor0.length) + 288]:
                                if 4 < mem[(32 * stor0.length) + 288]:
                                    _28795 = mem[(32 * stor0.length) + 448]
                                    mem[mem[64] + 4] = mem[(32 * stor0.length) + 396 len 20]
                                    mem[mem[64] + 36] = address(_28795)
                                    mem[mem[64] + 68] = ext_call.return_data[0]
                                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4], address(_28795), ext_call.return_data[0]
                                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 64
                                    if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                            if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 <= 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                                s = s - 1
                                                u = w
                                                w = 2
                                                x = x * s / 10
                                                continue 
                                            if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                                s = s - 1
                                                u = w
                                                w = (10^18 * ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) - (10^18 * 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                                x = x * s / 10
                                                continue 
                            revert
                        if x <= 0:
                            return 0, 
                                   0,
                                   10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18,
                                   ext_call.return_data[0] * defaultAmount / 10^18
                        _26121 = mem[64]
                        mem[64] = mem[64] + (32 * stor0.length) + 32
                        mem[_26121] = stor0.length
                        if not stor0.length:
                            require 0 < stor0.length
                            _26424 = mem[_26121 + 32]
                            mem[mem[64] + 36] = mem[_26121 + 44 len 20]
                            mem[mem[64] + 68] = x
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_26424), x
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < stor0.length
                            require ext_code.size(mem[_26121 + 44 len 20])
                            call mem[_26121 + 44 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = stor0.length
                            mem[mem[64] + 132 len floor32(stor0.length)] = mem[_26121 + 32 len floor32(stor0.length)]
                            var235001 = floor32(stor0.length)
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args Array(len=stor0.length, data=mem[mem[64] + 132 len 32 * stor0.length]), address(arg1), ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _28792 = mem[_26121 + 160]
                            mem[mem[64] + 4] = mem[_26121 + 108 len 20]
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4], address(_28792), ext_call.return_data[0]
                        else:
                            mem[_26121 + 32] = address(stor0.field_0)
                            idx = _26121 + 32
                            s = 0
                            while _26121 + (32 * stor0.length) > idx:
                                mem[idx + 32] = stor0[s].field_256
                                idx = idx + 32
                                s = s + 1
                                continue 
                            require 0 < stor0.length
                            _30231 = mem[_26121 + 32]
                            mem[mem[64] + 36] = mem[_26121 + 44 len 20]
                            mem[mem[64] + 68] = x
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_30231), x
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < stor0.length
                            require ext_code.size(mem[_26121 + 44 len 20])
                            call mem[_26121 + 44 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = stor0.length
                            mem[mem[64] + 132 len floor32(stor0.length)] = mem[_26121 + 32 len floor32(stor0.length)]
                            var239001 = floor32(stor0.length)
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args Array(len=stor0.length, data=mem[mem[64] + 132 len 32 * stor0.length]), address(arg1), ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _31696 = mem[_26121 + 160]
                            mem[mem[64] + 4] = mem[_26121 + 108 len 20]
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4], address(_31696), ext_call.return_data[0]
                else:
                    require 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                    require 0 < stor0.length
                    mem[(64 * stor0.length) + 356] = mem[(32 * stor0.length) + 332 len 20]
                    mem[(64 * stor0.length) + 388] = (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                    require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                    call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[(32 * stor0.length) + 320]), (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                    mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 0 < stor0.length
                    require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                    call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(64 * stor0.length) + 320] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                    mem[(64 * stor0.length) + 356] = arg1
                    mem[(64 * stor0.length) + 388] = ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                    mem[(64 * stor0.length) + 324] = 96
                    mem[(64 * stor0.length) + 420] = stor0.length
                    mem[(64 * stor0.length) + 452 len floor32(stor0.length)] = mem[(32 * stor0.length) + 320 len floor32(stor0.length)]
                    require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                    call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                         gas gas_remaining wei
                        args mem[(64 * stor0.length) + 324 len (161 * stor0.length) + 128]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _20264 = mem[(32 * stor0.length) + 448]
                    mem[(64 * stor0.length) + 324] = mem[(32 * stor0.length) + 396 len 20]
                    mem[(64 * stor0.length) + 356] = address(_20264)
                    mem[(64 * stor0.length) + 388] = ext_call.return_data[0]
                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(64 * stor0.length) + 324], address(_20264), ext_call.return_data[0]
                    mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18
                    require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18
                    if ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 <= 10^18 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18:
                        s = 11
                        t = 2
                        u = (10^18 * ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) - (10^18 * 10^18 * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                        v = (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                        while u > t:
                            require 0 < mem[(32 * stor0.length) + 288]
                            _23459 = mem[(32 * stor0.length) + 320]
                            mem[mem[64] + 36] = mem[(32 * stor0.length) + 332 len 20]
                            mem[mem[64] + 68] = (v * s / 10) + (s * v * s / 10) / 10
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_23459), (v * s / 10) + (s * v * s / 10) / 10
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < mem[(32 * stor0.length) + 288]
                            require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                            call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = mem[(32 * stor0.length) + 288]
                            _24024 = mem[(32 * stor0.length) + 288]
                            idx = 0
                            while idx < 32 * _24024:
                                mem[mem[64] + idx + 132] = mem[(32 * stor0.length) + idx + 320]
                                idx = idx + 32
                                continue 
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args 96, address(arg1), ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18), mem[mem[64] + 100 len (32 * _24024) + 32]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 2 < mem[(32 * stor0.length) + 288]:
                                if 4 < mem[(32 * stor0.length) + 288]:
                                    _26343 = mem[(32 * stor0.length) + 448]
                                    mem[mem[64] + 4] = mem[(32 * stor0.length) + 396 len 20]
                                    mem[mem[64] + 36] = address(_26343)
                                    mem[mem[64] + 68] = ext_call.return_data[0]
                                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4], address(_26343), ext_call.return_data[0]
                                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 64
                                    if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                            if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 <= 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                                s = s + 1
                                                t = u
                                                u = 2
                                                v = v * s / 10
                                                continue 
                                            if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                                s = s + 1
                                                t = u
                                                u = (10^18 * ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) - (10^18 * 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                                v = v * s / 10
                                                continue 
                            revert
                        s = 9
                        u = t
                        w = (10^18 * ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) - (10^18 * 10^18 * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                        x = v
                        while w > u:
                            require 0 < mem[(32 * stor0.length) + 288]
                            _26340 = mem[(32 * stor0.length) + 320]
                            mem[mem[64] + 36] = mem[(32 * stor0.length) + 332 len 20]
                            mem[mem[64] + 68] = -(x * s / 10) + (s * x * s / 10) / 10
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_26340), -(x * s / 10) + (s * x * s / 10) / 10
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < mem[(32 * stor0.length) + 288]
                            require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                            call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = mem[(32 * stor0.length) + 288]
                            _26825 = mem[(32 * stor0.length) + 288]
                            idx = 0
                            while idx < 32 * _26825:
                                mem[mem[64] + idx + 132] = mem[(32 * stor0.length) + idx + 320]
                                idx = idx + 32
                                continue 
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args 96, address(arg1), ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18), mem[mem[64] + 100 len (32 * _26825) + 32]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 2 < mem[(32 * stor0.length) + 288]:
                                if 4 < mem[(32 * stor0.length) + 288]:
                                    _28801 = mem[(32 * stor0.length) + 448]
                                    mem[mem[64] + 4] = mem[(32 * stor0.length) + 396 len 20]
                                    mem[mem[64] + 36] = address(_28801)
                                    mem[mem[64] + 68] = ext_call.return_data[0]
                                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4], address(_28801), ext_call.return_data[0]
                                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 64
                                    if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                            if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 <= 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                                s = s - 1
                                                u = w
                                                w = 2
                                                x = x * s / 10
                                                continue 
                                            if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                                s = s - 1
                                                u = w
                                                w = (10^18 * ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) - (10^18 * 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                                x = x * s / 10
                                                continue 
                            revert
                        if x <= 0:
                            return 0, 
                                   0,
                                   10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18,
                                   ext_call.return_data[0] * defaultAmount / 10^18
                        _26123 = mem[64]
                        mem[64] = mem[64] + (32 * stor0.length) + 32
                        mem[_26123] = stor0.length
                        if not stor0.length:
                            require 0 < stor0.length
                            _26427 = mem[_26123 + 32]
                            mem[mem[64] + 36] = mem[_26123 + 44 len 20]
                            mem[mem[64] + 68] = x
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_26427), x
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < stor0.length
                            require ext_code.size(mem[_26123 + 44 len 20])
                            call mem[_26123 + 44 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = stor0.length
                            mem[mem[64] + 132 len floor32(stor0.length)] = mem[_26123 + 32 len floor32(stor0.length)]
                            var235001 = floor32(stor0.length)
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args Array(len=stor0.length, data=mem[mem[64] + 132 len 32 * stor0.length]), address(arg1), ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _28798 = mem[_26123 + 160]
                            mem[mem[64] + 4] = mem[_26123 + 108 len 20]
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4], address(_28798), ext_call.return_data[0]
                        else:
                            mem[_26123 + 32] = address(stor0.field_0)
                            idx = _26123 + 32
                            s = 0
                            while _26123 + (32 * stor0.length) > idx:
                                mem[idx + 32] = stor0[s].field_256
                                idx = idx + 32
                                s = s + 1
                                continue 
                            require 0 < stor0.length
                            _30234 = mem[_26123 + 32]
                            mem[mem[64] + 36] = mem[_26123 + 44 len 20]
                            mem[mem[64] + 68] = x
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_30234), x
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < stor0.length
                            require ext_code.size(mem[_26123 + 44 len 20])
                            call mem[_26123 + 44 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = stor0.length
                            mem[mem[64] + 132 len floor32(stor0.length)] = mem[_26123 + 32 len floor32(stor0.length)]
                            var239001 = floor32(stor0.length)
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args Array(len=stor0.length, data=mem[mem[64] + 132 len 32 * stor0.length]), address(arg1), ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _31699 = mem[_26123 + 160]
                            mem[mem[64] + 4] = mem[_26123 + 108 len 20]
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4], address(_31699), ext_call.return_data[0]
                    else:
                        require 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                        s = 11
                        t = (10^18 * ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18) - (10^18 * 10^18 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 * mem[(64 * stor0.length) + 320] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                        u = (10^18 * ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) - (10^18 * 10^18 * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                        v = (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                        while u > t:
                            require 0 < mem[(32 * stor0.length) + 288]
                            mem[(64 * stor0.length) + 356] = mem[(32 * stor0.length) + 332 len 20]
                            mem[(64 * stor0.length) + 388] = (v * s / 10) + (s * v * s / 10) / 10
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[(32 * stor0.length) + 320]), (v * s / 10) + (s * v * s / 10) / 10
                            mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < mem[(32 * stor0.length) + 288]
                            require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                            call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[(64 * stor0.length) + 320] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[(64 * stor0.length) + 356] = arg1
                            mem[(64 * stor0.length) + 388] = ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[(64 * stor0.length) + 324] = 96
                            mem[(64 * stor0.length) + 420] = mem[(32 * stor0.length) + 288]
                            _24028 = mem[(32 * stor0.length) + 288]
                            idx = 0
                            while idx < 32 * _24028:
                                mem[(64 * stor0.length) + idx + 452] = mem[(32 * stor0.length) + idx + 320]
                                idx = idx + 32
                                continue 
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args 96, address(arg1), ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18), mem[(64 * stor0.length) + 420 len (32 * _24028) + 32]
                            mem[(64 * stor0.length) + 320] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 2 < mem[(32 * stor0.length) + 288]:
                                if 4 < mem[(32 * stor0.length) + 288]:
                                    _26350 = mem[(32 * stor0.length) + 448]
                                    mem[(64 * stor0.length) + 324] = mem[(32 * stor0.length) + 396 len 20]
                                    mem[(64 * stor0.length) + 356] = address(_26350)
                                    mem[(64 * stor0.length) + 388] = ext_call.return_data[0]
                                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[(64 * stor0.length) + 324], address(_26350), ext_call.return_data[0]
                                    mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 64
                                    if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                            if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 <= 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                                s = s + 1
                                                t = u
                                                u = 2
                                                v = v * s / 10
                                                continue 
                                            if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                                s = s + 1
                                                t = u
                                                u = (10^18 * ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) - (10^18 * 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                                v = v * s / 10
                                                continue 
                            revert
                        s = 9
                        u = t
                        w = (10^18 * ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) - (10^18 * 10^18 * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                        x = v
                        while w > u:
                            require 0 < mem[(32 * stor0.length) + 288]
                            _26347 = mem[(32 * stor0.length) + 320]
                            mem[mem[64] + 36] = mem[(32 * stor0.length) + 332 len 20]
                            mem[mem[64] + 68] = -(x * s / 10) + (s * x * s / 10) / 10
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_26347), -(x * s / 10) + (s * x * s / 10) / 10
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < mem[(32 * stor0.length) + 288]
                            require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                            call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = mem[(32 * stor0.length) + 288]
                            _26829 = mem[(32 * stor0.length) + 288]
                            idx = 0
                            while idx < 32 * _26829:
                                mem[mem[64] + idx + 132] = mem[(32 * stor0.length) + idx + 320]
                                idx = idx + 32
                                continue 
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args 96, address(arg1), ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18), mem[mem[64] + 100 len (32 * _26829) + 32]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 2 < mem[(32 * stor0.length) + 288]:
                                if 4 < mem[(32 * stor0.length) + 288]:
                                    _28807 = mem[(32 * stor0.length) + 448]
                                    mem[mem[64] + 4] = mem[(32 * stor0.length) + 396 len 20]
                                    mem[mem[64] + 36] = address(_28807)
                                    mem[mem[64] + 68] = ext_call.return_data[0]
                                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4], address(_28807), ext_call.return_data[0]
                                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 64
                                    if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                            if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 <= 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                                s = s - 1
                                                u = w
                                                w = 2
                                                x = x * s / 10
                                                continue 
                                            if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                                s = s - 1
                                                u = w
                                                w = (10^18 * ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) - (10^18 * 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                                x = x * s / 10
                                                continue 
                            revert
                        if x <= 0:
                            return 0, 
                                   0,
                                   10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18,
                                   ext_call.return_data[0] * defaultAmount / 10^18
                        _26125 = mem[64]
                        mem[64] = mem[64] + (32 * stor0.length) + 32
                        mem[_26125] = stor0.length
                        if not stor0.length:
                            require 0 < stor0.length
                            _26430 = mem[_26125 + 32]
                            mem[mem[64] + 36] = mem[_26125 + 44 len 20]
                            mem[mem[64] + 68] = x
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_26430), x
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < stor0.length
                            require ext_code.size(mem[_26125 + 44 len 20])
                            call mem[_26125 + 44 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = stor0.length
                            mem[mem[64] + 132 len floor32(stor0.length)] = mem[_26125 + 32 len floor32(stor0.length)]
                            var236001 = floor32(stor0.length)
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args Array(len=stor0.length, data=mem[mem[64] + 132 len 32 * stor0.length]), address(arg1), ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _28804 = mem[_26125 + 160]
                            mem[mem[64] + 4] = mem[_26125 + 108 len 20]
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4], address(_28804), ext_call.return_data[0]
                        else:
                            mem[_26125 + 32] = address(stor0.field_0)
                            idx = _26125 + 32
                            s = 0
                            while _26125 + (32 * stor0.length) > idx:
                                mem[idx + 32] = stor0[s].field_256
                                idx = idx + 32
                                s = s + 1
                                continue 
                            require 0 < stor0.length
                            _30237 = mem[_26125 + 32]
                            mem[mem[64] + 36] = mem[_26125 + 44 len 20]
                            mem[mem[64] + 68] = x
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_30237), x
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < stor0.length
                            require ext_code.size(mem[_26125 + 44 len 20])
                            call mem[_26125 + 44 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = stor0.length
                            mem[mem[64] + 132 len floor32(stor0.length)] = mem[_26125 + 32 len floor32(stor0.length)]
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args Array(len=stor0.length, data=mem[mem[64] + 132 len 32 * stor0.length]), address(arg1), ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _31702 = mem[_26125 + 160]
                            mem[mem[64] + 4] = mem[_26125 + 108 len 20]
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4], address(_31702), ext_call.return_data[0]
    else:
        mem[0] = 0
        mem[288] = address(stor0.field_0)
        idx = 288
        s = 0
        while (32 * stor0.length) + 256 > idx:
            mem[idx + 32] = stor0[s].field_256
            idx = idx + 32
            s = s + 1
            continue 
        require 0 < stor0.length
        require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
        call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[288]), defaultAmount
        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 64
        require 0 < stor0.length
        require ext_code.size(mem[300 len 20])
        call mem[300 len 20].0x313ce567 with:
             gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 10^(-ext_call.return_data[0] + 18)
        mem[(32 * stor0.length) + 324] = arg1
        mem[(32 * stor0.length) + 356] = ext_call.return_data[0] * defaultAmount / 10^18 / 10^(-ext_call.return_data[0] + 18)
        mem[(32 * stor0.length) + 292] = 96
        mem[(32 * stor0.length) + 388] = stor0.length
        mem[(32 * stor0.length) + 420 len floor32(stor0.length)] = mem[288 len floor32(stor0.length)]
        require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
        call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
             gas gas_remaining wei
            args Array(len=stor0.length, data=mem[288 len floor32(stor0.length)], mem[(32 * stor0.length) + floor32(stor0.length) + 420 len (32 * stor0.length) - floor32(stor0.length)]), address(arg1), ext_call.return_data[0] * defaultAmount / 10^18 / 10^(-ext_call.return_data[0] + 18)
        mem[(32 * stor0.length) + 288] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 2 < stor0.length
        require 4 < stor0.length
        _3492 = mem[416]
        mem[(32 * stor0.length) + 292] = mem[364 len 20]
        mem[(32 * stor0.length) + 324] = address(_3492)
        mem[(32 * stor0.length) + 356] = ext_call.return_data[0]
        require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
        call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
             gas gas_remaining wei
            args mem[(32 * stor0.length) + 292], address(_3492), ext_call.return_data[0]
        mem[(32 * stor0.length) + 288 len 64] = ext_call.return_data[0 len 64]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 64
        require ext_call.return_data[0] * defaultAmount / 10^18
        require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
        if ext_call.return_data[0] * defaultAmount / 10^18 <= 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
            return 0, 0, 1, 0
        mem[64] = (64 * stor0.length) + 320
        mem[(32 * stor0.length) + 288] = stor0.length
        if not stor0.length:
            require 0 < stor0.length
            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(ext_call.return_data[32]), defaultAmount
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require 0 < stor0.length
            require ext_code.size(ext_call.return_data[44 len 20])
            call ext_call.return_data[44 len 20].0x313ce567 with:
                 gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 10^(-ext_call.return_data[0] + 18)
            mem[(64 * stor0.length) + 320] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
            mem[(64 * stor0.length) + 356] = arg1
            mem[(64 * stor0.length) + 388] = ext_call.return_data[0] * defaultAmount / 10^18 / 10^(-ext_call.return_data[0] + 18)
            mem[(64 * stor0.length) + 324] = 96
            mem[(64 * stor0.length) + 420] = stor0.length
            mem[(64 * stor0.length) + 452 len floor32(stor0.length)] = mem[(32 * stor0.length) + 320 len floor32(stor0.length)]
            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                 gas gas_remaining wei
                args mem[(64 * stor0.length) + 324 len (161 * stor0.length) + 128]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 2 < stor0.length
            require 4 < stor0.length
            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(stor0.length), address(mem[(32 * stor0.length) + 448]), ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require ext_call.return_data[0] * defaultAmount / 10^18
            require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
            require 0 < stor0.length
            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(ext_call.return_data[32]), 2 * defaultAmount
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require 0 < stor0.length
            require ext_code.size(ext_call.return_data[44 len 20])
            call ext_call.return_data[44 len 20].0x313ce567 with:
                 gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 10^(-ext_call.return_data[0] + 18)
            mem[(64 * stor0.length) + 320] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
            mem[(64 * stor0.length) + 356] = arg1
            mem[(64 * stor0.length) + 388] = ext_call.return_data[0] * 2 * defaultAmount / 10^18 / 10^(-ext_call.return_data[0] + 18)
            mem[(64 * stor0.length) + 324] = 96
            mem[(64 * stor0.length) + 420] = stor0.length
            mem[(64 * stor0.length) + 452 len floor32(stor0.length)] = mem[(32 * stor0.length) + 320 len floor32(stor0.length)]
            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                 gas gas_remaining wei
                args mem[(64 * stor0.length) + 324 len (161 * stor0.length) + 128]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 2 < stor0.length
            require 4 < stor0.length
            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(stor0.length), address(mem[(32 * stor0.length) + 448]), ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require ext_call.return_data[0] * 2 * defaultAmount / 10^18
            require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18
            require (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18)
            require 0 < stor0.length
            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(ext_call.return_data[32]), 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require 0 < stor0.length
            require ext_code.size(ext_call.return_data[44 len 20])
            call ext_call.return_data[44 len 20].0x313ce567 with:
                 gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 10^(-ext_call.return_data[0] + 18)
            mem[(64 * stor0.length) + 320] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
            mem[(64 * stor0.length) + 356] = arg1
            mem[(64 * stor0.length) + 388] = ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
            mem[(64 * stor0.length) + 324] = 96
            mem[(64 * stor0.length) + 420] = stor0.length
            mem[(64 * stor0.length) + 452 len floor32(stor0.length)] = mem[(32 * stor0.length) + 320 len floor32(stor0.length)]
            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                 gas gas_remaining wei
                args mem[(64 * stor0.length) + 324 len (161 * stor0.length) + 128]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 2 < stor0.length
            require 4 < stor0.length
            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(stor0.length), address(mem[(32 * stor0.length) + 448]), ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18
            require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18
            if ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 <= 10^18 * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18:
                require 0 < stor0.length
                require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(ext_call.return_data[32]), 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require 0 < stor0.length
                require ext_code.size(ext_call.return_data[44 len 20])
                call ext_call.return_data[44 len 20].0x313ce567 with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 10^(-ext_call.return_data[0] + 18)
                mem[(64 * stor0.length) + 320] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                mem[(64 * stor0.length) + 356] = arg1
                mem[(64 * stor0.length) + 388] = ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                mem[(64 * stor0.length) + 324] = 96
                mem[(64 * stor0.length) + 420] = stor0.length
                mem[(64 * stor0.length) + 452 len floor32(stor0.length)] = mem[(32 * stor0.length) + 320 len floor32(stor0.length)]
                require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                     gas gas_remaining wei
                    args mem[(64 * stor0.length) + 324 len (161 * stor0.length) + 128]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < stor0.length
                require 4 < stor0.length
                require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args address(stor0.length), address(mem[(32 * stor0.length) + 448]), ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18
                require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18
                if ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 <= 10^18 * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18:
                    require 0 < stor0.length
                    require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                    call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(ext_call.return_data[32]), (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 0 < stor0.length
                    require ext_code.size(ext_call.return_data[44 len 20])
                    call ext_call.return_data[44 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(64 * stor0.length) + 320] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                    mem[(64 * stor0.length) + 356] = arg1
                    mem[(64 * stor0.length) + 388] = ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                    mem[(64 * stor0.length) + 324] = 96
                    mem[(64 * stor0.length) + 420] = stor0.length
                    mem[(64 * stor0.length) + 452 len floor32(stor0.length)] = mem[(32 * stor0.length) + 320 len floor32(stor0.length)]
                    require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                    call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                         gas gas_remaining wei
                        args mem[(64 * stor0.length) + 324 len (161 * stor0.length) + 128]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _20267 = mem[(32 * stor0.length) + 448]
                    mem[(64 * stor0.length) + 356] = mem[(32 * stor0.length) + 460 len 20]
                    mem[(64 * stor0.length) + 388] = ext_call.return_data[0]
                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args address(stor0.length), address(_20267), ext_call.return_data[0]
                    mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18
                    require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18
                    if ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 <= 10^18 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18:
                        if (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 <= 0:
                            return 0, 
                                   0,
                                   10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18,
                                   ext_call.return_data[0] * defaultAmount / 10^18
                        if not stor0.length:
                            require 0 < stor0.length
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(ext_call.return_data[32]), (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < stor0.length
                            require ext_code.size(ext_call.return_data[44 len 20])
                            call ext_call.return_data[44 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[(98 * stor0.length) + 388] = arg1
                            mem[(98 * stor0.length) + 420] = ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[(98 * stor0.length) + 356] = 96
                            mem[(98 * stor0.length) + 452] = stor0.length
                            mem[(98 * stor0.length) + 484 len floor32(stor0.length)] = mem[(64 * stor0.length) + 352 len floor32(stor0.length)]
                            var231001 = floor32(stor0.length)
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args Array(len=stor0.length, data=mem[(64 * stor0.length) + 352 len floor32(stor0.length)], mem[(98 * stor0.length) + floor32(stor0.length) + 484 len (33 * stor0.length) - floor32(stor0.length)]), address(arg1), ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[(98 * stor0.length) + 352] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args address(stor0.length), address(mem[(64 * stor0.length) + 480]), ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18
                            require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18
                            if ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 <= 10^18 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18:
                                require ext_code.size(arg2)
                                call arg2.0x70a08231 with:
                                     gas gas_remaining wei
                                    args 0x63825c174ab367968ec60f061753d3bbd36a0d8f
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(arg2)
                                call arg2.0x70a08231 with:
                                     gas gas_remaining wei
                                    args arg1
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                return 0, 2, ext_call.return_data[0], ext_call.return_data[0]
                            require 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                            require ext_code.size(arg2)
                            call arg2.0x70a08231 with:
                                 gas gas_remaining wei
                                args 0x63825c174ab367968ec60f061753d3bbd36a0d8f
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(arg2)
                            call arg2.0x70a08231 with:
                                 gas gas_remaining wei
                                args arg1
                        else:
                            mem[(64 * stor0.length) + 352] = address(stor0.field_0)
                            idx = (64 * stor0.length) + 352
                            s = 0
                            while (98 * stor0.length) + 320 > idx:
                                mem[idx + 32] = stor0[s].field_256
                                idx = idx + 32
                                s = s + 1
                                continue 
                            require 0 < stor0.length
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[(64 * stor0.length) + 352]), (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                            mem[(98 * stor0.length) + 352 len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < stor0.length
                            require ext_code.size(mem[(64 * stor0.length) + 364 len 20])
                            call mem[(64 * stor0.length) + 364 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[(98 * stor0.length) + 388] = arg1
                            mem[(98 * stor0.length) + 420] = ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[(98 * stor0.length) + 356] = 96
                            mem[(98 * stor0.length) + 452] = stor0.length
                            mem[(98 * stor0.length) + 484 len floor32(stor0.length)] = mem[(64 * stor0.length) + 352 len floor32(stor0.length)]
                            var235001 = floor32(stor0.length)
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args Array(len=stor0.length, data=mem[(64 * stor0.length) + 352 len floor32(stor0.length)], mem[(98 * stor0.length) + floor32(stor0.length) + 484 len (33 * stor0.length) - floor32(stor0.length)]), address(arg1), ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[(98 * stor0.length) + 352] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _28810 = mem[(64 * stor0.length) + 480]
                            mem[(98 * stor0.length) + 356] = mem[(64 * stor0.length) + 428 len 20]
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[(98 * stor0.length) + 356], address(_28810), ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18
                            require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18
                            if ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 <= 10^18 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18:
                                require ext_code.size(arg2)
                                call arg2.0x70a08231 with:
                                     gas gas_remaining wei
                                    args 0x63825c174ab367968ec60f061753d3bbd36a0d8f
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(arg2)
                                call arg2.0x70a08231 with:
                                     gas gas_remaining wei
                                    args address(arg1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                return 0, 2, ext_call.return_data[0], ext_call.return_data[0]
                            require 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                            require ext_code.size(arg2)
                            call arg2.0x70a08231 with:
                                 gas gas_remaining wei
                                args 0x63825c174ab367968ec60f061753d3bbd36a0d8f
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(arg2)
                            call arg2.0x70a08231 with:
                                 gas gas_remaining wei
                                args address(arg1)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        return (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10, 
                               (10^18 * ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18) - (10^18 * 10^18 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18,
                               ext_call.return_data[0],
                               ext_call.return_data[0]
                    require 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                    s = 11
                    t = (10^18 * ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18) - (10^18 * 10^18 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 * mem[mem[64]] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                    u = 2
                    v = (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                    while u > t:
                        require 0 < mem[(32 * stor0.length) + 288]
                        _23470 = mem[(32 * stor0.length) + 320]
                        mem[mem[64] + 36] = mem[(32 * stor0.length) + 332 len 20]
                        mem[mem[64] + 68] = (v * s / 10) + (s * v * s / 10) / 10
                        require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                        call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_23470), (v * s / 10) + (s * v * s / 10) / 10
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 0 < mem[(32 * stor0.length) + 288]
                        require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                        call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        _24030 = mem[64]
                        mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 36] = arg1
                        mem[mem[64] + 68] = ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64] + 4] = 96
                        mem[mem[64] + 100] = mem[(32 * stor0.length) + 288]
                        _24032 = mem[(32 * stor0.length) + 288]
                        idx = 0
                        while idx < 32 * _24032:
                            mem[mem[64] + idx + 132] = mem[(32 * stor0.length) + idx + 320]
                            idx = idx + 32
                            continue 
                        require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                        call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len (32 * _24032) + _24030 + -mem[64] + 128]
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if 2 < mem[(32 * stor0.length) + 288]:
                            if 4 < mem[(32 * stor0.length) + 288]:
                                _26359 = mem[(32 * stor0.length) + 448]
                                mem[mem[64] + 4] = mem[(32 * stor0.length) + 396 len 20]
                                mem[mem[64] + 36] = address(_26359)
                                mem[mem[64] + 68] = ext_call.return_data[0]
                                require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                                call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4], address(_26359), ext_call.return_data[0]
                                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 64
                                if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                        if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 <= 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                            s = s + 1
                                            t = u
                                            u = 2
                                            v = v * s / 10
                                            continue 
                                        if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                            s = s + 1
                                            t = u
                                            u = (10^18 * ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) - (10^18 * 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                            v = v * s / 10
                                            continue 
                        revert
                    s = 9
                    u = t
                    w = 2
                    x = v
                    while w > u:
                        require 0 < mem[(32 * stor0.length) + 288]
                        _26356 = mem[(32 * stor0.length) + 320]
                        mem[mem[64] + 36] = mem[(32 * stor0.length) + 332 len 20]
                        mem[mem[64] + 68] = -(x * s / 10) + (s * x * s / 10) / 10
                        require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                        call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_26356), -(x * s / 10) + (s * x * s / 10) / 10
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 0 < mem[(32 * stor0.length) + 288]
                        require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                        call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 36] = arg1
                        mem[mem[64] + 68] = ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64] + 4] = 96
                        mem[mem[64] + 100] = mem[(32 * stor0.length) + 288]
                        _26833 = mem[(32 * stor0.length) + 288]
                        idx = 0
                        while idx < 32 * _26833:
                            mem[mem[64] + idx + 132] = mem[(32 * stor0.length) + idx + 320]
                            idx = idx + 32
                            continue 
                        require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                        call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                             gas gas_remaining wei
                            args 96, address(arg1), ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18), mem[mem[64] + 100 len (32 * _26833) + 32]
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if 2 < mem[(32 * stor0.length) + 288]:
                            if 4 < mem[(32 * stor0.length) + 288]:
                                _28816 = mem[(32 * stor0.length) + 448]
                                mem[mem[64] + 4] = mem[(32 * stor0.length) + 396 len 20]
                                mem[mem[64] + 36] = address(_28816)
                                mem[mem[64] + 68] = ext_call.return_data[0]
                                require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                                call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4], address(_28816), ext_call.return_data[0]
                                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 64
                                if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                        if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 <= 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                            s = s - 1
                                            u = w
                                            w = 2
                                            x = x * s / 10
                                            continue 
                                        if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                            s = s - 1
                                            u = w
                                            w = (10^18 * ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) - (10^18 * 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                            x = x * s / 10
                                            continue 
                        revert
                    if x <= 0:
                        return 0, 
                               0,
                               10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18,
                               ext_call.return_data[0] * defaultAmount / 10^18
                    _26130 = mem[64]
                    mem[64] = mem[64] + (32 * stor0.length) + 32
                    mem[_26130] = stor0.length
                    if not stor0.length:
                        require 0 < stor0.length
                        _26433 = mem[_26130 + 32]
                        mem[mem[64] + 36] = mem[_26130 + 44 len 20]
                        mem[mem[64] + 68] = x
                        require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                        call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_26433), x
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 0 < stor0.length
                        require ext_code.size(mem[_26130 + 44 len 20])
                        call mem[_26130 + 44 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 36] = arg1
                        mem[mem[64] + 68] = ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64] + 4] = 96
                        mem[mem[64] + 100] = stor0.length
                        mem[mem[64] + 132 len floor32(stor0.length)] = mem[_26130 + 32 len floor32(stor0.length)]
                        var234001 = floor32(stor0.length)
                        require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                        call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                             gas gas_remaining wei
                            args Array(len=stor0.length, data=mem[mem[64] + 132 len 32 * stor0.length]), address(arg1), ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _28813 = mem[_26130 + 160]
                        mem[mem[64] + 4] = mem[_26130 + 108 len 20]
                        require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                        call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4], address(_28813), ext_call.return_data[0]
                    else:
                        mem[_26130 + 32] = address(stor0.field_0)
                        idx = _26130 + 32
                        s = 0
                        while _26130 + (32 * stor0.length) > idx:
                            mem[idx + 32] = stor0[s].field_256
                            idx = idx + 32
                            s = s + 1
                            continue 
                        require 0 < stor0.length
                        _30240 = mem[_26130 + 32]
                        mem[mem[64] + 36] = mem[_26130 + 44 len 20]
                        mem[mem[64] + 68] = x
                        require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                        call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_30240), x
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 0 < stor0.length
                        require ext_code.size(mem[_26130 + 44 len 20])
                        call mem[_26130 + 44 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 36] = arg1
                        mem[mem[64] + 68] = ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64] + 4] = 96
                        mem[mem[64] + 100] = stor0.length
                        mem[mem[64] + 132 len floor32(stor0.length)] = mem[_26130 + 32 len floor32(stor0.length)]
                        var238001 = floor32(stor0.length)
                        require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                        call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                             gas gas_remaining wei
                            args Array(len=stor0.length, data=mem[mem[64] + 132 len 32 * stor0.length]), address(arg1), ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _31705 = mem[_26130 + 160]
                        mem[mem[64] + 4] = mem[_26130 + 108 len 20]
                        require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                        call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4], address(_31705), ext_call.return_data[0]
                else:
                    require 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                    require 0 < stor0.length
                    require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                    call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(ext_call.return_data[32]), (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 0 < stor0.length
                    require ext_code.size(ext_call.return_data[44 len 20])
                    call ext_call.return_data[44 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(64 * stor0.length) + 320] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                    mem[(64 * stor0.length) + 356] = arg1
                    mem[(64 * stor0.length) + 388] = ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                    mem[(64 * stor0.length) + 324] = 96
                    mem[(64 * stor0.length) + 420] = stor0.length
                    mem[(64 * stor0.length) + 452 len floor32(stor0.length)] = mem[(32 * stor0.length) + 320 len floor32(stor0.length)]
                    require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                    call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                         gas gas_remaining wei
                        args mem[(64 * stor0.length) + 324 len (161 * stor0.length) + 128]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _20270 = mem[(32 * stor0.length) + 448]
                    mem[(64 * stor0.length) + 356] = mem[(32 * stor0.length) + 460 len 20]
                    mem[(64 * stor0.length) + 388] = ext_call.return_data[0]
                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args address(stor0.length), address(_20270), ext_call.return_data[0]
                    mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18
                    require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18
                    if ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 <= 10^18 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18:
                        s = 9
                        t = 2
                        u = (10^18 * ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) - (10^18 * 10^18 * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                        v = (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                        while u > t:
                            require 0 < mem[(32 * stor0.length) + 288]
                            mem[(64 * stor0.length) + 356] = mem[(32 * stor0.length) + 332 len 20]
                            mem[(64 * stor0.length) + 388] = -(v * s / 10) + (s * v * s / 10) / 10
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[(32 * stor0.length) + 320]), -(v * s / 10) + (s * v * s / 10) / 10
                            mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < mem[(32 * stor0.length) + 288]
                            require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                            call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[(64 * stor0.length) + 320] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[(64 * stor0.length) + 356] = arg1
                            mem[(64 * stor0.length) + 388] = ext_call.return_data[0] * -(v * s / 10) + (s * v * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[(64 * stor0.length) + 324] = 96
                            mem[(64 * stor0.length) + 420] = mem[(32 * stor0.length) + 288]
                            _24036 = mem[(32 * stor0.length) + 288]
                            idx = 0
                            while idx < 32 * _24036:
                                mem[(64 * stor0.length) + idx + 452] = mem[(32 * stor0.length) + idx + 320]
                                idx = idx + 32
                                continue 
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args 96, address(arg1), ext_call.return_data[0] * -(v * s / 10) + (s * v * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18), mem[(64 * stor0.length) + 420 len (32 * _24036) + 32]
                            mem[(64 * stor0.length) + 320] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 2 < mem[(32 * stor0.length) + 288]:
                                if 4 < mem[(32 * stor0.length) + 288]:
                                    _26365 = mem[(32 * stor0.length) + 448]
                                    mem[(64 * stor0.length) + 324] = mem[(32 * stor0.length) + 396 len 20]
                                    mem[(64 * stor0.length) + 356] = address(_26365)
                                    mem[(64 * stor0.length) + 388] = ext_call.return_data[0]
                                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[(64 * stor0.length) + 324], address(_26365), ext_call.return_data[0]
                                    mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 64
                                    if ext_call.return_data[0] * -(v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                            if ext_call.return_data[0] * -(v * s / 10) + (s * v * s / 10) / 10 / 10^18 <= 10^18 * -(v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                                s = s - 1
                                                t = u
                                                u = 2
                                                v = v * s / 10
                                                continue 
                                            if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                                s = s - 1
                                                t = u
                                                u = (10^18 * ext_call.return_data[0] * -(v * s / 10) + (s * v * s / 10) / 10 / 10^18) - (10^18 * 10^18 * -(v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(v * s / 10) + (s * v * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                                v = v * s / 10
                                                continue 
                            revert
                        if v <= 0:
                            return 0, 
                                   0,
                                   10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18,
                                   ext_call.return_data[0] * defaultAmount / 10^18
                        if not stor0.length:
                            require 0 < stor0.length
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[(64 * stor0.length) + 352]), v
                            mem[(98 * stor0.length) + 352 len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < stor0.length
                            require ext_code.size(mem[(64 * stor0.length) + 364 len 20])
                            call mem[(64 * stor0.length) + 364 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[(98 * stor0.length) + 388] = arg1
                            mem[(98 * stor0.length) + 420] = ext_call.return_data[0] * v / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[(98 * stor0.length) + 356] = 96
                            mem[(98 * stor0.length) + 452] = stor0.length
                            mem[(98 * stor0.length) + 484 len floor32(stor0.length)] = mem[(64 * stor0.length) + 352 len floor32(stor0.length)]
                            var233001 = floor32(stor0.length)
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args Array(len=stor0.length, data=mem[(64 * stor0.length) + 352 len floor32(stor0.length)], mem[(98 * stor0.length) + floor32(stor0.length) + 484 len (33 * stor0.length) - floor32(stor0.length)]), address(arg1), ext_call.return_data[0] * v / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[(98 * stor0.length) + 352] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _26362 = mem[(64 * stor0.length) + 480]
                            mem[(98 * stor0.length) + 356] = mem[(64 * stor0.length) + 428 len 20]
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[(98 * stor0.length) + 356], address(_26362), ext_call.return_data[0]
                        else:
                            mem[(64 * stor0.length) + 352] = address(stor0.field_0)
                            idx = (64 * stor0.length) + 352
                            s = 0
                            while (98 * stor0.length) + 320 > idx:
                                mem[idx + 32] = stor0[s].field_256
                                idx = idx + 32
                                s = s + 1
                                continue 
                            require 0 < stor0.length
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[(64 * stor0.length) + 352]), v
                            mem[(98 * stor0.length) + 352 len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < stor0.length
                            require ext_code.size(mem[(64 * stor0.length) + 364 len 20])
                            call mem[(64 * stor0.length) + 364 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[(98 * stor0.length) + 388] = arg1
                            mem[(98 * stor0.length) + 420] = ext_call.return_data[0] * v / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[(98 * stor0.length) + 356] = 96
                            mem[(98 * stor0.length) + 452] = stor0.length
                            mem[(98 * stor0.length) + 484 len floor32(stor0.length)] = mem[(64 * stor0.length) + 352 len floor32(stor0.length)]
                            var237001 = floor32(stor0.length)
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args Array(len=stor0.length, data=mem[(98 * stor0.length) + 484 len 32 * stor0.length]), address(arg1), ext_call.return_data[0] * v / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[(98 * stor0.length) + 352] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _30370 = mem[(64 * stor0.length) + 480]
                            mem[(98 * stor0.length) + 356] = mem[(64 * stor0.length) + 428 len 20]
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[(98 * stor0.length) + 356], address(_30370), ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require ext_call.return_data[0] * v / 10^18
                        require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * v / 10^18
                        if ext_call.return_data[0] * v / 10^18 <= 10^18 * v / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * v / 10^18:
                            require ext_code.size(arg2)
                            call arg2.0x70a08231 with:
                                 gas gas_remaining wei
                                args 0x63825c174ab367968ec60f061753d3bbd36a0d8f
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(arg2)
                            call arg2.0x70a08231 with:
                                 gas gas_remaining wei
                                args address(arg1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            return 0, 2, ext_call.return_data[0], ext_call.return_data[0]
                        require 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args 0x63825c174ab367968ec60f061753d3bbd36a0d8f
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(arg1)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        return v, 
                               (10^18 * ext_call.return_data[0] * v / 10^18) - (10^18 * 10^18 * v / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * v / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18,
                               ext_call.return_data[0],
                               ext_call.return_data[0]
                    require 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                    s = 11
                    t = (10^18 * ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18) - (10^18 * 10^18 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 * mem[mem[64]] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                    u = 2
                    v = (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                    while u > t:
                        require 0 < mem[(32 * stor0.length) + 288]
                        _23478 = mem[(32 * stor0.length) + 320]
                        mem[mem[64] + 36] = mem[(32 * stor0.length) + 332 len 20]
                        mem[mem[64] + 68] = (v * s / 10) + (s * v * s / 10) / 10
                        require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                        call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_23478), (v * s / 10) + (s * v * s / 10) / 10
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 0 < mem[(32 * stor0.length) + 288]
                        require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                        call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 36] = arg1
                        mem[mem[64] + 68] = ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64] + 4] = 96
                        mem[mem[64] + 100] = mem[(32 * stor0.length) + 288]
                        _24040 = mem[(32 * stor0.length) + 288]
                        idx = 0
                        while idx < 32 * _24040:
                            mem[mem[64] + idx + 132] = mem[(32 * stor0.length) + idx + 320]
                            idx = idx + 32
                            continue 
                        require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                        call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                             gas gas_remaining wei
                            args 96, address(arg1), ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18), mem[mem[64] + 100 len (32 * _24040) + 32]
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if 2 < mem[(32 * stor0.length) + 288]:
                            if 4 < mem[(32 * stor0.length) + 288]:
                                _26372 = mem[(32 * stor0.length) + 448]
                                mem[mem[64] + 4] = mem[(32 * stor0.length) + 396 len 20]
                                mem[mem[64] + 36] = address(_26372)
                                mem[mem[64] + 68] = ext_call.return_data[0]
                                require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                                call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4], address(_26372), ext_call.return_data[0]
                                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 64
                                if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                        if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 <= 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                            s = s + 1
                                            t = u
                                            u = 2
                                            v = v * s / 10
                                            continue 
                                        if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                            s = s + 1
                                            t = u
                                            u = (10^18 * ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) - (10^18 * 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                            v = v * s / 10
                                            continue 
                        revert
                    s = 9
                    u = t
                    w = (10^18 * ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) - (10^18 * 10^18 * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                    x = v
                    while w > u:
                        require 0 < mem[(32 * stor0.length) + 288]
                        _26369 = mem[(32 * stor0.length) + 320]
                        mem[mem[64] + 36] = mem[(32 * stor0.length) + 332 len 20]
                        mem[mem[64] + 68] = -(x * s / 10) + (s * x * s / 10) / 10
                        require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                        call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_26369), -(x * s / 10) + (s * x * s / 10) / 10
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 0 < mem[(32 * stor0.length) + 288]
                        require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                        call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 36] = arg1
                        mem[mem[64] + 68] = ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64] + 4] = 96
                        mem[mem[64] + 100] = mem[(32 * stor0.length) + 288]
                        _26837 = mem[(32 * stor0.length) + 288]
                        idx = 0
                        while idx < 32 * _26837:
                            mem[mem[64] + idx + 132] = mem[(32 * stor0.length) + idx + 320]
                            idx = idx + 32
                            continue 
                        require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                        call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                             gas gas_remaining wei
                            args 96, address(arg1), ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18), mem[mem[64] + 100 len (32 * _26837) + 32]
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if 2 < mem[(32 * stor0.length) + 288]:
                            if 4 < mem[(32 * stor0.length) + 288]:
                                _28824 = mem[(32 * stor0.length) + 448]
                                mem[mem[64] + 4] = mem[(32 * stor0.length) + 396 len 20]
                                mem[mem[64] + 36] = address(_28824)
                                mem[mem[64] + 68] = ext_call.return_data[0]
                                require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                                call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4], address(_28824), ext_call.return_data[0]
                                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 64
                                if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                        if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 <= 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                            s = s - 1
                                            u = w
                                            w = 2
                                            x = x * s / 10
                                            continue 
                                        if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                            s = s - 1
                                            u = w
                                            w = (10^18 * ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) - (10^18 * 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                            x = x * s / 10
                                            continue 
                        revert
                    if x <= 0:
                        return 0, 
                               0,
                               10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18,
                               ext_call.return_data[0] * defaultAmount / 10^18
                    _26134 = mem[64]
                    mem[64] = mem[64] + (32 * stor0.length) + 32
                    mem[_26134] = stor0.length
                    if not stor0.length:
                        require 0 < stor0.length
                        _26436 = mem[_26134 + 32]
                        mem[mem[64] + 36] = mem[_26134 + 44 len 20]
                        mem[mem[64] + 68] = x
                        require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                        call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_26436), x
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 0 < stor0.length
                        require ext_code.size(mem[_26134 + 44 len 20])
                        call mem[_26134 + 44 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 36] = arg1
                        mem[mem[64] + 68] = ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64] + 4] = 96
                        mem[mem[64] + 100] = stor0.length
                        mem[mem[64] + 132 len floor32(stor0.length)] = mem[_26134 + 32 len floor32(stor0.length)]
                        var235001 = floor32(stor0.length)
                        require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                        call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                             gas gas_remaining wei
                            args Array(len=stor0.length, data=mem[mem[64] + 132 len 32 * stor0.length]), address(arg1), ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _28821 = mem[_26134 + 160]
                        mem[mem[64] + 4] = mem[_26134 + 108 len 20]
                        require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                        call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4], address(_28821), ext_call.return_data[0]
                    else:
                        mem[_26134 + 32] = address(stor0.field_0)
                        idx = _26134 + 32
                        s = 0
                        while _26134 + (32 * stor0.length) > idx:
                            mem[idx + 32] = stor0[s].field_256
                            idx = idx + 32
                            s = s + 1
                            continue 
                        require 0 < stor0.length
                        _30244 = mem[_26134 + 32]
                        mem[mem[64] + 36] = mem[_26134 + 44 len 20]
                        mem[mem[64] + 68] = x
                        require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                        call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_30244), x
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 0 < stor0.length
                        require ext_code.size(mem[_26134 + 44 len 20])
                        call mem[_26134 + 44 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 36] = arg1
                        mem[mem[64] + 68] = ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64] + 4] = 96
                        mem[mem[64] + 100] = stor0.length
                        mem[mem[64] + 132 len floor32(stor0.length)] = mem[_26134 + 32 len floor32(stor0.length)]
                        var239001 = floor32(stor0.length)
                        require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                        call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                             gas gas_remaining wei
                            args Array(len=stor0.length, data=mem[mem[64] + 132 len 32 * stor0.length]), address(arg1), ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _31708 = mem[_26134 + 160]
                        mem[mem[64] + 4] = mem[_26134 + 108 len 20]
                        require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                        call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4], address(_31708), ext_call.return_data[0]
            else:
                require 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                require 0 < stor0.length
                require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(ext_call.return_data[32]), 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require 0 < stor0.length
                require ext_code.size(ext_call.return_data[44 len 20])
                call ext_call.return_data[44 len 20].0x313ce567 with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 10^(-ext_call.return_data[0] + 18)
                mem[(64 * stor0.length) + 320] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                mem[(64 * stor0.length) + 356] = arg1
                mem[(64 * stor0.length) + 388] = ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                mem[(64 * stor0.length) + 324] = 96
                mem[(64 * stor0.length) + 420] = stor0.length
                mem[(64 * stor0.length) + 452 len floor32(stor0.length)] = mem[(32 * stor0.length) + 320 len floor32(stor0.length)]
                require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                     gas gas_remaining wei
                    args mem[(64 * stor0.length) + 324 len (161 * stor0.length) + 128]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < stor0.length
                require 4 < stor0.length
                require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args address(stor0.length), address(mem[(32 * stor0.length) + 448]), ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18
                require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18
                if ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 <= 10^18 * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18:
                    require 0 < stor0.length
                    require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                    call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(ext_call.return_data[32]), (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 0 < stor0.length
                    require ext_code.size(ext_call.return_data[44 len 20])
                    call ext_call.return_data[44 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(64 * stor0.length) + 320] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                    mem[(64 * stor0.length) + 356] = arg1
                    mem[(64 * stor0.length) + 388] = ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                    mem[(64 * stor0.length) + 324] = 96
                    mem[(64 * stor0.length) + 420] = stor0.length
                    mem[(64 * stor0.length) + 452 len floor32(stor0.length)] = mem[(32 * stor0.length) + 320 len floor32(stor0.length)]
                    require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                    call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                         gas gas_remaining wei
                        args mem[(64 * stor0.length) + 324 len (161 * stor0.length) + 128]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _20273 = mem[(32 * stor0.length) + 448]
                    mem[(64 * stor0.length) + 356] = mem[(32 * stor0.length) + 460 len 20]
                    mem[(64 * stor0.length) + 388] = ext_call.return_data[0]
                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args address(stor0.length), address(_20273), ext_call.return_data[0]
                    mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18
                    require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18
                    if ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 <= 10^18 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18:
                        s = 11
                        t = 2
                        u = (10^18 * ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) - (10^18 * 10^18 * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                        v = (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                        while u > t:
                            require 0 < mem[(32 * stor0.length) + 288]
                            _23482 = mem[(32 * stor0.length) + 320]
                            mem[mem[64] + 36] = mem[(32 * stor0.length) + 332 len 20]
                            mem[mem[64] + 68] = (v * s / 10) + (s * v * s / 10) / 10
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_23482), (v * s / 10) + (s * v * s / 10) / 10
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < mem[(32 * stor0.length) + 288]
                            require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                            call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            _24042 = mem[64]
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = mem[(32 * stor0.length) + 288]
                            _24044 = mem[(32 * stor0.length) + 288]
                            idx = 0
                            while idx < 32 * _24044:
                                mem[mem[64] + idx + 132] = mem[(32 * stor0.length) + idx + 320]
                                idx = idx + 32
                                continue 
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len (32 * _24044) + _24042 + -mem[64] + 128]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 2 < mem[(32 * stor0.length) + 288]:
                                if 4 < mem[(32 * stor0.length) + 288]:
                                    _26379 = mem[(32 * stor0.length) + 448]
                                    mem[mem[64] + 4] = mem[(32 * stor0.length) + 396 len 20]
                                    mem[mem[64] + 36] = address(_26379)
                                    mem[mem[64] + 68] = ext_call.return_data[0]
                                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4], address(_26379), ext_call.return_data[0]
                                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 64
                                    if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                            if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 <= 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                                s = s + 1
                                                t = u
                                                u = 2
                                                v = v * s / 10
                                                continue 
                                            if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                                s = s + 1
                                                t = u
                                                u = (10^18 * ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) - (10^18 * 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                                v = v * s / 10
                                                continue 
                            revert
                        s = 9
                        u = t
                        w = 2
                        x = v
                        while w > u:
                            require 0 < mem[(32 * stor0.length) + 288]
                            _26376 = mem[(32 * stor0.length) + 320]
                            mem[mem[64] + 36] = mem[(32 * stor0.length) + 332 len 20]
                            mem[mem[64] + 68] = -(x * s / 10) + (s * x * s / 10) / 10
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_26376), -(x * s / 10) + (s * x * s / 10) / 10
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < mem[(32 * stor0.length) + 288]
                            require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                            call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            _26839 = mem[64]
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = mem[(32 * stor0.length) + 288]
                            _26841 = mem[(32 * stor0.length) + 288]
                            idx = 0
                            while idx < 32 * _26841:
                                mem[mem[64] + idx + 132] = mem[(32 * stor0.length) + idx + 320]
                                idx = idx + 32
                                continue 
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len (32 * _26841) + _26839 + -mem[64] + 128]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 2 < mem[(32 * stor0.length) + 288]:
                                if 4 < mem[(32 * stor0.length) + 288]:
                                    _28830 = mem[(32 * stor0.length) + 448]
                                    mem[mem[64] + 4] = mem[(32 * stor0.length) + 396 len 20]
                                    mem[mem[64] + 36] = address(_28830)
                                    mem[mem[64] + 68] = ext_call.return_data[0]
                                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4], address(_28830), ext_call.return_data[0]
                                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 64
                                    if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                            if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 <= 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                                s = s - 1
                                                u = w
                                                w = 2
                                                x = x * s / 10
                                                continue 
                                            if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                                s = s - 1
                                                u = w
                                                w = (10^18 * ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) - (10^18 * 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                                x = x * s / 10
                                                continue 
                            revert
                        if x <= 0:
                            return 0, 
                                   0,
                                   10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18,
                                   ext_call.return_data[0] * defaultAmount / 10^18
                        _26136 = mem[64]
                        mem[64] = mem[64] + (32 * stor0.length) + 32
                        mem[_26136] = stor0.length
                        if not stor0.length:
                            require 0 < stor0.length
                            _26439 = mem[_26136 + 32]
                            mem[mem[64] + 36] = mem[_26136 + 44 len 20]
                            mem[mem[64] + 68] = x
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_26439), x
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < stor0.length
                            require ext_code.size(mem[_26136 + 44 len 20])
                            call mem[_26136 + 44 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = stor0.length
                            mem[mem[64] + 132 len floor32(stor0.length)] = mem[_26136 + 32 len floor32(stor0.length)]
                            var234001 = floor32(stor0.length)
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args Array(len=stor0.length, data=mem[mem[64] + 132 len 32 * stor0.length]), address(arg1), ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _28827 = mem[_26136 + 160]
                            mem[mem[64] + 4] = mem[_26136 + 108 len 20]
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4], address(_28827), ext_call.return_data[0]
                        else:
                            mem[_26136 + 32] = address(stor0.field_0)
                            idx = _26136 + 32
                            s = 0
                            while _26136 + (32 * stor0.length) > idx:
                                mem[idx + 32] = stor0[s].field_256
                                idx = idx + 32
                                s = s + 1
                                continue 
                            require 0 < stor0.length
                            _30247 = mem[_26136 + 32]
                            mem[mem[64] + 36] = mem[_26136 + 44 len 20]
                            mem[mem[64] + 68] = x
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_30247), x
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < stor0.length
                            require ext_code.size(mem[_26136 + 44 len 20])
                            call mem[_26136 + 44 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = stor0.length
                            mem[mem[64] + 132 len floor32(stor0.length)] = mem[_26136 + 32 len floor32(stor0.length)]
                            var238001 = floor32(stor0.length)
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args Array(len=stor0.length, data=mem[mem[64] + 132 len 32 * stor0.length]), address(arg1), ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _31711 = mem[_26136 + 160]
                            mem[mem[64] + 4] = mem[_26136 + 108 len 20]
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4], address(_31711), ext_call.return_data[0]
                    else:
                        require 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                        s = 11
                        t = (10^18 * ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18) - (10^18 * 10^18 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 * mem[mem[64]] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                        u = (10^18 * ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) - (10^18 * 10^18 * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                        v = (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                        while u > t:
                            require 0 < mem[(32 * stor0.length) + 288]
                            _23486 = mem[(32 * stor0.length) + 320]
                            mem[mem[64] + 36] = mem[(32 * stor0.length) + 332 len 20]
                            mem[mem[64] + 68] = (v * s / 10) + (s * v * s / 10) / 10
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_23486), (v * s / 10) + (s * v * s / 10) / 10
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < mem[(32 * stor0.length) + 288]
                            require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                            call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = mem[(32 * stor0.length) + 288]
                            _24048 = mem[(32 * stor0.length) + 288]
                            idx = 0
                            while idx < 32 * _24048:
                                mem[mem[64] + idx + 132] = mem[(32 * stor0.length) + idx + 320]
                                idx = idx + 32
                                continue 
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args 96, address(arg1), ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18), mem[mem[64] + 100 len (32 * _24048) + 32]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 2 < mem[(32 * stor0.length) + 288]:
                                if 4 < mem[(32 * stor0.length) + 288]:
                                    _26386 = mem[(32 * stor0.length) + 448]
                                    mem[mem[64] + 4] = mem[(32 * stor0.length) + 396 len 20]
                                    mem[mem[64] + 36] = address(_26386)
                                    mem[mem[64] + 68] = ext_call.return_data[0]
                                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4], address(_26386), ext_call.return_data[0]
                                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 64
                                    if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                            if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 <= 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                                s = s + 1
                                                t = u
                                                u = 2
                                                v = v * s / 10
                                                continue 
                                            if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                                s = s + 1
                                                t = u
                                                u = (10^18 * ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) - (10^18 * 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                                v = v * s / 10
                                                continue 
                            revert
                        s = 9
                        u = t
                        w = 2
                        x = v
                        while w > u:
                            require 0 < mem[(32 * stor0.length) + 288]
                            _26383 = mem[(32 * stor0.length) + 320]
                            mem[mem[64] + 36] = mem[(32 * stor0.length) + 332 len 20]
                            mem[mem[64] + 68] = -(x * s / 10) + (s * x * s / 10) / 10
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_26383), -(x * s / 10) + (s * x * s / 10) / 10
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < mem[(32 * stor0.length) + 288]
                            require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                            call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = mem[(32 * stor0.length) + 288]
                            _26845 = mem[(32 * stor0.length) + 288]
                            idx = 0
                            while idx < 32 * _26845:
                                mem[mem[64] + idx + 132] = mem[(32 * stor0.length) + idx + 320]
                                idx = idx + 32
                                continue 
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args 96, address(arg1), ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18), mem[mem[64] + 100 len (32 * _26845) + 32]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 2 < mem[(32 * stor0.length) + 288]:
                                if 4 < mem[(32 * stor0.length) + 288]:
                                    _28836 = mem[(32 * stor0.length) + 448]
                                    mem[mem[64] + 4] = mem[(32 * stor0.length) + 396 len 20]
                                    mem[mem[64] + 36] = address(_28836)
                                    mem[mem[64] + 68] = ext_call.return_data[0]
                                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4], address(_28836), ext_call.return_data[0]
                                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 64
                                    if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                            if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 <= 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                                s = s - 1
                                                u = w
                                                w = 2
                                                x = x * s / 10
                                                continue 
                                            if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                                s = s - 1
                                                u = w
                                                w = (10^18 * ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) - (10^18 * 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                                x = x * s / 10
                                                continue 
                            revert
                        if x <= 0:
                            return 0, 
                                   0,
                                   10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18,
                                   ext_call.return_data[0] * defaultAmount / 10^18
                        _26138 = mem[64]
                        mem[64] = mem[64] + (32 * stor0.length) + 32
                        mem[_26138] = stor0.length
                        if not stor0.length:
                            require 0 < stor0.length
                            _26442 = mem[_26138 + 32]
                            mem[mem[64] + 36] = mem[_26138 + 44 len 20]
                            mem[mem[64] + 68] = x
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_26442), x
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < stor0.length
                            require ext_code.size(mem[_26138 + 44 len 20])
                            call mem[_26138 + 44 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = stor0.length
                            mem[mem[64] + 132 len floor32(stor0.length)] = mem[_26138 + 32 len floor32(stor0.length)]
                            var235001 = floor32(stor0.length)
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args Array(len=stor0.length, data=mem[mem[64] + 132 len 32 * stor0.length]), address(arg1), ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _28833 = mem[_26138 + 160]
                            mem[mem[64] + 4] = mem[_26138 + 108 len 20]
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4], address(_28833), ext_call.return_data[0]
                        else:
                            mem[_26138 + 32] = address(stor0.field_0)
                            idx = _26138 + 32
                            s = 0
                            while _26138 + (32 * stor0.length) > idx:
                                mem[idx + 32] = stor0[s].field_256
                                idx = idx + 32
                                s = s + 1
                                continue 
                            require 0 < stor0.length
                            _30250 = mem[_26138 + 32]
                            mem[mem[64] + 36] = mem[_26138 + 44 len 20]
                            mem[mem[64] + 68] = x
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_30250), x
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < stor0.length
                            require ext_code.size(mem[_26138 + 44 len 20])
                            call mem[_26138 + 44 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = stor0.length
                            mem[mem[64] + 132 len floor32(stor0.length)] = mem[_26138 + 32 len floor32(stor0.length)]
                            var239001 = floor32(stor0.length)
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args Array(len=stor0.length, data=mem[mem[64] + 132 len 32 * stor0.length]), address(arg1), ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _31714 = mem[_26138 + 160]
                            mem[mem[64] + 4] = mem[_26138 + 108 len 20]
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4], address(_31714), ext_call.return_data[0]
                else:
                    require 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                    require 0 < stor0.length
                    require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                    call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(ext_call.return_data[32]), (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 0 < stor0.length
                    require ext_code.size(ext_call.return_data[44 len 20])
                    call ext_call.return_data[44 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(64 * stor0.length) + 320] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                    mem[(64 * stor0.length) + 356] = arg1
                    mem[(64 * stor0.length) + 388] = ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                    mem[(64 * stor0.length) + 324] = 96
                    mem[(64 * stor0.length) + 420] = stor0.length
                    mem[(64 * stor0.length) + 452 len floor32(stor0.length)] = mem[(32 * stor0.length) + 320 len floor32(stor0.length)]
                    require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                    call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                         gas gas_remaining wei
                        args mem[(64 * stor0.length) + 324 len (161 * stor0.length) + 128]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _20276 = mem[(32 * stor0.length) + 448]
                    mem[(64 * stor0.length) + 356] = mem[(32 * stor0.length) + 460 len 20]
                    mem[(64 * stor0.length) + 388] = ext_call.return_data[0]
                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args address(stor0.length), address(_20276), ext_call.return_data[0]
                    mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18
                    require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18
                    if ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 <= 10^18 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18:
                        s = 11
                        t = 2
                        u = (10^18 * ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) - (10^18 * 10^18 * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                        v = (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                        while u > t:
                            require 0 < mem[(32 * stor0.length) + 288]
                            _23490 = mem[(32 * stor0.length) + 320]
                            mem[mem[64] + 36] = mem[(32 * stor0.length) + 332 len 20]
                            mem[mem[64] + 68] = (v * s / 10) + (s * v * s / 10) / 10
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_23490), (v * s / 10) + (s * v * s / 10) / 10
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < mem[(32 * stor0.length) + 288]
                            require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                            call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            _24050 = mem[64]
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = mem[(32 * stor0.length) + 288]
                            _24052 = mem[(32 * stor0.length) + 288]
                            idx = 0
                            while idx < 32 * _24052:
                                mem[mem[64] + idx + 132] = mem[(32 * stor0.length) + idx + 320]
                                idx = idx + 32
                                continue 
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len (32 * _24052) + _24050 + -mem[64] + 128]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 2 < mem[(32 * stor0.length) + 288]:
                                if 4 < mem[(32 * stor0.length) + 288]:
                                    _26393 = mem[(32 * stor0.length) + 448]
                                    mem[mem[64] + 4] = mem[(32 * stor0.length) + 396 len 20]
                                    mem[mem[64] + 36] = address(_26393)
                                    mem[mem[64] + 68] = ext_call.return_data[0]
                                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4], address(_26393), ext_call.return_data[0]
                                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 64
                                    if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                            if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 <= 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                                s = s + 1
                                                t = u
                                                u = 2
                                                v = v * s / 10
                                                continue 
                                            if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                                s = s + 1
                                                t = u
                                                u = (10^18 * ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) - (10^18 * 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                                v = v * s / 10
                                                continue 
                            revert
                        s = 9
                        u = t
                        w = (10^18 * ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) - (10^18 * 10^18 * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                        x = v
                        while w > u:
                            require 0 < mem[(32 * stor0.length) + 288]
                            _26390 = mem[(32 * stor0.length) + 320]
                            mem[mem[64] + 36] = mem[(32 * stor0.length) + 332 len 20]
                            mem[mem[64] + 68] = -(x * s / 10) + (s * x * s / 10) / 10
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_26390), -(x * s / 10) + (s * x * s / 10) / 10
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < mem[(32 * stor0.length) + 288]
                            require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                            call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = mem[(32 * stor0.length) + 288]
                            _26849 = mem[(32 * stor0.length) + 288]
                            idx = 0
                            while idx < 32 * _26849:
                                mem[mem[64] + idx + 132] = mem[(32 * stor0.length) + idx + 320]
                                idx = idx + 32
                                continue 
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args 96, address(arg1), ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18), mem[mem[64] + 100 len (32 * _26849) + 32]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 2 < mem[(32 * stor0.length) + 288]:
                                if 4 < mem[(32 * stor0.length) + 288]:
                                    _28842 = mem[(32 * stor0.length) + 448]
                                    mem[mem[64] + 4] = mem[(32 * stor0.length) + 396 len 20]
                                    mem[mem[64] + 36] = address(_28842)
                                    mem[mem[64] + 68] = ext_call.return_data[0]
                                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4], address(_28842), ext_call.return_data[0]
                                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 64
                                    if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                            if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 <= 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                                s = s - 1
                                                u = w
                                                w = 2
                                                x = x * s / 10
                                                continue 
                                            if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                                s = s - 1
                                                u = w
                                                w = (10^18 * ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) - (10^18 * 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                                x = x * s / 10
                                                continue 
                            revert
                        if x <= 0:
                            return 0, 
                                   0,
                                   10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18,
                                   ext_call.return_data[0] * defaultAmount / 10^18
                        _26140 = mem[64]
                        mem[64] = mem[64] + (32 * stor0.length) + 32
                        mem[_26140] = stor0.length
                        if not stor0.length:
                            require 0 < stor0.length
                            _26445 = mem[_26140 + 32]
                            mem[mem[64] + 36] = mem[_26140 + 44 len 20]
                            mem[mem[64] + 68] = x
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_26445), x
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < stor0.length
                            require ext_code.size(mem[_26140 + 44 len 20])
                            call mem[_26140 + 44 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = stor0.length
                            mem[mem[64] + 132 len floor32(stor0.length)] = mem[_26140 + 32 len floor32(stor0.length)]
                            var235001 = floor32(stor0.length)
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args Array(len=stor0.length, data=mem[mem[64] + 132 len 32 * stor0.length]), address(arg1), ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _28839 = mem[_26140 + 160]
                            mem[mem[64] + 4] = mem[_26140 + 108 len 20]
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4], address(_28839), ext_call.return_data[0]
                        else:
                            mem[_26140 + 32] = address(stor0.field_0)
                            idx = _26140 + 32
                            s = 0
                            while _26140 + (32 * stor0.length) > idx:
                                mem[idx + 32] = stor0[s].field_256
                                idx = idx + 32
                                s = s + 1
                                continue 
                            require 0 < stor0.length
                            _30253 = mem[_26140 + 32]
                            mem[mem[64] + 36] = mem[_26140 + 44 len 20]
                            mem[mem[64] + 68] = x
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_30253), x
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < stor0.length
                            require ext_code.size(mem[_26140 + 44 len 20])
                            call mem[_26140 + 44 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = stor0.length
                            mem[mem[64] + 132 len floor32(stor0.length)] = mem[_26140 + 32 len floor32(stor0.length)]
                            var239001 = floor32(stor0.length)
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args Array(len=stor0.length, data=mem[mem[64] + 132 len 32 * stor0.length]), address(arg1), ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _31717 = mem[_26140 + 160]
                            mem[mem[64] + 4] = mem[_26140 + 108 len 20]
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4], address(_31717), ext_call.return_data[0]
                    else:
                        require 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                        s = 11
                        t = (10^18 * ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18) - (10^18 * 10^18 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 * mem[(64 * stor0.length) + 320] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                        u = (10^18 * ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) - (10^18 * 10^18 * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                        v = (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                        while u > t:
                            require 0 < mem[(32 * stor0.length) + 288]
                            mem[(64 * stor0.length) + 356] = mem[(32 * stor0.length) + 332 len 20]
                            mem[(64 * stor0.length) + 388] = (v * s / 10) + (s * v * s / 10) / 10
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[(32 * stor0.length) + 320]), (v * s / 10) + (s * v * s / 10) / 10
                            mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < mem[(32 * stor0.length) + 288]
                            require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                            call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[(64 * stor0.length) + 320] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[(64 * stor0.length) + 356] = arg1
                            mem[(64 * stor0.length) + 388] = ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[(64 * stor0.length) + 324] = 96
                            mem[(64 * stor0.length) + 420] = mem[(32 * stor0.length) + 288]
                            _24056 = mem[(32 * stor0.length) + 288]
                            idx = 0
                            while idx < 32 * _24056:
                                mem[(64 * stor0.length) + idx + 452] = mem[(32 * stor0.length) + idx + 320]
                                idx = idx + 32
                                continue 
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args 96, address(arg1), ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18), mem[(64 * stor0.length) + 420 len (32 * _24056) + 32]
                            mem[(64 * stor0.length) + 320] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 2 < mem[(32 * stor0.length) + 288]:
                                if 4 < mem[(32 * stor0.length) + 288]:
                                    _26400 = mem[(32 * stor0.length) + 448]
                                    mem[(64 * stor0.length) + 324] = mem[(32 * stor0.length) + 396 len 20]
                                    mem[(64 * stor0.length) + 356] = address(_26400)
                                    mem[(64 * stor0.length) + 388] = ext_call.return_data[0]
                                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[(64 * stor0.length) + 324], address(_26400), ext_call.return_data[0]
                                    mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 64
                                    if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                            if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 <= 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                                s = s + 1
                                                t = u
                                                u = 2
                                                v = v * s / 10
                                                continue 
                                            if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                                s = s + 1
                                                t = u
                                                u = (10^18 * ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) - (10^18 * 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                                v = v * s / 10
                                                continue 
                            revert
                        s = 9
                        u = t
                        w = (10^18 * ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) - (10^18 * 10^18 * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                        x = v
                        while w > u:
                            require 0 < mem[(32 * stor0.length) + 288]
                            _26397 = mem[(32 * stor0.length) + 320]
                            mem[mem[64] + 36] = mem[(32 * stor0.length) + 332 len 20]
                            mem[mem[64] + 68] = -(x * s / 10) + (s * x * s / 10) / 10
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_26397), -(x * s / 10) + (s * x * s / 10) / 10
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < mem[(32 * stor0.length) + 288]
                            require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                            call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = mem[(32 * stor0.length) + 288]
                            _26853 = mem[(32 * stor0.length) + 288]
                            idx = 0
                            while idx < 32 * _26853:
                                mem[mem[64] + idx + 132] = mem[(32 * stor0.length) + idx + 320]
                                idx = idx + 32
                                continue 
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args 96, address(arg1), ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18), mem[mem[64] + 100 len (32 * _26853) + 32]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 2 < mem[(32 * stor0.length) + 288]:
                                if 4 < mem[(32 * stor0.length) + 288]:
                                    _28848 = mem[(32 * stor0.length) + 448]
                                    mem[mem[64] + 4] = mem[(32 * stor0.length) + 396 len 20]
                                    mem[mem[64] + 36] = address(_28848)
                                    mem[mem[64] + 68] = ext_call.return_data[0]
                                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4], address(_28848), ext_call.return_data[0]
                                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 64
                                    if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                            if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 <= 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                                s = s - 1
                                                u = w
                                                w = 2
                                                x = x * s / 10
                                                continue 
                                            if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                                s = s - 1
                                                u = w
                                                w = (10^18 * ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) - (10^18 * 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                                x = x * s / 10
                                                continue 
                            revert
                        if x <= 0:
                            return 0, 
                                   0,
                                   10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18,
                                   ext_call.return_data[0] * defaultAmount / 10^18
                        _26142 = mem[64]
                        mem[64] = mem[64] + (32 * stor0.length) + 32
                        mem[_26142] = stor0.length
                        if not stor0.length:
                            require 0 < stor0.length
                            _26448 = mem[_26142 + 32]
                            mem[mem[64] + 36] = mem[_26142 + 44 len 20]
                            mem[mem[64] + 68] = x
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_26448), x
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < stor0.length
                            require ext_code.size(mem[_26142 + 44 len 20])
                            call mem[_26142 + 44 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = stor0.length
                            mem[mem[64] + 132 len floor32(stor0.length)] = mem[_26142 + 32 len floor32(stor0.length)]
                            var236001 = floor32(stor0.length)
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args Array(len=stor0.length, data=mem[mem[64] + 132 len 32 * stor0.length]), address(arg1), ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _28845 = mem[_26142 + 160]
                            mem[mem[64] + 4] = mem[_26142 + 108 len 20]
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4], address(_28845), ext_call.return_data[0]
                        else:
                            mem[_26142 + 32] = address(stor0.field_0)
                            idx = _26142 + 32
                            s = 0
                            while _26142 + (32 * stor0.length) > idx:
                                mem[idx + 32] = stor0[s].field_256
                                idx = idx + 32
                                s = s + 1
                                continue 
                            require 0 < stor0.length
                            _30256 = mem[_26142 + 32]
                            mem[mem[64] + 36] = mem[_26142 + 44 len 20]
                            mem[mem[64] + 68] = x
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_30256), x
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < stor0.length
                            require ext_code.size(mem[_26142 + 44 len 20])
                            call mem[_26142 + 44 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = stor0.length
                            mem[mem[64] + 132 len floor32(stor0.length)] = mem[_26142 + 32 len floor32(stor0.length)]
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args Array(len=stor0.length, data=mem[mem[64] + 132 len 32 * stor0.length]), address(arg1), ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _31720 = mem[_26142 + 160]
                            mem[mem[64] + 4] = mem[_26142 + 108 len 20]
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4], address(_31720), ext_call.return_data[0]
        else:
            mem[0] = 0
            mem[(32 * stor0.length) + 320] = address(stor0.field_0)
            idx = (32 * stor0.length) + 320
            s = 0
            while (64 * stor0.length) + 288 > idx:
                mem[idx + 32] = stor0[s].field_256
                idx = idx + 32
                s = s + 1
                continue 
            require 0 < stor0.length
            mem[(64 * stor0.length) + 356] = mem[(32 * stor0.length) + 332 len 20]
            mem[(64 * stor0.length) + 388] = defaultAmount
            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[(32 * stor0.length) + 320]), defaultAmount
            mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require 0 < stor0.length
            require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
            call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                 gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 10^(-ext_call.return_data[0] + 18)
            mem[(64 * stor0.length) + 320] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
            mem[(64 * stor0.length) + 356] = arg1
            mem[(64 * stor0.length) + 388] = ext_call.return_data[0] * defaultAmount / 10^18 / 10^(-ext_call.return_data[0] + 18)
            mem[(64 * stor0.length) + 324] = 96
            mem[(64 * stor0.length) + 420] = stor0.length
            mem[(64 * stor0.length) + 452 len floor32(stor0.length)] = mem[(32 * stor0.length) + 320 len floor32(stor0.length)]
            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                 gas gas_remaining wei
                args mem[(64 * stor0.length) + 324 len (161 * stor0.length) + 128]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 2 < stor0.length
            require 4 < stor0.length
            _12965 = mem[(32 * stor0.length) + 448]
            mem[(64 * stor0.length) + 324] = mem[(32 * stor0.length) + 396 len 20]
            mem[(64 * stor0.length) + 356] = address(_12965)
            mem[(64 * stor0.length) + 388] = ext_call.return_data[0]
            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args mem[(64 * stor0.length) + 324], address(_12965), ext_call.return_data[0]
            mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require ext_call.return_data[0] * defaultAmount / 10^18
            require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
            require 0 < stor0.length
            mem[(64 * stor0.length) + 356] = mem[(32 * stor0.length) + 332 len 20]
            mem[(64 * stor0.length) + 388] = 2 * defaultAmount
            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[(32 * stor0.length) + 320]), 2 * defaultAmount
            mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require 0 < stor0.length
            require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
            call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                 gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 10^(-ext_call.return_data[0] + 18)
            mem[(64 * stor0.length) + 320] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
            mem[(64 * stor0.length) + 356] = arg1
            mem[(64 * stor0.length) + 388] = ext_call.return_data[0] * 2 * defaultAmount / 10^18 / 10^(-ext_call.return_data[0] + 18)
            mem[(64 * stor0.length) + 324] = 96
            mem[(64 * stor0.length) + 420] = stor0.length
            mem[(64 * stor0.length) + 452 len floor32(stor0.length)] = mem[(32 * stor0.length) + 320 len floor32(stor0.length)]
            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                 gas gas_remaining wei
                args mem[(64 * stor0.length) + 324 len (161 * stor0.length) + 128]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 2 < stor0.length
            require 4 < stor0.length
            _16643 = mem[(32 * stor0.length) + 448]
            mem[(64 * stor0.length) + 324] = mem[(32 * stor0.length) + 396 len 20]
            mem[(64 * stor0.length) + 356] = address(_16643)
            mem[(64 * stor0.length) + 388] = ext_call.return_data[0]
            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args mem[(64 * stor0.length) + 324], address(_16643), ext_call.return_data[0]
            mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require ext_call.return_data[0] * 2 * defaultAmount / 10^18
            require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18
            require (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18)
            require 0 < stor0.length
            mem[(64 * stor0.length) + 356] = mem[(32 * stor0.length) + 332 len 20]
            mem[(64 * stor0.length) + 388] = 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10
            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[(32 * stor0.length) + 320]), 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10
            mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require 0 < stor0.length
            require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
            call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                 gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 10^(-ext_call.return_data[0] + 18)
            mem[(64 * stor0.length) + 320] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
            mem[(64 * stor0.length) + 356] = arg1
            mem[(64 * stor0.length) + 388] = ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
            mem[(64 * stor0.length) + 324] = 96
            mem[(64 * stor0.length) + 420] = stor0.length
            mem[(64 * stor0.length) + 452 len floor32(stor0.length)] = mem[(32 * stor0.length) + 320 len floor32(stor0.length)]
            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                 gas gas_remaining wei
                args mem[(64 * stor0.length) + 324 len (161 * stor0.length) + 128]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require 2 < stor0.length
            require 4 < stor0.length
            _20279 = mem[(32 * stor0.length) + 448]
            mem[(64 * stor0.length) + 324] = mem[(32 * stor0.length) + 396 len 20]
            mem[(64 * stor0.length) + 356] = address(_20279)
            mem[(64 * stor0.length) + 388] = ext_call.return_data[0]
            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args mem[(64 * stor0.length) + 324], address(_20279), ext_call.return_data[0]
            mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            require ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18
            require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18
            if ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 <= 10^18 * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18:
                require 0 < stor0.length
                mem[(64 * stor0.length) + 356] = mem[(32 * stor0.length) + 332 len 20]
                mem[(64 * stor0.length) + 388] = 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10
                require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[(32 * stor0.length) + 320]), 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10
                mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require 0 < stor0.length
                require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 10^(-ext_call.return_data[0] + 18)
                mem[(64 * stor0.length) + 320] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                mem[(64 * stor0.length) + 356] = arg1
                mem[(64 * stor0.length) + 388] = ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                mem[(64 * stor0.length) + 324] = 96
                mem[(64 * stor0.length) + 420] = stor0.length
                mem[(64 * stor0.length) + 452 len floor32(stor0.length)] = mem[(32 * stor0.length) + 320 len floor32(stor0.length)]
                require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                     gas gas_remaining wei
                    args mem[(64 * stor0.length) + 324 len (161 * stor0.length) + 128]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < stor0.length
                require 4 < stor0.length
                _23497 = mem[(32 * stor0.length) + 448]
                mem[(64 * stor0.length) + 324] = mem[(32 * stor0.length) + 396 len 20]
                mem[(64 * stor0.length) + 356] = address(_23497)
                mem[(64 * stor0.length) + 388] = ext_call.return_data[0]
                require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(64 * stor0.length) + 324], address(_23497), ext_call.return_data[0]
                mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18
                require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18
                if ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 <= 10^18 * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18:
                    require 0 < stor0.length
                    mem[(64 * stor0.length) + 356] = mem[(32 * stor0.length) + 332 len 20]
                    mem[(64 * stor0.length) + 388] = (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                    require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                    call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[(32 * stor0.length) + 320]), (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                    mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 0 < stor0.length
                    require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                    call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(64 * stor0.length) + 320] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                    mem[(64 * stor0.length) + 356] = arg1
                    mem[(64 * stor0.length) + 388] = ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                    mem[(64 * stor0.length) + 324] = 96
                    mem[(64 * stor0.length) + 420] = stor0.length
                    mem[(64 * stor0.length) + 452 len floor32(stor0.length)] = mem[(32 * stor0.length) + 320 len floor32(stor0.length)]
                    require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                    call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                         gas gas_remaining wei
                        args mem[(64 * stor0.length) + 324 len (161 * stor0.length) + 128]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _26403 = mem[(32 * stor0.length) + 448]
                    mem[(64 * stor0.length) + 324] = mem[(32 * stor0.length) + 396 len 20]
                    mem[(64 * stor0.length) + 356] = address(_26403)
                    mem[(64 * stor0.length) + 388] = ext_call.return_data[0]
                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(64 * stor0.length) + 324], address(_26403), ext_call.return_data[0]
                    mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18
                    require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18
                    if ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 <= 10^18 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18:
                        if (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 <= 0:
                            return 0, 
                                   0,
                                   10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18,
                                   ext_call.return_data[0] * defaultAmount / 10^18
                        if not stor0.length:
                            require 0 < stor0.length
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(ext_call.return_data[32]), (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < stor0.length
                            require ext_code.size(ext_call.return_data[44 len 20])
                            call ext_call.return_data[44 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[(98 * stor0.length) + 388] = arg1
                            mem[(98 * stor0.length) + 420] = ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[(98 * stor0.length) + 356] = 96
                            mem[(98 * stor0.length) + 452] = stor0.length
                            mem[(98 * stor0.length) + 484 len floor32(stor0.length)] = mem[(64 * stor0.length) + 352 len floor32(stor0.length)]
                            var235001 = floor32(stor0.length)
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args Array(len=stor0.length, data=mem[(64 * stor0.length) + 352 len floor32(stor0.length)], mem[(98 * stor0.length) + floor32(stor0.length) + 484 len (33 * stor0.length) - floor32(stor0.length)]), address(arg1), ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[(98 * stor0.length) + 352] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args stor0.length.field_32, address(mem[(64 * stor0.length) + 480]), ext_call.return_data[0]
                        else:
                            mem[(64 * stor0.length) + 352] = address(stor0.field_0)
                            idx = (64 * stor0.length) + 352
                            s = 0
                            while (98 * stor0.length) + 320 > idx:
                                mem[idx + 32] = stor0[s].field_256
                                idx = idx + 32
                                s = s + 1
                                continue 
                            require 0 < stor0.length
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[(64 * stor0.length) + 352]), (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                            mem[(98 * stor0.length) + 352 len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < stor0.length
                            require ext_code.size(mem[(64 * stor0.length) + 364 len 20])
                            call mem[(64 * stor0.length) + 364 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[(98 * stor0.length) + 388] = arg1
                            mem[(98 * stor0.length) + 420] = ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[(98 * stor0.length) + 356] = 96
                            mem[(98 * stor0.length) + 452] = stor0.length
                            mem[(98 * stor0.length) + 484 len floor32(stor0.length)] = mem[(64 * stor0.length) + 352 len floor32(stor0.length)]
                            var239001 = floor32(stor0.length)
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args Array(len=stor0.length, data=mem[(98 * stor0.length) + 484 len 32 * stor0.length]), address(arg1), ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[(98 * stor0.length) + 352] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _31723 = mem[(64 * stor0.length) + 480]
                            mem[(98 * stor0.length) + 356] = mem[(64 * stor0.length) + 428 len 20]
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[(98 * stor0.length) + 356], address(_31723), ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18
                        require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18
                        if ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 <= 10^18 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18:
                            require ext_code.size(arg2)
                            call arg2.0x70a08231 with:
                                 gas gas_remaining wei
                                args 0x63825c174ab367968ec60f061753d3bbd36a0d8f
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(arg2)
                            call arg2.0x70a08231 with:
                                 gas gas_remaining wei
                                args address(arg1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            return 0, 2, ext_call.return_data[0], ext_call.return_data[0]
                        require 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args 0x63825c174ab367968ec60f061753d3bbd36a0d8f
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(arg1)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        return (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10, 
                               (10^18 * ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18) - (10^18 * 10^18 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18,
                               ext_call.return_data[0],
                               ext_call.return_data[0]
                    require 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                    s = 11
                    t = (10^18 * ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18) - (10^18 * 10^18 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 * mem[mem[64]] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                    u = 2
                    v = (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                    while u > t:
                        require 0 < mem[(32 * stor0.length) + 288]
                        _28855 = mem[(32 * stor0.length) + 320]
                        mem[mem[64] + 36] = mem[(32 * stor0.length) + 332 len 20]
                        mem[mem[64] + 68] = (v * s / 10) + (s * v * s / 10) / 10
                        require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                        call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_28855), (v * s / 10) + (s * v * s / 10) / 10
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 0 < mem[(32 * stor0.length) + 288]
                        require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                        call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        _29222 = mem[64]
                        mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 36] = arg1
                        mem[mem[64] + 68] = ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64] + 4] = 96
                        mem[mem[64] + 100] = mem[(32 * stor0.length) + 288]
                        _29224 = mem[(32 * stor0.length) + 288]
                        idx = 0
                        while idx < 32 * _29224:
                            mem[mem[64] + idx + 132] = mem[(32 * stor0.length) + idx + 320]
                            idx = idx + 32
                            continue 
                        require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                        call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len (32 * _29224) + _29222 + -mem[64] + 128]
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if 2 < mem[(32 * stor0.length) + 288]:
                            if 4 < mem[(32 * stor0.length) + 288]:
                                _30389 = mem[(32 * stor0.length) + 448]
                                mem[mem[64] + 4] = mem[(32 * stor0.length) + 396 len 20]
                                mem[mem[64] + 36] = address(_30389)
                                mem[mem[64] + 68] = ext_call.return_data[0]
                                require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                                call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4], address(_30389), ext_call.return_data[0]
                                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 64
                                if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                        if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 <= 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                            s = s + 1
                                            t = u
                                            u = 2
                                            v = v * s / 10
                                            continue 
                                        if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                            s = s + 1
                                            t = u
                                            u = (10^18 * ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) - (10^18 * 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                            v = v * s / 10
                                            continue 
                        revert
                    s = 9
                    u = t
                    w = 2
                    x = v
                    while w > u:
                        require 0 < mem[(32 * stor0.length) + 288]
                        _30386 = mem[(32 * stor0.length) + 320]
                        mem[mem[64] + 36] = mem[(32 * stor0.length) + 332 len 20]
                        mem[mem[64] + 68] = -(x * s / 10) + (s * x * s / 10) / 10
                        require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                        call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_30386), -(x * s / 10) + (s * x * s / 10) / 10
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 0 < mem[(32 * stor0.length) + 288]
                        require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                        call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 36] = arg1
                        mem[mem[64] + 68] = ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64] + 4] = 96
                        mem[mem[64] + 100] = mem[(32 * stor0.length) + 288]
                        _30729 = mem[(32 * stor0.length) + 288]
                        idx = 0
                        while idx < 32 * _30729:
                            mem[mem[64] + idx + 132] = mem[(32 * stor0.length) + idx + 320]
                            idx = idx + 32
                            continue 
                        require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                        call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                             gas gas_remaining wei
                            args 96, address(arg1), ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18), mem[mem[64] + 100 len (32 * _30729) + 32]
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if 2 < mem[(32 * stor0.length) + 288]:
                            if 4 < mem[(32 * stor0.length) + 288]:
                                _31729 = mem[(32 * stor0.length) + 448]
                                mem[mem[64] + 4] = mem[(32 * stor0.length) + 396 len 20]
                                mem[mem[64] + 36] = address(_31729)
                                mem[mem[64] + 68] = ext_call.return_data[0]
                                require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                                call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4], address(_31729), ext_call.return_data[0]
                                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 64
                                if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                        if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 <= 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                            s = s - 1
                                            u = w
                                            w = 2
                                            x = x * s / 10
                                            continue 
                                        if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                            s = s - 1
                                            u = w
                                            w = (10^18 * ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) - (10^18 * 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                            x = x * s / 10
                                            continue 
                        revert
                    if x <= 0:
                        return 0, 
                               0,
                               10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18,
                               ext_call.return_data[0] * defaultAmount / 10^18
                    _30262 = mem[64]
                    mem[64] = mem[64] + (32 * stor0.length) + 32
                    mem[_30262] = stor0.length
                    if not stor0.length:
                        require 0 < stor0.length
                        _30433 = mem[_30262 + 32]
                        mem[mem[64] + 36] = mem[_30262 + 44 len 20]
                        mem[mem[64] + 68] = x
                        require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                        call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_30433), x
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 0 < stor0.length
                        require ext_code.size(mem[_30262 + 44 len 20])
                        call mem[_30262 + 44 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 36] = arg1
                        mem[mem[64] + 68] = ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64] + 4] = 96
                        mem[mem[64] + 100] = stor0.length
                        mem[mem[64] + 132 len floor32(stor0.length)] = mem[_30262 + 32 len floor32(stor0.length)]
                        var238001 = floor32(stor0.length)
                        require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                        call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                             gas gas_remaining wei
                            args Array(len=stor0.length, data=mem[mem[64] + 132 len 32 * stor0.length]), address(arg1), ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _31726 = mem[_30262 + 160]
                        mem[mem[64] + 4] = mem[_30262 + 108 len 20]
                        require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                        call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4], address(_31726), ext_call.return_data[0]
                    else:
                        mem[_30262 + 32] = address(stor0.field_0)
                        idx = _30262 + 32
                        s = 0
                        while _30262 + (32 * stor0.length) > idx:
                            mem[idx + 32] = stor0[s].field_256
                            idx = idx + 32
                            s = s + 1
                            continue 
                        require 0 < stor0.length
                        _32269 = mem[_30262 + 32]
                        mem[mem[64] + 36] = mem[_30262 + 44 len 20]
                        mem[mem[64] + 68] = x
                        require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                        call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_32269), x
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 0 < stor0.length
                        require ext_code.size(mem[_30262 + 44 len 20])
                        call mem[_30262 + 44 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 36] = arg1
                        mem[mem[64] + 68] = ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64] + 4] = 96
                        mem[mem[64] + 100] = stor0.length
                        mem[mem[64] + 132 len floor32(stor0.length)] = mem[_30262 + 32 len floor32(stor0.length)]
                        var242001 = floor32(stor0.length)
                        require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                        call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                             gas gas_remaining wei
                            args Array(len=stor0.length, data=mem[mem[64] + 132 len 32 * stor0.length]), address(arg1), ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _32630 = mem[_30262 + 160]
                        mem[mem[64] + 4] = mem[_30262 + 108 len 20]
                        require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                        call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4], address(_32630), ext_call.return_data[0]
                else:
                    require 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                    require 0 < stor0.length
                    mem[(64 * stor0.length) + 356] = mem[(32 * stor0.length) + 332 len 20]
                    mem[(64 * stor0.length) + 388] = (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                    require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                    call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[(32 * stor0.length) + 320]), (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                    mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 0 < stor0.length
                    require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                    call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(64 * stor0.length) + 320] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                    mem[(64 * stor0.length) + 356] = arg1
                    mem[(64 * stor0.length) + 388] = ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                    mem[(64 * stor0.length) + 324] = 96
                    mem[(64 * stor0.length) + 420] = stor0.length
                    mem[(64 * stor0.length) + 452 len floor32(stor0.length)] = mem[(32 * stor0.length) + 320 len floor32(stor0.length)]
                    require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                    call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                         gas gas_remaining wei
                        args mem[(64 * stor0.length) + 324 len (161 * stor0.length) + 128]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _26406 = mem[(32 * stor0.length) + 448]
                    mem[(64 * stor0.length) + 324] = mem[(32 * stor0.length) + 396 len 20]
                    mem[(64 * stor0.length) + 356] = address(_26406)
                    mem[(64 * stor0.length) + 388] = ext_call.return_data[0]
                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(64 * stor0.length) + 324], address(_26406), ext_call.return_data[0]
                    mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18
                    require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18
                    if ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 <= 10^18 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18:
                        s = 9
                        t = 2
                        u = (10^18 * ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) - (10^18 * 10^18 * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                        v = (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                        while u > t:
                            require 0 < mem[(32 * stor0.length) + 288]
                            mem[(64 * stor0.length) + 356] = mem[(32 * stor0.length) + 332 len 20]
                            mem[(64 * stor0.length) + 388] = -(v * s / 10) + (s * v * s / 10) / 10
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[(32 * stor0.length) + 320]), -(v * s / 10) + (s * v * s / 10) / 10
                            mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < mem[(32 * stor0.length) + 288]
                            require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                            call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[(64 * stor0.length) + 320] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[(64 * stor0.length) + 356] = arg1
                            mem[(64 * stor0.length) + 388] = ext_call.return_data[0] * -(v * s / 10) + (s * v * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[(64 * stor0.length) + 324] = 96
                            mem[(64 * stor0.length) + 420] = mem[(32 * stor0.length) + 288]
                            _29228 = mem[(32 * stor0.length) + 288]
                            idx = 0
                            while idx < 32 * _29228:
                                mem[(64 * stor0.length) + idx + 452] = mem[(32 * stor0.length) + idx + 320]
                                idx = idx + 32
                                continue 
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args 96, address(arg1), ext_call.return_data[0] * -(v * s / 10) + (s * v * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18), mem[(64 * stor0.length) + 420 len (32 * _29228) + 32]
                            mem[(64 * stor0.length) + 320] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 2 < mem[(32 * stor0.length) + 288]:
                                if 4 < mem[(32 * stor0.length) + 288]:
                                    _30395 = mem[(32 * stor0.length) + 448]
                                    mem[(64 * stor0.length) + 324] = mem[(32 * stor0.length) + 396 len 20]
                                    mem[(64 * stor0.length) + 356] = address(_30395)
                                    mem[(64 * stor0.length) + 388] = ext_call.return_data[0]
                                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[(64 * stor0.length) + 324], address(_30395), ext_call.return_data[0]
                                    mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 64
                                    if ext_call.return_data[0] * -(v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                            if ext_call.return_data[0] * -(v * s / 10) + (s * v * s / 10) / 10 / 10^18 <= 10^18 * -(v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                                s = s - 1
                                                t = u
                                                u = 2
                                                v = v * s / 10
                                                continue 
                                            if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                                s = s - 1
                                                t = u
                                                u = (10^18 * ext_call.return_data[0] * -(v * s / 10) + (s * v * s / 10) / 10 / 10^18) - (10^18 * 10^18 * -(v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(v * s / 10) + (s * v * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                                v = v * s / 10
                                                continue 
                            revert
                        if v <= 0:
                            return 0, 
                                   0,
                                   10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18,
                                   ext_call.return_data[0] * defaultAmount / 10^18
                        if not stor0.length:
                            require 0 < stor0.length
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[(64 * stor0.length) + 352]), v
                            mem[(98 * stor0.length) + 352 len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < stor0.length
                            require ext_code.size(mem[(64 * stor0.length) + 364 len 20])
                            call mem[(64 * stor0.length) + 364 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[(98 * stor0.length) + 388] = arg1
                            mem[(98 * stor0.length) + 420] = ext_call.return_data[0] * v / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[(98 * stor0.length) + 356] = 96
                            mem[(98 * stor0.length) + 452] = stor0.length
                            mem[(98 * stor0.length) + 484 len floor32(stor0.length)] = mem[(64 * stor0.length) + 352 len floor32(stor0.length)]
                            var237001 = floor32(stor0.length)
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args Array(len=stor0.length, data=mem[(64 * stor0.length) + 352 len floor32(stor0.length)], mem[(98 * stor0.length) + floor32(stor0.length) + 484 len (33 * stor0.length) - floor32(stor0.length)]), address(arg1), ext_call.return_data[0] * v / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[(98 * stor0.length) + 352] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _30392 = mem[(64 * stor0.length) + 480]
                            mem[(98 * stor0.length) + 356] = mem[(64 * stor0.length) + 428 len 20]
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[(98 * stor0.length) + 356], address(_30392), ext_call.return_data[0]
                        else:
                            mem[(64 * stor0.length) + 352] = address(stor0.field_0)
                            idx = (64 * stor0.length) + 352
                            s = 0
                            while (98 * stor0.length) + 320 > idx:
                                mem[idx + 32] = stor0[s].field_256
                                idx = idx + 32
                                s = s + 1
                                continue 
                            require 0 < stor0.length
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[(64 * stor0.length) + 352]), v
                            mem[(98 * stor0.length) + 352 len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < stor0.length
                            require ext_code.size(mem[(64 * stor0.length) + 364 len 20])
                            call mem[(64 * stor0.length) + 364 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[(98 * stor0.length) + 388] = arg1
                            mem[(98 * stor0.length) + 420] = ext_call.return_data[0] * v / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[(98 * stor0.length) + 356] = 96
                            mem[(98 * stor0.length) + 452] = stor0.length
                            mem[(98 * stor0.length) + 484 len floor32(stor0.length)] = mem[(64 * stor0.length) + 352 len floor32(stor0.length)]
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args Array(len=stor0.length, data=mem[(98 * stor0.length) + 484 len 32 * stor0.length]), address(arg1), ext_call.return_data[0] * v / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[(98 * stor0.length) + 352] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _32300 = mem[(64 * stor0.length) + 480]
                            mem[(98 * stor0.length) + 356] = mem[(64 * stor0.length) + 428 len 20]
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[(98 * stor0.length) + 356], address(_32300), ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require ext_call.return_data[0] * v / 10^18
                        require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * v / 10^18
                        if ext_call.return_data[0] * v / 10^18 <= 10^18 * v / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * v / 10^18:
                            require ext_code.size(arg2)
                            call arg2.0x70a08231 with:
                                 gas gas_remaining wei
                                args 0x63825c174ab367968ec60f061753d3bbd36a0d8f
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(arg2)
                            call arg2.0x70a08231 with:
                                 gas gas_remaining wei
                                args address(arg1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            return 0, 2, ext_call.return_data[0], ext_call.return_data[0]
                        require 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args 0x63825c174ab367968ec60f061753d3bbd36a0d8f
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(arg2)
                        call arg2.0x70a08231 with:
                             gas gas_remaining wei
                            args address(arg1)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        return v, 
                               (10^18 * ext_call.return_data[0] * v / 10^18) - (10^18 * 10^18 * v / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * v / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18,
                               ext_call.return_data[0],
                               ext_call.return_data[0]
                    require 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                    s = 11
                    t = (10^18 * ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18) - (10^18 * 10^18 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 * mem[mem[64]] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                    u = 2
                    v = (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                    while u > t:
                        require 0 < mem[(32 * stor0.length) + 288]
                        _28863 = mem[(32 * stor0.length) + 320]
                        mem[mem[64] + 36] = mem[(32 * stor0.length) + 332 len 20]
                        mem[mem[64] + 68] = (v * s / 10) + (s * v * s / 10) / 10
                        require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                        call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_28863), (v * s / 10) + (s * v * s / 10) / 10
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 0 < mem[(32 * stor0.length) + 288]
                        require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                        call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 36] = arg1
                        mem[mem[64] + 68] = ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64] + 4] = 96
                        mem[mem[64] + 100] = mem[(32 * stor0.length) + 288]
                        _29232 = mem[(32 * stor0.length) + 288]
                        idx = 0
                        while idx < 32 * _29232:
                            mem[mem[64] + idx + 132] = mem[(32 * stor0.length) + idx + 320]
                            idx = idx + 32
                            continue 
                        require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                        call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                             gas gas_remaining wei
                            args 96, address(arg1), ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18), mem[mem[64] + 100 len (32 * _29232) + 32]
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if 2 < mem[(32 * stor0.length) + 288]:
                            if 4 < mem[(32 * stor0.length) + 288]:
                                _30402 = mem[(32 * stor0.length) + 448]
                                mem[mem[64] + 4] = mem[(32 * stor0.length) + 396 len 20]
                                mem[mem[64] + 36] = address(_30402)
                                mem[mem[64] + 68] = ext_call.return_data[0]
                                require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                                call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4], address(_30402), ext_call.return_data[0]
                                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 64
                                if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                        if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 <= 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                            s = s + 1
                                            t = u
                                            u = 2
                                            v = v * s / 10
                                            continue 
                                        if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                            s = s + 1
                                            t = u
                                            u = (10^18 * ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) - (10^18 * 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                            v = v * s / 10
                                            continue 
                        revert
                    s = 9
                    u = t
                    w = (10^18 * ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) - (10^18 * 10^18 * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                    x = v
                    while w > u:
                        require 0 < mem[(32 * stor0.length) + 288]
                        _30399 = mem[(32 * stor0.length) + 320]
                        mem[mem[64] + 36] = mem[(32 * stor0.length) + 332 len 20]
                        mem[mem[64] + 68] = -(x * s / 10) + (s * x * s / 10) / 10
                        require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                        call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_30399), -(x * s / 10) + (s * x * s / 10) / 10
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 0 < mem[(32 * stor0.length) + 288]
                        require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                        call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 36] = arg1
                        mem[mem[64] + 68] = ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64] + 4] = 96
                        mem[mem[64] + 100] = mem[(32 * stor0.length) + 288]
                        _30733 = mem[(32 * stor0.length) + 288]
                        idx = 0
                        while idx < 32 * _30733:
                            mem[mem[64] + idx + 132] = mem[(32 * stor0.length) + idx + 320]
                            idx = idx + 32
                            continue 
                        require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                        call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                             gas gas_remaining wei
                            args 96, address(arg1), ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18), mem[mem[64] + 100 len (32 * _30733) + 32]
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if 2 < mem[(32 * stor0.length) + 288]:
                            if 4 < mem[(32 * stor0.length) + 288]:
                                _31737 = mem[(32 * stor0.length) + 448]
                                mem[mem[64] + 4] = mem[(32 * stor0.length) + 396 len 20]
                                mem[mem[64] + 36] = address(_31737)
                                mem[mem[64] + 68] = ext_call.return_data[0]
                                require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                                call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4], address(_31737), ext_call.return_data[0]
                                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 64
                                if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                    if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                        if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 <= 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                            s = s - 1
                                            u = w
                                            w = 2
                                            x = x * s / 10
                                            continue 
                                        if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                            s = s - 1
                                            u = w
                                            w = (10^18 * ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) - (10^18 * 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                            x = x * s / 10
                                            continue 
                        revert
                    if x <= 0:
                        return 0, 
                               0,
                               10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18,
                               ext_call.return_data[0] * defaultAmount / 10^18
                    _30266 = mem[64]
                    mem[64] = mem[64] + (32 * stor0.length) + 32
                    mem[_30266] = stor0.length
                    if not stor0.length:
                        require 0 < stor0.length
                        _30436 = mem[_30266 + 32]
                        mem[mem[64] + 36] = mem[_30266 + 44 len 20]
                        mem[mem[64] + 68] = x
                        require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                        call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_30436), x
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 0 < stor0.length
                        require ext_code.size(mem[_30266 + 44 len 20])
                        call mem[_30266 + 44 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 36] = arg1
                        mem[mem[64] + 68] = ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64] + 4] = 96
                        mem[mem[64] + 100] = stor0.length
                        mem[mem[64] + 132 len floor32(stor0.length)] = mem[_30266 + 32 len floor32(stor0.length)]
                        var239001 = floor32(stor0.length)
                        require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                        call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                             gas gas_remaining wei
                            args Array(len=stor0.length, data=mem[mem[64] + 132 len 32 * stor0.length]), address(arg1), ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _31734 = mem[_30266 + 160]
                        mem[mem[64] + 4] = mem[_30266 + 108 len 20]
                        require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                        call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4], address(_31734), ext_call.return_data[0]
                    else:
                        mem[_30266 + 32] = address(stor0.field_0)
                        idx = _30266 + 32
                        s = 0
                        while _30266 + (32 * stor0.length) > idx:
                            mem[idx + 32] = stor0[s].field_256
                            idx = idx + 32
                            s = s + 1
                            continue 
                        require 0 < stor0.length
                        _32273 = mem[_30266 + 32]
                        mem[mem[64] + 36] = mem[_30266 + 44 len 20]
                        mem[mem[64] + 68] = x
                        require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                        call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_32273), x
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 64
                        require 0 < stor0.length
                        require ext_code.size(mem[_30266 + 44 len 20])
                        call mem[_30266 + 44 len 20].0x313ce567 with:
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 36] = arg1
                        mem[mem[64] + 68] = ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64] + 4] = 96
                        mem[mem[64] + 100] = stor0.length
                        mem[mem[64] + 132 len floor32(stor0.length)] = mem[_30266 + 32 len floor32(stor0.length)]
                        var243001 = floor32(stor0.length)
                        require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                        call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                             gas gas_remaining wei
                            args Array(len=stor0.length, data=mem[mem[64] + 132 len 32 * stor0.length]), address(arg1), ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require 2 < stor0.length
                        require 4 < stor0.length
                        _32633 = mem[_30266 + 160]
                        mem[mem[64] + 4] = mem[_30266 + 108 len 20]
                        require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                        call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4], address(_32633), ext_call.return_data[0]
            else:
                require 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                require 0 < stor0.length
                mem[(64 * stor0.length) + 356] = mem[(32 * stor0.length) + 332 len 20]
                mem[(64 * stor0.length) + 388] = 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10
                require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[(32 * stor0.length) + 320]), 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10
                mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require 0 < stor0.length
                require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 10^(-ext_call.return_data[0] + 18)
                mem[(64 * stor0.length) + 320] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                mem[(64 * stor0.length) + 356] = arg1
                mem[(64 * stor0.length) + 388] = ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                mem[(64 * stor0.length) + 324] = 96
                mem[(64 * stor0.length) + 420] = stor0.length
                mem[(64 * stor0.length) + 452 len floor32(stor0.length)] = mem[(32 * stor0.length) + 320 len floor32(stor0.length)]
                require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                     gas gas_remaining wei
                    args mem[(64 * stor0.length) + 324 len (161 * stor0.length) + 128]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require 2 < stor0.length
                require 4 < stor0.length
                _23500 = mem[(32 * stor0.length) + 448]
                mem[(64 * stor0.length) + 324] = mem[(32 * stor0.length) + 396 len 20]
                mem[(64 * stor0.length) + 356] = address(_23500)
                mem[(64 * stor0.length) + 388] = ext_call.return_data[0]
                require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[(64 * stor0.length) + 324], address(_23500), ext_call.return_data[0]
                mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 64
                require ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18
                require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18
                if ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 <= 10^18 * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18:
                    require 0 < stor0.length
                    mem[(64 * stor0.length) + 356] = mem[(32 * stor0.length) + 332 len 20]
                    mem[(64 * stor0.length) + 388] = (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                    require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                    call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[(32 * stor0.length) + 320]), (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                    mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 0 < stor0.length
                    require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                    call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(64 * stor0.length) + 320] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                    mem[(64 * stor0.length) + 356] = arg1
                    mem[(64 * stor0.length) + 388] = ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                    mem[(64 * stor0.length) + 324] = 96
                    mem[(64 * stor0.length) + 420] = stor0.length
                    mem[(64 * stor0.length) + 452 len floor32(stor0.length)] = mem[(32 * stor0.length) + 320 len floor32(stor0.length)]
                    require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                    call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                         gas gas_remaining wei
                        args mem[(64 * stor0.length) + 324 len (161 * stor0.length) + 128]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _26409 = mem[(32 * stor0.length) + 448]
                    mem[(64 * stor0.length) + 324] = mem[(32 * stor0.length) + 396 len 20]
                    mem[(64 * stor0.length) + 356] = address(_26409)
                    mem[(64 * stor0.length) + 388] = ext_call.return_data[0]
                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(64 * stor0.length) + 324], address(_26409), ext_call.return_data[0]
                    mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18
                    require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18
                    if ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 <= 10^18 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18:
                        s = 11
                        t = 2
                        u = (10^18 * ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) - (10^18 * 10^18 * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                        v = (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                        while u > t:
                            require 0 < mem[(32 * stor0.length) + 288]
                            _28867 = mem[(32 * stor0.length) + 320]
                            mem[mem[64] + 36] = mem[(32 * stor0.length) + 332 len 20]
                            mem[mem[64] + 68] = (v * s / 10) + (s * v * s / 10) / 10
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_28867), (v * s / 10) + (s * v * s / 10) / 10
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < mem[(32 * stor0.length) + 288]
                            require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                            call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            _29234 = mem[64]
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = mem[(32 * stor0.length) + 288]
                            _29236 = mem[(32 * stor0.length) + 288]
                            idx = 0
                            while idx < 32 * _29236:
                                mem[mem[64] + idx + 132] = mem[(32 * stor0.length) + idx + 320]
                                idx = idx + 32
                                continue 
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len (32 * _29236) + _29234 + -mem[64] + 128]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 2 < mem[(32 * stor0.length) + 288]:
                                if 4 < mem[(32 * stor0.length) + 288]:
                                    _30409 = mem[(32 * stor0.length) + 448]
                                    mem[mem[64] + 4] = mem[(32 * stor0.length) + 396 len 20]
                                    mem[mem[64] + 36] = address(_30409)
                                    mem[mem[64] + 68] = ext_call.return_data[0]
                                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4], address(_30409), ext_call.return_data[0]
                                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 64
                                    if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                            if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 <= 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                                s = s + 1
                                                t = u
                                                u = 2
                                                v = v * s / 10
                                                continue 
                                            if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                                s = s + 1
                                                t = u
                                                u = (10^18 * ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) - (10^18 * 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                                v = v * s / 10
                                                continue 
                            revert
                        s = 9
                        u = t
                        w = 2
                        x = v
                        while w > u:
                            require 0 < mem[(32 * stor0.length) + 288]
                            _30406 = mem[(32 * stor0.length) + 320]
                            mem[mem[64] + 36] = mem[(32 * stor0.length) + 332 len 20]
                            mem[mem[64] + 68] = -(x * s / 10) + (s * x * s / 10) / 10
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_30406), -(x * s / 10) + (s * x * s / 10) / 10
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < mem[(32 * stor0.length) + 288]
                            require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                            call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            _30735 = mem[64]
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = mem[(32 * stor0.length) + 288]
                            _30737 = mem[(32 * stor0.length) + 288]
                            idx = 0
                            while idx < 32 * _30737:
                                mem[mem[64] + idx + 132] = mem[(32 * stor0.length) + idx + 320]
                                idx = idx + 32
                                continue 
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len (32 * _30737) + _30735 + -mem[64] + 128]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 2 < mem[(32 * stor0.length) + 288]:
                                if 4 < mem[(32 * stor0.length) + 288]:
                                    _31743 = mem[(32 * stor0.length) + 448]
                                    mem[mem[64] + 4] = mem[(32 * stor0.length) + 396 len 20]
                                    mem[mem[64] + 36] = address(_31743)
                                    mem[mem[64] + 68] = ext_call.return_data[0]
                                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4], address(_31743), ext_call.return_data[0]
                                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 64
                                    if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                            if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 <= 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                                s = s - 1
                                                u = w
                                                w = 2
                                                x = x * s / 10
                                                continue 
                                            if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                                s = s - 1
                                                u = w
                                                w = (10^18 * ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) - (10^18 * 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                                x = x * s / 10
                                                continue 
                            revert
                        if x <= 0:
                            return 0, 
                                   0,
                                   10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18,
                                   ext_call.return_data[0] * defaultAmount / 10^18
                        _30268 = mem[64]
                        mem[64] = mem[64] + (32 * stor0.length) + 32
                        mem[_30268] = stor0.length
                        if not stor0.length:
                            require 0 < stor0.length
                            _30439 = mem[_30268 + 32]
                            mem[mem[64] + 36] = mem[_30268 + 44 len 20]
                            mem[mem[64] + 68] = x
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_30439), x
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < stor0.length
                            require ext_code.size(mem[_30268 + 44 len 20])
                            call mem[_30268 + 44 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = stor0.length
                            mem[mem[64] + 132 len floor32(stor0.length)] = mem[_30268 + 32 len floor32(stor0.length)]
                            var238001 = floor32(stor0.length)
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args Array(len=stor0.length, data=mem[mem[64] + 132 len 32 * stor0.length]), address(arg1), ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _31740 = mem[_30268 + 160]
                            mem[mem[64] + 4] = mem[_30268 + 108 len 20]
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4], address(_31740), ext_call.return_data[0]
                        else:
                            mem[_30268 + 32] = address(stor0.field_0)
                            idx = _30268 + 32
                            s = 0
                            while _30268 + (32 * stor0.length) > idx:
                                mem[idx + 32] = stor0[s].field_256
                                idx = idx + 32
                                s = s + 1
                                continue 
                            require 0 < stor0.length
                            _32276 = mem[_30268 + 32]
                            mem[mem[64] + 36] = mem[_30268 + 44 len 20]
                            mem[mem[64] + 68] = x
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_32276), x
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < stor0.length
                            require ext_code.size(mem[_30268 + 44 len 20])
                            call mem[_30268 + 44 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = stor0.length
                            mem[mem[64] + 132 len floor32(stor0.length)] = mem[_30268 + 32 len floor32(stor0.length)]
                            var242001 = floor32(stor0.length)
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args Array(len=stor0.length, data=mem[mem[64] + 132 len 32 * stor0.length]), address(arg1), ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _32636 = mem[_30268 + 160]
                            mem[mem[64] + 4] = mem[_30268 + 108 len 20]
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4], address(_32636), ext_call.return_data[0]
                    else:
                        require 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                        s = 11
                        t = (10^18 * ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18) - (10^18 * 10^18 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 * mem[mem[64]] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                        u = (10^18 * ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) - (10^18 * 10^18 * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                        v = (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                        while u > t:
                            require 0 < mem[(32 * stor0.length) + 288]
                            _28871 = mem[(32 * stor0.length) + 320]
                            mem[mem[64] + 36] = mem[(32 * stor0.length) + 332 len 20]
                            mem[mem[64] + 68] = (v * s / 10) + (s * v * s / 10) / 10
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_28871), (v * s / 10) + (s * v * s / 10) / 10
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < mem[(32 * stor0.length) + 288]
                            require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                            call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = mem[(32 * stor0.length) + 288]
                            _29240 = mem[(32 * stor0.length) + 288]
                            idx = 0
                            while idx < 32 * _29240:
                                mem[mem[64] + idx + 132] = mem[(32 * stor0.length) + idx + 320]
                                idx = idx + 32
                                continue 
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args 96, address(arg1), ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18), mem[mem[64] + 100 len (32 * _29240) + 32]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 2 < mem[(32 * stor0.length) + 288]:
                                if 4 < mem[(32 * stor0.length) + 288]:
                                    _30416 = mem[(32 * stor0.length) + 448]
                                    mem[mem[64] + 4] = mem[(32 * stor0.length) + 396 len 20]
                                    mem[mem[64] + 36] = address(_30416)
                                    mem[mem[64] + 68] = ext_call.return_data[0]
                                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4], address(_30416), ext_call.return_data[0]
                                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 64
                                    if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                            if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 <= 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                                s = s + 1
                                                t = u
                                                u = 2
                                                v = v * s / 10
                                                continue 
                                            if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                                s = s + 1
                                                t = u
                                                u = (10^18 * ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) - (10^18 * 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                                v = v * s / 10
                                                continue 
                            revert
                        s = 9
                        u = t
                        w = 2
                        x = v
                        while w > u:
                            require 0 < mem[(32 * stor0.length) + 288]
                            _30413 = mem[(32 * stor0.length) + 320]
                            mem[mem[64] + 36] = mem[(32 * stor0.length) + 332 len 20]
                            mem[mem[64] + 68] = -(x * s / 10) + (s * x * s / 10) / 10
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_30413), -(x * s / 10) + (s * x * s / 10) / 10
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < mem[(32 * stor0.length) + 288]
                            require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                            call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = mem[(32 * stor0.length) + 288]
                            _30741 = mem[(32 * stor0.length) + 288]
                            idx = 0
                            while idx < 32 * _30741:
                                mem[mem[64] + idx + 132] = mem[(32 * stor0.length) + idx + 320]
                                idx = idx + 32
                                continue 
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args 96, address(arg1), ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18), mem[mem[64] + 100 len (32 * _30741) + 32]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 2 < mem[(32 * stor0.length) + 288]:
                                if 4 < mem[(32 * stor0.length) + 288]:
                                    _31749 = mem[(32 * stor0.length) + 448]
                                    mem[mem[64] + 4] = mem[(32 * stor0.length) + 396 len 20]
                                    mem[mem[64] + 36] = address(_31749)
                                    mem[mem[64] + 68] = ext_call.return_data[0]
                                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4], address(_31749), ext_call.return_data[0]
                                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 64
                                    if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                            if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 <= 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                                s = s - 1
                                                u = w
                                                w = 2
                                                x = x * s / 10
                                                continue 
                                            if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                                s = s - 1
                                                u = w
                                                w = (10^18 * ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) - (10^18 * 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                                x = x * s / 10
                                                continue 
                            revert
                        if x <= 0:
                            return 0, 
                                   0,
                                   10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18,
                                   ext_call.return_data[0] * defaultAmount / 10^18
                        _30270 = mem[64]
                        mem[64] = mem[64] + (32 * stor0.length) + 32
                        mem[_30270] = stor0.length
                        if not stor0.length:
                            require 0 < stor0.length
                            _30442 = mem[_30270 + 32]
                            mem[mem[64] + 36] = mem[_30270 + 44 len 20]
                            mem[mem[64] + 68] = x
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_30442), x
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < stor0.length
                            require ext_code.size(mem[_30270 + 44 len 20])
                            call mem[_30270 + 44 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = stor0.length
                            mem[mem[64] + 132 len floor32(stor0.length)] = mem[_30270 + 32 len floor32(stor0.length)]
                            var239001 = floor32(stor0.length)
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args Array(len=stor0.length, data=mem[mem[64] + 132 len 32 * stor0.length]), address(arg1), ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _31746 = mem[_30270 + 160]
                            mem[mem[64] + 4] = mem[_30270 + 108 len 20]
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4], address(_31746), ext_call.return_data[0]
                        else:
                            mem[_30270 + 32] = address(stor0.field_0)
                            idx = _30270 + 32
                            s = 0
                            while _30270 + (32 * stor0.length) > idx:
                                mem[idx + 32] = stor0[s].field_256
                                idx = idx + 32
                                s = s + 1
                                continue 
                            require 0 < stor0.length
                            _32279 = mem[_30270 + 32]
                            mem[mem[64] + 36] = mem[_30270 + 44 len 20]
                            mem[mem[64] + 68] = x
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_32279), x
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < stor0.length
                            require ext_code.size(mem[_30270 + 44 len 20])
                            call mem[_30270 + 44 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = stor0.length
                            mem[mem[64] + 132 len floor32(stor0.length)] = mem[_30270 + 32 len floor32(stor0.length)]
                            var243001 = floor32(stor0.length)
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args Array(len=stor0.length, data=mem[mem[64] + 132 len 32 * stor0.length]), address(arg1), ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _32639 = mem[_30270 + 160]
                            mem[mem[64] + 4] = mem[_30270 + 108 len 20]
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4], address(_32639), ext_call.return_data[0]
                else:
                    require 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                    require 0 < stor0.length
                    mem[(64 * stor0.length) + 356] = mem[(32 * stor0.length) + 332 len 20]
                    mem[(64 * stor0.length) + 388] = (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                    require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                    call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[(32 * stor0.length) + 320]), (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                    mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require 0 < stor0.length
                    require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                    call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 10^(-ext_call.return_data[0] + 18)
                    mem[(64 * stor0.length) + 320] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                    mem[(64 * stor0.length) + 356] = arg1
                    mem[(64 * stor0.length) + 388] = ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                    mem[(64 * stor0.length) + 324] = 96
                    mem[(64 * stor0.length) + 420] = stor0.length
                    mem[(64 * stor0.length) + 452 len floor32(stor0.length)] = mem[(32 * stor0.length) + 320 len floor32(stor0.length)]
                    require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                    call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                         gas gas_remaining wei
                        args mem[(64 * stor0.length) + 324 len (161 * stor0.length) + 128]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require 2 < stor0.length
                    require 4 < stor0.length
                    _26412 = mem[(32 * stor0.length) + 448]
                    mem[(64 * stor0.length) + 324] = mem[(32 * stor0.length) + 396 len 20]
                    mem[(64 * stor0.length) + 356] = address(_26412)
                    mem[(64 * stor0.length) + 388] = ext_call.return_data[0]
                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[(64 * stor0.length) + 324], address(_26412), ext_call.return_data[0]
                    mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 64
                    require ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18
                    require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18
                    if ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 <= 10^18 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18:
                        s = 11
                        t = 2
                        u = (10^18 * ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) - (10^18 * 10^18 * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                        v = (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                        while u > t:
                            require 0 < mem[(32 * stor0.length) + 288]
                            _28875 = mem[(32 * stor0.length) + 320]
                            mem[mem[64] + 36] = mem[(32 * stor0.length) + 332 len 20]
                            mem[mem[64] + 68] = (v * s / 10) + (s * v * s / 10) / 10
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_28875), (v * s / 10) + (s * v * s / 10) / 10
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < mem[(32 * stor0.length) + 288]
                            require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                            call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            _29242 = mem[64]
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = mem[(32 * stor0.length) + 288]
                            _29244 = mem[(32 * stor0.length) + 288]
                            idx = 0
                            while idx < 32 * _29244:
                                mem[mem[64] + idx + 132] = mem[(32 * stor0.length) + idx + 320]
                                idx = idx + 32
                                continue 
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len (32 * _29244) + _29242 + -mem[64] + 128]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 2 < mem[(32 * stor0.length) + 288]:
                                if 4 < mem[(32 * stor0.length) + 288]:
                                    _30423 = mem[(32 * stor0.length) + 448]
                                    mem[mem[64] + 4] = mem[(32 * stor0.length) + 396 len 20]
                                    mem[mem[64] + 36] = address(_30423)
                                    mem[mem[64] + 68] = ext_call.return_data[0]
                                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4], address(_30423), ext_call.return_data[0]
                                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 64
                                    if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                            if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 <= 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                                s = s + 1
                                                t = u
                                                u = 2
                                                v = v * s / 10
                                                continue 
                                            if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                                s = s + 1
                                                t = u
                                                u = (10^18 * ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) - (10^18 * 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                                v = v * s / 10
                                                continue 
                            revert
                        s = 9
                        u = t
                        w = (10^18 * ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) - (10^18 * 10^18 * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                        x = v
                        while w > u:
                            require 0 < mem[(32 * stor0.length) + 288]
                            _30420 = mem[(32 * stor0.length) + 320]
                            mem[mem[64] + 36] = mem[(32 * stor0.length) + 332 len 20]
                            mem[mem[64] + 68] = -(x * s / 10) + (s * x * s / 10) / 10
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_30420), -(x * s / 10) + (s * x * s / 10) / 10
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < mem[(32 * stor0.length) + 288]
                            require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                            call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            _30743 = mem[64]
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = mem[(32 * stor0.length) + 288]
                            _30745 = mem[(32 * stor0.length) + 288]
                            idx = 0
                            while idx < 32 * _30745:
                                mem[mem[64] + idx + 132] = mem[(32 * stor0.length) + idx + 320]
                                idx = idx + 32
                                continue 
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len (32 * _30745) + _30743 + -mem[64] + 128]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 2 < mem[(32 * stor0.length) + 288]:
                                if 4 < mem[(32 * stor0.length) + 288]:
                                    _31755 = mem[(32 * stor0.length) + 448]
                                    mem[mem[64] + 4] = mem[(32 * stor0.length) + 396 len 20]
                                    mem[mem[64] + 36] = address(_31755)
                                    mem[mem[64] + 68] = ext_call.return_data[0]
                                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4], address(_31755), ext_call.return_data[0]
                                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 64
                                    if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                            if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 <= 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                                s = s - 1
                                                u = w
                                                w = 2
                                                x = x * s / 10
                                                continue 
                                            if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                                s = s - 1
                                                u = w
                                                w = (10^18 * ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) - (10^18 * 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                                x = x * s / 10
                                                continue 
                            revert
                        if x <= 0:
                            return 0, 
                                   0,
                                   10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18,
                                   ext_call.return_data[0] * defaultAmount / 10^18
                        _30272 = mem[64]
                        mem[64] = mem[64] + (32 * stor0.length) + 32
                        mem[_30272] = stor0.length
                        if not stor0.length:
                            require 0 < stor0.length
                            _30445 = mem[_30272 + 32]
                            mem[mem[64] + 36] = mem[_30272 + 44 len 20]
                            mem[mem[64] + 68] = x
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_30445), x
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < stor0.length
                            require ext_code.size(mem[_30272 + 44 len 20])
                            call mem[_30272 + 44 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = stor0.length
                            mem[mem[64] + 132 len floor32(stor0.length)] = mem[_30272 + 32 len floor32(stor0.length)]
                            var239001 = floor32(stor0.length)
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args Array(len=stor0.length, data=mem[mem[64] + 132 len 32 * stor0.length]), address(arg1), ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _31752 = mem[_30272 + 160]
                            mem[mem[64] + 4] = mem[_30272 + 108 len 20]
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4], address(_31752), ext_call.return_data[0]
                        else:
                            mem[_30272 + 32] = address(stor0.field_0)
                            idx = _30272 + 32
                            s = 0
                            while _30272 + (32 * stor0.length) > idx:
                                mem[idx + 32] = stor0[s].field_256
                                idx = idx + 32
                                s = s + 1
                                continue 
                            require 0 < stor0.length
                            _32282 = mem[_30272 + 32]
                            mem[mem[64] + 36] = mem[_30272 + 44 len 20]
                            mem[mem[64] + 68] = x
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_32282), x
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < stor0.length
                            require ext_code.size(mem[_30272 + 44 len 20])
                            call mem[_30272 + 44 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = stor0.length
                            mem[mem[64] + 132 len floor32(stor0.length)] = mem[_30272 + 32 len floor32(stor0.length)]
                            var243001 = floor32(stor0.length)
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args Array(len=stor0.length, data=mem[mem[64] + 132 len 32 * stor0.length]), address(arg1), ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _32642 = mem[_30272 + 160]
                            mem[mem[64] + 4] = mem[_30272 + 108 len 20]
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4], address(_32642), ext_call.return_data[0]
                    else:
                        require 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                        s = 11
                        t = (10^18 * ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18) - (10^18 * 10^18 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18 * mem[(64 * stor0.length) + 320] / ext_call.return_data[0] * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                        u = (10^18 * ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) - (10^18 * 10^18 * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 11 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                        v = (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10
                        while u > t:
                            require 0 < mem[(32 * stor0.length) + 288]
                            mem[(64 * stor0.length) + 356] = mem[(32 * stor0.length) + 332 len 20]
                            mem[(64 * stor0.length) + 388] = (v * s / 10) + (s * v * s / 10) / 10
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(mem[(32 * stor0.length) + 320]), (v * s / 10) + (s * v * s / 10) / 10
                            mem[(64 * stor0.length) + 320 len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < mem[(32 * stor0.length) + 288]
                            require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                            call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[(64 * stor0.length) + 320] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[(64 * stor0.length) + 356] = arg1
                            mem[(64 * stor0.length) + 388] = ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[(64 * stor0.length) + 324] = 96
                            mem[(64 * stor0.length) + 420] = mem[(32 * stor0.length) + 288]
                            _29248 = mem[(32 * stor0.length) + 288]
                            idx = 0
                            while idx < 32 * _29248:
                                mem[mem[64] + idx + 132] = mem[(32 * stor0.length) + idx + 320]
                                idx = idx + 32
                                continue 
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len (32 * _29248) + (64 * stor0.length) + -mem[64] + 448]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 2 < mem[(32 * stor0.length) + 288]:
                                if 4 < mem[(32 * stor0.length) + 288]:
                                    _30430 = mem[(32 * stor0.length) + 448]
                                    mem[mem[64] + 4] = mem[(32 * stor0.length) + 396 len 20]
                                    mem[mem[64] + 36] = address(_30430)
                                    mem[mem[64] + 68] = ext_call.return_data[0]
                                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4], address(_30430), ext_call.return_data[0]
                                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 64
                                    if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                            if ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 <= 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18:
                                                s = s + 1
                                                t = u
                                                u = 2
                                                v = v * s / 10
                                                continue 
                                            if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                                s = s + 1
                                                t = u
                                                u = (10^18 * ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) - (10^18 * 10^18 * (v * s / 10) + (s * v * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * (v * s / 10) + (s * v * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                                v = v * s / 10
                                                continue 
                            revert
                        s = 9
                        u = t
                        w = (10^18 * ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) - (10^18 * 10^18 * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 9 * (10^18 * ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) - (10^18 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18) / (2 * 10^18 * 2 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * 2 * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) - (4 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18 * ext_call.return_data[0] * defaultAmount / 10^18) / 10 / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                        x = v
                        while w > u:
                            require 0 < mem[(32 * stor0.length) + 288]
                            _30427 = mem[(32 * stor0.length) + 320]
                            mem[mem[64] + 36] = mem[(32 * stor0.length) + 332 len 20]
                            mem[mem[64] + 68] = -(x * s / 10) + (s * x * s / 10) / 10
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_30427), -(x * s / 10) + (s * x * s / 10) / 10
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < mem[(32 * stor0.length) + 288]
                            require ext_code.size(mem[(32 * stor0.length) + 332 len 20])
                            call mem[(32 * stor0.length) + 332 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            _30747 = mem[64]
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = mem[(32 * stor0.length) + 288]
                            _30749 = mem[(32 * stor0.length) + 288]
                            idx = 0
                            while idx < 32 * _30749:
                                mem[mem[64] + idx + 132] = mem[(32 * stor0.length) + idx + 320]
                                idx = idx + 32
                                continue 
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len (32 * _30749) + _30747 + -mem[64] + 128]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 2 < mem[(32 * stor0.length) + 288]:
                                if 4 < mem[(32 * stor0.length) + 288]:
                                    _31761 = mem[(32 * stor0.length) + 448]
                                    mem[mem[64] + 4] = mem[(32 * stor0.length) + 396 len 20]
                                    mem[mem[64] + 36] = address(_31761)
                                    mem[mem[64] + 68] = ext_call.return_data[0]
                                    require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                                    call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4], address(_31761), ext_call.return_data[0]
                                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 64
                                    if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                            if ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 <= 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18:
                                                s = s - 1
                                                u = w
                                                w = 2
                                                x = x * s / 10
                                                continue 
                                            if 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18:
                                                s = s - 1
                                                u = w
                                                w = (10^18 * ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) - (10^18 * 10^18 * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * -(x * s / 10) + (s * x * s / 10) / 10 / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
                                                x = x * s / 10
                                                continue 
                            revert
                        if x <= 0:
                            return 0, 
                                   0,
                                   10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18,
                                   ext_call.return_data[0] * defaultAmount / 10^18
                        _30274 = mem[64]
                        mem[64] = mem[64] + (32 * stor0.length) + 32
                        mem[_30274] = stor0.length
                        if not stor0.length:
                            require 0 < stor0.length
                            _30448 = mem[_30274 + 32]
                            mem[mem[64] + 36] = mem[_30274 + 44 len 20]
                            mem[mem[64] + 68] = x
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_30448), x
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < stor0.length
                            require ext_code.size(mem[_30274 + 44 len 20])
                            call mem[_30274 + 44 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = stor0.length
                            mem[mem[64] + 132 len floor32(stor0.length)] = mem[_30274 + 32 len floor32(stor0.length)]
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args Array(len=stor0.length, data=mem[mem[64] + 132 len 32 * stor0.length]), address(arg1), ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _31758 = mem[_30274 + 160]
                            mem[mem[64] + 4] = mem[_30274 + 108 len 20]
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4], address(_31758), ext_call.return_data[0]
                        else:
                            mem[_30274 + 32] = address(stor0.field_0)
                            idx = _30274 + 32
                            s = 0
                            while _30274 + (32 * stor0.length) > idx:
                                mem[idx + 32] = stor0[s].field_256
                                idx = idx + 32
                                s = s + 1
                                continue 
                            require 0 < stor0.length
                            _32285 = mem[_30274 + 32]
                            mem[mem[64] + 36] = mem[_30274 + 44 len 20]
                            mem[mem[64] + 68] = x
                            require ext_code.size(0x818e6fecd516ecc3849daf6845e3ec868087b755)
                            call 0x818e6fecd516ecc3849daf6845e3ec868087b755.getExpectedRate(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, address(_32285), x
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 64
                            require 0 < stor0.length
                            require ext_code.size(mem[_30274 + 44 len 20])
                            call mem[_30274 + 44 len 20].0x313ce567 with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = 0x4ed8596100000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 36] = arg1
                            mem[mem[64] + 68] = ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64] + 4] = 96
                            mem[mem[64] + 100] = stor0.length
                            mem[mem[64] + 132 len floor32(stor0.length)] = mem[_30274 + 32 len floor32(stor0.length)]
                            var244001 = floor32(stor0.length)
                            require ext_code.size(0x24fd088e2f6d6b421f8ab213922e517c66d326)
                            call 0x0024fd088e2f6d6b421f8ab213922e517c66d326.0x4ed85961 with:
                                 gas gas_remaining wei
                                args Array(len=stor0.length, data=mem[mem[64] + 132 len 32 * stor0.length]), address(arg1), ext_call.return_data[0] * x / 10^18 / 10^(-ext_call.return_data[0] + 18)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require 2 < stor0.length
                            require 4 < stor0.length
                            _32645 = mem[_30274 + 160]
                            mem[mem[64] + 4] = mem[_30274 + 108 len 20]
                            require ext_code.size(0xcbc6a023eb975a1e2630223a7959988948e664f3)
                            call 0xcbc6a023eb975a1e2630223a7959988948e664f3.getReturn(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4], address(_32645), ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    require ext_call.return_data[0] * x / 10^18
    require 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * x / 10^18
    if ext_call.return_data[0] * x / 10^18 <= 10^18 * x / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * x / 10^18:
        require ext_code.size(arg2)
        call arg2.0x70a08231 with:
             gas gas_remaining wei
            args 0x63825c174ab367968ec60f061753d3bbd36a0d8f
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(arg2)
        call arg2.0x70a08231 with:
             gas gas_remaining wei
            args address(arg1)
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        return 0, 2, ext_call.return_data[0], ext_call.return_data[0]
    require 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18
    require ext_code.size(arg2)
    call arg2.0x70a08231 with:
         gas gas_remaining wei
        args 0x63825c174ab367968ec60f061753d3bbd36a0d8f
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(arg2)
    call arg2.0x70a08231 with:
         gas gas_remaining wei
        args address(arg1)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return x, 
           (10^18 * ext_call.return_data[0] * x / 10^18) - (10^18 * 10^18 * x / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * x / 10^18) / 10 * 10^18 * defaultAmount / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * defaultAmount / 10^18,
           ext_call.return_data[0],
           ext_call.return_data[0]
}



}
