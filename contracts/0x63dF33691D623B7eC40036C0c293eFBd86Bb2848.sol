contract main {


// =======================  Init code  ======================


const _fallback = code.data[18 len 1983]




// =====================  Runtime code  =====================


function _fallback() payable {
  stop
}

function sub_83d4a9b3(?) payable {
    mem[96] = 0
    mem[64] = 1184
    mem[1152] = 0
    mem[128] = 1152
    s = 128
    idx = 32
    while idx - 1:
        mem[64] = mem[64] + 32
        mem[1152] = 0
        mem[s + 32] = 1152
        s = s + 32
        idx = idx - 1
        continue 
    _3 = mem[64]
    mem[64] = mem[64] + 1088
    mem[_3 + 1024] = 12
    mem[_3 + 1056] = 'Chris DeRose' << 160
    mem[_3] = _3 + 1024
    _4 = mem[64]
    mem[64] = mem[64] + 64
    mem[_4] = 15
    _5 = mem[0]
    mem[_4 + 32] = 0x65566974616c696b204275746572696e00000000000000000000000000000000
    mem[_3 + 32] = _4
    _7 = mem[64]
    mem[64] = mem[64] + 64
    mem[_7] = 13
    mem[0] = _5
    mem[_7 + 32] = code.data[1951 len 32]
    mem[_3 + 64] = _7
    _10 = mem[64]
    mem[64] = mem[64] + 64
    mem[_10] = 10
    mem[_10 + 32] = 'Lisa Chang' << 176
    mem[_3 + 96] = _10
    _11 = mem[64]
    mem[64] = mem[64] + 288
    mem[_11] = 246
    mem[_11 + 32 len 246] = 0xf34368726973204465526f7365204368726973204465526f7365204368726973204465526f7365204368726973204465526f7365204368726973204465526f7365204368726973204465526f7365204368726973204465526f7365204368726973204465526f7365204368726973204465526f7365204368726973204465526f7365204368726973204465526f7365204368726973204465526f7365204368726973204465526f7365204368726973204465526f7365204368726973204465526f7365204368726973204465526f7365204368726973204465526f7365204368726973204465526f7365204368726973204465526f73
    mem[_3 + 128] = _11
    _12 = mem[64]
    mem[64] = mem[64] + 64
    mem[_12] = 15
    mem[0] = _5
    mem[_12 + 32] = 0x65566974616c696b204275746572696e00000000000000000000000000000000
    mem[_3 + 160] = _12
    _15 = mem[64]
    mem[64] = mem[64] + 64
    mem[_15] = 13
    mem[0] = _5
    mem[_15 + 32] = code.data[1951 len 32]
    mem[_3 + 192] = _15
    _18 = mem[64]
    mem[64] = mem[64] + 64
    mem[_18] = 10
    mem[_18 + 32] = 'Lisa Chang' << 176
    mem[_3 + 224] = _18
    _19 = mem[64]
    mem[64] = mem[64] + 64
    mem[_19] = 12
    mem[_19 + 32] = 'Chris DeRose' << 160
    mem[_3 + 256] = _19
    _20 = mem[64]
    mem[64] = mem[64] + 64
    mem[_20] = 15
    mem[0] = _5
    mem[_20 + 32] = 0x65566974616c696b204275746572696e00000000000000000000000000000000
    mem[_3 + 288] = _20
    _23 = mem[64]
    mem[64] = mem[64] + 64
    mem[_23] = 13
    mem[0] = _5
    mem[_23 + 32] = code.data[1951 len 32]
    mem[_3 + 320] = _23
    _26 = mem[64]
    mem[64] = mem[64] + 64
    mem[_26] = 10
    mem[_26 + 32] = 'Lisa Chang' << 176
    mem[_3 + 352] = _26
    _27 = mem[64]
    mem[64] = mem[64] + 64
    mem[_27] = 12
    mem[_27 + 32] = 'Chris DeRose' << 160
    mem[_3 + 384] = _27
    _28 = mem[64]
    mem[64] = mem[64] + 64
    mem[_28] = 15
    mem[0] = _5
    mem[_28 + 32] = 0x65566974616c696b204275746572696e00000000000000000000000000000000
    mem[_3 + 416] = _28
    _31 = mem[64]
    mem[64] = mem[64] + 64
    mem[_31] = 13
    mem[0] = _5
    mem[_31 + 32] = code.data[1951 len 32]
    mem[_3 + 448] = _31
    _34 = mem[64]
    mem[64] = mem[64] + 64
    mem[_34] = 10
    mem[_34 + 32] = 'Lisa Chang' << 176
    mem[_3 + 480] = _34
    _35 = mem[64]
    mem[64] = mem[64] + 64
    mem[_35] = 12
    mem[_35 + 32] = 'Chris DeRose' << 160
    mem[_3 + 512] = _35
    _36 = mem[64]
    mem[64] = mem[64] + 64
    mem[_36] = 15
    mem[0] = _5
    mem[_36 + 32] = 0x65566974616c696b204275746572696e00000000000000000000000000000000
    mem[_3 + 544] = _36
    _39 = mem[64]
    mem[64] = mem[64] + 64
    mem[_39] = 13
    mem[0] = _5
    mem[_39 + 32] = code.data[1951 len 32]
    mem[_3 + 576] = _39
    _42 = mem[64]
    mem[64] = mem[64] + 64
    mem[_42] = 10
    mem[_42 + 32] = 'Lisa Chang' << 176
    mem[_3 + 608] = _42
    _43 = mem[64]
    mem[64] = mem[64] + 64
    mem[_43] = 12
    mem[_43 + 32] = 'Chris DeRose' << 160
    mem[_3 + 640] = _43
    _44 = mem[64]
    mem[64] = mem[64] + 64
    mem[_44] = 15
    mem[0] = _5
    mem[_44 + 32] = 0x65566974616c696b204275746572696e00000000000000000000000000000000
    mem[_3 + 672] = _44
    _47 = mem[64]
    mem[64] = mem[64] + 64
    mem[_47] = 13
    mem[0] = _5
    mem[_47 + 32] = code.data[1951 len 32]
    mem[_3 + 704] = _47
    _50 = mem[64]
    mem[64] = mem[64] + 64
    mem[_50] = 10
    mem[_50 + 32] = 'Lisa Chang' << 176
    mem[_3 + 736] = _50
    _51 = mem[64]
    mem[64] = mem[64] + 64
    mem[_51] = 12
    mem[_51 + 32] = 'Chris DeRose' << 160
    mem[_3 + 768] = _51
    _52 = mem[64]
    mem[64] = mem[64] + 64
    mem[_52] = 15
    mem[0] = _5
    mem[_52 + 32] = 0x65566974616c696b204275746572696e00000000000000000000000000000000
    mem[_3 + 800] = _52
    _55 = mem[64]
    mem[64] = mem[64] + 64
    mem[_55] = 13
    mem[0] = _5
    mem[_55 + 32] = code.data[1951 len 32]
    mem[_3 + 832] = _55
    _58 = mem[64]
    mem[64] = mem[64] + 64
    mem[_58] = 10
    mem[_58 + 32] = 'Lisa Chang' << 176
    mem[_3 + 864] = _58
    _59 = mem[64]
    mem[64] = mem[64] + 64
    mem[_59] = 12
    mem[_59 + 32] = 'Chris DeRose' << 160
    mem[_3 + 896] = _59
    _60 = mem[64]
    mem[64] = mem[64] + 64
    mem[_60] = 15
    mem[0] = _5
    mem[_60 + 32] = 0x65566974616c696b204275746572696e00000000000000000000000000000000
    mem[_3 + 928] = _60
    _63 = mem[64]
    mem[64] = mem[64] + 64
    mem[_63] = 13
    mem[0] = _5
    mem[_63 + 32] = code.data[1951 len 32]
    mem[_3 + 960] = _63
    _66 = mem[64]
    mem[64] = mem[64] + 64
    mem[_66] = 10
    mem[_66 + 32] = 'Lisa Chang' << 176
    mem[_3 + 992] = _66
    require arg1 < 32
    _67 = mem[(32 * arg1) + _3]
    _68 = mem[64]
    mem[mem[64]] = 32
    mem[mem[64] + 32] = mem[_67]
    _70 = mem[_67]
    mem[mem[64] + 64 len mem[_67]] = mem[_67 + 32 len mem[_67]]
    if not _70 % 32:
        return 32, mem[mem[64] + 32 len _70 + 32]
    mem[floor32(_70) + mem[64] + 64] = mem[floor32(_70) + mem[64] + -(_70 % 32) + 96 len _70 % 32]
    return memory
      from mem[64]
       len floor32(_70) + _68 + -mem[64] + 96
}



}
