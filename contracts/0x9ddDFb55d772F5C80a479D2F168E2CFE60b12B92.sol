contract main {


// =======================  Init code  ======================


uint8 stor4; offset 160
address stor4;

function _fallback() payable {
    uint8(stor4.field_160) = 0
    require not msg.value
    address(stor4.field_0) = code.data[6587 len 20]
    return code.data[91 len 6484]
}



// =====================  Runtime code  =====================


const name = 'district0x Token'

const decimals = 18

const symbol = 'd0x'

const MAX_TOTAL_TOKEN_AMOUNT = 250000000 * 10^18


uint256 totalSupply;
array of uint256 balanceOf;
array of uint256 allowance;
array of struct tokenGrantsCount;
uint8 transfersEnabled; offset 160
uint128 stor4; offset 160
address minterAddress;

function tokenGrantsCount(address arg1) {
    return uint256(tokenGrantsCount[address(arg1)].field_0)
}

function minter() {
    return minterAddress
}

function totalSupply() {
    return totalSupply
}

function grants(address arg1, uint256 arg2) {
    require arg2 < uint256(tokenGrantsCount[arg1].field_0)
    return tokenGrantsCount[arg1][arg2].field_0, 
           uint256(tokenGrantsCount[arg1][arg2].field_256),
           uint64(tokenGrantsCount[arg1][arg2].field_512),
           uint64(tokenGrantsCount[arg1][arg2].field_512),
           uint64(tokenGrantsCount[arg1][arg2].field_640)
}

function balanceOf(address arg1) {
    return balanceOf[address(arg1)]
}

function transfersEnabled() {
    return bool(transfersEnabled)
}

function allowance(address arg1, address arg2) {
    return uint256(allowance[address(arg1)][address(arg2)])
}

function _fallback() payable {
    revert
}

function enableTransfers(bool arg1) {
    require minterAddress == msg.sender
    stor4 = Mask(96, 0, arg1)
}

function approve(address arg1, uint256 arg2) {
    if arg2:
        require not uint256(allowance[address(msg.sender)][address(arg1)])
    uint256(allowance[address(msg.sender)][address(arg1)]) = arg2
    emit Approval(arg2, msg.sender, arg1);
}

function lastTokenIsTransferableDate(address arg1) {
    idx = 0
    while idx < uint256(tokenGrantsCount[address(arg1)].field_0):
        mem[32] = 3
        require idx < uint256(tokenGrantsCount[address(arg1)].field_0)
        mem[0] = sha3(address(arg1), 3)
        idx = idx + 1
        continue 
    return uint64(block.timestamp)
}

function createToken(address arg1, uint256 arg2) {
    require minterAddress == msg.sender
    require arg2 + totalSupply >= totalSupply
    require arg2 + totalSupply <= 250000000 * 10^18
    require arg2 > 0
    require arg2 + balanceOf[address(arg1)] >= balanceOf[address(arg1)]
    balanceOf[address(arg1)] += arg2
    require arg2 + totalSupply >= totalSupply
    totalSupply += arg2
}

function calculateVestedTokens(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4, uint256 arg5) {
    if arg2 < arg4:
        return 0
    if arg2 >= arg5:
        return arg1
    require arg3 <= arg5
    require arg3 <= arg4
    if arg1:
        require arg1
        require (arg4 * arg1) - (arg3 * arg1) / arg1 == arg4 - arg3
    require arg5 - arg3
    require (arg4 * arg1) - (arg3 * arg1) / arg5 - arg3 <= arg1
    require arg4 <= arg5
    require arg4 <= arg2
    if arg1 - ((arg4 * arg1) - (arg3 * arg1) / arg5 - arg3):
        require arg1 - ((arg4 * arg1) - (arg3 * arg1) / arg5 - arg3)
        require (arg1 * arg2) - ((arg4 * arg1) - (arg3 * arg1) / arg5 - arg3 * arg2) - (arg1 * arg4) + ((arg4 * arg1) - (arg3 * arg1) / arg5 - arg3 * arg4) / arg1 - ((arg4 * arg1) - (arg3 * arg1) / arg5 - arg3) == arg2 - arg4
    require arg5 - arg4
    require ((arg1 * arg2) - ((arg4 * arg1) - (arg3 * arg1) / arg5 - arg3 * arg2) - (arg1 * arg4) + ((arg4 * arg1) - (arg3 * arg1) / arg5 - arg3 * arg4) / arg5 - arg4) + ((arg4 * arg1) - (arg3 * arg1) / arg5 - arg3) >= (arg4 * arg1) - (arg3 * arg1) / arg5 - arg3
    return (((arg1 * arg2) - ((arg4 * arg1) - (arg3 * arg1) / arg5 - arg3 * arg2) - (arg1 * arg4) + ((arg4 * arg1) - (arg3 * arg1) / arg5 - arg3 * arg4) / arg5 - arg4) + ((arg4 * arg1) - (arg3 * arg1) / arg5 - arg3))
}

function approveAndCall(address arg1, uint256 arg2, bytes arg3) {
    mem[128 len arg3.length] = arg3[all]
    uint256(allowance[address(msg.sender)][address(arg1)]) = arg2
    emit Approval(arg2, msg.sender, arg1);
    mem[ceil32(arg3.length) + 128] = Mask(32, 224, sha3('receiveApproval(address,uint256,', 'address,bytes)'))
    mem[ceil32(arg3.length) + 132] = msg.sender
    mem[ceil32(arg3.length) + 164] = arg2
    mem[ceil32(arg3.length) + 196] = this.address
    if not arg3.length:
        if not arg3.length % 32:
            call arg1 with:
               funct Mask(32, 224, sha3('receiveApproval(address,uint256,', 'address,bytes)')) >> 224
                 gas gas_remaining - 25710 wei
                args msg.sender, arg2, address(this.address), mem[ceil32(arg3.length) + 228 len arg3.length]
        else:
            mem[floor32(arg3.length) + ceil32(arg3.length) + 228] = mem[floor32(arg3.length) + ceil32(arg3.length) + -(arg3.length % 32) + 260 len arg3.length % 32]
            call arg1 with:
               funct Mask(32, 224, sha3('receiveApproval(address,uint256,', 'address,bytes)')) >> 224
                 gas gas_remaining - 25710 wei
                args msg.sender, arg2, address(this.address), mem[ceil32(arg3.length) + 228 len floor32(arg3.length) + 32]
    else:
        mem[ceil32(arg3.length) + 228] = mem[128]
        mem[ceil32(arg3.length) + 260 len floor32(arg3.length - 1)] = mem[160 len floor32(arg3.length - 1)]
        if not arg3.length % 32:
            call arg1 with:
               funct Mask(32, 224, sha3('receiveApproval(address,uint256,', 'address,bytes)')) >> 224
                 gas gas_remaining - 25710 wei
                args msg.sender, arg2, address(this.address), mem[ceil32(arg3.length) + 228 len arg3.length]
        else:
            mem[floor32(arg3.length) + ceil32(arg3.length) + 228] = mem[floor32(arg3.length) + ceil32(arg3.length) + -(arg3.length % 32) + 260 len arg3.length % 32]
            call arg1 with:
               funct Mask(32, 224, sha3('receiveApproval(address,uint256,', 'address,bytes)')) >> 224
                 gas gas_remaining - 25710 wei
                args msg.sender, arg2, address(this.address), mem[128], mem[ceil32(arg3.length) + 260 len floor32(arg3.length)]
    require ext_call.success
    return 1
}

function tokenGrant(address arg1, uint256 arg2) {
    require arg2 < uint256(tokenGrantsCount[address(arg1)].field_0)
    if uint64(block.timestamp) < uint64(tokenGrantsCount[address(arg1)][arg2].field_512):
        return tokenGrantsCount[address(arg1)][arg2].field_0, 
               uint256(tokenGrantsCount[address(arg1)][arg2].field_256),
               0,
               uint64(tokenGrantsCount[address(arg1)][arg2].field_512),
               uint64(tokenGrantsCount[address(arg1)][arg2].field_512),
               uint64(tokenGrantsCount[address(arg1)][arg2].field_576)
    if uint64(block.timestamp) >= uint64(tokenGrantsCount[address(arg1)][arg2].field_576):
        return tokenGrantsCount[address(arg1)][arg2].field_0, 
               uint256(tokenGrantsCount[address(arg1)][arg2].field_256),
               uint256(tokenGrantsCount[address(arg1)][arg2].field_256),
               uint64(tokenGrantsCount[address(arg1)][arg2].field_512),
               uint64(tokenGrantsCount[address(arg1)][arg2].field_512),
               uint64(tokenGrantsCount[address(arg1)][arg2].field_576)
    require uint64(tokenGrantsCount[address(arg1)][arg2].field_512) <= uint64(tokenGrantsCount[address(arg1)][arg2].field_576)
    require uint64(tokenGrantsCount[address(arg1)][arg2].field_512) <= uint64(tokenGrantsCount[address(arg1)][arg2].field_512)
    if uint256(tokenGrantsCount[address(arg1)][arg2].field_256):
        require uint256(tokenGrantsCount[address(arg1)][arg2].field_256)
        require (uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) - (uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) / uint256(tokenGrantsCount[address(arg1)][arg2].field_256) == uint64(tokenGrantsCount[address(arg1)][arg2].field_512) - uint64(tokenGrantsCount[address(arg1)][arg2].field_512)
    require uint64(tokenGrantsCount[address(arg1)][arg2].field_576) - uint64(tokenGrantsCount[address(arg1)][arg2].field_512)
    require (uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) - (uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) / uint64(tokenGrantsCount[address(arg1)][arg2].field_512) - uint64(tokenGrantsCount[address(arg1)][arg2].field_512) <= uint256(tokenGrantsCount[address(arg1)][arg2].field_256)
    require uint64(tokenGrantsCount[address(arg1)][arg2].field_512) <= uint64(tokenGrantsCount[address(arg1)][arg2].field_512)
    require uint64(tokenGrantsCount[address(arg1)][arg2].field_512) <= uint64(block.timestamp)
    if uint256(tokenGrantsCount[address(arg1)][arg2].field_256) - ((uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) - (uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) / uint64(tokenGrantsCount[address(arg1)][arg2].field_512) - uint64(tokenGrantsCount[address(arg1)][arg2].field_512)):
        require uint256(tokenGrantsCount[address(arg1)][arg2].field_256) - ((uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) - (uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) / uint64(tokenGrantsCount[address(arg1)][arg2].field_512) - uint64(tokenGrantsCount[address(arg1)][arg2].field_512))
        require (uint256(tokenGrantsCount[address(arg1)][arg2].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) - (uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) / uint64(tokenGrantsCount[address(arg1)][arg2].field_512) - uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(arg1)][arg2].field_256) * uint64(tokenGrantsCount[address(arg1)][arg2].field_512)) + ((uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) - (uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) / uint64(tokenGrantsCount[address(arg1)][arg2].field_512) - uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint64(tokenGrantsCount[address(arg1)][arg2].field_512)) / uint256(tokenGrantsCount[address(arg1)][arg2].field_256) - ((uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) - (uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) / uint64(tokenGrantsCount[address(arg1)][arg2].field_512) - uint64(tokenGrantsCount[address(arg1)][arg2].field_512)) == uint64(block.timestamp) - uint64(tokenGrantsCount[address(arg1)][arg2].field_512)
    require uint64(tokenGrantsCount[address(arg1)][arg2].field_512) - uint64(tokenGrantsCount[address(arg1)][arg2].field_512)
    require ((uint256(tokenGrantsCount[address(arg1)][arg2].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) - (uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) / uint64(tokenGrantsCount[address(arg1)][arg2].field_512) - uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(arg1)][arg2].field_256) * uint64(tokenGrantsCount[address(arg1)][arg2].field_512)) + ((uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) - (uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) / uint64(tokenGrantsCount[address(arg1)][arg2].field_512) - uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint64(tokenGrantsCount[address(arg1)][arg2].field_512)) / uint64(tokenGrantsCount[address(arg1)][arg2].field_512) - uint64(tokenGrantsCount[address(arg1)][arg2].field_512)) + ((uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) - (uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) / uint64(tokenGrantsCount[address(arg1)][arg2].field_512) - uint64(tokenGrantsCount[address(arg1)][arg2].field_512)) >= (uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) - (uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) / uint64(tokenGrantsCount[address(arg1)][arg2].field_512) - uint64(tokenGrantsCount[address(arg1)][arg2].field_512)
    return tokenGrantsCount[address(arg1)][arg2].field_0, 
           uint256(tokenGrantsCount[address(arg1)][arg2].field_256),
           ((uint256(tokenGrantsCount[address(arg1)][arg2].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) - (uint64(tokenGrantsCount[address(arg1)][arg2].field_640) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) / uint64(tokenGrantsCount[address(arg1)][arg2].field_576) - uint64(tokenGrantsCount[address(arg1)][arg2].field_640) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(arg1)][arg2].field_256) * uint64(tokenGrantsCount[address(arg1)][arg2].field_512)) + ((uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) - (uint64(tokenGrantsCount[address(arg1)][arg2].field_640) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) / uint64(tokenGrantsCount[address(arg1)][arg2].field_576) - uint64(tokenGrantsCount[address(arg1)][arg2].field_640) * uint64(tokenGrantsCount[address(arg1)][arg2].field_512)) / uint64(tokenGrantsCount[address(arg1)][arg2].field_576) - uint64(tokenGrantsCount[address(arg1)][arg2].field_512)) + ((uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) - (uint64(tokenGrantsCount[address(arg1)][arg2].field_640) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) / uint64(tokenGrantsCount[address(arg1)][arg2].field_576) - uint64(tokenGrantsCount[address(arg1)][arg2].field_640)),
           uint64(tokenGrantsCount[address(arg1)][arg2].field_512),
           uint64(tokenGrantsCount[address(arg1)][arg2].field_512),
           uint64(tokenGrantsCount[address(arg1)][arg2].field_576)
}

function transferableTokens(address arg1, uint64 arg2) payable {
    mem[64] = 96
    require not msg.value
    s = 0
    idx = 0
    s = 0
    while idx < uint256(tokenGrantsCount[address(arg1)].field_0):
        mem[32] = 3
        require idx < uint256(tokenGrantsCount[address(arg1)].field_0)
        mem[0] = sha3(address(arg1), 3)
        _24 = mem[64]
        mem[64] = mem[64] + 160
        mem[_24] = tokenGrantsCount[address(arg1)][idx].field_0
        mem[_24 + 32] = uint256(tokenGrantsCount[address(arg1)][idx].field_256)
        mem[_24 + 64] = uint64(tokenGrantsCount[address(arg1)][idx].field_512)
        mem[_24 + 96] = uint64(tokenGrantsCount[address(arg1)][idx].field_576)
        mem[_24 + 128] = uint64(tokenGrantsCount[address(arg1)][idx].field_640)
        if arg2 < uint64(tokenGrantsCount[address(arg1)][idx].field_512):
            require 0 <= uint256(tokenGrantsCount[address(arg1)][idx].field_256)
            require uint256(tokenGrantsCount[address(arg1)][idx].field_256) + s >= s
            s = uint256(tokenGrantsCount[address(arg1)][idx].field_256)
            idx = idx + 1
            s = uint256(tokenGrantsCount[address(arg1)][idx].field_256) + s
            continue 
        if arg2 >= uint64(tokenGrantsCount[address(arg1)][idx].field_576):
            require uint256(tokenGrantsCount[address(arg1)][idx].field_256) <= uint256(tokenGrantsCount[address(arg1)][idx].field_256)
            require s >= s
            s = 0
            idx = idx + 1
            s = s
            continue 
        require uint64(tokenGrantsCount[address(arg1)][idx].field_512) <= uint64(tokenGrantsCount[address(arg1)][idx].field_576)
        require uint64(tokenGrantsCount[address(arg1)][idx].field_512) <= uint64(tokenGrantsCount[address(arg1)][idx].field_512)
        if uint256(tokenGrantsCount[address(arg1)][idx].field_256):
            require uint256(tokenGrantsCount[address(arg1)][idx].field_256)
            require (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint256(tokenGrantsCount[address(arg1)][idx].field_256) == uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512)
        require uint64(tokenGrantsCount[address(arg1)][idx].field_576) - uint64(tokenGrantsCount[address(arg1)][idx].field_512)
        require (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512) <= uint256(tokenGrantsCount[address(arg1)][idx].field_256)
        require uint64(tokenGrantsCount[address(arg1)][idx].field_512) <= uint64(tokenGrantsCount[address(arg1)][idx].field_512)
        require uint64(tokenGrantsCount[address(arg1)][idx].field_512) <= arg2
        if uint256(tokenGrantsCount[address(arg1)][idx].field_256) - ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512)):
            require uint256(tokenGrantsCount[address(arg1)][idx].field_256) - ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512))
            require (uint256(tokenGrantsCount[address(arg1)][idx].field_256) * arg2) - ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512) * arg2) - (uint256(tokenGrantsCount[address(arg1)][idx].field_256) * uint64(tokenGrantsCount[address(arg1)][idx].field_512)) + ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint64(tokenGrantsCount[address(arg1)][idx].field_512)) / uint256(tokenGrantsCount[address(arg1)][idx].field_256) - ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512)) == arg2 - uint64(tokenGrantsCount[address(arg1)][idx].field_512)
        require uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512)
        require ((uint256(tokenGrantsCount[address(arg1)][idx].field_256) * arg2) - ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512) * arg2) - (uint256(tokenGrantsCount[address(arg1)][idx].field_256) * uint64(tokenGrantsCount[address(arg1)][idx].field_512)) + ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint64(tokenGrantsCount[address(arg1)][idx].field_512)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512)) + ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512)) >= (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512)
        require ((uint256(tokenGrantsCount[address(arg1)][idx].field_256) * arg2) - ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512) * arg2) - (uint256(tokenGrantsCount[address(arg1)][idx].field_256) * uint64(tokenGrantsCount[address(arg1)][idx].field_512)) + ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint64(tokenGrantsCount[address(arg1)][idx].field_512)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512)) + ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512)) <= uint256(tokenGrantsCount[address(arg1)][idx].field_256)
        require uint256(tokenGrantsCount[address(arg1)][idx].field_256) - ((uint256(tokenGrantsCount[address(arg1)][idx].field_256) * arg2) - ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512) * arg2) - (uint256(tokenGrantsCount[address(arg1)][idx].field_256) * uint64(tokenGrantsCount[address(arg1)][idx].field_512)) + ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint64(tokenGrantsCount[address(arg1)][idx].field_512)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512)) - ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512)) + s >= s
        s = uint256(tokenGrantsCount[address(arg1)][idx].field_256) - ((uint256(tokenGrantsCount[address(arg1)][idx].field_256) * arg2) - ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512) * arg2) - (uint256(tokenGrantsCount[address(arg1)][idx].field_256) * uint64(tokenGrantsCount[address(arg1)][idx].field_512)) + ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint64(tokenGrantsCount[address(arg1)][idx].field_512)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512)) - ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512))
        idx = idx + 1
        s = uint256(tokenGrantsCount[address(arg1)][idx].field_256) - ((uint256(tokenGrantsCount[address(arg1)][idx].field_256) * arg2) - ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512) * arg2) - (uint256(tokenGrantsCount[address(arg1)][idx].field_256) * uint64(tokenGrantsCount[address(arg1)][idx].field_512)) + ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint64(tokenGrantsCount[address(arg1)][idx].field_512)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512)) - ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512)) + s
        continue 
    require s <= balanceOf[address(arg1)]
    if balanceOf[address(arg1)] - s < balanceOf[address(arg1)]:
        return (balanceOf[address(arg1)] - s)
    return balanceOf[address(arg1)]
}

function revokeTokenGrant(address arg1, uint256 arg2) {
    require arg2 < uint256(tokenGrantsCount[address(arg1)].field_0)
    require tokenGrantsCount[address(arg1)][arg2].field_0 == msg.sender
    if uint64(block.timestamp) < uint64(tokenGrantsCount[address(arg1)][arg2].field_512):
        require 0 <= uint256(tokenGrantsCount[address(arg1)][arg2].field_256)
        require arg2 < uint256(tokenGrantsCount[address(arg1)].field_0)
        tokenGrantsCount[address(arg1)][arg2].field_0 = 0
        uint256(tokenGrantsCount[address(arg1)][arg2].field_256) = 0
        Mask(192, 0, tokenGrantsCount[address(arg1)][arg2].field_512) = 0
        if arg2 < uint256(tokenGrantsCount[address(arg1)].field_0) - 1:
            require uint256(tokenGrantsCount[address(arg1)].field_0) - 1 < uint256(tokenGrantsCount[address(arg1)].field_0)
            require arg2 < uint256(tokenGrantsCount[address(arg1)].field_0)
            tokenGrantsCount[address(arg1)][arg2].field_0 = tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_0
            uint256(tokenGrantsCount[address(arg1)][arg2].field_256) = uint256(tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_0)
            uint64(tokenGrantsCount[address(arg1)][arg2].field_512) = uint64(tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_0)
            uint64(tokenGrantsCount[address(arg1)][arg2].field_512) = uint64(tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_0)
            Mask(192, 0, tokenGrantsCount[address(arg1)][arg2].field_576) = uint64(tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_0)
            uint128(tokenGrantsCount[address(arg1)][arg2].field_640) = 0
            uint64(tokenGrantsCount[address(arg1)][arg2].field_512) = uint64(tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_0)
            uint64(tokenGrantsCount[address(arg1)][arg2].field_576) = uint64(tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_0)
            uint128(tokenGrantsCount[address(arg1)][arg2].field_640) = uint64(tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_0)
            uint64(tokenGrantsCount[address(arg1)][arg2].field_704) = 0
            uint64(tokenGrantsCount[address(arg1)][arg2].field_704) = 0
        uint256(tokenGrantsCount[address(arg1)].field_0)--
        if not uint256(tokenGrantsCount[address(arg1)].field_0) <= uint256(tokenGrantsCount[address(arg1)].field_0) - 1:
            idx = (3 * uint256(tokenGrantsCount[address(arg1)].field_0)) - 3
            while 3 * uint256(tokenGrantsCount[address(arg1)].field_0) > idx:
                tokenGrantsCount[address(arg1)][idx].field_0 = 0
                uint256(tokenGrantsCount[address(arg1)][idx].field_256) = 0
                Mask(192, 0, tokenGrantsCount[address(arg1)][idx].field_512) = 0
                idx = idx + 3
                continue 
        require uint256(tokenGrantsCount[address(arg1)][arg2].field_256) + balanceOf[address(msg.sender)] >= balanceOf[address(msg.sender)]
        balanceOf[address(msg.sender)] += uint256(tokenGrantsCount[address(arg1)][arg2].field_256)
        require uint256(tokenGrantsCount[address(arg1)][arg2].field_256) <= balanceOf[arg1]
        balanceOf[address(arg1)] = balanceOf[arg1] - uint256(tokenGrantsCount[address(arg1)][arg2].field_256)
        emit Transfer(uint256(tokenGrantsCount[address(arg1)][arg2].field_256), arg1, msg.sender);
    else:
        if uint64(block.timestamp) >= uint64(tokenGrantsCount[address(arg1)][arg2].field_576):
            require uint256(tokenGrantsCount[address(arg1)][arg2].field_256) <= uint256(tokenGrantsCount[address(arg1)][arg2].field_256)
            require arg2 < uint256(tokenGrantsCount[address(arg1)].field_0)
            tokenGrantsCount[address(arg1)][arg2].field_0 = 0
            uint256(tokenGrantsCount[address(arg1)][arg2].field_256) = 0
            Mask(192, 0, tokenGrantsCount[address(arg1)][arg2].field_512) = 0
            if arg2 < uint256(tokenGrantsCount[address(arg1)].field_0) - 1:
                require uint256(tokenGrantsCount[address(arg1)].field_0) - 1 < uint256(tokenGrantsCount[address(arg1)].field_0)
                require arg2 < uint256(tokenGrantsCount[address(arg1)].field_0)
                tokenGrantsCount[address(arg1)][arg2].field_0 = tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_0
                uint256(tokenGrantsCount[address(arg1)][arg2].field_256) = uint256(tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_0)
                uint64(tokenGrantsCount[address(arg1)][arg2].field_512) = uint64(tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_0)
                uint64(tokenGrantsCount[address(arg1)][arg2].field_512) = uint64(tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_0)
                Mask(192, 0, tokenGrantsCount[address(arg1)][arg2].field_576) = uint64(tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_0)
                uint128(tokenGrantsCount[address(arg1)][arg2].field_640) = 0
                uint64(tokenGrantsCount[address(arg1)][arg2].field_512) = uint64(tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_0)
                uint64(tokenGrantsCount[address(arg1)][arg2].field_576) = uint64(tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_0)
                uint128(tokenGrantsCount[address(arg1)][arg2].field_640) = uint64(tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_0)
                uint64(tokenGrantsCount[address(arg1)][arg2].field_704) = 0
                uint64(tokenGrantsCount[address(arg1)][arg2].field_704) = 0
            uint256(tokenGrantsCount[address(arg1)].field_0)--
            if not uint256(tokenGrantsCount[address(arg1)].field_0) <= uint256(tokenGrantsCount[address(arg1)].field_0) - 1:
                idx = (3 * uint256(tokenGrantsCount[address(arg1)].field_0)) - 3
                while 3 * uint256(tokenGrantsCount[address(arg1)].field_0) > idx:
                    tokenGrantsCount[address(arg1)][idx].field_0 = 0
                    uint256(tokenGrantsCount[address(arg1)][idx].field_256) = 0
                    Mask(192, 0, tokenGrantsCount[address(arg1)][idx].field_512) = 0
                    idx = idx + 3
                    continue 
            require balanceOf[address(msg.sender)] >= balanceOf[address(msg.sender)]
            require 0 <= balanceOf[arg1]
            balanceOf[address(arg1)] = balanceOf[arg1]
            emit Transfer(0, arg1, msg.sender);
        else:
            require uint64(tokenGrantsCount[address(arg1)][arg2].field_512) <= uint64(tokenGrantsCount[address(arg1)][arg2].field_576)
            require uint64(tokenGrantsCount[address(arg1)][arg2].field_512) <= uint64(tokenGrantsCount[address(arg1)][arg2].field_512)
            if uint256(tokenGrantsCount[address(arg1)][arg2].field_256):
                require uint256(tokenGrantsCount[address(arg1)][arg2].field_256)
                require (uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) - (uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) / uint256(tokenGrantsCount[address(arg1)][arg2].field_256) == uint64(tokenGrantsCount[address(arg1)][arg2].field_512) - uint64(tokenGrantsCount[address(arg1)][arg2].field_512)
            require uint64(tokenGrantsCount[address(arg1)][arg2].field_576) - uint64(tokenGrantsCount[address(arg1)][arg2].field_512)
            require (uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) - (uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) / uint64(tokenGrantsCount[address(arg1)][arg2].field_512) - uint64(tokenGrantsCount[address(arg1)][arg2].field_512) <= uint256(tokenGrantsCount[address(arg1)][arg2].field_256)
            require uint64(tokenGrantsCount[address(arg1)][arg2].field_512) <= uint64(tokenGrantsCount[address(arg1)][arg2].field_512)
            require uint64(tokenGrantsCount[address(arg1)][arg2].field_512) <= uint64(block.timestamp)
            if uint256(tokenGrantsCount[address(arg1)][arg2].field_256) - ((uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) - (uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) / uint64(tokenGrantsCount[address(arg1)][arg2].field_512) - uint64(tokenGrantsCount[address(arg1)][arg2].field_512)):
                require uint256(tokenGrantsCount[address(arg1)][arg2].field_256) - ((uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) - (uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) / uint64(tokenGrantsCount[address(arg1)][arg2].field_512) - uint64(tokenGrantsCount[address(arg1)][arg2].field_512))
                require (uint256(tokenGrantsCount[address(arg1)][arg2].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) - (uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) / uint64(tokenGrantsCount[address(arg1)][arg2].field_512) - uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(arg1)][arg2].field_256) * uint64(tokenGrantsCount[address(arg1)][arg2].field_512)) + ((uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) - (uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) / uint64(tokenGrantsCount[address(arg1)][arg2].field_512) - uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint64(tokenGrantsCount[address(arg1)][arg2].field_512)) / uint256(tokenGrantsCount[address(arg1)][arg2].field_256) - ((uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) - (uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) / uint64(tokenGrantsCount[address(arg1)][arg2].field_512) - uint64(tokenGrantsCount[address(arg1)][arg2].field_512)) == uint64(block.timestamp) - uint64(tokenGrantsCount[address(arg1)][arg2].field_512)
            require uint64(tokenGrantsCount[address(arg1)][arg2].field_512) - uint64(tokenGrantsCount[address(arg1)][arg2].field_512)
            require ((uint256(tokenGrantsCount[address(arg1)][arg2].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) - (uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) / uint64(tokenGrantsCount[address(arg1)][arg2].field_512) - uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(arg1)][arg2].field_256) * uint64(tokenGrantsCount[address(arg1)][arg2].field_512)) + ((uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) - (uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) / uint64(tokenGrantsCount[address(arg1)][arg2].field_512) - uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint64(tokenGrantsCount[address(arg1)][arg2].field_512)) / uint64(tokenGrantsCount[address(arg1)][arg2].field_512) - uint64(tokenGrantsCount[address(arg1)][arg2].field_512)) + ((uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) - (uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) / uint64(tokenGrantsCount[address(arg1)][arg2].field_512) - uint64(tokenGrantsCount[address(arg1)][arg2].field_512)) >= (uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) - (uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) / uint64(tokenGrantsCount[address(arg1)][arg2].field_512) - uint64(tokenGrantsCount[address(arg1)][arg2].field_512)
            require ((uint256(tokenGrantsCount[address(arg1)][arg2].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) - (uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) / uint64(tokenGrantsCount[address(arg1)][arg2].field_512) - uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(arg1)][arg2].field_256) * uint64(tokenGrantsCount[address(arg1)][arg2].field_512)) + ((uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) - (uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) / uint64(tokenGrantsCount[address(arg1)][arg2].field_512) - uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint64(tokenGrantsCount[address(arg1)][arg2].field_512)) / uint64(tokenGrantsCount[address(arg1)][arg2].field_512) - uint64(tokenGrantsCount[address(arg1)][arg2].field_512)) + ((uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) - (uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) / uint64(tokenGrantsCount[address(arg1)][arg2].field_512) - uint64(tokenGrantsCount[address(arg1)][arg2].field_512)) <= uint256(tokenGrantsCount[address(arg1)][arg2].field_256)
            require arg2 < uint256(tokenGrantsCount[address(arg1)].field_0)
            tokenGrantsCount[address(arg1)][arg2].field_0 = 0
            uint256(tokenGrantsCount[address(arg1)][arg2].field_256) = 0
            Mask(192, 0, tokenGrantsCount[address(arg1)][arg2].field_512) = 0
            if arg2 < uint256(tokenGrantsCount[address(arg1)].field_0) - 1:
                require uint256(tokenGrantsCount[address(arg1)].field_0) - 1 < uint256(tokenGrantsCount[address(arg1)].field_0)
                require arg2 < uint256(tokenGrantsCount[address(arg1)].field_0)
                tokenGrantsCount[address(arg1)][arg2].field_0 = tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_0
                uint256(tokenGrantsCount[address(arg1)][arg2].field_256) = uint256(tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_0)
                uint64(tokenGrantsCount[address(arg1)][arg2].field_512) = uint64(tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_0)
                uint64(tokenGrantsCount[address(arg1)][arg2].field_512) = uint64(tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_0)
                Mask(192, 0, tokenGrantsCount[address(arg1)][arg2].field_576) = uint64(tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_0)
                uint128(tokenGrantsCount[address(arg1)][arg2].field_640) = 0
                uint64(tokenGrantsCount[address(arg1)][arg2].field_512) = uint64(tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_0)
                uint64(tokenGrantsCount[address(arg1)][arg2].field_576) = uint64(tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_0)
                uint128(tokenGrantsCount[address(arg1)][arg2].field_640) = uint64(tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_0)
                uint64(tokenGrantsCount[address(arg1)][arg2].field_704) = 0
                uint64(tokenGrantsCount[address(arg1)][arg2].field_704) = 0
            uint256(tokenGrantsCount[address(arg1)].field_0)--
            if not uint256(tokenGrantsCount[address(arg1)].field_0) <= uint256(tokenGrantsCount[address(arg1)].field_0) - 1:
                idx = (3 * uint256(tokenGrantsCount[address(arg1)].field_0)) - 3
                while 3 * uint256(tokenGrantsCount[address(arg1)].field_0) > idx:
                    tokenGrantsCount[address(arg1)][idx].field_0 = 0
                    uint256(tokenGrantsCount[address(arg1)][idx].field_256) = 0
                    Mask(192, 0, tokenGrantsCount[address(arg1)][idx].field_512) = 0
                    idx = idx + 3
                    continue 
            require uint256(tokenGrantsCount[address(arg1)][arg2].field_256) - ((uint256(tokenGrantsCount[address(arg1)][arg2].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) - (uint64(tokenGrantsCount[address(arg1)][arg2].field_640) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) / uint64(tokenGrantsCount[address(arg1)][arg2].field_576) - uint64(tokenGrantsCount[address(arg1)][arg2].field_640) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(arg1)][arg2].field_256) * uint64(tokenGrantsCount[address(arg1)][arg2].field_512)) + ((uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) - (uint64(tokenGrantsCount[address(arg1)][arg2].field_640) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) / uint64(tokenGrantsCount[address(arg1)][arg2].field_576) - uint64(tokenGrantsCount[address(arg1)][arg2].field_640) * uint64(tokenGrantsCount[address(arg1)][arg2].field_512)) / uint64(tokenGrantsCount[address(arg1)][arg2].field_576) - uint64(tokenGrantsCount[address(arg1)][arg2].field_512)) - ((uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) - (uint64(tokenGrantsCount[address(arg1)][arg2].field_640) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) / uint64(tokenGrantsCount[address(arg1)][arg2].field_576) - uint64(tokenGrantsCount[address(arg1)][arg2].field_640)) + balanceOf[address(msg.sender)] >= balanceOf[address(msg.sender)]
            balanceOf[address(msg.sender)] = uint256(tokenGrantsCount[address(arg1)][arg2].field_256) - ((uint256(tokenGrantsCount[address(arg1)][arg2].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) - (uint64(tokenGrantsCount[address(arg1)][arg2].field_640) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) / uint64(tokenGrantsCount[address(arg1)][arg2].field_576) - uint64(tokenGrantsCount[address(arg1)][arg2].field_640) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(arg1)][arg2].field_256) * uint64(tokenGrantsCount[address(arg1)][arg2].field_512)) + ((uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) - (uint64(tokenGrantsCount[address(arg1)][arg2].field_640) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) / uint64(tokenGrantsCount[address(arg1)][arg2].field_576) - uint64(tokenGrantsCount[address(arg1)][arg2].field_640) * uint64(tokenGrantsCount[address(arg1)][arg2].field_512)) / uint64(tokenGrantsCount[address(arg1)][arg2].field_576) - uint64(tokenGrantsCount[address(arg1)][arg2].field_512)) - ((uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) - (uint64(tokenGrantsCount[address(arg1)][arg2].field_640) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) / uint64(tokenGrantsCount[address(arg1)][arg2].field_576) - uint64(tokenGrantsCount[address(arg1)][arg2].field_640)) + balanceOf[address(msg.sender)]
            require uint256(tokenGrantsCount[address(arg1)][arg2].field_256) - ((uint256(tokenGrantsCount[address(arg1)][arg2].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) - (uint64(tokenGrantsCount[address(arg1)][arg2].field_640) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) / uint64(tokenGrantsCount[address(arg1)][arg2].field_576) - uint64(tokenGrantsCount[address(arg1)][arg2].field_640) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(arg1)][arg2].field_256) * uint64(tokenGrantsCount[address(arg1)][arg2].field_512)) + ((uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) - (uint64(tokenGrantsCount[address(arg1)][arg2].field_640) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) / uint64(tokenGrantsCount[address(arg1)][arg2].field_576) - uint64(tokenGrantsCount[address(arg1)][arg2].field_640) * uint64(tokenGrantsCount[address(arg1)][arg2].field_512)) / uint64(tokenGrantsCount[address(arg1)][arg2].field_576) - uint64(tokenGrantsCount[address(arg1)][arg2].field_512)) - ((uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) - (uint64(tokenGrantsCount[address(arg1)][arg2].field_640) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) / uint64(tokenGrantsCount[address(arg1)][arg2].field_576) - uint64(tokenGrantsCount[address(arg1)][arg2].field_640)) <= balanceOf[arg1]
            balanceOf[address(arg1)] = balanceOf[arg1] - uint256(tokenGrantsCount[address(arg1)][arg2].field_256) + ((uint256(tokenGrantsCount[address(arg1)][arg2].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) - (uint64(tokenGrantsCount[address(arg1)][arg2].field_640) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) / uint64(tokenGrantsCount[address(arg1)][arg2].field_576) - uint64(tokenGrantsCount[address(arg1)][arg2].field_640) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(arg1)][arg2].field_256) * uint64(tokenGrantsCount[address(arg1)][arg2].field_512)) + ((uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) - (uint64(tokenGrantsCount[address(arg1)][arg2].field_640) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) / uint64(tokenGrantsCount[address(arg1)][arg2].field_576) - uint64(tokenGrantsCount[address(arg1)][arg2].field_640) * uint64(tokenGrantsCount[address(arg1)][arg2].field_512)) / uint64(tokenGrantsCount[address(arg1)][arg2].field_576) - uint64(tokenGrantsCount[address(arg1)][arg2].field_512)) + ((uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) - (uint64(tokenGrantsCount[address(arg1)][arg2].field_640) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) / uint64(tokenGrantsCount[address(arg1)][arg2].field_576) - uint64(tokenGrantsCount[address(arg1)][arg2].field_640))
            emit Transfer((uint256(tokenGrantsCount[address(arg1)][arg2].field_256) - ((uint256(tokenGrantsCount[address(arg1)][arg2].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) - (uint64(tokenGrantsCount[address(arg1)][arg2].field_640) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) / uint64(tokenGrantsCount[address(arg1)][arg2].field_576) - uint64(tokenGrantsCount[address(arg1)][arg2].field_640) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(arg1)][arg2].field_256) * uint64(tokenGrantsCount[address(arg1)][arg2].field_512)) + ((uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) - (uint64(tokenGrantsCount[address(arg1)][arg2].field_640) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) / uint64(tokenGrantsCount[address(arg1)][arg2].field_576) - uint64(tokenGrantsCount[address(arg1)][arg2].field_640) * uint64(tokenGrantsCount[address(arg1)][arg2].field_512)) / uint64(tokenGrantsCount[address(arg1)][arg2].field_576) - uint64(tokenGrantsCount[address(arg1)][arg2].field_512)) - ((uint64(tokenGrantsCount[address(arg1)][arg2].field_512) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) - (uint64(tokenGrantsCount[address(arg1)][arg2].field_640) * uint256(tokenGrantsCount[address(arg1)][arg2].field_256)) / uint64(tokenGrantsCount[address(arg1)][arg2].field_576) - uint64(tokenGrantsCount[address(arg1)][arg2].field_640))), arg1, msg.sender);
}

function revokeAllTokenGrants(address arg1) payable {
    mem[64] = 96
    require not msg.value
    idx = 0
    while idx < uint256(tokenGrantsCount[address(arg1)].field_0):
        mem[32] = 3
        require 0 < uint256(tokenGrantsCount[address(arg1)].field_0)
        mem[0] = sha3(address(arg1), 3)
        require tokenGrantsCount[address(arg1)].field_0 == msg.sender
        _227 = mem[64]
        mem[64] = mem[64] + 160
        mem[_227] = tokenGrantsCount[address(arg1)].field_0
        mem[_227 + 32] = uint256(tokenGrantsCount[address(arg1)].field_256)
        mem[_227 + 64] = uint64(tokenGrantsCount[address(arg1)].field_512)
        mem[_227 + 96] = uint64(tokenGrantsCount[address(arg1)].field_576)
        mem[_227 + 128] = uint64(tokenGrantsCount[address(arg1)].field_640)
        if uint64(block.timestamp) < uint64(tokenGrantsCount[address(arg1)].field_512):
            require 0 <= uint256(tokenGrantsCount[address(arg1)].field_256)
            require 0 < uint256(tokenGrantsCount[address(arg1)].field_0)
            tokenGrantsCount[address(arg1)].field_0 = 0
            uint256(tokenGrantsCount[address(arg1)].field_256) = 0
            Mask(192, 0, tokenGrantsCount[address(arg1)].field_512) = 0
            if 0 < uint256(tokenGrantsCount[address(arg1)].field_0) - 1:
                require uint256(tokenGrantsCount[address(arg1)].field_0) - 1 < uint256(tokenGrantsCount[address(arg1)].field_0)
                require 0 < uint256(tokenGrantsCount[address(arg1)].field_0)
                tokenGrantsCount[address(arg1)].field_0 = tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_0
                uint256(tokenGrantsCount[address(arg1)].field_256) = uint256(tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_0)
                uint64(tokenGrantsCount[address(arg1)].field_512) = uint64(tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_0)
                uint64(tokenGrantsCount[address(arg1)].field_512) = uint64(tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_0)
                Mask(192, 0, tokenGrantsCount[address(arg1)].field_576) = uint64(tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_0)
                uint128(tokenGrantsCount[address(arg1)].field_640) = 0
                uint64(tokenGrantsCount[address(arg1)].field_512) = uint64(tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_0)
                uint64(tokenGrantsCount[address(arg1)].field_576) = uint64(tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_0)
                uint128(tokenGrantsCount[address(arg1)].field_640) = uint64(tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_0)
                uint64(tokenGrantsCount[address(arg1)].field_704) = 0
                uint64(tokenGrantsCount[address(arg1)].field_704) = 0
            uint256(tokenGrantsCount[address(arg1)].field_0)--
            if not uint256(tokenGrantsCount[address(arg1)].field_0) <= uint256(tokenGrantsCount[address(arg1)].field_0) - 1:
                s = sha3(sha3(address(arg1), 3)) + (3 * uint256(tokenGrantsCount[address(arg1)].field_0)) - 3
                while sha3(sha3(address(arg1), 3)) + (3 * uint256(tokenGrantsCount[address(arg1)].field_0)) > s:
                    stor[s] = 0
                    balanceOf[s] = 0
                    Mask(192, 0, allowance[s]) = 0
                    s = s + 3
                    continue 
            require uint256(tokenGrantsCount[address(arg1)].field_256) + balanceOf[address(msg.sender)] >= balanceOf[address(msg.sender)]
            balanceOf[address(msg.sender)] += uint256(tokenGrantsCount[address(arg1)].field_256)
            require uint256(tokenGrantsCount[address(arg1)].field_256) <= balanceOf[arg1]
            mem[0] = arg1
            mem[32] = 1
            balanceOf[address(arg1)] = balanceOf[arg1] - uint256(tokenGrantsCount[address(arg1)].field_256)
            mem[mem[64]] = uint256(tokenGrantsCount[address(arg1)].field_256)
            emit Transfer(uint256(tokenGrantsCount[address(arg1)].field_256), arg1, msg.sender);
        else:
            if uint64(block.timestamp) >= uint64(tokenGrantsCount[address(arg1)].field_576):
                require uint256(tokenGrantsCount[address(arg1)].field_256) <= uint256(tokenGrantsCount[address(arg1)].field_256)
                require 0 < uint256(tokenGrantsCount[address(arg1)].field_0)
                tokenGrantsCount[address(arg1)].field_0 = 0
                uint256(tokenGrantsCount[address(arg1)].field_256) = 0
                Mask(192, 0, tokenGrantsCount[address(arg1)].field_512) = 0
                if 0 < uint256(tokenGrantsCount[address(arg1)].field_0) - 1:
                    require uint256(tokenGrantsCount[address(arg1)].field_0) - 1 < uint256(tokenGrantsCount[address(arg1)].field_0)
                    require 0 < uint256(tokenGrantsCount[address(arg1)].field_0)
                    tokenGrantsCount[address(arg1)].field_0 = tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_0
                    uint256(tokenGrantsCount[address(arg1)].field_256) = uint256(tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_0)
                    uint64(tokenGrantsCount[address(arg1)].field_512) = uint64(tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_0)
                    uint64(tokenGrantsCount[address(arg1)].field_512) = uint64(tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_0)
                    Mask(192, 0, tokenGrantsCount[address(arg1)].field_576) = uint64(tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_0)
                    uint128(tokenGrantsCount[address(arg1)].field_640) = 0
                    uint64(tokenGrantsCount[address(arg1)].field_512) = uint64(tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_0)
                    uint64(tokenGrantsCount[address(arg1)].field_576) = uint64(tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_0)
                    uint128(tokenGrantsCount[address(arg1)].field_640) = uint64(tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_0)
                    uint64(tokenGrantsCount[address(arg1)].field_704) = 0
                    uint64(tokenGrantsCount[address(arg1)].field_704) = 0
                uint256(tokenGrantsCount[address(arg1)].field_0)--
                if not uint256(tokenGrantsCount[address(arg1)].field_0) <= uint256(tokenGrantsCount[address(arg1)].field_0) - 1:
                    s = sha3(sha3(address(arg1), 3)) + (3 * uint256(tokenGrantsCount[address(arg1)].field_0)) - 3
                    while sha3(sha3(address(arg1), 3)) + (3 * uint256(tokenGrantsCount[address(arg1)].field_0)) > s:
                        stor[s] = 0
                        balanceOf[s] = 0
                        Mask(192, 0, allowance[s]) = 0
                        s = s + 3
                        continue 
                require balanceOf[address(msg.sender)] >= balanceOf[address(msg.sender)]
                require 0 <= balanceOf[arg1]
                mem[0] = arg1
                mem[32] = 1
                balanceOf[address(arg1)] = balanceOf[arg1]
                mem[mem[64]] = 0
                emit Transfer(0, arg1, msg.sender);
            else:
                require uint64(tokenGrantsCount[address(arg1)].field_512) <= uint64(tokenGrantsCount[address(arg1)].field_576)
                require uint64(tokenGrantsCount[address(arg1)].field_512) <= uint64(tokenGrantsCount[address(arg1)].field_512)
                if uint256(tokenGrantsCount[address(arg1)].field_256):
                    require uint256(tokenGrantsCount[address(arg1)].field_256)
                    require (uint64(tokenGrantsCount[address(arg1)].field_512) * uint256(tokenGrantsCount[address(arg1)].field_256)) - (uint64(tokenGrantsCount[address(arg1)].field_512) * uint256(tokenGrantsCount[address(arg1)].field_256)) / uint256(tokenGrantsCount[address(arg1)].field_256) == uint64(tokenGrantsCount[address(arg1)].field_512) - uint64(tokenGrantsCount[address(arg1)].field_512)
                require uint64(tokenGrantsCount[address(arg1)].field_576) - uint64(tokenGrantsCount[address(arg1)].field_512)
                require (uint64(tokenGrantsCount[address(arg1)].field_512) * uint256(tokenGrantsCount[address(arg1)].field_256)) - (uint64(tokenGrantsCount[address(arg1)].field_512) * uint256(tokenGrantsCount[address(arg1)].field_256)) / uint64(tokenGrantsCount[address(arg1)].field_512) - uint64(tokenGrantsCount[address(arg1)].field_512) <= uint256(tokenGrantsCount[address(arg1)].field_256)
                require uint64(tokenGrantsCount[address(arg1)].field_512) <= uint64(tokenGrantsCount[address(arg1)].field_512)
                require uint64(tokenGrantsCount[address(arg1)].field_512) <= uint64(block.timestamp)
                if uint256(tokenGrantsCount[address(arg1)].field_256) - ((uint64(tokenGrantsCount[address(arg1)].field_512) * uint256(tokenGrantsCount[address(arg1)].field_256)) - (uint64(tokenGrantsCount[address(arg1)].field_512) * uint256(tokenGrantsCount[address(arg1)].field_256)) / uint64(tokenGrantsCount[address(arg1)].field_512) - uint64(tokenGrantsCount[address(arg1)].field_512)):
                    require uint256(tokenGrantsCount[address(arg1)].field_256) - ((uint64(tokenGrantsCount[address(arg1)].field_512) * uint256(tokenGrantsCount[address(arg1)].field_256)) - (uint64(tokenGrantsCount[address(arg1)].field_512) * uint256(tokenGrantsCount[address(arg1)].field_256)) / uint64(tokenGrantsCount[address(arg1)].field_512) - uint64(tokenGrantsCount[address(arg1)].field_512))
                    require (uint256(tokenGrantsCount[address(arg1)].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(arg1)].field_512) * uint256(tokenGrantsCount[address(arg1)].field_256)) - (uint64(tokenGrantsCount[address(arg1)].field_512) * uint256(tokenGrantsCount[address(arg1)].field_256)) / uint64(tokenGrantsCount[address(arg1)].field_512) - uint64(tokenGrantsCount[address(arg1)].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(arg1)].field_256) * uint64(tokenGrantsCount[address(arg1)].field_512)) + ((uint64(tokenGrantsCount[address(arg1)].field_512) * uint256(tokenGrantsCount[address(arg1)].field_256)) - (uint64(tokenGrantsCount[address(arg1)].field_512) * uint256(tokenGrantsCount[address(arg1)].field_256)) / uint64(tokenGrantsCount[address(arg1)].field_512) - uint64(tokenGrantsCount[address(arg1)].field_512) * uint64(tokenGrantsCount[address(arg1)].field_512)) / uint256(tokenGrantsCount[address(arg1)].field_256) - ((uint64(tokenGrantsCount[address(arg1)].field_512) * uint256(tokenGrantsCount[address(arg1)].field_256)) - (uint64(tokenGrantsCount[address(arg1)].field_512) * uint256(tokenGrantsCount[address(arg1)].field_256)) / uint64(tokenGrantsCount[address(arg1)].field_512) - uint64(tokenGrantsCount[address(arg1)].field_512)) == uint64(block.timestamp) - uint64(tokenGrantsCount[address(arg1)].field_512)
                require uint64(tokenGrantsCount[address(arg1)].field_512) - uint64(tokenGrantsCount[address(arg1)].field_512)
                require ((uint256(tokenGrantsCount[address(arg1)].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(arg1)].field_512) * uint256(tokenGrantsCount[address(arg1)].field_256)) - (uint64(tokenGrantsCount[address(arg1)].field_512) * uint256(tokenGrantsCount[address(arg1)].field_256)) / uint64(tokenGrantsCount[address(arg1)].field_512) - uint64(tokenGrantsCount[address(arg1)].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(arg1)].field_256) * uint64(tokenGrantsCount[address(arg1)].field_512)) + ((uint64(tokenGrantsCount[address(arg1)].field_512) * uint256(tokenGrantsCount[address(arg1)].field_256)) - (uint64(tokenGrantsCount[address(arg1)].field_512) * uint256(tokenGrantsCount[address(arg1)].field_256)) / uint64(tokenGrantsCount[address(arg1)].field_512) - uint64(tokenGrantsCount[address(arg1)].field_512) * uint64(tokenGrantsCount[address(arg1)].field_512)) / uint64(tokenGrantsCount[address(arg1)].field_512) - uint64(tokenGrantsCount[address(arg1)].field_512)) + ((uint64(tokenGrantsCount[address(arg1)].field_512) * uint256(tokenGrantsCount[address(arg1)].field_256)) - (uint64(tokenGrantsCount[address(arg1)].field_512) * uint256(tokenGrantsCount[address(arg1)].field_256)) / uint64(tokenGrantsCount[address(arg1)].field_512) - uint64(tokenGrantsCount[address(arg1)].field_512)) >= (uint64(tokenGrantsCount[address(arg1)].field_512) * uint256(tokenGrantsCount[address(arg1)].field_256)) - (uint64(tokenGrantsCount[address(arg1)].field_512) * uint256(tokenGrantsCount[address(arg1)].field_256)) / uint64(tokenGrantsCount[address(arg1)].field_512) - uint64(tokenGrantsCount[address(arg1)].field_512)
                require ((uint256(tokenGrantsCount[address(arg1)].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(arg1)].field_512) * uint256(tokenGrantsCount[address(arg1)].field_256)) - (uint64(tokenGrantsCount[address(arg1)].field_512) * uint256(tokenGrantsCount[address(arg1)].field_256)) / uint64(tokenGrantsCount[address(arg1)].field_512) - uint64(tokenGrantsCount[address(arg1)].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(arg1)].field_256) * uint64(tokenGrantsCount[address(arg1)].field_512)) + ((uint64(tokenGrantsCount[address(arg1)].field_512) * uint256(tokenGrantsCount[address(arg1)].field_256)) - (uint64(tokenGrantsCount[address(arg1)].field_512) * uint256(tokenGrantsCount[address(arg1)].field_256)) / uint64(tokenGrantsCount[address(arg1)].field_512) - uint64(tokenGrantsCount[address(arg1)].field_512) * uint64(tokenGrantsCount[address(arg1)].field_512)) / uint64(tokenGrantsCount[address(arg1)].field_512) - uint64(tokenGrantsCount[address(arg1)].field_512)) + ((uint64(tokenGrantsCount[address(arg1)].field_512) * uint256(tokenGrantsCount[address(arg1)].field_256)) - (uint64(tokenGrantsCount[address(arg1)].field_512) * uint256(tokenGrantsCount[address(arg1)].field_256)) / uint64(tokenGrantsCount[address(arg1)].field_512) - uint64(tokenGrantsCount[address(arg1)].field_512)) <= uint256(tokenGrantsCount[address(arg1)].field_256)
                require 0 < uint256(tokenGrantsCount[address(arg1)].field_0)
                tokenGrantsCount[address(arg1)].field_0 = 0
                uint256(tokenGrantsCount[address(arg1)].field_256) = 0
                Mask(192, 0, tokenGrantsCount[address(arg1)].field_512) = 0
                if 0 < uint256(tokenGrantsCount[address(arg1)].field_0) - 1:
                    require uint256(tokenGrantsCount[address(arg1)].field_0) - 1 < uint256(tokenGrantsCount[address(arg1)].field_0)
                    require 0 < uint256(tokenGrantsCount[address(arg1)].field_0)
                    tokenGrantsCount[address(arg1)].field_0 = tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_0
                    uint256(tokenGrantsCount[address(arg1)].field_256) = uint256(tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_0)
                    uint64(tokenGrantsCount[address(arg1)].field_512) = uint64(tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_0)
                    uint64(tokenGrantsCount[address(arg1)].field_512) = uint64(tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_0)
                    Mask(192, 0, tokenGrantsCount[address(arg1)].field_576) = uint64(tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_0)
                    uint128(tokenGrantsCount[address(arg1)].field_640) = 0
                    uint64(tokenGrantsCount[address(arg1)].field_512) = uint64(tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_0)
                    uint64(tokenGrantsCount[address(arg1)].field_576) = uint64(tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_0)
                    uint128(tokenGrantsCount[address(arg1)].field_640) = uint64(tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_0)
                    uint64(tokenGrantsCount[address(arg1)].field_704) = 0
                    uint64(tokenGrantsCount[address(arg1)].field_704) = 0
                uint256(tokenGrantsCount[address(arg1)].field_0)--
                if not uint256(tokenGrantsCount[address(arg1)].field_0) <= uint256(tokenGrantsCount[address(arg1)].field_0) - 1:
                    s = sha3(sha3(address(arg1), 3)) + (3 * uint256(tokenGrantsCount[address(arg1)].field_0)) - 3
                    while sha3(sha3(address(arg1), 3)) + (3 * uint256(tokenGrantsCount[address(arg1)].field_0)) > s:
                        stor[s] = 0
                        balanceOf[s] = 0
                        Mask(192, 0, allowance[s]) = 0
                        s = s + 3
                        continue 
                require uint256(tokenGrantsCount[address(arg1)].field_256) - ((uint256(tokenGrantsCount[address(arg1)].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(arg1)].field_512) * uint256(tokenGrantsCount[address(arg1)].field_256)) - (uint64(tokenGrantsCount[address(arg1)].field_640) * uint256(tokenGrantsCount[address(arg1)].field_256)) / uint64(tokenGrantsCount[address(arg1)].field_576) - uint64(tokenGrantsCount[address(arg1)].field_640) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(arg1)].field_256) * uint64(tokenGrantsCount[address(arg1)].field_512)) + ((uint64(tokenGrantsCount[address(arg1)].field_512) * uint256(tokenGrantsCount[address(arg1)].field_256)) - (uint64(tokenGrantsCount[address(arg1)].field_640) * uint256(tokenGrantsCount[address(arg1)].field_256)) / uint64(tokenGrantsCount[address(arg1)].field_576) - uint64(tokenGrantsCount[address(arg1)].field_640) * uint64(tokenGrantsCount[address(arg1)].field_512)) / uint64(tokenGrantsCount[address(arg1)].field_576) - uint64(tokenGrantsCount[address(arg1)].field_512)) - ((uint64(tokenGrantsCount[address(arg1)].field_512) * uint256(tokenGrantsCount[address(arg1)].field_256)) - (uint64(tokenGrantsCount[address(arg1)].field_640) * uint256(tokenGrantsCount[address(arg1)].field_256)) / uint64(tokenGrantsCount[address(arg1)].field_576) - uint64(tokenGrantsCount[address(arg1)].field_640)) + balanceOf[address(msg.sender)] >= balanceOf[address(msg.sender)]
                balanceOf[address(msg.sender)] = uint256(tokenGrantsCount[address(arg1)].field_256) - ((uint256(tokenGrantsCount[address(arg1)].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(arg1)].field_512) * uint256(tokenGrantsCount[address(arg1)].field_256)) - (uint64(tokenGrantsCount[address(arg1)].field_640) * uint256(tokenGrantsCount[address(arg1)].field_256)) / uint64(tokenGrantsCount[address(arg1)].field_576) - uint64(tokenGrantsCount[address(arg1)].field_640) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(arg1)].field_256) * uint64(tokenGrantsCount[address(arg1)].field_512)) + ((uint64(tokenGrantsCount[address(arg1)].field_512) * uint256(tokenGrantsCount[address(arg1)].field_256)) - (uint64(tokenGrantsCount[address(arg1)].field_640) * uint256(tokenGrantsCount[address(arg1)].field_256)) / uint64(tokenGrantsCount[address(arg1)].field_576) - uint64(tokenGrantsCount[address(arg1)].field_640) * uint64(tokenGrantsCount[address(arg1)].field_512)) / uint64(tokenGrantsCount[address(arg1)].field_576) - uint64(tokenGrantsCount[address(arg1)].field_512)) - ((uint64(tokenGrantsCount[address(arg1)].field_512) * uint256(tokenGrantsCount[address(arg1)].field_256)) - (uint64(tokenGrantsCount[address(arg1)].field_640) * uint256(tokenGrantsCount[address(arg1)].field_256)) / uint64(tokenGrantsCount[address(arg1)].field_576) - uint64(tokenGrantsCount[address(arg1)].field_640)) + balanceOf[address(msg.sender)]
                require uint256(tokenGrantsCount[address(arg1)].field_256) - ((uint256(tokenGrantsCount[address(arg1)].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(arg1)].field_512) * uint256(tokenGrantsCount[address(arg1)].field_256)) - (uint64(tokenGrantsCount[address(arg1)].field_640) * uint256(tokenGrantsCount[address(arg1)].field_256)) / uint64(tokenGrantsCount[address(arg1)].field_576) - uint64(tokenGrantsCount[address(arg1)].field_640) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(arg1)].field_256) * uint64(tokenGrantsCount[address(arg1)].field_512)) + ((uint64(tokenGrantsCount[address(arg1)].field_512) * uint256(tokenGrantsCount[address(arg1)].field_256)) - (uint64(tokenGrantsCount[address(arg1)].field_640) * uint256(tokenGrantsCount[address(arg1)].field_256)) / uint64(tokenGrantsCount[address(arg1)].field_576) - uint64(tokenGrantsCount[address(arg1)].field_640) * uint64(tokenGrantsCount[address(arg1)].field_512)) / uint64(tokenGrantsCount[address(arg1)].field_576) - uint64(tokenGrantsCount[address(arg1)].field_512)) - ((uint64(tokenGrantsCount[address(arg1)].field_512) * uint256(tokenGrantsCount[address(arg1)].field_256)) - (uint64(tokenGrantsCount[address(arg1)].field_640) * uint256(tokenGrantsCount[address(arg1)].field_256)) / uint64(tokenGrantsCount[address(arg1)].field_576) - uint64(tokenGrantsCount[address(arg1)].field_640)) <= balanceOf[arg1]
                mem[0] = arg1
                mem[32] = 1
                balanceOf[address(arg1)] = balanceOf[arg1] - uint256(tokenGrantsCount[address(arg1)].field_256) + ((uint256(tokenGrantsCount[address(arg1)].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(arg1)].field_512) * uint256(tokenGrantsCount[address(arg1)].field_256)) - (uint64(tokenGrantsCount[address(arg1)].field_640) * uint256(tokenGrantsCount[address(arg1)].field_256)) / uint64(tokenGrantsCount[address(arg1)].field_576) - uint64(tokenGrantsCount[address(arg1)].field_640) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(arg1)].field_256) * uint64(tokenGrantsCount[address(arg1)].field_512)) + ((uint64(tokenGrantsCount[address(arg1)].field_512) * uint256(tokenGrantsCount[address(arg1)].field_256)) - (uint64(tokenGrantsCount[address(arg1)].field_640) * uint256(tokenGrantsCount[address(arg1)].field_256)) / uint64(tokenGrantsCount[address(arg1)].field_576) - uint64(tokenGrantsCount[address(arg1)].field_640) * uint64(tokenGrantsCount[address(arg1)].field_512)) / uint64(tokenGrantsCount[address(arg1)].field_576) - uint64(tokenGrantsCount[address(arg1)].field_512)) + ((uint64(tokenGrantsCount[address(arg1)].field_512) * uint256(tokenGrantsCount[address(arg1)].field_256)) - (uint64(tokenGrantsCount[address(arg1)].field_640) * uint256(tokenGrantsCount[address(arg1)].field_256)) / uint64(tokenGrantsCount[address(arg1)].field_576) - uint64(tokenGrantsCount[address(arg1)].field_640))
                mem[mem[64]] = uint256(tokenGrantsCount[address(arg1)].field_256) - ((uint256(tokenGrantsCount[address(arg1)].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(arg1)].field_512) * uint256(tokenGrantsCount[address(arg1)].field_256)) - (uint64(tokenGrantsCount[address(arg1)].field_640) * uint256(tokenGrantsCount[address(arg1)].field_256)) / uint64(tokenGrantsCount[address(arg1)].field_576) - uint64(tokenGrantsCount[address(arg1)].field_640) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(arg1)].field_256) * uint64(tokenGrantsCount[address(arg1)].field_512)) + ((uint64(tokenGrantsCount[address(arg1)].field_512) * uint256(tokenGrantsCount[address(arg1)].field_256)) - (uint64(tokenGrantsCount[address(arg1)].field_640) * uint256(tokenGrantsCount[address(arg1)].field_256)) / uint64(tokenGrantsCount[address(arg1)].field_576) - uint64(tokenGrantsCount[address(arg1)].field_640) * uint64(tokenGrantsCount[address(arg1)].field_512)) / uint64(tokenGrantsCount[address(arg1)].field_576) - uint64(tokenGrantsCount[address(arg1)].field_512)) - ((uint64(tokenGrantsCount[address(arg1)].field_512) * uint256(tokenGrantsCount[address(arg1)].field_256)) - (uint64(tokenGrantsCount[address(arg1)].field_640) * uint256(tokenGrantsCount[address(arg1)].field_256)) / uint64(tokenGrantsCount[address(arg1)].field_576) - uint64(tokenGrantsCount[address(arg1)].field_640))
                emit Transfer((uint256(tokenGrantsCount[address(arg1)].field_256) - ((uint256(tokenGrantsCount[address(arg1)].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(arg1)].field_512) * uint256(tokenGrantsCount[address(arg1)].field_256)) - (uint64(tokenGrantsCount[address(arg1)].field_640) * uint256(tokenGrantsCount[address(arg1)].field_256)) / uint64(tokenGrantsCount[address(arg1)].field_576) - uint64(tokenGrantsCount[address(arg1)].field_640) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(arg1)].field_256) * uint64(tokenGrantsCount[address(arg1)].field_512)) + ((uint64(tokenGrantsCount[address(arg1)].field_512) * uint256(tokenGrantsCount[address(arg1)].field_256)) - (uint64(tokenGrantsCount[address(arg1)].field_640) * uint256(tokenGrantsCount[address(arg1)].field_256)) / uint64(tokenGrantsCount[address(arg1)].field_576) - uint64(tokenGrantsCount[address(arg1)].field_640) * uint64(tokenGrantsCount[address(arg1)].field_512)) / uint64(tokenGrantsCount[address(arg1)].field_576) - uint64(tokenGrantsCount[address(arg1)].field_512)) - ((uint64(tokenGrantsCount[address(arg1)].field_512) * uint256(tokenGrantsCount[address(arg1)].field_256)) - (uint64(tokenGrantsCount[address(arg1)].field_640) * uint256(tokenGrantsCount[address(arg1)].field_256)) / uint64(tokenGrantsCount[address(arg1)].field_576) - uint64(tokenGrantsCount[address(arg1)].field_640))), arg1, msg.sender);
        idx = idx + 1
        continue 
}

function transferFrom(address arg1, address arg2, uint256 arg3) payable {
    mem[64] = 96
    require not msg.value
    if transfersEnabled:
        s = 0
        idx = 0
        s = 0
        while idx < uint256(tokenGrantsCount[address(arg1)].field_0):
            mem[32] = 3
            require idx < uint256(tokenGrantsCount[address(arg1)].field_0)
            mem[0] = sha3(address(arg1), 3)
            _79 = mem[64]
            mem[64] = mem[64] + 160
            mem[_79] = tokenGrantsCount[address(arg1)][idx].field_0
            mem[_79 + 32] = uint256(tokenGrantsCount[address(arg1)][idx].field_256)
            mem[_79 + 64] = uint64(tokenGrantsCount[address(arg1)][idx].field_512)
            mem[_79 + 96] = uint64(tokenGrantsCount[address(arg1)][idx].field_576)
            mem[_79 + 128] = uint64(tokenGrantsCount[address(arg1)][idx].field_640)
            if uint64(block.timestamp) < uint64(tokenGrantsCount[address(arg1)][idx].field_512):
                require 0 <= uint256(tokenGrantsCount[address(arg1)][idx].field_256)
                require uint256(tokenGrantsCount[address(arg1)][idx].field_256) + s >= s
                s = uint256(tokenGrantsCount[address(arg1)][idx].field_256)
                idx = idx + 1
                s = uint256(tokenGrantsCount[address(arg1)][idx].field_256) + s
                continue 
            if uint64(block.timestamp) >= uint64(tokenGrantsCount[address(arg1)][idx].field_576):
                require uint256(tokenGrantsCount[address(arg1)][idx].field_256) <= uint256(tokenGrantsCount[address(arg1)][idx].field_256)
                require s >= s
                s = 0
                idx = idx + 1
                s = s
                continue 
            require uint64(tokenGrantsCount[address(arg1)][idx].field_512) <= uint64(tokenGrantsCount[address(arg1)][idx].field_576)
            require uint64(tokenGrantsCount[address(arg1)][idx].field_512) <= uint64(tokenGrantsCount[address(arg1)][idx].field_512)
            if uint256(tokenGrantsCount[address(arg1)][idx].field_256):
                require uint256(tokenGrantsCount[address(arg1)][idx].field_256)
                require (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint256(tokenGrantsCount[address(arg1)][idx].field_256) == uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512)
            require uint64(tokenGrantsCount[address(arg1)][idx].field_576) - uint64(tokenGrantsCount[address(arg1)][idx].field_512)
            require (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512) <= uint256(tokenGrantsCount[address(arg1)][idx].field_256)
            require uint64(tokenGrantsCount[address(arg1)][idx].field_512) <= uint64(tokenGrantsCount[address(arg1)][idx].field_512)
            require uint64(tokenGrantsCount[address(arg1)][idx].field_512) <= uint64(block.timestamp)
            if uint256(tokenGrantsCount[address(arg1)][idx].field_256) - ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512)):
                require uint256(tokenGrantsCount[address(arg1)][idx].field_256) - ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512))
                require (uint256(tokenGrantsCount[address(arg1)][idx].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(arg1)][idx].field_256) * uint64(tokenGrantsCount[address(arg1)][idx].field_512)) + ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint64(tokenGrantsCount[address(arg1)][idx].field_512)) / uint256(tokenGrantsCount[address(arg1)][idx].field_256) - ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512)) == uint64(block.timestamp) - uint64(tokenGrantsCount[address(arg1)][idx].field_512)
            require uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512)
            require ((uint256(tokenGrantsCount[address(arg1)][idx].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(arg1)][idx].field_256) * uint64(tokenGrantsCount[address(arg1)][idx].field_512)) + ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint64(tokenGrantsCount[address(arg1)][idx].field_512)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512)) + ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512)) >= (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512)
            require ((uint256(tokenGrantsCount[address(arg1)][idx].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(arg1)][idx].field_256) * uint64(tokenGrantsCount[address(arg1)][idx].field_512)) + ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint64(tokenGrantsCount[address(arg1)][idx].field_512)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512)) + ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512)) <= uint256(tokenGrantsCount[address(arg1)][idx].field_256)
            require uint256(tokenGrantsCount[address(arg1)][idx].field_256) - ((uint256(tokenGrantsCount[address(arg1)][idx].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(arg1)][idx].field_256) * uint64(tokenGrantsCount[address(arg1)][idx].field_512)) + ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint64(tokenGrantsCount[address(arg1)][idx].field_512)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512)) - ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512)) + s >= s
            s = uint256(tokenGrantsCount[address(arg1)][idx].field_256) - ((uint256(tokenGrantsCount[address(arg1)][idx].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(arg1)][idx].field_256) * uint64(tokenGrantsCount[address(arg1)][idx].field_512)) + ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint64(tokenGrantsCount[address(arg1)][idx].field_512)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512)) - ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512))
            idx = idx + 1
            s = uint256(tokenGrantsCount[address(arg1)][idx].field_256) - ((uint256(tokenGrantsCount[address(arg1)][idx].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(arg1)][idx].field_256) * uint64(tokenGrantsCount[address(arg1)][idx].field_512)) + ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint64(tokenGrantsCount[address(arg1)][idx].field_512)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512)) - ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512)) + s
            continue 
    else:
        require minterAddress == msg.sender
        s = 0
        idx = 0
        s = 0
        while idx < uint256(tokenGrantsCount[address(arg1)].field_0):
            mem[32] = 3
            require idx < uint256(tokenGrantsCount[address(arg1)].field_0)
            mem[0] = sha3(address(arg1), 3)
            _80 = mem[64]
            mem[64] = mem[64] + 160
            mem[_80] = tokenGrantsCount[address(arg1)][idx].field_0
            mem[_80 + 32] = uint256(tokenGrantsCount[address(arg1)][idx].field_256)
            mem[_80 + 64] = uint64(tokenGrantsCount[address(arg1)][idx].field_512)
            mem[_80 + 96] = uint64(tokenGrantsCount[address(arg1)][idx].field_576)
            mem[_80 + 128] = uint64(tokenGrantsCount[address(arg1)][idx].field_640)
            if uint64(block.timestamp) < uint64(tokenGrantsCount[address(arg1)][idx].field_512):
                require 0 <= uint256(tokenGrantsCount[address(arg1)][idx].field_256)
                require uint256(tokenGrantsCount[address(arg1)][idx].field_256) + s >= s
                s = uint256(tokenGrantsCount[address(arg1)][idx].field_256)
                idx = idx + 1
                s = uint256(tokenGrantsCount[address(arg1)][idx].field_256) + s
                continue 
            if uint64(block.timestamp) >= uint64(tokenGrantsCount[address(arg1)][idx].field_576):
                require uint256(tokenGrantsCount[address(arg1)][idx].field_256) <= uint256(tokenGrantsCount[address(arg1)][idx].field_256)
                require s >= s
                s = 0
                idx = idx + 1
                s = s
                continue 
            require uint64(tokenGrantsCount[address(arg1)][idx].field_512) <= uint64(tokenGrantsCount[address(arg1)][idx].field_576)
            require uint64(tokenGrantsCount[address(arg1)][idx].field_512) <= uint64(tokenGrantsCount[address(arg1)][idx].field_512)
            if uint256(tokenGrantsCount[address(arg1)][idx].field_256):
                require uint256(tokenGrantsCount[address(arg1)][idx].field_256)
                require (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint256(tokenGrantsCount[address(arg1)][idx].field_256) == uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512)
            require uint64(tokenGrantsCount[address(arg1)][idx].field_576) - uint64(tokenGrantsCount[address(arg1)][idx].field_512)
            require (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512) <= uint256(tokenGrantsCount[address(arg1)][idx].field_256)
            require uint64(tokenGrantsCount[address(arg1)][idx].field_512) <= uint64(tokenGrantsCount[address(arg1)][idx].field_512)
            require uint64(tokenGrantsCount[address(arg1)][idx].field_512) <= uint64(block.timestamp)
            if uint256(tokenGrantsCount[address(arg1)][idx].field_256) - ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512)):
                require uint256(tokenGrantsCount[address(arg1)][idx].field_256) - ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512))
                require (uint256(tokenGrantsCount[address(arg1)][idx].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(arg1)][idx].field_256) * uint64(tokenGrantsCount[address(arg1)][idx].field_512)) + ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint64(tokenGrantsCount[address(arg1)][idx].field_512)) / uint256(tokenGrantsCount[address(arg1)][idx].field_256) - ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512)) == uint64(block.timestamp) - uint64(tokenGrantsCount[address(arg1)][idx].field_512)
            require uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512)
            require ((uint256(tokenGrantsCount[address(arg1)][idx].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(arg1)][idx].field_256) * uint64(tokenGrantsCount[address(arg1)][idx].field_512)) + ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint64(tokenGrantsCount[address(arg1)][idx].field_512)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512)) + ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512)) >= (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512)
            require ((uint256(tokenGrantsCount[address(arg1)][idx].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(arg1)][idx].field_256) * uint64(tokenGrantsCount[address(arg1)][idx].field_512)) + ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint64(tokenGrantsCount[address(arg1)][idx].field_512)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512)) + ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512)) <= uint256(tokenGrantsCount[address(arg1)][idx].field_256)
            require uint256(tokenGrantsCount[address(arg1)][idx].field_256) - ((uint256(tokenGrantsCount[address(arg1)][idx].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(arg1)][idx].field_256) * uint64(tokenGrantsCount[address(arg1)][idx].field_512)) + ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint64(tokenGrantsCount[address(arg1)][idx].field_512)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512)) - ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512)) + s >= s
            s = uint256(tokenGrantsCount[address(arg1)][idx].field_256) - ((uint256(tokenGrantsCount[address(arg1)][idx].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(arg1)][idx].field_256) * uint64(tokenGrantsCount[address(arg1)][idx].field_512)) + ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint64(tokenGrantsCount[address(arg1)][idx].field_512)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512)) - ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512))
            idx = idx + 1
            s = uint256(tokenGrantsCount[address(arg1)][idx].field_256) - ((uint256(tokenGrantsCount[address(arg1)][idx].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(arg1)][idx].field_256) * uint64(tokenGrantsCount[address(arg1)][idx].field_512)) + ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint64(tokenGrantsCount[address(arg1)][idx].field_512)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512)) - ((uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) - (uint64(tokenGrantsCount[address(arg1)][idx].field_512) * uint256(tokenGrantsCount[address(arg1)][idx].field_256)) / uint64(tokenGrantsCount[address(arg1)][idx].field_512) - uint64(tokenGrantsCount[address(arg1)][idx].field_512)) + s
            continue 
    require s <= balanceOf[address(arg1)]
    if balanceOf[address(arg1)] - s < balanceOf[address(arg1)]:
        require arg3 <= balanceOf[address(arg1)] - s
    else:
        require arg3 <= balanceOf[address(arg1)]
    require calldata.size >= 100
    require arg3 + balanceOf[address(arg2)] >= balanceOf[address(arg2)]
    balanceOf[address(arg2)] += arg3
    require arg3 <= balanceOf[arg1]
    balanceOf[address(arg1)] = balanceOf[arg1] - arg3
    require arg3 <= uint256(allowance[address(arg1)][address(msg.sender)])
    uint256(allowance[address(arg1)][address(msg.sender)]) -= arg3
    emit Transfer(arg3, arg1, arg2);
}

function transfer(address arg1, uint256 arg2) payable {
    mem[64] = 96
    require not msg.value
    if transfersEnabled:
        s = 0
        idx = 0
        s = 0
        while idx < uint256(tokenGrantsCount[address(msg.sender)].field_0):
            mem[32] = 3
            require idx < uint256(tokenGrantsCount[address(msg.sender)].field_0)
            mem[0] = sha3(address(msg.sender), 3)
            _63 = mem[64]
            mem[64] = mem[64] + 160
            mem[_63] = tokenGrantsCount[address(msg.sender)][idx].field_0
            mem[_63 + 32] = uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)
            mem[_63 + 64] = uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)
            mem[_63 + 96] = uint64(tokenGrantsCount[address(msg.sender)][idx].field_576)
            mem[_63 + 128] = uint64(tokenGrantsCount[address(msg.sender)][idx].field_640)
            if uint64(block.timestamp) < uint64(tokenGrantsCount[address(msg.sender)][idx].field_512):
                require 0 <= uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)
                require uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) + s >= s
                s = uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)
                idx = idx + 1
                s = uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) + s
                continue 
            if uint64(block.timestamp) >= uint64(tokenGrantsCount[address(msg.sender)][idx].field_576):
                require uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) <= uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)
                require s >= s
                s = 0
                idx = idx + 1
                s = s
                continue 
            require uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) <= uint64(tokenGrantsCount[address(msg.sender)][idx].field_576)
            require uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) <= uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)
            if uint256(tokenGrantsCount[address(msg.sender)][idx].field_256):
                require uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)
                require (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) == uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)
            require uint64(tokenGrantsCount[address(msg.sender)][idx].field_576) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)
            require (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) <= uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)
            require uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) <= uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)
            require uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) <= uint64(block.timestamp)
            if uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)):
                require uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512))
                require (uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) / uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) == uint64(block.timestamp) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)
            require uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)
            require ((uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) >= (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)
            require ((uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) <= uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)
            require uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) - ((uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + s >= s
            s = uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) - ((uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512))
            idx = idx + 1
            s = uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) - ((uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + s
            continue 
    else:
        require minterAddress == msg.sender
        s = 0
        idx = 0
        s = 0
        while idx < uint256(tokenGrantsCount[address(msg.sender)].field_0):
            mem[32] = 3
            require idx < uint256(tokenGrantsCount[address(msg.sender)].field_0)
            mem[0] = sha3(address(msg.sender), 3)
            _64 = mem[64]
            mem[64] = mem[64] + 160
            mem[_64] = tokenGrantsCount[address(msg.sender)][idx].field_0
            mem[_64 + 32] = uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)
            mem[_64 + 64] = uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)
            mem[_64 + 96] = uint64(tokenGrantsCount[address(msg.sender)][idx].field_576)
            mem[_64 + 128] = uint64(tokenGrantsCount[address(msg.sender)][idx].field_640)
            if uint64(block.timestamp) < uint64(tokenGrantsCount[address(msg.sender)][idx].field_512):
                require 0 <= uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)
                require uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) + s >= s
                s = uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)
                idx = idx + 1
                s = uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) + s
                continue 
            if uint64(block.timestamp) >= uint64(tokenGrantsCount[address(msg.sender)][idx].field_576):
                require uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) <= uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)
                require s >= s
                s = 0
                idx = idx + 1
                s = s
                continue 
            require uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) <= uint64(tokenGrantsCount[address(msg.sender)][idx].field_576)
            require uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) <= uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)
            if uint256(tokenGrantsCount[address(msg.sender)][idx].field_256):
                require uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)
                require (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) == uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)
            require uint64(tokenGrantsCount[address(msg.sender)][idx].field_576) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)
            require (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) <= uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)
            require uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) <= uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)
            require uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) <= uint64(block.timestamp)
            if uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)):
                require uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512))
                require (uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) / uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) == uint64(block.timestamp) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)
            require uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)
            require ((uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) >= (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)
            require ((uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) <= uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)
            require uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) - ((uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + s >= s
            s = uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) - ((uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512))
            idx = idx + 1
            s = uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) - ((uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + s
            continue 
    require s <= balanceOf[address(msg.sender)]
    if balanceOf[address(msg.sender)] - s < balanceOf[address(msg.sender)]:
        require arg2 <= balanceOf[address(msg.sender)] - s
    else:
        require arg2 <= balanceOf[address(msg.sender)]
    require calldata.size >= 68
    require arg2 <= balanceOf[address(msg.sender)]
    balanceOf[address(msg.sender)] -= arg2
    require arg2 + balanceOf[arg1] >= balanceOf[arg1]
    balanceOf[address(arg1)] = arg2 + balanceOf[arg1]
    emit Transfer(arg2, msg.sender, arg1);
}

function grantVestedTokens(address arg1, uint256 arg2, uint64 arg3, uint64 arg4, uint64 arg5) {
    require arg4 >= arg3
    require arg5 >= arg3
    require arg5 >= arg4
    mem[64] = 416
    uint256(tokenGrantsCount[address(arg1)].field_0)++
    if not uint256(tokenGrantsCount[address(arg1)].field_0) > uint256(tokenGrantsCount[address(arg1)].field_0) + 1:
        tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_0 = msg.sender
        uint256(tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_256) = arg2
        uint64(tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_512) = arg4
        uint64(tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_576) = arg5
        uint64(tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_640) = arg3
        if transfersEnabled:
            s = 0
            idx = 0
            s = 0
            while idx < uint256(tokenGrantsCount[address(msg.sender)].field_0):
                mem[32] = 3
                require idx < uint256(tokenGrantsCount[address(msg.sender)].field_0)
                mem[0] = sha3(address(msg.sender), 3)
                _135 = mem[64]
                mem[64] = mem[64] + 160
                mem[_135] = tokenGrantsCount[address(msg.sender)][idx].field_0
                mem[_135 + 32] = uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)
                mem[_135 + 64] = uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)
                mem[_135 + 96] = uint64(tokenGrantsCount[address(msg.sender)][idx].field_576)
                mem[_135 + 128] = uint64(tokenGrantsCount[address(msg.sender)][idx].field_640)
                if uint64(block.timestamp) < uint64(tokenGrantsCount[address(msg.sender)][idx].field_512):
                    require 0 <= uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)
                    require uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) + s >= s
                    s = uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)
                    idx = idx + 1
                    s = uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) + s
                    continue 
                if uint64(block.timestamp) >= uint64(tokenGrantsCount[address(msg.sender)][idx].field_576):
                    require uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) <= uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)
                    require s >= s
                    s = 0
                    idx = idx + 1
                    s = s
                    continue 
                require uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) <= uint64(tokenGrantsCount[address(msg.sender)][idx].field_576)
                require uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) <= uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)
                if uint256(tokenGrantsCount[address(msg.sender)][idx].field_256):
                    require uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)
                    require (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) == uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)
                require uint64(tokenGrantsCount[address(msg.sender)][idx].field_576) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)
                require (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) <= uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)
                require uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) <= uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)
                require uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) <= uint64(block.timestamp)
                if uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)):
                    require uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512))
                    require (uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) / uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) == uint64(block.timestamp) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)
                require uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)
                require ((uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) >= (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)
                require ((uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) <= uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)
                require uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) - ((uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + s >= s
                s = uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) - ((uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512))
                idx = idx + 1
                s = uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) - ((uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + s
                continue 
        else:
            require minterAddress == msg.sender
            s = 0
            idx = 0
            s = 0
            while idx < uint256(tokenGrantsCount[address(msg.sender)].field_0):
                mem[32] = 3
                require idx < uint256(tokenGrantsCount[address(msg.sender)].field_0)
                mem[0] = sha3(address(msg.sender), 3)
                _136 = mem[64]
                mem[64] = mem[64] + 160
                mem[_136] = tokenGrantsCount[address(msg.sender)][idx].field_0
                mem[_136 + 32] = uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)
                mem[_136 + 64] = uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)
                mem[_136 + 96] = uint64(tokenGrantsCount[address(msg.sender)][idx].field_576)
                mem[_136 + 128] = uint64(tokenGrantsCount[address(msg.sender)][idx].field_640)
                if uint64(block.timestamp) < uint64(tokenGrantsCount[address(msg.sender)][idx].field_512):
                    require 0 <= uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)
                    require uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) + s >= s
                    s = uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)
                    idx = idx + 1
                    s = uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) + s
                    continue 
                if uint64(block.timestamp) >= uint64(tokenGrantsCount[address(msg.sender)][idx].field_576):
                    require uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) <= uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)
                    require s >= s
                    s = 0
                    idx = idx + 1
                    s = s
                    continue 
                require uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) <= uint64(tokenGrantsCount[address(msg.sender)][idx].field_576)
                require uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) <= uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)
                if uint256(tokenGrantsCount[address(msg.sender)][idx].field_256):
                    require uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)
                    require (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) == uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)
                require uint64(tokenGrantsCount[address(msg.sender)][idx].field_576) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)
                require (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) <= uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)
                require uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) <= uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)
                require uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) <= uint64(block.timestamp)
                if uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)):
                    require uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512))
                    require (uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) / uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) == uint64(block.timestamp) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)
                require uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)
                require ((uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) >= (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)
                require ((uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) <= uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)
                require uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) - ((uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + s >= s
                s = uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) - ((uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512))
                idx = idx + 1
                s = uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) - ((uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + s
                continue 
    else:
        idx = (3 * uint256(tokenGrantsCount[address(arg1)].field_0)) + 3
        while 3 * uint256(tokenGrantsCount[address(arg1)].field_0) > idx:
            tokenGrantsCount[address(arg1)][idx].field_0 = 0
            uint256(tokenGrantsCount[address(arg1)][idx].field_256) = 0
            Mask(192, 0, tokenGrantsCount[address(arg1)][idx].field_512) = 0
            idx = idx + 3
            continue 
        tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_0 = msg.sender
        uint256(tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_256) = arg2
        uint64(tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_512) = arg4
        uint64(tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_576) = arg5
        uint64(tokenGrantsCount[address(arg1)][uint256(tokenGrantsCount[address(arg1)].field_0)].field_640) = arg3
        if transfersEnabled:
            s = 0
            idx = 0
            s = 0
            while idx < uint256(tokenGrantsCount[address(msg.sender)].field_0):
                mem[32] = 3
                require idx < uint256(tokenGrantsCount[address(msg.sender)].field_0)
                mem[0] = sha3(address(msg.sender), 3)
                _251 = mem[64]
                mem[64] = mem[64] + 160
                mem[_251] = tokenGrantsCount[address(msg.sender)][idx].field_0
                mem[_251 + 32] = uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)
                mem[_251 + 64] = uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)
                mem[_251 + 96] = uint64(tokenGrantsCount[address(msg.sender)][idx].field_576)
                mem[_251 + 128] = uint64(tokenGrantsCount[address(msg.sender)][idx].field_640)
                if uint64(block.timestamp) < uint64(tokenGrantsCount[address(msg.sender)][idx].field_512):
                    require 0 <= uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)
                    require uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) + s >= s
                    s = uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)
                    idx = idx + 1
                    s = uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) + s
                    continue 
                if uint64(block.timestamp) >= uint64(tokenGrantsCount[address(msg.sender)][idx].field_576):
                    require uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) <= uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)
                    require s >= s
                    s = 0
                    idx = idx + 1
                    s = s
                    continue 
                require uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) <= uint64(tokenGrantsCount[address(msg.sender)][idx].field_576)
                require uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) <= uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)
                if uint256(tokenGrantsCount[address(msg.sender)][idx].field_256):
                    require uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)
                    require (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) == uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)
                require uint64(tokenGrantsCount[address(msg.sender)][idx].field_576) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)
                require (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) <= uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)
                require uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) <= uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)
                require uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) <= uint64(block.timestamp)
                if uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)):
                    require uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512))
                    require (uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) / uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) == uint64(block.timestamp) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)
                require uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)
                require ((uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) >= (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)
                require ((uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) <= uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)
                require uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) - ((uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + s >= s
                s = uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) - ((uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512))
                idx = idx + 1
                s = uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) - ((uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + s
                continue 
        else:
            require minterAddress == msg.sender
            s = 0
            idx = 0
            s = 0
            while idx < uint256(tokenGrantsCount[address(msg.sender)].field_0):
                mem[32] = 3
                require idx < uint256(tokenGrantsCount[address(msg.sender)].field_0)
                mem[0] = sha3(address(msg.sender), 3)
                _252 = mem[64]
                mem[64] = mem[64] + 160
                mem[_252] = tokenGrantsCount[address(msg.sender)][idx].field_0
                mem[_252 + 32] = uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)
                mem[_252 + 64] = uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)
                mem[_252 + 96] = uint64(tokenGrantsCount[address(msg.sender)][idx].field_576)
                mem[_252 + 128] = uint64(tokenGrantsCount[address(msg.sender)][idx].field_640)
                if uint64(block.timestamp) < uint64(tokenGrantsCount[address(msg.sender)][idx].field_512):
                    require 0 <= uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)
                    require uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) + s >= s
                    s = uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)
                    idx = idx + 1
                    s = uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) + s
                    continue 
                if uint64(block.timestamp) >= uint64(tokenGrantsCount[address(msg.sender)][idx].field_576):
                    require uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) <= uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)
                    require s >= s
                    s = 0
                    idx = idx + 1
                    s = s
                    continue 
                require uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) <= uint64(tokenGrantsCount[address(msg.sender)][idx].field_576)
                require uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) <= uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)
                if uint256(tokenGrantsCount[address(msg.sender)][idx].field_256):
                    require uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)
                    require (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) == uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)
                require uint64(tokenGrantsCount[address(msg.sender)][idx].field_576) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)
                require (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) <= uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)
                require uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) <= uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)
                require uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) <= uint64(block.timestamp)
                if uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)):
                    require uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512))
                    require (uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) / uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) == uint64(block.timestamp) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)
                require uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)
                require ((uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) >= (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)
                require ((uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) <= uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)
                require uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) - ((uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + s >= s
                s = uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) - ((uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512))
                idx = idx + 1
                s = uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) - ((uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(block.timestamp)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(block.timestamp)) - (uint256(tokenGrantsCount[address(msg.sender)][idx].field_256) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) - ((uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) - (uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) * uint256(tokenGrantsCount[address(msg.sender)][idx].field_256)) / uint64(tokenGrantsCount[address(msg.sender)][idx].field_512) - uint64(tokenGrantsCount[address(msg.sender)][idx].field_512)) + s
                continue 
    require s <= balanceOf[address(msg.sender)]
    if balanceOf[address(msg.sender)] - s < balanceOf[address(msg.sender)]:
        require arg2 <= balanceOf[address(msg.sender)] - s
    else:
        require arg2 <= balanceOf[address(msg.sender)]
    require calldata.size >= 68
    require arg2 <= balanceOf[address(msg.sender)]
    balanceOf[address(msg.sender)] -= arg2
    require arg2 + balanceOf[arg1] >= balanceOf[arg1]
    balanceOf[address(arg1)] = arg2 + balanceOf[arg1]
    emit Transfer(arg2, msg.sender, arg1);
}



}
