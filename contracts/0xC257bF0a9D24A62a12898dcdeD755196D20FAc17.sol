contract main {


// =======================  Init code  ======================


address stor0;
uint256 stor1;
mapping of uint256 stor3;

function _fallback() payable {
    stor1 = 2 * 10^12
    require not msg.value
    stor0 = msg.sender
    stor3[stor0] = stor1
    return code.data[207 len 6830]
}



// =====================  Runtime code  =====================


const name = 'LikeCoin Brix'

const oferta = Array(len=2789, data=0x4c43627269782e204f4646455220544f20544845204255594552532e20446566696e6974696f6e732e20546865204c696b65636f696e2073797374656d202d20697320612073797374656d206f6620736f6674776172652070726f64756374732c20616e64206f6620746865206c6567616c2072696768747320616e64207375626a656374732c206173736f6369617465642077697468207468656d2c20616c6c20746f67657468657220636f6c6c6563746976656c7920737570706f7274696e67207468652061637469766974696573206f6620746865204c696b65636f696e20736f6369616c206e6574776f726b2e2054686520636f6e747261637420697320616e2061677265656d656e7420696e2074686520666f726d206f6620616363657074616e6365206f662074686973206f666665722e2054686520486f6c64696e6720436f6d70616e79206973204c69676874706f727420496e746572204c696d697465642c20486f6e67204b6f6e672c207768696368206e6f7720616e6420696e2074686520667574757265206f776e7320616c6c206c6567616c20656e746974696573206f6620746865204c696b65636f696e2073797374656d2c2061732077656c6c206173206469726563746c79206f7220696e6469726563746c79207468652072696768747320746f20616c6c20736f6674776172652070726f6475637473206f6620746865204c696b65636f696e2073797374656d2e20546865204167656e7420436f6d70616e7920697320e2809c536f6c616920546563682046696e616e6365e2809d204c4c502c204b617a616b687374616e2c20776869636820657865637574657320636f6e74726163747320696e20746865206e616d6520616e64206f6e20626568616c66206f662074686520486f6c64696e6720436f6d70616e792e20546f6b656e202d2061207265636f7264206f6620746865206f776e6572206f662074686520636f6e747261637420696e20746865207265676973746572206f6620636f6e747261637420686f6c646572732c20657865637574656420696e2074686520457468657265756d20626c6f636b636861696e2e204f464645522031292054686973206f6666657220697320612063726f776466756e64696e6720636f6e74726163742c207768657265627920746865206f776e6572206f662074686520636f6e7472616374206361727269657320616c6c20746865207269736b73206173736f636961746564207769746820746865207375636365737366756c206f7220756e7375636365737366756c20646576656c6f706d656e74206f66207468652070726f6a6563742c2073696d696c61726c7920746f20746865207368617265686f6c64657273206f66207468652070726f6a6563742e205368617265686f6c64657273206f66207468652070726f6a65637420646f206e6f742068617665207370656369616c206f626c69676174696f6e7320746f20737570706f727420746865206c6971756964697479206f6620636f6e7472616374732e20322920546865206f776e6572206f66207468697320636f6e7472616374206861732074686520726967687420746f2072656365697665206f6e65207368617265206f662074686520486f6c64696e6720436f6d70616e7920696e2074686520706572696f64206e6f74206561726c696572207468616e20696e6469636174656420696e20706172616772617068203320686572656f662e20546865206f776e6572206f662074686520636f6e747261637420686173207468652072696768742c206174206974732064697363726574696f6e2c20746f20657874656e6420746865207465726d206f662065786368616e6765206f662074686520636f6e747261637420666f72207468652073686172652e2033292054686520486f6c64696e6720436f6d70616e7920756e64657274616b657320746f206d616b6520736861726520697373756520666f7220697473206361706974616c206265666f7265204d617920312c20323032302e2054686520486f6c64696e6720436f6d70616e7920756e64657274616b657320746f207265736572766520323025206f66206974732073686172657320666f722065786368616e6765206f6e20746865736520636f6e7472616374732e20342920546f206d61696e7461696e20746865207265676973746572206f6620636f6e7472616374732c20746865204c696b65636f696e2073797374656d2069737375657320322c3030302c30303020746f6b656e7320696e2074686520457468657265756d20626c6f636b636861696e2e204f776e696e67206f6e6520746f6b656e206d65616e73206f776e696e67206120636f6e747261637420666f72207265636569707420696e2074686520667574757265206f66206f6e6520667574757265207368617265206f662074686520486f6c64696e6720436f6d70616e792e20352920546865206f776e6572206f662074686520636f6e74726163742063616e2073656c6c2074686520636f6e74726163742c2064697669646520696e746f207368617265732c20706c656467652c206772616e7420666f7220667265652e20416c6c20616374696f6e73207769746820636f6e7472616374732061726520636f6e64756374656420696e207468652072656769737472792c20776869636820697320617661696c61626c6520666f722061636365737320627920626f746820746865204c696b65636f696e2073797374656d20616e642074686520457468657265756d20626c6f636b636861696e2e205768656e206469766964696e67206120746f6b656e2c20746865207269676874206f662065786368616e676520666f722074686520736861726573206f662074686520486f6c64696e6720436f6d70616e7920617269736573206f6e6c7920666f722074686174206f776e6572206f66207468652070617274732028706f7274696f6e7329206f662074686520746f6b656e732c2077686572656173207375636820706172747320746f67657468657220636f6e73746974757465207468652077686f6c65206e756d626572206f6620746f6b656e732028696e7465676572292e2036292054686520486f6c64696e6720436f6d70616e7920756e64657274616b657320746f2075736520616c6c2066756e64732072616973656420647572696e672074686520696e697469616c2073616c65206f6620636f6e74726163747320666f722074686520646576656c6f706d656e74206f6620746865204c696b65636f696e2073797374656d2e20486f6c64696e6720436f6d70616e792077696c6c2062652031303025206f776e6572206f6620616c6c206e65776c792063726561746564206f7065726174696e6720636f6d70616e696573206f6620746865204c696b65636f696e2073797374656d2e20372920496e2063617365206f662065786368616e6765206f662074686520636f6e747261637420666f72207468652073686172652c207468652072656c6576616e7420746f6b656e2077696c6c20626520706c61636564206f6e2061207370656369616c20626c6f636b6564206163636f756e7420616e642077696c6c206e6f742062652074726164656420696e20746865206675747572652e20382920536574746c656d656e7473207769746820636f6e747261637420686f6c6465727320696e20746865206e616d6520616e64206f6e20626568616c66206f662074686520486f6c64696e6720436f6d70616e79206172652063617272696564206f757420627920746865204167656e7420436f6d70616e7900, mem[2917 len 27] >> 22016, mem[2939 len 5])

const decimals = 6

const symbol = 'LCB'


address owner;
uint256 totalSupply;
mapping of uint256 allowance;
mapping of uint256 balanceOf;

function totalSupply() {
    return totalSupply
}

function balanceOf(address arg1) {
    return balanceOf[arg1]
}

function owner() {
    return owner
}

function allowance(address arg1, address arg2) {
    return allowance[arg1][arg2]
}

function _fallback() payable {
    revert
}

function transferOwnership(address arg1) {
    require msg.sender == owner
    require arg1
    owner = arg1
}

function approve(address arg1, uint256 arg2) {
    allowance[address(msg.sender)][address(arg1)] = arg2
    emit Approval(arg2, msg.sender, arg1);
    return 1
}

function transfer(address arg1, uint256 arg2) {
    require arg2 <= balanceOf[address(msg.sender)]
    balanceOf[address(msg.sender)] -= arg2
    require balanceOf[address(arg1)] + arg2 >= balanceOf[address(arg1)]
    balanceOf[address(arg1)] += arg2
    emit Transfer(arg2, msg.sender, arg1);
    return 1
}

function transferWithRef(address arg1, uint256 arg2, uint256 arg3) {
    require arg2 <= balanceOf[address(msg.sender)]
    balanceOf[address(msg.sender)] -= arg2
    require balanceOf[address(arg1)] + arg2 >= balanceOf[address(arg1)]
    balanceOf[address(arg1)] += arg2
    emit Transfer(arg2, msg.sender, arg1);
    emit TransferWithRef(arg2, msg.sender, arg1, arg3);
    return 1
}

function transferFrom(address arg1, address arg2, uint256 arg3) {
    require balanceOf[address(arg2)] + arg3 >= balanceOf[address(arg2)]
    balanceOf[address(arg2)] += arg3
    require arg3 <= balanceOf[address(arg1)]
    balanceOf[address(arg1)] -= arg3
    require arg3 <= allowance[address(arg1)][address(msg.sender)]
    allowance[address(arg1)][address(msg.sender)] -= arg3
    emit Transfer(arg3, arg1, arg2);
    return 1
}

function approveAndCall(address arg1, uint256 arg2, bytes arg3) {
    allowance[address(msg.sender)][address(arg1)] = arg2
    emit Approval(arg2, msg.sender, arg1);
    require ext_code.size(arg1)
    call arg1.receiveApproval(address rg1, uint256 rg2, address rg3, bytes rg4) with:
         gas gas_remaining - 710 wei
        args msg.sender, arg2, address(this.address), Array(len=arg3.length, data=arg3[all])
    require ext_call.success
    return 1
}



}
