contract main {




// =====================  Runtime code  =====================


#
#  - sub_0bdf3f55(?)
#  - sub_4e128a13(?)
#
address owner;
address tokenAddress;
uint256 maximumTokenSupply;
address walletAddress;
uint256 minimumPurchase;
uint256 price;
uint256 ethUsdRate;
uint256 sub_d2c9c260;
uint256 weiRaised;
uint256 tokensSold;
uint256 tokenSaleCap;
uint256 sub_0d27577e;
uint8 stor12;
uint256 roundTokenCap;
uint256 sub_463626d6;
uint8 stor15;
mapping of struct stor16;
mapping of struct sub_fbde1348;
address stor6E09;

function active() {
    return bool(stor15)
}

function sub_0d27577e(?) {
    return sub_0d27577e
}

function maximumTokenSupply() {
    return maximumTokenSupply
}

function ethUsdRate() {
    return ethUsdRate
}

function weiRaised() {
    return weiRaised
}

function saleStopped() {
    return bool(stor12)
}

function sub_463626d6(?) {
    return sub_463626d6
}

function tokensSold() {
    return tokensSold
}

function wallet() {
    return walletAddress
}

function roundTokenCap() {
    return roundTokenCap
}

function owner() {
    return owner
}

function tokenSaleCap() {
    return tokenSaleCap
}

function price() {
    return price
}

function minimumPurchase() {
    return minimumPurchase
}

function sub_d2c9c260(?) {
    return sub_d2c9c260
}

function sub_fbde1348(?) {
    return sub_fbde1348[arg1].field_0, sub_fbde1348[arg1].field_256, sub_fbde1348[arg1].field_512, sub_fbde1348[arg1].field_768
}

function token() {
    return tokenAddress
}

function sub_d4cec2e2(?) {
    return roundTokenCap <= sub_463626d6
}

function resumeSale() {
    require msg.sender == owner
    require stor12
    stor12 = 0
    emit SaleResumed()
}

function stopSale() {
    require msg.sender == owner
    require not stor12
    stor12 = 1
    emit SaleStopped()
}

function setMinimumPurchase(uint256 arg1) {
    require msg.sender == owner
    require arg1 > 0
    minimumPurchase = arg1
    emit 0xd1960dd9: arg1
}

function transferOwnership(address arg1) {
    require msg.sender == owner
    require arg1
    emit OwnershipTransferred(owner, arg1);
    owner = arg1
}

function deactivate() {
    if tokenAddress != msg.sender:
        require msg.sender == owner
    if stor15:
        stor15 = 0
        emit 0x1142a68c 
}

function setPrice(uint256 arg1, uint256 arg2) {
    require msg.sender == owner
    require arg1 > 0
    price = arg1
    ethUsdRate = arg2
    sub_d2c9c260 = block.timestamp
    emit PriceChange(arg1, arg2);
}

function sub_1867afea(?) {
    require ext_code.size(tokenAddress)
    call tokenAddress.0xfa2299ee with:
         gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return tokenSaleCap <= ext_call.return_data[0]
}

function activate(uint256 arg1, uint256 arg2) {
    require msg.sender == tokenAddress
    require not stor15
    require sub_0d27577e + arg1 >= arg1
    require sub_0d27577e + arg1 <= tokenSaleCap
    require arg2 <= maximumTokenSupply
    require maximumTokenSupply - arg2 >= sub_0d27577e
    stor15 = 1
    emit Activated()
    return tokenSaleCap
}

function sub_93f1d624(?) {
    require msg.sender == owner
    require arg1
    if sub_fbde1348[address(arg1)].field_0 <= 0:
        return 0
    require sub_fbde1348[address(arg1)].field_768 <= sub_0d27577e
    sub_0d27577e -= sub_fbde1348[address(arg1)].field_768
    stor16[stor16[address(arg1)].field_0].field_256 = stor16[address(arg1)].field_256
    stor16[stor16[address(arg1)].field_256].field_0 = stor16[address(arg1)].field_0
    sub_fbde1348[address(arg1)].field_0 = 0
    sub_fbde1348[address(arg1)].field_256 = 0
    sub_fbde1348[address(arg1)].field_512 = 0
    sub_fbde1348[address(arg1)].field_768 = 0
    stor16[address(arg1)].field_0 = 0
    stor16[address(arg1)].field_256 = 0
    emit 0x83e21c4d: arg1
    return 1
}

function sub_10c3f304(?) {
    require msg.sender == owner
    require arg1 > 0
    require ext_code.size(tokenAddress)
    call tokenAddress.0xfa2299ee with:
         gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require sub_0d27577e + ext_call.return_data[0] >= ext_call.return_data[0]
    require arg1 >= sub_0d27577e + ext_call.return_data[0]
    require ext_code.size(tokenAddress)
    call tokenAddress.0x32f8c2a9 with:
         gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] <= maximumTokenSupply
    require arg1 <= maximumTokenSupply - ext_call.return_data[0]
    if stor15:
        require ext_code.size(tokenAddress)
        call tokenAddress.0xf073579f with:
             gas gas_remaining wei
            args arg1
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
    tokenSaleCap = arg1
    emit 0x1c4d1536: tokenSaleCap, arg1
}

function sub_aa7e8757(?) {
    require msg.sender == owner
    idx = 0
    s = 0
    while idx < ('cd', 4).length:
        require address(cd[((32 * idx) + cd[4] + 36)])
        mem[0] = address(cd[((32 * idx) + cd[4] + 36)])
        mem[32] = 17
        if sub_fbde1348[address(cd[((32 * idx) + cd[4] + 36)])].field_0 <= 0:
            idx = idx + 1
            s = s
            continue 
        require sub_fbde1348[address(cd[((32 * idx) + cd[4] + 36)])].field_768 <= sub_0d27577e
        sub_0d27577e -= sub_fbde1348[address(cd[((32 * idx) + cd[4] + 36)])].field_768
        stor16[stor16[address(cd[((32 * idx) + cd[4] + 36)])].field_0].field_256 = stor16[address(cd[((32 * idx) + cd[4] + 36)])].field_256
        stor16[stor16[address(cd[((32 * idx) + cd[4] + 36)])].field_256].field_0 = stor16[address(cd[((32 * idx) + cd[4] + 36)])].field_0
        mem[0] = address(cd[((32 * idx) + cd[4] + 36)])
        sub_fbde1348[address(cd[((32 * idx) + cd[4] + 36)])].field_0 = 0
        sub_fbde1348[address(cd[((32 * idx) + cd[4] + 36)])].field_256 = 0
        sub_fbde1348[address(cd[((32 * idx) + cd[4] + 36)])].field_512 = 0
        sub_fbde1348[address(cd[((32 * idx) + cd[4] + 36)])].field_768 = 0
        mem[32] = 16
        stor16[address(cd[((32 * idx) + cd[4] + 36)])].field_0 = 0
        stor16[address(cd[((32 * idx) + cd[4] + 36)])].field_256 = 0
        emit 0x83e21c4d: address(cd[((32 * idx) + cd[4] + 36)])
        idx = idx + 1
        s = 1
        continue 
    return bool(s)
}

function sub_1a1b2d0c(?) {
    require msg.sender == owner
    require arg1
    require arg3 > block.timestamp
    require arg2 > 0
    require arg5 > 0
    require arg4 <= arg5
    if sub_fbde1348[address(arg1)].field_0:
        require sub_fbde1348[address(arg1)].field_768 <= sub_0d27577e
        require arg5 >= 0
        sub_0d27577e = arg5 + sub_0d27577e - sub_fbde1348[address(arg1)].field_768
        require ext_code.size(tokenAddress)
        call tokenAddress.0xfa2299ee with:
             gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] + sub_0d27577e >= sub_0d27577e
        require ext_call.return_data[0] + sub_0d27577e <= tokenSaleCap
    else:
        require arg5 + sub_0d27577e >= sub_0d27577e
        sub_0d27577e += arg5
        require ext_code.size(tokenAddress)
        call tokenAddress.0xfa2299ee with:
             gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] + sub_0d27577e >= sub_0d27577e
        require ext_call.return_data[0] + sub_0d27577e <= tokenSaleCap
        stor16[address(arg1)].field_0 = 0
        stor16[address(arg1)].field_256 = stor6E09
        stor6E09 = arg1
        stor16[stor6E09].field_0 = arg1
    sub_fbde1348[address(arg1)].field_0 = arg3
    sub_fbde1348[address(arg1)].field_256 = arg2
    sub_fbde1348[address(arg1)].field_512 = arg4
    sub_fbde1348[address(arg1)].field_768 = arg5
    emit 0x4fbb6c75: arg2, arg3, arg4, arg5, arg1
}

function sub_913a06ff(?) {
    require msg.sender == owner
    require arg1 > 0
    require ext_code.size(tokenAddress)
    call tokenAddress.0xfa2299ee with:
         gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require tokenSaleCap > ext_call.return_data[0]
    require sub_463626d6 <= roundTokenCap
    require ext_code.size(tokenAddress)
    call tokenAddress.0xfa2299ee with:
         gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] <= tokenSaleCap
    require roundTokenCap - sub_463626d6 >= 0
    require sub_0d27577e <= roundTokenCap - sub_463626d6 + tokenSaleCap - ext_call.return_data[0]
    if roundTokenCap - sub_463626d6 + tokenSaleCap - ext_call.return_data[0] - sub_0d27577e >= arg3:
        require roundTokenCap - sub_463626d6 <= sub_0d27577e
        require arg3 >= 0
        sub_0d27577e = arg3 + sub_0d27577e - roundTokenCap + sub_463626d6
        require tokenSaleCap >= arg3 + sub_0d27577e - roundTokenCap + sub_463626d6
        emit RoundEnded(sub_463626d6, roundTokenCap);
        require msg.sender == owner
        require arg1 > 0
        price = arg1
        ethUsdRate = arg2
        sub_d2c9c260 = block.timestamp
        emit PriceChange(arg1, arg2);
        sub_463626d6 = 0
        roundTokenCap = arg3
        emit 0xae4cf40c: arg3
    else:
        require arg4
        require roundTokenCap - sub_463626d6 <= sub_0d27577e
        require tokenSaleCap - ext_call.return_data[0] >= sub_0d27577e - roundTokenCap + sub_463626d6
        sub_0d27577e = tokenSaleCap - ext_call.return_data[0]
        require tokenSaleCap >= tokenSaleCap - ext_call.return_data[0]
        emit RoundEnded(sub_463626d6, roundTokenCap);
        require msg.sender == owner
        require arg1 > 0
        price = arg1
        ethUsdRate = arg2
        sub_d2c9c260 = block.timestamp
        emit PriceChange(arg1, arg2);
        sub_463626d6 = 0
        roundTokenCap = roundTokenCap - sub_463626d6 + tokenSaleCap - ext_call.return_data[0] - sub_0d27577e
        emit 0xae4cf40c: (roundTokenCap - sub_463626d6 + tokenSaleCap - ext_call.return_data[0] - sub_0d27577e)
}

function _fallback() payable {
    require not calldata.size
    require stor15
    require msg.value > 0
    require msg.sender
    require not stor12
    if sub_fbde1348[address(msg.sender)].field_0 <= 0:
        require msg.value >= minimumPurchase
        require ext_code.size(tokenAddress)
        call tokenAddress.0xfa2299ee with:
             gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require tokenSaleCap > ext_call.return_data[0]
        require roundTokenCap > sub_463626d6
        require 0 < price
        if not msg.value:
            require price
            require (0 / price) + sub_463626d6 >= sub_463626d6
            require ext_code.size(tokenAddress)
            call tokenAddress.0xfa2299ee with:
                 gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require (0 / price) + ext_call.return_data[0] >= ext_call.return_data[0]
            if (0 / price) + sub_463626d6 <= roundTokenCap:
                if (0 / price) + ext_call.return_data[0] <= tokenSaleCap:
                    require msg.value > 0
                    require 0 / price > 0
                    require (0 / price) + sub_463626d6 >= sub_463626d6
                    sub_463626d6 += 0 / price
                    require roundTokenCap >= (0 / price) + sub_463626d6
                    require msg.value + weiRaised >= weiRaised
                    weiRaised += msg.value
                    require (0 / price) + tokensSold >= tokensSold
                    tokensSold += 0 / price
                    require 0 / price <= sub_0d27577e
                    sub_0d27577e -= 0 / price
                    require ext_code.size(tokenAddress)
                    call tokenAddress.0x40c10f19 with:
                         gas gas_remaining wei
                        args msg.sender, 0 / price
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0]
                    emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, msg.sender);
                    call walletAddress with:
                       value msg.value wei
                         gas 2300 * is_zero(value) wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                else:
                    if (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                        require msg.value > 0
                        require 0 / price > 0
                        require (0 / price) + sub_463626d6 >= sub_463626d6
                        sub_463626d6 += 0 / price
                        require roundTokenCap >= (0 / price) + sub_463626d6
                        require msg.value + weiRaised >= weiRaised
                        weiRaised += msg.value
                        require (0 / price) + tokensSold >= tokensSold
                        tokensSold += 0 / price
                        require 0 / price <= sub_0d27577e
                        sub_0d27577e -= 0 / price
                        require ext_code.size(tokenAddress)
                        call tokenAddress.0x40c10f19 with:
                             gas gas_remaining wei
                            args msg.sender, 0 / price
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0]
                        emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, msg.sender);
                        call walletAddress with:
                           value msg.value wei
                             gas 2300 * is_zero(value) wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        require (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0 / price
                        if not (0 / price) + ext_call.return_data[0] - tokenSaleCap:
                            require 0 <= msg.value
                            require msg.value > 0
                            require -ext_call.return_data[0] + tokenSaleCap > 0
                            require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                            sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                            require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                            require msg.value + weiRaised >= weiRaised
                            weiRaised += msg.value
                            require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                            tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                            require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                            sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                            require ext_code.size(tokenAddress)
                            call tokenAddress.0x40c10f19 with:
                                 gas gas_remaining wei
                                args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0]
                            emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, msg.sender);
                            call walletAddress with:
                               value msg.value wei
                                 gas 2300 * is_zero(value) wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                        else:
                            require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (0 / price) + ext_call.return_data[0] - tokenSaleCap == price
                            require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                            require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                            require -ext_call.return_data[0] + tokenSaleCap > 0
                            require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                            sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                            require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                            require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                            weiRaised = msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                            require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                            tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                            require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                            sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                            require ext_code.size(tokenAddress)
                            call tokenAddress.0x40c10f19 with:
                                 gas gas_remaining wei
                                args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0]
                            emit TokenPurchase(price, msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, msg.sender);
                            call walletAddress with:
                               value msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                 gas 2300 * is_zero(value) wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 > 0:
                                call msg.sender with:
                                   value (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
            else:
                if (0 / price) + sub_463626d6 - roundTokenCap <= 0:
                    if (0 / price) + ext_call.return_data[0] <= tokenSaleCap:
                        require msg.value > 0
                        require 0 / price > 0
                        require (0 / price) + sub_463626d6 >= sub_463626d6
                        sub_463626d6 += 0 / price
                        require roundTokenCap >= (0 / price) + sub_463626d6
                        require msg.value + weiRaised >= weiRaised
                        weiRaised += msg.value
                        require (0 / price) + tokensSold >= tokensSold
                        tokensSold += 0 / price
                        require 0 / price <= sub_0d27577e
                        sub_0d27577e -= 0 / price
                        require ext_code.size(tokenAddress)
                        call tokenAddress.0x40c10f19 with:
                             gas gas_remaining wei
                            args msg.sender, 0 / price
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0]
                        emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, msg.sender);
                        call walletAddress with:
                           value msg.value wei
                             gas 2300 * is_zero(value) wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                            require msg.value > 0
                            require 0 / price > 0
                            require (0 / price) + sub_463626d6 >= sub_463626d6
                            sub_463626d6 += 0 / price
                            require roundTokenCap >= (0 / price) + sub_463626d6
                            require msg.value + weiRaised >= weiRaised
                            weiRaised += msg.value
                            require (0 / price) + tokensSold >= tokensSold
                            tokensSold += 0 / price
                            require 0 / price <= sub_0d27577e
                            sub_0d27577e -= 0 / price
                            require ext_code.size(tokenAddress)
                            call tokenAddress.0x40c10f19 with:
                                 gas gas_remaining wei
                                args msg.sender, 0 / price
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0]
                            emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, msg.sender);
                            call walletAddress with:
                               value msg.value wei
                                 gas 2300 * is_zero(value) wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                        else:
                            require (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0 / price
                            if not (0 / price) + ext_call.return_data[0] - tokenSaleCap:
                                require 0 <= msg.value
                                require msg.value > 0
                                require -ext_call.return_data[0] + tokenSaleCap > 0
                                require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                require msg.value + weiRaised >= weiRaised
                                weiRaised += msg.value
                                require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, msg.sender);
                                call walletAddress with:
                                   value msg.value wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (0 / price) + ext_call.return_data[0] - tokenSaleCap == price
                                require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                require -ext_call.return_data[0] + tokenSaleCap > 0
                                require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                weiRaised = msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit TokenPurchase(price, msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, msg.sender);
                                call walletAddress with:
                                   value msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 > 0:
                                    call msg.sender with:
                                       value (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                else:
                    if (0 / price) + ext_call.return_data[0] <= tokenSaleCap:
                        if (0 / price) + sub_463626d6 - roundTokenCap <= 0:
                            require msg.value > 0
                            require 0 / price > 0
                            require (0 / price) + sub_463626d6 >= sub_463626d6
                            sub_463626d6 += 0 / price
                            require roundTokenCap >= (0 / price) + sub_463626d6
                            require msg.value + weiRaised >= weiRaised
                            weiRaised += msg.value
                            require (0 / price) + tokensSold >= tokensSold
                            tokensSold += 0 / price
                            require 0 / price <= sub_0d27577e
                            sub_0d27577e -= 0 / price
                            require ext_code.size(tokenAddress)
                            call tokenAddress.0x40c10f19 with:
                                 gas gas_remaining wei
                                args msg.sender, 0 / price
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0]
                            emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, msg.sender);
                            call walletAddress with:
                               value msg.value wei
                                 gas 2300 * is_zero(value) wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                        else:
                            require (0 / price) + sub_463626d6 - roundTokenCap <= 0 / price
                            if not (0 / price) + sub_463626d6 - roundTokenCap:
                                require 0 <= msg.value
                                require msg.value > 0
                                require -sub_463626d6 + roundTokenCap > 0
                                require roundTokenCap >= sub_463626d6
                                sub_463626d6 = roundTokenCap
                                require roundTokenCap >= roundTokenCap
                                require msg.value + weiRaised >= weiRaised
                                weiRaised += msg.value
                                require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, -sub_463626d6 + roundTokenCap
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit TokenPurchase(price, msg.value, -sub_463626d6 + roundTokenCap, 0, ethUsdRate, msg.sender, msg.sender);
                                call walletAddress with:
                                   value msg.value wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / (0 / price) + sub_463626d6 - roundTokenCap == price
                                require (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= msg.value
                                require msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) > 0
                                require -sub_463626d6 + roundTokenCap > 0
                                require roundTokenCap >= sub_463626d6
                                sub_463626d6 = roundTokenCap
                                require roundTokenCap >= roundTokenCap
                                require msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised >= weiRaised
                                weiRaised = msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised
                                require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, -sub_463626d6 + roundTokenCap
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit TokenPurchase(price, msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18), -sub_463626d6 + roundTokenCap, (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18, ethUsdRate, msg.sender, msg.sender);
                                call walletAddress with:
                                   value msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 > 0:
                                    call msg.sender with:
                                       value (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if ext_call.return_data[0] - tokenSaleCap <= sub_463626d6 - roundTokenCap:
                            if (0 / price) + sub_463626d6 - roundTokenCap <= 0:
                                require msg.value > 0
                                require 0 / price > 0
                                require (0 / price) + sub_463626d6 >= sub_463626d6
                                sub_463626d6 += 0 / price
                                require roundTokenCap >= (0 / price) + sub_463626d6
                                require msg.value + weiRaised >= weiRaised
                                weiRaised += msg.value
                                require (0 / price) + tokensSold >= tokensSold
                                tokensSold += 0 / price
                                require 0 / price <= sub_0d27577e
                                sub_0d27577e -= 0 / price
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, 0 / price
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, msg.sender);
                                call walletAddress with:
                                   value msg.value wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require (0 / price) + sub_463626d6 - roundTokenCap <= 0 / price
                                if not (0 / price) + sub_463626d6 - roundTokenCap:
                                    require 0 <= msg.value
                                    require msg.value > 0
                                    require -sub_463626d6 + roundTokenCap > 0
                                    require roundTokenCap >= sub_463626d6
                                    sub_463626d6 = roundTokenCap
                                    require roundTokenCap >= roundTokenCap
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                    tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                    require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                    sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, -sub_463626d6 + roundTokenCap
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value, -sub_463626d6 + roundTokenCap, 0, ethUsdRate, msg.sender, msg.sender);
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / (0 / price) + sub_463626d6 - roundTokenCap == price
                                    require (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= msg.value
                                    require msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) > 0
                                    require -sub_463626d6 + roundTokenCap > 0
                                    require roundTokenCap >= sub_463626d6
                                    sub_463626d6 = roundTokenCap
                                    require roundTokenCap >= roundTokenCap
                                    require msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised >= weiRaised
                                    weiRaised = msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised
                                    require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                    tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                    require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                    sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, -sub_463626d6 + roundTokenCap
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18), -sub_463626d6 + roundTokenCap, (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18, ethUsdRate, msg.sender, msg.sender);
                                    call walletAddress with:
                                       value msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 > 0:
                                        call msg.sender with:
                                           value (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                require msg.value > 0
                                require 0 / price > 0
                                require (0 / price) + sub_463626d6 >= sub_463626d6
                                sub_463626d6 += 0 / price
                                require roundTokenCap >= (0 / price) + sub_463626d6
                                require msg.value + weiRaised >= weiRaised
                                weiRaised += msg.value
                                require (0 / price) + tokensSold >= tokensSold
                                tokensSold += 0 / price
                                require 0 / price <= sub_0d27577e
                                sub_0d27577e -= 0 / price
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, 0 / price
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, msg.sender);
                                call walletAddress with:
                                   value msg.value wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0 / price
                                if not (0 / price) + ext_call.return_data[0] - tokenSaleCap:
                                    require 0 <= msg.value
                                    require msg.value > 0
                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                    require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                    sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                    require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                    sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, msg.sender);
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (0 / price) + ext_call.return_data[0] - tokenSaleCap == price
                                    require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                    require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                    require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                    sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                    require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                    require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                    weiRaised = msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                    sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, msg.sender);
                                    call walletAddress with:
                                       value msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 > 0:
                                        call msg.sender with:
                                           value (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
        else:
            require 10^18 * msg.value / msg.value == 10^18
            require price
            require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
            require ext_code.size(tokenAddress)
            call tokenAddress.0xfa2299ee with:
                 gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require (10^18 * msg.value / price) + ext_call.return_data[0] >= ext_call.return_data[0]
            if (10^18 * msg.value / price) + sub_463626d6 <= roundTokenCap:
                if (10^18 * msg.value / price) + ext_call.return_data[0] <= tokenSaleCap:
                    require msg.value > 0
                    require 10^18 * msg.value / price > 0
                    require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                    sub_463626d6 += 10^18 * msg.value / price
                    require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                    require msg.value + weiRaised >= weiRaised
                    weiRaised += msg.value
                    require (10^18 * msg.value / price) + tokensSold >= tokensSold
                    tokensSold += 10^18 * msg.value / price
                    require 10^18 * msg.value / price <= sub_0d27577e
                    sub_0d27577e -= 10^18 * msg.value / price
                    require ext_code.size(tokenAddress)
                    call tokenAddress.0x40c10f19 with:
                         gas gas_remaining wei
                        args msg.sender, 10^18 * msg.value / price
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0]
                    emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, msg.sender);
                    call walletAddress with:
                       value msg.value wei
                         gas 2300 * is_zero(value) wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                else:
                    if (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                        require msg.value > 0
                        require 10^18 * msg.value / price > 0
                        require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                        sub_463626d6 += 10^18 * msg.value / price
                        require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                        require msg.value + weiRaised >= weiRaised
                        weiRaised += msg.value
                        require (10^18 * msg.value / price) + tokensSold >= tokensSold
                        tokensSold += 10^18 * msg.value / price
                        require 10^18 * msg.value / price <= sub_0d27577e
                        sub_0d27577e -= 10^18 * msg.value / price
                        require ext_code.size(tokenAddress)
                        call tokenAddress.0x40c10f19 with:
                             gas gas_remaining wei
                            args msg.sender, 10^18 * msg.value / price
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0]
                        emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, msg.sender);
                        call walletAddress with:
                           value msg.value wei
                             gas 2300 * is_zero(value) wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        require (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 10^18 * msg.value / price
                        if not (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap:
                            require 0 <= msg.value
                            require msg.value > 0
                            require -ext_call.return_data[0] + tokenSaleCap > 0
                            require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                            sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                            require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                            require msg.value + weiRaised >= weiRaised
                            weiRaised += msg.value
                            require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                            tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                            require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                            sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                            require ext_code.size(tokenAddress)
                            call tokenAddress.0x40c10f19 with:
                                 gas gas_remaining wei
                                args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0]
                            emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, msg.sender);
                            call walletAddress with:
                               value msg.value wei
                                 gas 2300 * is_zero(value) wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                        else:
                            require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap == price
                            require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                            require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                            require -ext_call.return_data[0] + tokenSaleCap > 0
                            require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                            sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                            require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                            require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                            weiRaised = msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                            require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                            tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                            require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                            sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                            require ext_code.size(tokenAddress)
                            call tokenAddress.0x40c10f19 with:
                                 gas gas_remaining wei
                                args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0]
                            emit TokenPurchase(price, msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, msg.sender);
                            call walletAddress with:
                               value msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                 gas 2300 * is_zero(value) wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 > 0:
                                call msg.sender with:
                                   value (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
            else:
                if (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap <= 0:
                    if (10^18 * msg.value / price) + ext_call.return_data[0] <= tokenSaleCap:
                        require msg.value > 0
                        require 10^18 * msg.value / price > 0
                        require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                        sub_463626d6 += 10^18 * msg.value / price
                        require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                        require msg.value + weiRaised >= weiRaised
                        weiRaised += msg.value
                        require (10^18 * msg.value / price) + tokensSold >= tokensSold
                        tokensSold += 10^18 * msg.value / price
                        require 10^18 * msg.value / price <= sub_0d27577e
                        sub_0d27577e -= 10^18 * msg.value / price
                        require ext_code.size(tokenAddress)
                        call tokenAddress.0x40c10f19 with:
                             gas gas_remaining wei
                            args msg.sender, 10^18 * msg.value / price
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0]
                        emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, msg.sender);
                        call walletAddress with:
                           value msg.value wei
                             gas 2300 * is_zero(value) wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                            require msg.value > 0
                            require 10^18 * msg.value / price > 0
                            require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                            sub_463626d6 += 10^18 * msg.value / price
                            require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                            require msg.value + weiRaised >= weiRaised
                            weiRaised += msg.value
                            require (10^18 * msg.value / price) + tokensSold >= tokensSold
                            tokensSold += 10^18 * msg.value / price
                            require 10^18 * msg.value / price <= sub_0d27577e
                            sub_0d27577e -= 10^18 * msg.value / price
                            require ext_code.size(tokenAddress)
                            call tokenAddress.0x40c10f19 with:
                                 gas gas_remaining wei
                                args msg.sender, 10^18 * msg.value / price
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0]
                            emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, msg.sender);
                            call walletAddress with:
                               value msg.value wei
                                 gas 2300 * is_zero(value) wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                        else:
                            require (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 10^18 * msg.value / price
                            if not (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap:
                                require 0 <= msg.value
                                require msg.value > 0
                                require -ext_call.return_data[0] + tokenSaleCap > 0
                                require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                require msg.value + weiRaised >= weiRaised
                                weiRaised += msg.value
                                require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, msg.sender);
                                call walletAddress with:
                                   value msg.value wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap == price
                                require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                require -ext_call.return_data[0] + tokenSaleCap > 0
                                require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                weiRaised = msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit TokenPurchase(price, msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, msg.sender);
                                call walletAddress with:
                                   value msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 > 0:
                                    call msg.sender with:
                                       value (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                else:
                    if (10^18 * msg.value / price) + ext_call.return_data[0] <= tokenSaleCap:
                        if (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap <= 0:
                            require msg.value > 0
                            require 10^18 * msg.value / price > 0
                            require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                            sub_463626d6 += 10^18 * msg.value / price
                            require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                            require msg.value + weiRaised >= weiRaised
                            weiRaised += msg.value
                            require (10^18 * msg.value / price) + tokensSold >= tokensSold
                            tokensSold += 10^18 * msg.value / price
                            require 10^18 * msg.value / price <= sub_0d27577e
                            sub_0d27577e -= 10^18 * msg.value / price
                            require ext_code.size(tokenAddress)
                            call tokenAddress.0x40c10f19 with:
                                 gas gas_remaining wei
                                args msg.sender, 10^18 * msg.value / price
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0]
                            emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, msg.sender);
                            call walletAddress with:
                               value msg.value wei
                                 gas 2300 * is_zero(value) wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                        else:
                            require (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap <= 10^18 * msg.value / price
                            if not (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap:
                                require 0 <= msg.value
                                require msg.value > 0
                                require -sub_463626d6 + roundTokenCap > 0
                                require roundTokenCap >= sub_463626d6
                                sub_463626d6 = roundTokenCap
                                require roundTokenCap >= roundTokenCap
                                require msg.value + weiRaised >= weiRaised
                                weiRaised += msg.value
                                require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, -sub_463626d6 + roundTokenCap
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit TokenPurchase(price, msg.value, -sub_463626d6 + roundTokenCap, 0, ethUsdRate, msg.sender, msg.sender);
                                call walletAddress with:
                                   value msg.value wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap == price
                                require (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= msg.value
                                require msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) > 0
                                require -sub_463626d6 + roundTokenCap > 0
                                require roundTokenCap >= sub_463626d6
                                sub_463626d6 = roundTokenCap
                                require roundTokenCap >= roundTokenCap
                                require msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised >= weiRaised
                                weiRaised = msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised
                                require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, -sub_463626d6 + roundTokenCap
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit TokenPurchase(price, msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18), -sub_463626d6 + roundTokenCap, (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18, ethUsdRate, msg.sender, msg.sender);
                                call walletAddress with:
                                   value msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 > 0:
                                    call msg.sender with:
                                       value (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if ext_call.return_data[0] - tokenSaleCap <= sub_463626d6 - roundTokenCap:
                            if (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap <= 0:
                                require msg.value > 0
                                require 10^18 * msg.value / price > 0
                                require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                sub_463626d6 += 10^18 * msg.value / price
                                require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                require msg.value + weiRaised >= weiRaised
                                weiRaised += msg.value
                                require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                tokensSold += 10^18 * msg.value / price
                                require 10^18 * msg.value / price <= sub_0d27577e
                                sub_0d27577e -= 10^18 * msg.value / price
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, 10^18 * msg.value / price
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, msg.sender);
                                call walletAddress with:
                                   value msg.value wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap <= 10^18 * msg.value / price
                                if not (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap:
                                    require 0 <= msg.value
                                    require msg.value > 0
                                    require -sub_463626d6 + roundTokenCap > 0
                                    require roundTokenCap >= sub_463626d6
                                    sub_463626d6 = roundTokenCap
                                    require roundTokenCap >= roundTokenCap
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                    tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                    require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                    sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, -sub_463626d6 + roundTokenCap
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value, -sub_463626d6 + roundTokenCap, 0, ethUsdRate, msg.sender, msg.sender);
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap == price
                                    require (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= msg.value
                                    require msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) > 0
                                    require -sub_463626d6 + roundTokenCap > 0
                                    require roundTokenCap >= sub_463626d6
                                    sub_463626d6 = roundTokenCap
                                    require roundTokenCap >= roundTokenCap
                                    require msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised >= weiRaised
                                    weiRaised = msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised
                                    require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                    tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                    require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                    sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, -sub_463626d6 + roundTokenCap
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18), -sub_463626d6 + roundTokenCap, (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18, ethUsdRate, msg.sender, msg.sender);
                                    call walletAddress with:
                                       value msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 > 0:
                                        call msg.sender with:
                                           value (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                require msg.value > 0
                                require 10^18 * msg.value / price > 0
                                require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                sub_463626d6 += 10^18 * msg.value / price
                                require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                require msg.value + weiRaised >= weiRaised
                                weiRaised += msg.value
                                require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                tokensSold += 10^18 * msg.value / price
                                require 10^18 * msg.value / price <= sub_0d27577e
                                sub_0d27577e -= 10^18 * msg.value / price
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, 10^18 * msg.value / price
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, msg.sender);
                                call walletAddress with:
                                   value msg.value wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 10^18 * msg.value / price
                                if not (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap:
                                    require 0 <= msg.value
                                    require msg.value > 0
                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                    require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                    sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                    require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                    sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, msg.sender);
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap == price
                                    require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                    require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                    require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                    sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                    require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                    require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                    weiRaised = msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                    sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, msg.sender);
                                    call walletAddress with:
                                       value msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 > 0:
                                        call msg.sender with:
                                           value (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
        if sub_463626d6 >= roundTokenCap:
            emit RoundEnded(sub_463626d6, roundTokenCap);
    else:
        if sub_fbde1348[address(msg.sender)].field_0 <= block.timestamp:
            require msg.value >= minimumPurchase
            require ext_code.size(tokenAddress)
            call tokenAddress.0xfa2299ee with:
                 gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require tokenSaleCap > ext_call.return_data[0]
            require roundTokenCap > sub_463626d6
            require 0 < price
            if not msg.value:
                require price
                require (0 / price) + sub_463626d6 >= sub_463626d6
                require ext_code.size(tokenAddress)
                call tokenAddress.0xfa2299ee with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require (0 / price) + ext_call.return_data[0] >= ext_call.return_data[0]
                if (0 / price) + sub_463626d6 <= roundTokenCap:
                    if (0 / price) + ext_call.return_data[0] <= tokenSaleCap:
                        require msg.value > 0
                        require 0 / price > 0
                        require (0 / price) + sub_463626d6 >= sub_463626d6
                        sub_463626d6 += 0 / price
                        require roundTokenCap >= (0 / price) + sub_463626d6
                        require msg.value + weiRaised >= weiRaised
                        weiRaised += msg.value
                        require (0 / price) + tokensSold >= tokensSold
                        tokensSold += 0 / price
                        require 0 / price <= sub_0d27577e
                        sub_0d27577e -= 0 / price
                        require ext_code.size(tokenAddress)
                        call tokenAddress.0x40c10f19 with:
                             gas gas_remaining wei
                            args msg.sender, 0 / price
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0]
                        emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, msg.sender);
                        call walletAddress with:
                           value msg.value wei
                             gas 2300 * is_zero(value) wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                            require msg.value > 0
                            require 0 / price > 0
                            require (0 / price) + sub_463626d6 >= sub_463626d6
                            sub_463626d6 += 0 / price
                            require roundTokenCap >= (0 / price) + sub_463626d6
                            require msg.value + weiRaised >= weiRaised
                            weiRaised += msg.value
                            require (0 / price) + tokensSold >= tokensSold
                            tokensSold += 0 / price
                            require 0 / price <= sub_0d27577e
                            sub_0d27577e -= 0 / price
                            require ext_code.size(tokenAddress)
                            call tokenAddress.0x40c10f19 with:
                                 gas gas_remaining wei
                                args msg.sender, 0 / price
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0]
                            emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, msg.sender);
                            call walletAddress with:
                               value msg.value wei
                                 gas 2300 * is_zero(value) wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                        else:
                            require (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0 / price
                            if not (0 / price) + ext_call.return_data[0] - tokenSaleCap:
                                require 0 <= msg.value
                                require msg.value > 0
                                require -ext_call.return_data[0] + tokenSaleCap > 0
                                require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                require msg.value + weiRaised >= weiRaised
                                weiRaised += msg.value
                                require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, msg.sender);
                                call walletAddress with:
                                   value msg.value wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (0 / price) + ext_call.return_data[0] - tokenSaleCap == price
                                require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                require -ext_call.return_data[0] + tokenSaleCap > 0
                                require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                weiRaised = msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit TokenPurchase(price, msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, msg.sender);
                                call walletAddress with:
                                   value msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 > 0:
                                    call msg.sender with:
                                       value (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                else:
                    if (0 / price) + sub_463626d6 - roundTokenCap <= 0:
                        if (0 / price) + ext_call.return_data[0] <= tokenSaleCap:
                            require msg.value > 0
                            require 0 / price > 0
                            require (0 / price) + sub_463626d6 >= sub_463626d6
                            sub_463626d6 += 0 / price
                            require roundTokenCap >= (0 / price) + sub_463626d6
                            require msg.value + weiRaised >= weiRaised
                            weiRaised += msg.value
                            require (0 / price) + tokensSold >= tokensSold
                            tokensSold += 0 / price
                            require 0 / price <= sub_0d27577e
                            sub_0d27577e -= 0 / price
                            require ext_code.size(tokenAddress)
                            call tokenAddress.0x40c10f19 with:
                                 gas gas_remaining wei
                                args msg.sender, 0 / price
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0]
                            emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, msg.sender);
                            call walletAddress with:
                               value msg.value wei
                                 gas 2300 * is_zero(value) wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                require msg.value > 0
                                require 0 / price > 0
                                require (0 / price) + sub_463626d6 >= sub_463626d6
                                sub_463626d6 += 0 / price
                                require roundTokenCap >= (0 / price) + sub_463626d6
                                require msg.value + weiRaised >= weiRaised
                                weiRaised += msg.value
                                require (0 / price) + tokensSold >= tokensSold
                                tokensSold += 0 / price
                                require 0 / price <= sub_0d27577e
                                sub_0d27577e -= 0 / price
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, 0 / price
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, msg.sender);
                                call walletAddress with:
                                   value msg.value wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0 / price
                                if not (0 / price) + ext_call.return_data[0] - tokenSaleCap:
                                    require 0 <= msg.value
                                    require msg.value > 0
                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                    require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                    sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                    require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                    sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, msg.sender);
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (0 / price) + ext_call.return_data[0] - tokenSaleCap == price
                                    require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                    require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                    require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                    sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                    require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                    require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                    weiRaised = msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                    sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, msg.sender);
                                    call walletAddress with:
                                       value msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 > 0:
                                        call msg.sender with:
                                           value (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if (0 / price) + ext_call.return_data[0] <= tokenSaleCap:
                            if (0 / price) + sub_463626d6 - roundTokenCap <= 0:
                                require msg.value > 0
                                require 0 / price > 0
                                require (0 / price) + sub_463626d6 >= sub_463626d6
                                sub_463626d6 += 0 / price
                                require roundTokenCap >= (0 / price) + sub_463626d6
                                require msg.value + weiRaised >= weiRaised
                                weiRaised += msg.value
                                require (0 / price) + tokensSold >= tokensSold
                                tokensSold += 0 / price
                                require 0 / price <= sub_0d27577e
                                sub_0d27577e -= 0 / price
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, 0 / price
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, msg.sender);
                                call walletAddress with:
                                   value msg.value wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require (0 / price) + sub_463626d6 - roundTokenCap <= 0 / price
                                if not (0 / price) + sub_463626d6 - roundTokenCap:
                                    require 0 <= msg.value
                                    require msg.value > 0
                                    require -sub_463626d6 + roundTokenCap > 0
                                    require roundTokenCap >= sub_463626d6
                                    sub_463626d6 = roundTokenCap
                                    require roundTokenCap >= roundTokenCap
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                    tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                    require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                    sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, -sub_463626d6 + roundTokenCap
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value, -sub_463626d6 + roundTokenCap, 0, ethUsdRate, msg.sender, msg.sender);
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / (0 / price) + sub_463626d6 - roundTokenCap == price
                                    require (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= msg.value
                                    require msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) > 0
                                    require -sub_463626d6 + roundTokenCap > 0
                                    require roundTokenCap >= sub_463626d6
                                    sub_463626d6 = roundTokenCap
                                    require roundTokenCap >= roundTokenCap
                                    require msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised >= weiRaised
                                    weiRaised = msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised
                                    require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                    tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                    require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                    sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, -sub_463626d6 + roundTokenCap
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18), -sub_463626d6 + roundTokenCap, (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18, ethUsdRate, msg.sender, msg.sender);
                                    call walletAddress with:
                                       value msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 > 0:
                                        call msg.sender with:
                                           value (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if ext_call.return_data[0] - tokenSaleCap <= sub_463626d6 - roundTokenCap:
                                if (0 / price) + sub_463626d6 - roundTokenCap <= 0:
                                    require msg.value > 0
                                    require 0 / price > 0
                                    require (0 / price) + sub_463626d6 >= sub_463626d6
                                    sub_463626d6 += 0 / price
                                    require roundTokenCap >= (0 / price) + sub_463626d6
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require (0 / price) + tokensSold >= tokensSold
                                    tokensSold += 0 / price
                                    require 0 / price <= sub_0d27577e
                                    sub_0d27577e -= 0 / price
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, 0 / price
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, msg.sender);
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (0 / price) + sub_463626d6 - roundTokenCap <= 0 / price
                                    if not (0 / price) + sub_463626d6 - roundTokenCap:
                                        require 0 <= msg.value
                                        require msg.value > 0
                                        require -sub_463626d6 + roundTokenCap > 0
                                        require roundTokenCap >= sub_463626d6
                                        sub_463626d6 = roundTokenCap
                                        require roundTokenCap >= roundTokenCap
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                        tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                        require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                        sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, -sub_463626d6 + roundTokenCap
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit TokenPurchase(price, msg.value, -sub_463626d6 + roundTokenCap, 0, ethUsdRate, msg.sender, msg.sender);
                                        call walletAddress with:
                                           value msg.value wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / (0 / price) + sub_463626d6 - roundTokenCap == price
                                        require (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= msg.value
                                        require msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) > 0
                                        require -sub_463626d6 + roundTokenCap > 0
                                        require roundTokenCap >= sub_463626d6
                                        sub_463626d6 = roundTokenCap
                                        require roundTokenCap >= roundTokenCap
                                        require msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised >= weiRaised
                                        weiRaised = msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised
                                        require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                        tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                        require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                        sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, -sub_463626d6 + roundTokenCap
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit TokenPurchase(price, msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18), -sub_463626d6 + roundTokenCap, (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18, ethUsdRate, msg.sender, msg.sender);
                                        call walletAddress with:
                                           value msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 > 0:
                                            call msg.sender with:
                                               value (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                    require msg.value > 0
                                    require 0 / price > 0
                                    require (0 / price) + sub_463626d6 >= sub_463626d6
                                    sub_463626d6 += 0 / price
                                    require roundTokenCap >= (0 / price) + sub_463626d6
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require (0 / price) + tokensSold >= tokensSold
                                    tokensSold += 0 / price
                                    require 0 / price <= sub_0d27577e
                                    sub_0d27577e -= 0 / price
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, 0 / price
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, msg.sender);
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0 / price
                                    if not (0 / price) + ext_call.return_data[0] - tokenSaleCap:
                                        require 0 <= msg.value
                                        require msg.value > 0
                                        require -ext_call.return_data[0] + tokenSaleCap > 0
                                        require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                        sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                        require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                        tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                        require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                        sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, msg.sender);
                                        call walletAddress with:
                                           value msg.value wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (0 / price) + ext_call.return_data[0] - tokenSaleCap == price
                                        require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                        require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                        require -ext_call.return_data[0] + tokenSaleCap > 0
                                        require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                        sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                        require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                        require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                        weiRaised = msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                        require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                        tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                        require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                        sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit TokenPurchase(price, msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, msg.sender);
                                        call walletAddress with:
                                           value msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 > 0:
                                            call msg.sender with:
                                               value (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
            else:
                require 10^18 * msg.value / msg.value == 10^18
                require price
                require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                require ext_code.size(tokenAddress)
                call tokenAddress.0xfa2299ee with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require (10^18 * msg.value / price) + ext_call.return_data[0] >= ext_call.return_data[0]
                if (10^18 * msg.value / price) + sub_463626d6 <= roundTokenCap:
                    if (10^18 * msg.value / price) + ext_call.return_data[0] <= tokenSaleCap:
                        require msg.value > 0
                        require 10^18 * msg.value / price > 0
                        require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                        sub_463626d6 += 10^18 * msg.value / price
                        require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                        require msg.value + weiRaised >= weiRaised
                        weiRaised += msg.value
                        require (10^18 * msg.value / price) + tokensSold >= tokensSold
                        tokensSold += 10^18 * msg.value / price
                        require 10^18 * msg.value / price <= sub_0d27577e
                        sub_0d27577e -= 10^18 * msg.value / price
                        require ext_code.size(tokenAddress)
                        call tokenAddress.0x40c10f19 with:
                             gas gas_remaining wei
                            args msg.sender, 10^18 * msg.value / price
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0]
                        emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, msg.sender);
                        call walletAddress with:
                           value msg.value wei
                             gas 2300 * is_zero(value) wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                            require msg.value > 0
                            require 10^18 * msg.value / price > 0
                            require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                            sub_463626d6 += 10^18 * msg.value / price
                            require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                            require msg.value + weiRaised >= weiRaised
                            weiRaised += msg.value
                            require (10^18 * msg.value / price) + tokensSold >= tokensSold
                            tokensSold += 10^18 * msg.value / price
                            require 10^18 * msg.value / price <= sub_0d27577e
                            sub_0d27577e -= 10^18 * msg.value / price
                            require ext_code.size(tokenAddress)
                            call tokenAddress.0x40c10f19 with:
                                 gas gas_remaining wei
                                args msg.sender, 10^18 * msg.value / price
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0]
                            emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, msg.sender);
                            call walletAddress with:
                               value msg.value wei
                                 gas 2300 * is_zero(value) wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                        else:
                            require (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 10^18 * msg.value / price
                            if not (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap:
                                require 0 <= msg.value
                                require msg.value > 0
                                require -ext_call.return_data[0] + tokenSaleCap > 0
                                require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                require msg.value + weiRaised >= weiRaised
                                weiRaised += msg.value
                                require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, msg.sender);
                                call walletAddress with:
                                   value msg.value wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap == price
                                require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                require -ext_call.return_data[0] + tokenSaleCap > 0
                                require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                weiRaised = msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit TokenPurchase(price, msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, msg.sender);
                                call walletAddress with:
                                   value msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 > 0:
                                    call msg.sender with:
                                       value (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                else:
                    if (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap <= 0:
                        if (10^18 * msg.value / price) + ext_call.return_data[0] <= tokenSaleCap:
                            require msg.value > 0
                            require 10^18 * msg.value / price > 0
                            require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                            sub_463626d6 += 10^18 * msg.value / price
                            require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                            require msg.value + weiRaised >= weiRaised
                            weiRaised += msg.value
                            require (10^18 * msg.value / price) + tokensSold >= tokensSold
                            tokensSold += 10^18 * msg.value / price
                            require 10^18 * msg.value / price <= sub_0d27577e
                            sub_0d27577e -= 10^18 * msg.value / price
                            require ext_code.size(tokenAddress)
                            call tokenAddress.0x40c10f19 with:
                                 gas gas_remaining wei
                                args msg.sender, 10^18 * msg.value / price
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0]
                            emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, msg.sender);
                            call walletAddress with:
                               value msg.value wei
                                 gas 2300 * is_zero(value) wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                require msg.value > 0
                                require 10^18 * msg.value / price > 0
                                require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                sub_463626d6 += 10^18 * msg.value / price
                                require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                require msg.value + weiRaised >= weiRaised
                                weiRaised += msg.value
                                require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                tokensSold += 10^18 * msg.value / price
                                require 10^18 * msg.value / price <= sub_0d27577e
                                sub_0d27577e -= 10^18 * msg.value / price
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, 10^18 * msg.value / price
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, msg.sender);
                                call walletAddress with:
                                   value msg.value wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 10^18 * msg.value / price
                                if not (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap:
                                    require 0 <= msg.value
                                    require msg.value > 0
                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                    require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                    sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                    require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                    sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, msg.sender);
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap == price
                                    require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                    require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                    require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                    sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                    require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                    require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                    weiRaised = msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                    sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, msg.sender);
                                    call walletAddress with:
                                       value msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 > 0:
                                        call msg.sender with:
                                           value (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if (10^18 * msg.value / price) + ext_call.return_data[0] <= tokenSaleCap:
                            if (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap <= 0:
                                require msg.value > 0
                                require 10^18 * msg.value / price > 0
                                require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                sub_463626d6 += 10^18 * msg.value / price
                                require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                require msg.value + weiRaised >= weiRaised
                                weiRaised += msg.value
                                require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                tokensSold += 10^18 * msg.value / price
                                require 10^18 * msg.value / price <= sub_0d27577e
                                sub_0d27577e -= 10^18 * msg.value / price
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, 10^18 * msg.value / price
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, msg.sender);
                                call walletAddress with:
                                   value msg.value wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap <= 10^18 * msg.value / price
                                if not (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap:
                                    require 0 <= msg.value
                                    require msg.value > 0
                                    require -sub_463626d6 + roundTokenCap > 0
                                    require roundTokenCap >= sub_463626d6
                                    sub_463626d6 = roundTokenCap
                                    require roundTokenCap >= roundTokenCap
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                    tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                    require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                    sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, -sub_463626d6 + roundTokenCap
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value, -sub_463626d6 + roundTokenCap, 0, ethUsdRate, msg.sender, msg.sender);
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap == price
                                    require (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= msg.value
                                    require msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) > 0
                                    require -sub_463626d6 + roundTokenCap > 0
                                    require roundTokenCap >= sub_463626d6
                                    sub_463626d6 = roundTokenCap
                                    require roundTokenCap >= roundTokenCap
                                    require msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised >= weiRaised
                                    weiRaised = msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised
                                    require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                    tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                    require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                    sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, -sub_463626d6 + roundTokenCap
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18), -sub_463626d6 + roundTokenCap, (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18, ethUsdRate, msg.sender, msg.sender);
                                    call walletAddress with:
                                       value msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 > 0:
                                        call msg.sender with:
                                           value (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if ext_call.return_data[0] - tokenSaleCap <= sub_463626d6 - roundTokenCap:
                                if (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap <= 0:
                                    require msg.value > 0
                                    require 10^18 * msg.value / price > 0
                                    require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                    sub_463626d6 += 10^18 * msg.value / price
                                    require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                    tokensSold += 10^18 * msg.value / price
                                    require 10^18 * msg.value / price <= sub_0d27577e
                                    sub_0d27577e -= 10^18 * msg.value / price
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, 10^18 * msg.value / price
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, msg.sender);
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap <= 10^18 * msg.value / price
                                    if not (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap:
                                        require 0 <= msg.value
                                        require msg.value > 0
                                        require -sub_463626d6 + roundTokenCap > 0
                                        require roundTokenCap >= sub_463626d6
                                        sub_463626d6 = roundTokenCap
                                        require roundTokenCap >= roundTokenCap
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                        tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                        require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                        sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, -sub_463626d6 + roundTokenCap
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit TokenPurchase(price, msg.value, -sub_463626d6 + roundTokenCap, 0, ethUsdRate, msg.sender, msg.sender);
                                        call walletAddress with:
                                           value msg.value wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap == price
                                        require (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= msg.value
                                        require msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) > 0
                                        require -sub_463626d6 + roundTokenCap > 0
                                        require roundTokenCap >= sub_463626d6
                                        sub_463626d6 = roundTokenCap
                                        require roundTokenCap >= roundTokenCap
                                        require msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised >= weiRaised
                                        weiRaised = msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised
                                        require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                        tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                        require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                        sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, -sub_463626d6 + roundTokenCap
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit TokenPurchase(price, msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18), -sub_463626d6 + roundTokenCap, (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18, ethUsdRate, msg.sender, msg.sender);
                                        call walletAddress with:
                                           value msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 > 0:
                                            call msg.sender with:
                                               value (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                    require msg.value > 0
                                    require 10^18 * msg.value / price > 0
                                    require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                    sub_463626d6 += 10^18 * msg.value / price
                                    require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                    tokensSold += 10^18 * msg.value / price
                                    require 10^18 * msg.value / price <= sub_0d27577e
                                    sub_0d27577e -= 10^18 * msg.value / price
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, 10^18 * msg.value / price
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, msg.sender);
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 10^18 * msg.value / price
                                    if not (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap:
                                        require 0 <= msg.value
                                        require msg.value > 0
                                        require -ext_call.return_data[0] + tokenSaleCap > 0
                                        require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                        sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                        require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                        tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                        require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                        sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, msg.sender);
                                        call walletAddress with:
                                           value msg.value wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap == price
                                        require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                        require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                        require -ext_call.return_data[0] + tokenSaleCap > 0
                                        require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                        sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                        require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                        require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                        weiRaised = msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                        require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                        tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                        require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                        sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit TokenPurchase(price, msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, msg.sender);
                                        call walletAddress with:
                                           value msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 > 0:
                                            call msg.sender with:
                                               value (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
            if sub_463626d6 >= roundTokenCap:
                emit RoundEnded(sub_463626d6, roundTokenCap);
        else:
            require ext_code.size(tokenAddress)
            call tokenAddress.0xfa2299ee with:
                 gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require tokenSaleCap > ext_call.return_data[0]
            require sub_fbde1348[address(msg.sender)].field_256 > 0
            if not msg.value:
                require sub_fbde1348[address(msg.sender)].field_256
                require 0 / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                require ext_code.size(tokenAddress)
                call tokenAddress.0xfa2299ee with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] >= ext_call.return_data[0]
                if 0 / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768:
                    if (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] <= tokenSaleCap:
                        require 0 / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                        require msg.value > 0
                        require 0 / sub_fbde1348[address(msg.sender)].field_256 > 0
                        require 0 / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                        require msg.value + weiRaised >= weiRaised
                        weiRaised += msg.value
                        require (0 / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                        tokensSold += 0 / sub_fbde1348[address(msg.sender)].field_256
                        require ext_code.size(tokenAddress)
                        call tokenAddress.0x40c10f19 with:
                             gas gas_remaining wei
                            args msg.sender, 0 / sub_fbde1348[address(msg.sender)].field_256
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0]
                        emit 0x93cae43c: price, msg.value, 0 / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, msg.sender
                        require msg.sender
                        if sub_fbde1348[address(msg.sender)].field_0 > 0:
                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                            sub_fbde1348[address(msg.sender)].field_0 = 0
                            sub_fbde1348[address(msg.sender)].field_256 = 0
                            sub_fbde1348[address(msg.sender)].field_512 = 0
                            sub_fbde1348[address(msg.sender)].field_768 = 0
                            stor16[address(msg.sender)].field_0 = 0
                            stor16[address(msg.sender)].field_256 = 0
                            emit 0x83e21c4d: msg.sender
                        call walletAddress with:
                           value msg.value wei
                             gas 2300 * is_zero(value) wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 0:
                            require 0 / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                            require msg.value > 0
                            require 0 / sub_fbde1348[address(msg.sender)].field_256 > 0
                            require 0 / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                            require msg.value + weiRaised >= weiRaised
                            weiRaised += msg.value
                            require (0 / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                            tokensSold += 0 / sub_fbde1348[address(msg.sender)].field_256
                            require ext_code.size(tokenAddress)
                            call tokenAddress.0x40c10f19 with:
                                 gas gas_remaining wei
                                args msg.sender, 0 / sub_fbde1348[address(msg.sender)].field_256
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0]
                            emit 0x93cae43c: price, msg.value, 0 / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, msg.sender
                            require msg.sender
                            if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                sub_fbde1348[address(msg.sender)].field_0 = 0
                                sub_fbde1348[address(msg.sender)].field_256 = 0
                                sub_fbde1348[address(msg.sender)].field_512 = 0
                                sub_fbde1348[address(msg.sender)].field_768 = 0
                                stor16[address(msg.sender)].field_0 = 0
                                stor16[address(msg.sender)].field_256 = 0
                                emit 0x83e21c4d: msg.sender
                            call walletAddress with:
                               value msg.value wei
                                 gas 2300 * is_zero(value) wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                        else:
                            require (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 0 / sub_fbde1348[address(msg.sender)].field_256
                            if not (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap:
                                require 0 <= msg.value
                                require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                require msg.value > 0
                                require -ext_call.return_data[0] + tokenSaleCap > 0
                                require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                require msg.value + weiRaised >= weiRaised
                                weiRaised += msg.value
                                require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit 0x93cae43c: price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, msg.sender, msg.sender
                                require msg.sender
                                if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                    require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                    sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                    stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                    stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                    sub_fbde1348[address(msg.sender)].field_0 = 0
                                    sub_fbde1348[address(msg.sender)].field_256 = 0
                                    sub_fbde1348[address(msg.sender)].field_512 = 0
                                    sub_fbde1348[address(msg.sender)].field_768 = 0
                                    stor16[address(msg.sender)].field_0 = 0
                                    stor16[address(msg.sender)].field_256 = 0
                                    emit 0x83e21c4d: msg.sender
                                call walletAddress with:
                                   value msg.value wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap == sub_fbde1348[address(msg.sender)].field_256
                                require (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= msg.value
                                require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                require msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) > 0
                                require -ext_call.return_data[0] + tokenSaleCap > 0
                                require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                require msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised >= weiRaised
                                weiRaised = msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised
                                require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit 0x93cae43c: price, msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18, msg.sender, msg.sender
                                require msg.sender
                                if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                    require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                    sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                    stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                    stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                    sub_fbde1348[address(msg.sender)].field_0 = 0
                                    sub_fbde1348[address(msg.sender)].field_256 = 0
                                    sub_fbde1348[address(msg.sender)].field_512 = 0
                                    sub_fbde1348[address(msg.sender)].field_768 = 0
                                    stor16[address(msg.sender)].field_0 = 0
                                    stor16[address(msg.sender)].field_256 = 0
                                    emit 0x83e21c4d: msg.sender
                                call walletAddress with:
                                   value msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 > 0:
                                    call msg.sender with:
                                       value (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                else:
                    if (0 / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 <= 0:
                        if (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] <= tokenSaleCap:
                            require 0 / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                            require msg.value > 0
                            require 0 / sub_fbde1348[address(msg.sender)].field_256 > 0
                            require 0 / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                            require msg.value + weiRaised >= weiRaised
                            weiRaised += msg.value
                            require (0 / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                            tokensSold += 0 / sub_fbde1348[address(msg.sender)].field_256
                            require ext_code.size(tokenAddress)
                            call tokenAddress.0x40c10f19 with:
                                 gas gas_remaining wei
                                args msg.sender, 0 / sub_fbde1348[address(msg.sender)].field_256
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0]
                            emit 0x93cae43c: price, msg.value, 0 / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, msg.sender
                            require msg.sender
                            if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                sub_fbde1348[address(msg.sender)].field_0 = 0
                                sub_fbde1348[address(msg.sender)].field_256 = 0
                                sub_fbde1348[address(msg.sender)].field_512 = 0
                                sub_fbde1348[address(msg.sender)].field_768 = 0
                                stor16[address(msg.sender)].field_0 = 0
                                stor16[address(msg.sender)].field_256 = 0
                                emit 0x83e21c4d: msg.sender
                            call walletAddress with:
                               value msg.value wei
                                 gas 2300 * is_zero(value) wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                require 0 / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                require msg.value > 0
                                require 0 / sub_fbde1348[address(msg.sender)].field_256 > 0
                                require 0 / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                require msg.value + weiRaised >= weiRaised
                                weiRaised += msg.value
                                require (0 / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                tokensSold += 0 / sub_fbde1348[address(msg.sender)].field_256
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, 0 / sub_fbde1348[address(msg.sender)].field_256
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit 0x93cae43c: price, msg.value, 0 / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, msg.sender
                                require msg.sender
                                if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                    require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                    sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                    stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                    stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                    sub_fbde1348[address(msg.sender)].field_0 = 0
                                    sub_fbde1348[address(msg.sender)].field_256 = 0
                                    sub_fbde1348[address(msg.sender)].field_512 = 0
                                    sub_fbde1348[address(msg.sender)].field_768 = 0
                                    stor16[address(msg.sender)].field_0 = 0
                                    stor16[address(msg.sender)].field_256 = 0
                                    emit 0x83e21c4d: msg.sender
                                call walletAddress with:
                                   value msg.value wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 0 / sub_fbde1348[address(msg.sender)].field_256
                                if not (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap:
                                    require 0 <= msg.value
                                    require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                    require msg.value > 0
                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit 0x93cae43c: price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, msg.sender, msg.sender
                                    require msg.sender
                                    if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                        sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                        stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                        stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                        sub_fbde1348[address(msg.sender)].field_0 = 0
                                        sub_fbde1348[address(msg.sender)].field_256 = 0
                                        sub_fbde1348[address(msg.sender)].field_512 = 0
                                        sub_fbde1348[address(msg.sender)].field_768 = 0
                                        stor16[address(msg.sender)].field_0 = 0
                                        stor16[address(msg.sender)].field_256 = 0
                                        emit 0x83e21c4d: msg.sender
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap == sub_fbde1348[address(msg.sender)].field_256
                                    require (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= msg.value
                                    require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                    require msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) > 0
                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                    require msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised >= weiRaised
                                    weiRaised = msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised
                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit 0x93cae43c: price, msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18, msg.sender, msg.sender
                                    require msg.sender
                                    if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                        sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                        stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                        stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                        sub_fbde1348[address(msg.sender)].field_0 = 0
                                        sub_fbde1348[address(msg.sender)].field_256 = 0
                                        sub_fbde1348[address(msg.sender)].field_512 = 0
                                        sub_fbde1348[address(msg.sender)].field_768 = 0
                                        stor16[address(msg.sender)].field_0 = 0
                                        stor16[address(msg.sender)].field_256 = 0
                                        emit 0x83e21c4d: msg.sender
                                    call walletAddress with:
                                       value msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 > 0:
                                        call msg.sender with:
                                           value (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] <= tokenSaleCap:
                            if (0 / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 <= 0:
                                require 0 / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                require msg.value > 0
                                require 0 / sub_fbde1348[address(msg.sender)].field_256 > 0
                                require 0 / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                require msg.value + weiRaised >= weiRaised
                                weiRaised += msg.value
                                require (0 / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                tokensSold += 0 / sub_fbde1348[address(msg.sender)].field_256
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, 0 / sub_fbde1348[address(msg.sender)].field_256
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit 0x93cae43c: price, msg.value, 0 / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, msg.sender
                                require msg.sender
                                if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                    require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                    sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                    stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                    stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                    sub_fbde1348[address(msg.sender)].field_0 = 0
                                    sub_fbde1348[address(msg.sender)].field_256 = 0
                                    sub_fbde1348[address(msg.sender)].field_512 = 0
                                    sub_fbde1348[address(msg.sender)].field_768 = 0
                                    stor16[address(msg.sender)].field_0 = 0
                                    stor16[address(msg.sender)].field_256 = 0
                                    emit 0x83e21c4d: msg.sender
                                call walletAddress with:
                                   value msg.value wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require (0 / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 <= 0 / sub_fbde1348[address(msg.sender)].field_256
                                if not (0 / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768:
                                    require 0 <= msg.value
                                    require sub_fbde1348[address(msg.sender)].field_768 >= sub_fbde1348[address(msg.sender)].field_512
                                    require msg.value > 0
                                    require sub_fbde1348[address(msg.sender)].field_768 > 0
                                    require sub_fbde1348[address(msg.sender)].field_768 <= sub_fbde1348[address(msg.sender)].field_768
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require sub_fbde1348[address(msg.sender)].field_768 + tokensSold >= tokensSold
                                    tokensSold += sub_fbde1348[address(msg.sender)].field_768
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, sub_fbde1348[address(msg.sender)].field_768
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit 0x93cae43c: price, msg.value, sub_fbde1348[address(msg.sender)].field_768, 0, msg.sender, msg.sender
                                    require msg.sender
                                    if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                        sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                        stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                        stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                        sub_fbde1348[address(msg.sender)].field_0 = 0
                                        sub_fbde1348[address(msg.sender)].field_256 = 0
                                        sub_fbde1348[address(msg.sender)].field_512 = 0
                                        sub_fbde1348[address(msg.sender)].field_768 = 0
                                        stor16[address(msg.sender)].field_0 = 0
                                        stor16[address(msg.sender)].field_256 = 0
                                        emit 0x83e21c4d: msg.sender
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / (0 / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 == sub_fbde1348[address(msg.sender)].field_256
                                    require (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= msg.value
                                    require sub_fbde1348[address(msg.sender)].field_768 >= sub_fbde1348[address(msg.sender)].field_512
                                    require msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) > 0
                                    require sub_fbde1348[address(msg.sender)].field_768 > 0
                                    require sub_fbde1348[address(msg.sender)].field_768 <= sub_fbde1348[address(msg.sender)].field_768
                                    require msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised >= weiRaised
                                    weiRaised = msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised
                                    require sub_fbde1348[address(msg.sender)].field_768 + tokensSold >= tokensSold
                                    tokensSold += sub_fbde1348[address(msg.sender)].field_768
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, sub_fbde1348[address(msg.sender)].field_768
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit 0x93cae43c: price, msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18), sub_fbde1348[address(msg.sender)].field_768, (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18, msg.sender, msg.sender
                                    require msg.sender
                                    if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                        sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                        stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                        stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                        sub_fbde1348[address(msg.sender)].field_0 = 0
                                        sub_fbde1348[address(msg.sender)].field_256 = 0
                                        sub_fbde1348[address(msg.sender)].field_512 = 0
                                        sub_fbde1348[address(msg.sender)].field_768 = 0
                                        stor16[address(msg.sender)].field_0 = 0
                                        stor16[address(msg.sender)].field_256 = 0
                                        emit 0x83e21c4d: msg.sender
                                    call walletAddress with:
                                       value msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 > 0:
                                        call msg.sender with:
                                           value (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if ext_call.return_data[0] - tokenSaleCap <= -sub_fbde1348[address(msg.sender)].field_768:
                                if (0 / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 <= 0:
                                    require 0 / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                    require msg.value > 0
                                    require 0 / sub_fbde1348[address(msg.sender)].field_256 > 0
                                    require 0 / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require (0 / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                    tokensSold += 0 / sub_fbde1348[address(msg.sender)].field_256
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, 0 / sub_fbde1348[address(msg.sender)].field_256
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit 0x93cae43c: price, msg.value, 0 / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, msg.sender
                                    require msg.sender
                                    if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                        sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                        stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                        stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                        sub_fbde1348[address(msg.sender)].field_0 = 0
                                        sub_fbde1348[address(msg.sender)].field_256 = 0
                                        sub_fbde1348[address(msg.sender)].field_512 = 0
                                        sub_fbde1348[address(msg.sender)].field_768 = 0
                                        stor16[address(msg.sender)].field_0 = 0
                                        stor16[address(msg.sender)].field_256 = 0
                                        emit 0x83e21c4d: msg.sender
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (0 / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 <= 0 / sub_fbde1348[address(msg.sender)].field_256
                                    if not (0 / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768:
                                        require 0 <= msg.value
                                        require sub_fbde1348[address(msg.sender)].field_768 >= sub_fbde1348[address(msg.sender)].field_512
                                        require msg.value > 0
                                        require sub_fbde1348[address(msg.sender)].field_768 > 0
                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_fbde1348[address(msg.sender)].field_768
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require sub_fbde1348[address(msg.sender)].field_768 + tokensSold >= tokensSold
                                        tokensSold += sub_fbde1348[address(msg.sender)].field_768
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, sub_fbde1348[address(msg.sender)].field_768
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit 0x93cae43c: price, msg.value, sub_fbde1348[address(msg.sender)].field_768, 0, msg.sender, msg.sender
                                        require msg.sender
                                        if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                            stor16[address(msg.sender)].field_0 = 0
                                            stor16[address(msg.sender)].field_256 = 0
                                            emit 0x83e21c4d: msg.sender
                                        call walletAddress with:
                                           value msg.value wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / (0 / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 == sub_fbde1348[address(msg.sender)].field_256
                                        require (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= msg.value
                                        require sub_fbde1348[address(msg.sender)].field_768 >= sub_fbde1348[address(msg.sender)].field_512
                                        require msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) > 0
                                        require sub_fbde1348[address(msg.sender)].field_768 > 0
                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_fbde1348[address(msg.sender)].field_768
                                        require msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised >= weiRaised
                                        weiRaised = msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised
                                        require sub_fbde1348[address(msg.sender)].field_768 + tokensSold >= tokensSold
                                        tokensSold += sub_fbde1348[address(msg.sender)].field_768
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, sub_fbde1348[address(msg.sender)].field_768
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit 0x93cae43c: price, msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18), sub_fbde1348[address(msg.sender)].field_768, (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18, msg.sender, msg.sender
                                        require msg.sender
                                        if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                            stor16[address(msg.sender)].field_0 = 0
                                            stor16[address(msg.sender)].field_256 = 0
                                            emit 0x83e21c4d: msg.sender
                                        call walletAddress with:
                                           value msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 > 0:
                                            call msg.sender with:
                                               value (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                    require 0 / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                    require msg.value > 0
                                    require 0 / sub_fbde1348[address(msg.sender)].field_256 > 0
                                    require 0 / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require (0 / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                    tokensSold += 0 / sub_fbde1348[address(msg.sender)].field_256
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, 0 / sub_fbde1348[address(msg.sender)].field_256
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit 0x93cae43c: price, msg.value, 0 / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, msg.sender
                                    require msg.sender
                                    if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                        sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                        stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                        stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                        sub_fbde1348[address(msg.sender)].field_0 = 0
                                        sub_fbde1348[address(msg.sender)].field_256 = 0
                                        sub_fbde1348[address(msg.sender)].field_512 = 0
                                        sub_fbde1348[address(msg.sender)].field_768 = 0
                                        stor16[address(msg.sender)].field_0 = 0
                                        stor16[address(msg.sender)].field_256 = 0
                                        emit 0x83e21c4d: msg.sender
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 0 / sub_fbde1348[address(msg.sender)].field_256
                                    if not (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap:
                                        require 0 <= msg.value
                                        require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                        require msg.value > 0
                                        require -ext_call.return_data[0] + tokenSaleCap > 0
                                        require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                        tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit 0x93cae43c: price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, msg.sender, msg.sender
                                        require msg.sender
                                        if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                            stor16[address(msg.sender)].field_0 = 0
                                            stor16[address(msg.sender)].field_256 = 0
                                            emit 0x83e21c4d: msg.sender
                                        call walletAddress with:
                                           value msg.value wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap == sub_fbde1348[address(msg.sender)].field_256
                                        require (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= msg.value
                                        require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                        require msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) > 0
                                        require -ext_call.return_data[0] + tokenSaleCap > 0
                                        require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                        require msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised >= weiRaised
                                        weiRaised = msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised
                                        require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                        tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit 0x93cae43c: price, msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18, msg.sender, msg.sender
                                        require msg.sender
                                        if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                            stor16[address(msg.sender)].field_0 = 0
                                            stor16[address(msg.sender)].field_256 = 0
                                            emit 0x83e21c4d: msg.sender
                                        call walletAddress with:
                                           value msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 > 0:
                                            call msg.sender with:
                                               value (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
            else:
                require 10^18 * msg.value / msg.value == 10^18
                require sub_fbde1348[address(msg.sender)].field_256
                require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                require ext_code.size(tokenAddress)
                call tokenAddress.0xfa2299ee with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] >= ext_call.return_data[0]
                if 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768:
                    if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] <= tokenSaleCap:
                        require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                        require msg.value > 0
                        require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 > 0
                        require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                        require msg.value + weiRaised >= weiRaised
                        weiRaised += msg.value
                        require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                        tokensSold += 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                        require ext_code.size(tokenAddress)
                        call tokenAddress.0x40c10f19 with:
                             gas gas_remaining wei
                            args msg.sender, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0]
                        emit 0x93cae43c: price, msg.value, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, msg.sender
                        require msg.sender
                        if sub_fbde1348[address(msg.sender)].field_0 > 0:
                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                            sub_fbde1348[address(msg.sender)].field_0 = 0
                            sub_fbde1348[address(msg.sender)].field_256 = 0
                            sub_fbde1348[address(msg.sender)].field_512 = 0
                            sub_fbde1348[address(msg.sender)].field_768 = 0
                            stor16[address(msg.sender)].field_0 = 0
                            stor16[address(msg.sender)].field_256 = 0
                            emit 0x83e21c4d: msg.sender
                        call walletAddress with:
                           value msg.value wei
                             gas 2300 * is_zero(value) wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 0:
                            require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                            require msg.value > 0
                            require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 > 0
                            require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                            require msg.value + weiRaised >= weiRaised
                            weiRaised += msg.value
                            require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                            tokensSold += 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                            require ext_code.size(tokenAddress)
                            call tokenAddress.0x40c10f19 with:
                                 gas gas_remaining wei
                                args msg.sender, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0]
                            emit 0x93cae43c: price, msg.value, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, msg.sender
                            require msg.sender
                            if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                sub_fbde1348[address(msg.sender)].field_0 = 0
                                sub_fbde1348[address(msg.sender)].field_256 = 0
                                sub_fbde1348[address(msg.sender)].field_512 = 0
                                sub_fbde1348[address(msg.sender)].field_768 = 0
                                stor16[address(msg.sender)].field_0 = 0
                                stor16[address(msg.sender)].field_256 = 0
                                emit 0x83e21c4d: msg.sender
                            call walletAddress with:
                               value msg.value wei
                                 gas 2300 * is_zero(value) wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                        else:
                            require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                            if not (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap:
                                require 0 <= msg.value
                                require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                require msg.value > 0
                                require -ext_call.return_data[0] + tokenSaleCap > 0
                                require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                require msg.value + weiRaised >= weiRaised
                                weiRaised += msg.value
                                require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit 0x93cae43c: price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, msg.sender, msg.sender
                                require msg.sender
                                if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                    require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                    sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                    stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                    stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                    sub_fbde1348[address(msg.sender)].field_0 = 0
                                    sub_fbde1348[address(msg.sender)].field_256 = 0
                                    sub_fbde1348[address(msg.sender)].field_512 = 0
                                    sub_fbde1348[address(msg.sender)].field_768 = 0
                                    stor16[address(msg.sender)].field_0 = 0
                                    stor16[address(msg.sender)].field_256 = 0
                                    emit 0x83e21c4d: msg.sender
                                call walletAddress with:
                                   value msg.value wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap == sub_fbde1348[address(msg.sender)].field_256
                                require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= msg.value
                                require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                require msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) > 0
                                require -ext_call.return_data[0] + tokenSaleCap > 0
                                require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                require msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised >= weiRaised
                                weiRaised = msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised
                                require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit 0x93cae43c: price, msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18, msg.sender, msg.sender
                                require msg.sender
                                if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                    require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                    sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                    stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                    stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                    sub_fbde1348[address(msg.sender)].field_0 = 0
                                    sub_fbde1348[address(msg.sender)].field_256 = 0
                                    sub_fbde1348[address(msg.sender)].field_512 = 0
                                    sub_fbde1348[address(msg.sender)].field_768 = 0
                                    stor16[address(msg.sender)].field_0 = 0
                                    stor16[address(msg.sender)].field_256 = 0
                                    emit 0x83e21c4d: msg.sender
                                call walletAddress with:
                                   value msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 > 0:
                                    call msg.sender with:
                                       value (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                else:
                    if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 <= 0:
                        if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] <= tokenSaleCap:
                            require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                            require msg.value > 0
                            require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 > 0
                            require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                            require msg.value + weiRaised >= weiRaised
                            weiRaised += msg.value
                            require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                            tokensSold += 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                            require ext_code.size(tokenAddress)
                            call tokenAddress.0x40c10f19 with:
                                 gas gas_remaining wei
                                args msg.sender, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0]
                            emit 0x93cae43c: price, msg.value, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, msg.sender
                            require msg.sender
                            if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                sub_fbde1348[address(msg.sender)].field_0 = 0
                                sub_fbde1348[address(msg.sender)].field_256 = 0
                                sub_fbde1348[address(msg.sender)].field_512 = 0
                                sub_fbde1348[address(msg.sender)].field_768 = 0
                                stor16[address(msg.sender)].field_0 = 0
                                stor16[address(msg.sender)].field_256 = 0
                                emit 0x83e21c4d: msg.sender
                            call walletAddress with:
                               value msg.value wei
                                 gas 2300 * is_zero(value) wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                require msg.value > 0
                                require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 > 0
                                require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                require msg.value + weiRaised >= weiRaised
                                weiRaised += msg.value
                                require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                tokensSold += 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit 0x93cae43c: price, msg.value, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, msg.sender
                                require msg.sender
                                if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                    require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                    sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                    stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                    stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                    sub_fbde1348[address(msg.sender)].field_0 = 0
                                    sub_fbde1348[address(msg.sender)].field_256 = 0
                                    sub_fbde1348[address(msg.sender)].field_512 = 0
                                    sub_fbde1348[address(msg.sender)].field_768 = 0
                                    stor16[address(msg.sender)].field_0 = 0
                                    stor16[address(msg.sender)].field_256 = 0
                                    emit 0x83e21c4d: msg.sender
                                call walletAddress with:
                                   value msg.value wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                if not (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap:
                                    require 0 <= msg.value
                                    require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                    require msg.value > 0
                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit 0x93cae43c: price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, msg.sender, msg.sender
                                    require msg.sender
                                    if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                        sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                        stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                        stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                        sub_fbde1348[address(msg.sender)].field_0 = 0
                                        sub_fbde1348[address(msg.sender)].field_256 = 0
                                        sub_fbde1348[address(msg.sender)].field_512 = 0
                                        sub_fbde1348[address(msg.sender)].field_768 = 0
                                        stor16[address(msg.sender)].field_0 = 0
                                        stor16[address(msg.sender)].field_256 = 0
                                        emit 0x83e21c4d: msg.sender
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap == sub_fbde1348[address(msg.sender)].field_256
                                    require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= msg.value
                                    require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                    require msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) > 0
                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                    require msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised >= weiRaised
                                    weiRaised = msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised
                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit 0x93cae43c: price, msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18, msg.sender, msg.sender
                                    require msg.sender
                                    if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                        sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                        stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                        stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                        sub_fbde1348[address(msg.sender)].field_0 = 0
                                        sub_fbde1348[address(msg.sender)].field_256 = 0
                                        sub_fbde1348[address(msg.sender)].field_512 = 0
                                        sub_fbde1348[address(msg.sender)].field_768 = 0
                                        stor16[address(msg.sender)].field_0 = 0
                                        stor16[address(msg.sender)].field_256 = 0
                                        emit 0x83e21c4d: msg.sender
                                    call walletAddress with:
                                       value msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 > 0:
                                        call msg.sender with:
                                           value (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] <= tokenSaleCap:
                            if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 <= 0:
                                require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                require msg.value > 0
                                require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 > 0
                                require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                require msg.value + weiRaised >= weiRaised
                                weiRaised += msg.value
                                require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                tokensSold += 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit 0x93cae43c: price, msg.value, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, msg.sender
                                require msg.sender
                                if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                    require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                    sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                    stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                    stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                    sub_fbde1348[address(msg.sender)].field_0 = 0
                                    sub_fbde1348[address(msg.sender)].field_256 = 0
                                    sub_fbde1348[address(msg.sender)].field_512 = 0
                                    sub_fbde1348[address(msg.sender)].field_768 = 0
                                    stor16[address(msg.sender)].field_0 = 0
                                    stor16[address(msg.sender)].field_256 = 0
                                    emit 0x83e21c4d: msg.sender
                                call walletAddress with:
                                   value msg.value wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 <= 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                if not (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768:
                                    require 0 <= msg.value
                                    require sub_fbde1348[address(msg.sender)].field_768 >= sub_fbde1348[address(msg.sender)].field_512
                                    require msg.value > 0
                                    require sub_fbde1348[address(msg.sender)].field_768 > 0
                                    require sub_fbde1348[address(msg.sender)].field_768 <= sub_fbde1348[address(msg.sender)].field_768
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require sub_fbde1348[address(msg.sender)].field_768 + tokensSold >= tokensSold
                                    tokensSold += sub_fbde1348[address(msg.sender)].field_768
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, sub_fbde1348[address(msg.sender)].field_768
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit 0x93cae43c: price, msg.value, sub_fbde1348[address(msg.sender)].field_768, 0, msg.sender, msg.sender
                                    require msg.sender
                                    if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                        sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                        stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                        stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                        sub_fbde1348[address(msg.sender)].field_0 = 0
                                        sub_fbde1348[address(msg.sender)].field_256 = 0
                                        sub_fbde1348[address(msg.sender)].field_512 = 0
                                        sub_fbde1348[address(msg.sender)].field_768 = 0
                                        stor16[address(msg.sender)].field_0 = 0
                                        stor16[address(msg.sender)].field_256 = 0
                                        emit 0x83e21c4d: msg.sender
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 == sub_fbde1348[address(msg.sender)].field_256
                                    require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= msg.value
                                    require sub_fbde1348[address(msg.sender)].field_768 >= sub_fbde1348[address(msg.sender)].field_512
                                    require msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) > 0
                                    require sub_fbde1348[address(msg.sender)].field_768 > 0
                                    require sub_fbde1348[address(msg.sender)].field_768 <= sub_fbde1348[address(msg.sender)].field_768
                                    require msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised >= weiRaised
                                    weiRaised = msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised
                                    require sub_fbde1348[address(msg.sender)].field_768 + tokensSold >= tokensSold
                                    tokensSold += sub_fbde1348[address(msg.sender)].field_768
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, sub_fbde1348[address(msg.sender)].field_768
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit 0x93cae43c: price, msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18), sub_fbde1348[address(msg.sender)].field_768, (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18, msg.sender, msg.sender
                                    require msg.sender
                                    if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                        sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                        stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                        stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                        sub_fbde1348[address(msg.sender)].field_0 = 0
                                        sub_fbde1348[address(msg.sender)].field_256 = 0
                                        sub_fbde1348[address(msg.sender)].field_512 = 0
                                        sub_fbde1348[address(msg.sender)].field_768 = 0
                                        stor16[address(msg.sender)].field_0 = 0
                                        stor16[address(msg.sender)].field_256 = 0
                                        emit 0x83e21c4d: msg.sender
                                    call walletAddress with:
                                       value msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 > 0:
                                        call msg.sender with:
                                           value (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if ext_call.return_data[0] - tokenSaleCap <= -sub_fbde1348[address(msg.sender)].field_768:
                                if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 <= 0:
                                    require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                    require msg.value > 0
                                    require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 > 0
                                    require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                    tokensSold += 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit 0x93cae43c: price, msg.value, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, msg.sender
                                    require msg.sender
                                    if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                        sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                        stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                        stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                        sub_fbde1348[address(msg.sender)].field_0 = 0
                                        sub_fbde1348[address(msg.sender)].field_256 = 0
                                        sub_fbde1348[address(msg.sender)].field_512 = 0
                                        sub_fbde1348[address(msg.sender)].field_768 = 0
                                        stor16[address(msg.sender)].field_0 = 0
                                        stor16[address(msg.sender)].field_256 = 0
                                        emit 0x83e21c4d: msg.sender
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 <= 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                    if not (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768:
                                        require 0 <= msg.value
                                        require sub_fbde1348[address(msg.sender)].field_768 >= sub_fbde1348[address(msg.sender)].field_512
                                        require msg.value > 0
                                        require sub_fbde1348[address(msg.sender)].field_768 > 0
                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_fbde1348[address(msg.sender)].field_768
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require sub_fbde1348[address(msg.sender)].field_768 + tokensSold >= tokensSold
                                        tokensSold += sub_fbde1348[address(msg.sender)].field_768
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, sub_fbde1348[address(msg.sender)].field_768
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit 0x93cae43c: price, msg.value, sub_fbde1348[address(msg.sender)].field_768, 0, msg.sender, msg.sender
                                        require msg.sender
                                        if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                            stor16[address(msg.sender)].field_0 = 0
                                            stor16[address(msg.sender)].field_256 = 0
                                            emit 0x83e21c4d: msg.sender
                                        call walletAddress with:
                                           value msg.value wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 == sub_fbde1348[address(msg.sender)].field_256
                                        require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= msg.value
                                        require sub_fbde1348[address(msg.sender)].field_768 >= sub_fbde1348[address(msg.sender)].field_512
                                        require msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) > 0
                                        require sub_fbde1348[address(msg.sender)].field_768 > 0
                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_fbde1348[address(msg.sender)].field_768
                                        require msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised >= weiRaised
                                        weiRaised = msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised
                                        require sub_fbde1348[address(msg.sender)].field_768 + tokensSold >= tokensSold
                                        tokensSold += sub_fbde1348[address(msg.sender)].field_768
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, sub_fbde1348[address(msg.sender)].field_768
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit 0x93cae43c: price, msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18), sub_fbde1348[address(msg.sender)].field_768, (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18, msg.sender, msg.sender
                                        require msg.sender
                                        if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                            stor16[address(msg.sender)].field_0 = 0
                                            stor16[address(msg.sender)].field_256 = 0
                                            emit 0x83e21c4d: msg.sender
                                        call walletAddress with:
                                           value msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 > 0:
                                            call msg.sender with:
                                               value (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                    require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                    require msg.value > 0
                                    require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 > 0
                                    require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                    tokensSold += 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit 0x93cae43c: price, msg.value, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, msg.sender
                                    require msg.sender
                                    if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                        sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                        stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                        stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                        sub_fbde1348[address(msg.sender)].field_0 = 0
                                        sub_fbde1348[address(msg.sender)].field_256 = 0
                                        sub_fbde1348[address(msg.sender)].field_512 = 0
                                        sub_fbde1348[address(msg.sender)].field_768 = 0
                                        stor16[address(msg.sender)].field_0 = 0
                                        stor16[address(msg.sender)].field_256 = 0
                                        emit 0x83e21c4d: msg.sender
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                    if not (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap:
                                        require 0 <= msg.value
                                        require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                        require msg.value > 0
                                        require -ext_call.return_data[0] + tokenSaleCap > 0
                                        require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                        tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit 0x93cae43c: price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, msg.sender, msg.sender
                                        require msg.sender
                                        if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                            stor16[address(msg.sender)].field_0 = 0
                                            stor16[address(msg.sender)].field_256 = 0
                                            emit 0x83e21c4d: msg.sender
                                        call walletAddress with:
                                           value msg.value wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap == sub_fbde1348[address(msg.sender)].field_256
                                        require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= msg.value
                                        require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                        require msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) > 0
                                        require -ext_call.return_data[0] + tokenSaleCap > 0
                                        require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                        require msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised >= weiRaised
                                        weiRaised = msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised
                                        require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                        tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit 0x93cae43c: price, msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18, msg.sender, msg.sender
                                        require msg.sender
                                        if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                            stor16[address(msg.sender)].field_0 = 0
                                            stor16[address(msg.sender)].field_256 = 0
                                            emit 0x83e21c4d: msg.sender
                                        call walletAddress with:
                                           value msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 > 0:
                                            call msg.sender with:
                                               value (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
}

function sub_a24a3033(?) payable {
    require stor15
    require msg.value > 0
    require arg1
    require not stor12
    if sub_fbde1348[address(msg.sender)].field_0 <= 0:
        require msg.value >= minimumPurchase
        require ext_code.size(tokenAddress)
        call tokenAddress.0xfa2299ee with:
             gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require tokenSaleCap > ext_call.return_data[0]
        require roundTokenCap > sub_463626d6
        require 0 < price
        if not msg.value:
            require price
            if not arg2:
                require msg.value > 0
                require 0 / price > 0
                require (0 / price) + sub_463626d6 >= sub_463626d6
                sub_463626d6 += 0 / price
                require roundTokenCap >= (0 / price) + sub_463626d6
                require msg.value + weiRaised >= weiRaised
                weiRaised += msg.value
                require (0 / price) + tokensSold >= tokensSold
                tokensSold += 0 / price
                require 0 / price <= sub_0d27577e
                sub_0d27577e -= 0 / price
                require ext_code.size(tokenAddress)
                call tokenAddress.0x40c10f19 with:
                     gas gas_remaining wei
                    args address(arg1), 0 / price
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0]
                emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, arg1);
                call walletAddress with:
                   value msg.value wei
                     gas 2300 * is_zero(value) wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
            else:
                require (0 / price) + sub_463626d6 >= sub_463626d6
                require ext_code.size(tokenAddress)
                call tokenAddress.0xfa2299ee with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require (0 / price) + ext_call.return_data[0] >= ext_call.return_data[0]
                if (0 / price) + sub_463626d6 <= roundTokenCap:
                    if (0 / price) + ext_call.return_data[0] <= tokenSaleCap:
                        require msg.value > 0
                        require 0 / price > 0
                        require (0 / price) + sub_463626d6 >= sub_463626d6
                        sub_463626d6 += 0 / price
                        require roundTokenCap >= (0 / price) + sub_463626d6
                        require msg.value + weiRaised >= weiRaised
                        weiRaised += msg.value
                        require (0 / price) + tokensSold >= tokensSold
                        tokensSold += 0 / price
                        require 0 / price <= sub_0d27577e
                        sub_0d27577e -= 0 / price
                        require ext_code.size(tokenAddress)
                        call tokenAddress.0x40c10f19 with:
                             gas gas_remaining wei
                            args address(arg1), 0 / price
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0]
                        emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, arg1);
                        call walletAddress with:
                           value msg.value wei
                             gas 2300 * is_zero(value) wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                            require msg.value > 0
                            require 0 / price > 0
                            require (0 / price) + sub_463626d6 >= sub_463626d6
                            sub_463626d6 += 0 / price
                            require roundTokenCap >= (0 / price) + sub_463626d6
                            require msg.value + weiRaised >= weiRaised
                            weiRaised += msg.value
                            require (0 / price) + tokensSold >= tokensSold
                            tokensSold += 0 / price
                            require 0 / price <= sub_0d27577e
                            sub_0d27577e -= 0 / price
                            require ext_code.size(tokenAddress)
                            call tokenAddress.0x40c10f19 with:
                                 gas gas_remaining wei
                                args address(arg1), 0 / price
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0]
                            emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, arg1);
                            call walletAddress with:
                               value msg.value wei
                                 gas 2300 * is_zero(value) wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                        else:
                            require (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0 / price
                            if not (0 / price) + ext_call.return_data[0] - tokenSaleCap:
                                require 0 <= msg.value
                                require msg.value > 0
                                require -ext_call.return_data[0] + tokenSaleCap > 0
                                require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                require msg.value + weiRaised >= weiRaised
                                weiRaised += msg.value
                                require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, arg1);
                                call walletAddress with:
                                   value msg.value wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (0 / price) + ext_call.return_data[0] - tokenSaleCap == price
                                require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                require -ext_call.return_data[0] + tokenSaleCap > 0
                                require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                weiRaised = msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit TokenPurchase(price, msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                call walletAddress with:
                                   value msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 > 0:
                                    call msg.sender with:
                                       value (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                else:
                    if (0 / price) + sub_463626d6 - roundTokenCap <= 0:
                        if (0 / price) + ext_call.return_data[0] <= tokenSaleCap:
                            require msg.value > 0
                            require 0 / price > 0
                            require (0 / price) + sub_463626d6 >= sub_463626d6
                            sub_463626d6 += 0 / price
                            require roundTokenCap >= (0 / price) + sub_463626d6
                            require msg.value + weiRaised >= weiRaised
                            weiRaised += msg.value
                            require (0 / price) + tokensSold >= tokensSold
                            tokensSold += 0 / price
                            require 0 / price <= sub_0d27577e
                            sub_0d27577e -= 0 / price
                            require ext_code.size(tokenAddress)
                            call tokenAddress.0x40c10f19 with:
                                 gas gas_remaining wei
                                args address(arg1), 0 / price
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0]
                            emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, arg1);
                            call walletAddress with:
                               value msg.value wei
                                 gas 2300 * is_zero(value) wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                require msg.value > 0
                                require 0 / price > 0
                                require (0 / price) + sub_463626d6 >= sub_463626d6
                                sub_463626d6 += 0 / price
                                require roundTokenCap >= (0 / price) + sub_463626d6
                                require msg.value + weiRaised >= weiRaised
                                weiRaised += msg.value
                                require (0 / price) + tokensSold >= tokensSold
                                tokensSold += 0 / price
                                require 0 / price <= sub_0d27577e
                                sub_0d27577e -= 0 / price
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args address(arg1), 0 / price
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, arg1);
                                call walletAddress with:
                                   value msg.value wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0 / price
                                if not (0 / price) + ext_call.return_data[0] - tokenSaleCap:
                                    require 0 <= msg.value
                                    require msg.value > 0
                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                    require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                    sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                    require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                    sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, arg1);
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (0 / price) + ext_call.return_data[0] - tokenSaleCap == price
                                    require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                    require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                    require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                    sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                    require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                    require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                    weiRaised = msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                    sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                    call walletAddress with:
                                       value msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 > 0:
                                        call msg.sender with:
                                           value (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if (0 / price) + ext_call.return_data[0] <= tokenSaleCap:
                            if (0 / price) + sub_463626d6 - roundTokenCap <= 0:
                                require msg.value > 0
                                require 0 / price > 0
                                require (0 / price) + sub_463626d6 >= sub_463626d6
                                sub_463626d6 += 0 / price
                                require roundTokenCap >= (0 / price) + sub_463626d6
                                require msg.value + weiRaised >= weiRaised
                                weiRaised += msg.value
                                require (0 / price) + tokensSold >= tokensSold
                                tokensSold += 0 / price
                                require 0 / price <= sub_0d27577e
                                sub_0d27577e -= 0 / price
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args address(arg1), 0 / price
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, arg1);
                                call walletAddress with:
                                   value msg.value wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require (0 / price) + sub_463626d6 - roundTokenCap <= 0 / price
                                if not (0 / price) + sub_463626d6 - roundTokenCap:
                                    require 0 <= msg.value
                                    require msg.value > 0
                                    require -sub_463626d6 + roundTokenCap > 0
                                    require roundTokenCap >= sub_463626d6
                                    sub_463626d6 = roundTokenCap
                                    require roundTokenCap >= roundTokenCap
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                    tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                    require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                    sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args address(arg1), -sub_463626d6 + roundTokenCap
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value, -sub_463626d6 + roundTokenCap, 0, ethUsdRate, msg.sender, arg1);
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / (0 / price) + sub_463626d6 - roundTokenCap == price
                                    require (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= msg.value
                                    require msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) > 0
                                    require -sub_463626d6 + roundTokenCap > 0
                                    require roundTokenCap >= sub_463626d6
                                    sub_463626d6 = roundTokenCap
                                    require roundTokenCap >= roundTokenCap
                                    require msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised >= weiRaised
                                    weiRaised = msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised
                                    require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                    tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                    require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                    sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args address(arg1), -sub_463626d6 + roundTokenCap
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18), -sub_463626d6 + roundTokenCap, (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                    call walletAddress with:
                                       value msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 > 0:
                                        call msg.sender with:
                                           value (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if ext_call.return_data[0] - tokenSaleCap <= sub_463626d6 - roundTokenCap:
                                if (0 / price) + sub_463626d6 - roundTokenCap <= 0:
                                    require msg.value > 0
                                    require 0 / price > 0
                                    require (0 / price) + sub_463626d6 >= sub_463626d6
                                    sub_463626d6 += 0 / price
                                    require roundTokenCap >= (0 / price) + sub_463626d6
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require (0 / price) + tokensSold >= tokensSold
                                    tokensSold += 0 / price
                                    require 0 / price <= sub_0d27577e
                                    sub_0d27577e -= 0 / price
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args address(arg1), 0 / price
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, arg1);
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (0 / price) + sub_463626d6 - roundTokenCap <= 0 / price
                                    if not (0 / price) + sub_463626d6 - roundTokenCap:
                                        require 0 <= msg.value
                                        require msg.value > 0
                                        require -sub_463626d6 + roundTokenCap > 0
                                        require roundTokenCap >= sub_463626d6
                                        sub_463626d6 = roundTokenCap
                                        require roundTokenCap >= roundTokenCap
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                        tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                        require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                        sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args address(arg1), -sub_463626d6 + roundTokenCap
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit TokenPurchase(price, msg.value, -sub_463626d6 + roundTokenCap, 0, ethUsdRate, msg.sender, arg1);
                                        call walletAddress with:
                                           value msg.value wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / (0 / price) + sub_463626d6 - roundTokenCap == price
                                        require (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= msg.value
                                        require msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) > 0
                                        require -sub_463626d6 + roundTokenCap > 0
                                        require roundTokenCap >= sub_463626d6
                                        sub_463626d6 = roundTokenCap
                                        require roundTokenCap >= roundTokenCap
                                        require msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised >= weiRaised
                                        weiRaised = msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised
                                        require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                        tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                        require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                        sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args address(arg1), -sub_463626d6 + roundTokenCap
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit TokenPurchase(price, msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18), -sub_463626d6 + roundTokenCap, (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                        call walletAddress with:
                                           value msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 > 0:
                                            call msg.sender with:
                                               value (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                    require msg.value > 0
                                    require 0 / price > 0
                                    require (0 / price) + sub_463626d6 >= sub_463626d6
                                    sub_463626d6 += 0 / price
                                    require roundTokenCap >= (0 / price) + sub_463626d6
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require (0 / price) + tokensSold >= tokensSold
                                    tokensSold += 0 / price
                                    require 0 / price <= sub_0d27577e
                                    sub_0d27577e -= 0 / price
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args address(arg1), 0 / price
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, arg1);
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0 / price
                                    if not (0 / price) + ext_call.return_data[0] - tokenSaleCap:
                                        require 0 <= msg.value
                                        require msg.value > 0
                                        require -ext_call.return_data[0] + tokenSaleCap > 0
                                        require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                        sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                        require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                        tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                        require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                        sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, arg1);
                                        call walletAddress with:
                                           value msg.value wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (0 / price) + ext_call.return_data[0] - tokenSaleCap == price
                                        require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                        require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                        require -ext_call.return_data[0] + tokenSaleCap > 0
                                        require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                        sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                        require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                        require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                        weiRaised = msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                        require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                        tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                        require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                        sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit TokenPurchase(price, msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                        call walletAddress with:
                                           value msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 > 0:
                                            call msg.sender with:
                                               value (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
        else:
            require 10^18 * msg.value / msg.value == 10^18
            require price
            if not arg2:
                require msg.value > 0
                require 10^18 * msg.value / price > 0
                require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                sub_463626d6 += 10^18 * msg.value / price
                require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                require msg.value + weiRaised >= weiRaised
                weiRaised += msg.value
                require (10^18 * msg.value / price) + tokensSold >= tokensSold
                tokensSold += 10^18 * msg.value / price
                require 10^18 * msg.value / price <= sub_0d27577e
                sub_0d27577e -= 10^18 * msg.value / price
                require ext_code.size(tokenAddress)
                call tokenAddress.0x40c10f19 with:
                     gas gas_remaining wei
                    args address(arg1), 10^18 * msg.value / price
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0]
                emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, arg1);
                call walletAddress with:
                   value msg.value wei
                     gas 2300 * is_zero(value) wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
            else:
                require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                require ext_code.size(tokenAddress)
                call tokenAddress.0xfa2299ee with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require (10^18 * msg.value / price) + ext_call.return_data[0] >= ext_call.return_data[0]
                if (10^18 * msg.value / price) + sub_463626d6 <= roundTokenCap:
                    if (10^18 * msg.value / price) + ext_call.return_data[0] <= tokenSaleCap:
                        require msg.value > 0
                        require 10^18 * msg.value / price > 0
                        require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                        sub_463626d6 += 10^18 * msg.value / price
                        require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                        require msg.value + weiRaised >= weiRaised
                        weiRaised += msg.value
                        require (10^18 * msg.value / price) + tokensSold >= tokensSold
                        tokensSold += 10^18 * msg.value / price
                        require 10^18 * msg.value / price <= sub_0d27577e
                        sub_0d27577e -= 10^18 * msg.value / price
                        require ext_code.size(tokenAddress)
                        call tokenAddress.0x40c10f19 with:
                             gas gas_remaining wei
                            args address(arg1), 10^18 * msg.value / price
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0]
                        emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, arg1);
                        call walletAddress with:
                           value msg.value wei
                             gas 2300 * is_zero(value) wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                            require msg.value > 0
                            require 10^18 * msg.value / price > 0
                            require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                            sub_463626d6 += 10^18 * msg.value / price
                            require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                            require msg.value + weiRaised >= weiRaised
                            weiRaised += msg.value
                            require (10^18 * msg.value / price) + tokensSold >= tokensSold
                            tokensSold += 10^18 * msg.value / price
                            require 10^18 * msg.value / price <= sub_0d27577e
                            sub_0d27577e -= 10^18 * msg.value / price
                            require ext_code.size(tokenAddress)
                            call tokenAddress.0x40c10f19 with:
                                 gas gas_remaining wei
                                args address(arg1), 10^18 * msg.value / price
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0]
                            emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, arg1);
                            call walletAddress with:
                               value msg.value wei
                                 gas 2300 * is_zero(value) wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                        else:
                            require (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 10^18 * msg.value / price
                            if not (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap:
                                require 0 <= msg.value
                                require msg.value > 0
                                require -ext_call.return_data[0] + tokenSaleCap > 0
                                require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                require msg.value + weiRaised >= weiRaised
                                weiRaised += msg.value
                                require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, arg1);
                                call walletAddress with:
                                   value msg.value wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap == price
                                require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                require -ext_call.return_data[0] + tokenSaleCap > 0
                                require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                weiRaised = msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit TokenPurchase(price, msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                call walletAddress with:
                                   value msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 > 0:
                                    call msg.sender with:
                                       value (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                else:
                    if (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap <= 0:
                        if (10^18 * msg.value / price) + ext_call.return_data[0] <= tokenSaleCap:
                            require msg.value > 0
                            require 10^18 * msg.value / price > 0
                            require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                            sub_463626d6 += 10^18 * msg.value / price
                            require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                            require msg.value + weiRaised >= weiRaised
                            weiRaised += msg.value
                            require (10^18 * msg.value / price) + tokensSold >= tokensSold
                            tokensSold += 10^18 * msg.value / price
                            require 10^18 * msg.value / price <= sub_0d27577e
                            sub_0d27577e -= 10^18 * msg.value / price
                            require ext_code.size(tokenAddress)
                            call tokenAddress.0x40c10f19 with:
                                 gas gas_remaining wei
                                args address(arg1), 10^18 * msg.value / price
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0]
                            emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, arg1);
                            call walletAddress with:
                               value msg.value wei
                                 gas 2300 * is_zero(value) wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                require msg.value > 0
                                require 10^18 * msg.value / price > 0
                                require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                sub_463626d6 += 10^18 * msg.value / price
                                require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                require msg.value + weiRaised >= weiRaised
                                weiRaised += msg.value
                                require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                tokensSold += 10^18 * msg.value / price
                                require 10^18 * msg.value / price <= sub_0d27577e
                                sub_0d27577e -= 10^18 * msg.value / price
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args address(arg1), 10^18 * msg.value / price
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, arg1);
                                call walletAddress with:
                                   value msg.value wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 10^18 * msg.value / price
                                if not (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap:
                                    require 0 <= msg.value
                                    require msg.value > 0
                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                    require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                    sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                    require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                    sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, arg1);
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap == price
                                    require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                    require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                    require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                    sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                    require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                    require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                    weiRaised = msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                    sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                    call walletAddress with:
                                       value msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 > 0:
                                        call msg.sender with:
                                           value (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if (10^18 * msg.value / price) + ext_call.return_data[0] <= tokenSaleCap:
                            if (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap <= 0:
                                require msg.value > 0
                                require 10^18 * msg.value / price > 0
                                require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                sub_463626d6 += 10^18 * msg.value / price
                                require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                require msg.value + weiRaised >= weiRaised
                                weiRaised += msg.value
                                require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                tokensSold += 10^18 * msg.value / price
                                require 10^18 * msg.value / price <= sub_0d27577e
                                sub_0d27577e -= 10^18 * msg.value / price
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args address(arg1), 10^18 * msg.value / price
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, arg1);
                                call walletAddress with:
                                   value msg.value wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap <= 10^18 * msg.value / price
                                if not (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap:
                                    require 0 <= msg.value
                                    require msg.value > 0
                                    require -sub_463626d6 + roundTokenCap > 0
                                    require roundTokenCap >= sub_463626d6
                                    sub_463626d6 = roundTokenCap
                                    require roundTokenCap >= roundTokenCap
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                    tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                    require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                    sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args address(arg1), -sub_463626d6 + roundTokenCap
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value, -sub_463626d6 + roundTokenCap, 0, ethUsdRate, msg.sender, arg1);
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap == price
                                    require (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= msg.value
                                    require msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) > 0
                                    require -sub_463626d6 + roundTokenCap > 0
                                    require roundTokenCap >= sub_463626d6
                                    sub_463626d6 = roundTokenCap
                                    require roundTokenCap >= roundTokenCap
                                    require msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised >= weiRaised
                                    weiRaised = msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised
                                    require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                    tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                    require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                    sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args address(arg1), -sub_463626d6 + roundTokenCap
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18), -sub_463626d6 + roundTokenCap, (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                    call walletAddress with:
                                       value msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 > 0:
                                        call msg.sender with:
                                           value (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if ext_call.return_data[0] - tokenSaleCap <= sub_463626d6 - roundTokenCap:
                                if (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap <= 0:
                                    require msg.value > 0
                                    require 10^18 * msg.value / price > 0
                                    require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                    sub_463626d6 += 10^18 * msg.value / price
                                    require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                    tokensSold += 10^18 * msg.value / price
                                    require 10^18 * msg.value / price <= sub_0d27577e
                                    sub_0d27577e -= 10^18 * msg.value / price
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args address(arg1), 10^18 * msg.value / price
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, arg1);
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap <= 10^18 * msg.value / price
                                    if not (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap:
                                        require 0 <= msg.value
                                        require msg.value > 0
                                        require -sub_463626d6 + roundTokenCap > 0
                                        require roundTokenCap >= sub_463626d6
                                        sub_463626d6 = roundTokenCap
                                        require roundTokenCap >= roundTokenCap
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                        tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                        require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                        sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args address(arg1), -sub_463626d6 + roundTokenCap
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit TokenPurchase(price, msg.value, -sub_463626d6 + roundTokenCap, 0, ethUsdRate, msg.sender, arg1);
                                        call walletAddress with:
                                           value msg.value wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap == price
                                        require (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= msg.value
                                        require msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) > 0
                                        require -sub_463626d6 + roundTokenCap > 0
                                        require roundTokenCap >= sub_463626d6
                                        sub_463626d6 = roundTokenCap
                                        require roundTokenCap >= roundTokenCap
                                        require msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised >= weiRaised
                                        weiRaised = msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised
                                        require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                        tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                        require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                        sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args address(arg1), -sub_463626d6 + roundTokenCap
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit TokenPurchase(price, msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18), -sub_463626d6 + roundTokenCap, (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                        call walletAddress with:
                                           value msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 > 0:
                                            call msg.sender with:
                                               value (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                    require msg.value > 0
                                    require 10^18 * msg.value / price > 0
                                    require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                    sub_463626d6 += 10^18 * msg.value / price
                                    require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                    tokensSold += 10^18 * msg.value / price
                                    require 10^18 * msg.value / price <= sub_0d27577e
                                    sub_0d27577e -= 10^18 * msg.value / price
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args address(arg1), 10^18 * msg.value / price
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, arg1);
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 10^18 * msg.value / price
                                    if not (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap:
                                        require 0 <= msg.value
                                        require msg.value > 0
                                        require -ext_call.return_data[0] + tokenSaleCap > 0
                                        require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                        sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                        require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                        tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                        require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                        sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, arg1);
                                        call walletAddress with:
                                           value msg.value wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap == price
                                        require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                        require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                        require -ext_call.return_data[0] + tokenSaleCap > 0
                                        require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                        sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                        require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                        require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                        weiRaised = msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                        require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                        tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                        require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                        sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit TokenPurchase(price, msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                        call walletAddress with:
                                           value msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 > 0:
                                            call msg.sender with:
                                               value (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
        if sub_463626d6 >= roundTokenCap:
            emit RoundEnded(sub_463626d6, roundTokenCap);
    else:
        if sub_fbde1348[address(msg.sender)].field_0 <= block.timestamp:
            require msg.value >= minimumPurchase
            require ext_code.size(tokenAddress)
            call tokenAddress.0xfa2299ee with:
                 gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require tokenSaleCap > ext_call.return_data[0]
            require roundTokenCap > sub_463626d6
            require 0 < price
            if not msg.value:
                require price
                if not arg2:
                    require msg.value > 0
                    require 0 / price > 0
                    require (0 / price) + sub_463626d6 >= sub_463626d6
                    sub_463626d6 += 0 / price
                    require roundTokenCap >= (0 / price) + sub_463626d6
                    require msg.value + weiRaised >= weiRaised
                    weiRaised += msg.value
                    require (0 / price) + tokensSold >= tokensSold
                    tokensSold += 0 / price
                    require 0 / price <= sub_0d27577e
                    sub_0d27577e -= 0 / price
                    require ext_code.size(tokenAddress)
                    call tokenAddress.0x40c10f19 with:
                         gas gas_remaining wei
                        args address(arg1), 0 / price
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0]
                    emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, arg1);
                    call walletAddress with:
                       value msg.value wei
                         gas 2300 * is_zero(value) wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                else:
                    require (0 / price) + sub_463626d6 >= sub_463626d6
                    require ext_code.size(tokenAddress)
                    call tokenAddress.0xfa2299ee with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (0 / price) + ext_call.return_data[0] >= ext_call.return_data[0]
                    if (0 / price) + sub_463626d6 <= roundTokenCap:
                        if (0 / price) + ext_call.return_data[0] <= tokenSaleCap:
                            require msg.value > 0
                            require 0 / price > 0
                            require (0 / price) + sub_463626d6 >= sub_463626d6
                            sub_463626d6 += 0 / price
                            require roundTokenCap >= (0 / price) + sub_463626d6
                            require msg.value + weiRaised >= weiRaised
                            weiRaised += msg.value
                            require (0 / price) + tokensSold >= tokensSold
                            tokensSold += 0 / price
                            require 0 / price <= sub_0d27577e
                            sub_0d27577e -= 0 / price
                            require ext_code.size(tokenAddress)
                            call tokenAddress.0x40c10f19 with:
                                 gas gas_remaining wei
                                args address(arg1), 0 / price
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0]
                            emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, arg1);
                            call walletAddress with:
                               value msg.value wei
                                 gas 2300 * is_zero(value) wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                require msg.value > 0
                                require 0 / price > 0
                                require (0 / price) + sub_463626d6 >= sub_463626d6
                                sub_463626d6 += 0 / price
                                require roundTokenCap >= (0 / price) + sub_463626d6
                                require msg.value + weiRaised >= weiRaised
                                weiRaised += msg.value
                                require (0 / price) + tokensSold >= tokensSold
                                tokensSold += 0 / price
                                require 0 / price <= sub_0d27577e
                                sub_0d27577e -= 0 / price
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args address(arg1), 0 / price
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, arg1);
                                call walletAddress with:
                                   value msg.value wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0 / price
                                if not (0 / price) + ext_call.return_data[0] - tokenSaleCap:
                                    require 0 <= msg.value
                                    require msg.value > 0
                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                    require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                    sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                    require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                    sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, arg1);
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (0 / price) + ext_call.return_data[0] - tokenSaleCap == price
                                    require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                    require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                    require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                    sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                    require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                    require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                    weiRaised = msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                    sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                    call walletAddress with:
                                       value msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 > 0:
                                        call msg.sender with:
                                           value (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if (0 / price) + sub_463626d6 - roundTokenCap <= 0:
                            if (0 / price) + ext_call.return_data[0] <= tokenSaleCap:
                                require msg.value > 0
                                require 0 / price > 0
                                require (0 / price) + sub_463626d6 >= sub_463626d6
                                sub_463626d6 += 0 / price
                                require roundTokenCap >= (0 / price) + sub_463626d6
                                require msg.value + weiRaised >= weiRaised
                                weiRaised += msg.value
                                require (0 / price) + tokensSold >= tokensSold
                                tokensSold += 0 / price
                                require 0 / price <= sub_0d27577e
                                sub_0d27577e -= 0 / price
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args address(arg1), 0 / price
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, arg1);
                                call walletAddress with:
                                   value msg.value wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                    require msg.value > 0
                                    require 0 / price > 0
                                    require (0 / price) + sub_463626d6 >= sub_463626d6
                                    sub_463626d6 += 0 / price
                                    require roundTokenCap >= (0 / price) + sub_463626d6
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require (0 / price) + tokensSold >= tokensSold
                                    tokensSold += 0 / price
                                    require 0 / price <= sub_0d27577e
                                    sub_0d27577e -= 0 / price
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args address(arg1), 0 / price
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, arg1);
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0 / price
                                    if not (0 / price) + ext_call.return_data[0] - tokenSaleCap:
                                        require 0 <= msg.value
                                        require msg.value > 0
                                        require -ext_call.return_data[0] + tokenSaleCap > 0
                                        require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                        sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                        require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                        tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                        require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                        sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, arg1);
                                        call walletAddress with:
                                           value msg.value wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (0 / price) + ext_call.return_data[0] - tokenSaleCap == price
                                        require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                        require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                        require -ext_call.return_data[0] + tokenSaleCap > 0
                                        require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                        sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                        require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                        require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                        weiRaised = msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                        require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                        tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                        require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                        sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit TokenPurchase(price, msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                        call walletAddress with:
                                           value msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 > 0:
                                            call msg.sender with:
                                               value (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (0 / price) + ext_call.return_data[0] <= tokenSaleCap:
                                if (0 / price) + sub_463626d6 - roundTokenCap <= 0:
                                    require msg.value > 0
                                    require 0 / price > 0
                                    require (0 / price) + sub_463626d6 >= sub_463626d6
                                    sub_463626d6 += 0 / price
                                    require roundTokenCap >= (0 / price) + sub_463626d6
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require (0 / price) + tokensSold >= tokensSold
                                    tokensSold += 0 / price
                                    require 0 / price <= sub_0d27577e
                                    sub_0d27577e -= 0 / price
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args address(arg1), 0 / price
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, arg1);
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (0 / price) + sub_463626d6 - roundTokenCap <= 0 / price
                                    if not (0 / price) + sub_463626d6 - roundTokenCap:
                                        require 0 <= msg.value
                                        require msg.value > 0
                                        require -sub_463626d6 + roundTokenCap > 0
                                        require roundTokenCap >= sub_463626d6
                                        sub_463626d6 = roundTokenCap
                                        require roundTokenCap >= roundTokenCap
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                        tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                        require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                        sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args address(arg1), -sub_463626d6 + roundTokenCap
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit TokenPurchase(price, msg.value, -sub_463626d6 + roundTokenCap, 0, ethUsdRate, msg.sender, arg1);
                                        call walletAddress with:
                                           value msg.value wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / (0 / price) + sub_463626d6 - roundTokenCap == price
                                        require (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= msg.value
                                        require msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) > 0
                                        require -sub_463626d6 + roundTokenCap > 0
                                        require roundTokenCap >= sub_463626d6
                                        sub_463626d6 = roundTokenCap
                                        require roundTokenCap >= roundTokenCap
                                        require msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised >= weiRaised
                                        weiRaised = msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised
                                        require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                        tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                        require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                        sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args address(arg1), -sub_463626d6 + roundTokenCap
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit TokenPurchase(price, msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18), -sub_463626d6 + roundTokenCap, (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                        call walletAddress with:
                                           value msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 > 0:
                                            call msg.sender with:
                                               value (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if ext_call.return_data[0] - tokenSaleCap <= sub_463626d6 - roundTokenCap:
                                    if (0 / price) + sub_463626d6 - roundTokenCap <= 0:
                                        require msg.value > 0
                                        require 0 / price > 0
                                        require (0 / price) + sub_463626d6 >= sub_463626d6
                                        sub_463626d6 += 0 / price
                                        require roundTokenCap >= (0 / price) + sub_463626d6
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require (0 / price) + tokensSold >= tokensSold
                                        tokensSold += 0 / price
                                        require 0 / price <= sub_0d27577e
                                        sub_0d27577e -= 0 / price
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args address(arg1), 0 / price
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, arg1);
                                        call walletAddress with:
                                           value msg.value wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require (0 / price) + sub_463626d6 - roundTokenCap <= 0 / price
                                        if not (0 / price) + sub_463626d6 - roundTokenCap:
                                            require 0 <= msg.value
                                            require msg.value > 0
                                            require -sub_463626d6 + roundTokenCap > 0
                                            require roundTokenCap >= sub_463626d6
                                            sub_463626d6 = roundTokenCap
                                            require roundTokenCap >= roundTokenCap
                                            require msg.value + weiRaised >= weiRaised
                                            weiRaised += msg.value
                                            require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                            tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                            require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                            sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args address(arg1), -sub_463626d6 + roundTokenCap
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0]
                                            emit TokenPurchase(price, msg.value, -sub_463626d6 + roundTokenCap, 0, ethUsdRate, msg.sender, arg1);
                                            call walletAddress with:
                                               value msg.value wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / (0 / price) + sub_463626d6 - roundTokenCap == price
                                            require (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= msg.value
                                            require msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) > 0
                                            require -sub_463626d6 + roundTokenCap > 0
                                            require roundTokenCap >= sub_463626d6
                                            sub_463626d6 = roundTokenCap
                                            require roundTokenCap >= roundTokenCap
                                            require msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised >= weiRaised
                                            weiRaised = msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised
                                            require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                            tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                            require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                            sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args address(arg1), -sub_463626d6 + roundTokenCap
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0]
                                            emit TokenPurchase(price, msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18), -sub_463626d6 + roundTokenCap, (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                            call walletAddress with:
                                               value msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 > 0:
                                                call msg.sender with:
                                                   value (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                        require msg.value > 0
                                        require 0 / price > 0
                                        require (0 / price) + sub_463626d6 >= sub_463626d6
                                        sub_463626d6 += 0 / price
                                        require roundTokenCap >= (0 / price) + sub_463626d6
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require (0 / price) + tokensSold >= tokensSold
                                        tokensSold += 0 / price
                                        require 0 / price <= sub_0d27577e
                                        sub_0d27577e -= 0 / price
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args address(arg1), 0 / price
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, arg1);
                                        call walletAddress with:
                                           value msg.value wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0 / price
                                        if not (0 / price) + ext_call.return_data[0] - tokenSaleCap:
                                            require 0 <= msg.value
                                            require msg.value > 0
                                            require -ext_call.return_data[0] + tokenSaleCap > 0
                                            require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                            sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                            require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                            require msg.value + weiRaised >= weiRaised
                                            weiRaised += msg.value
                                            require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                            tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                            require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                            sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0]
                                            emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, arg1);
                                            call walletAddress with:
                                               value msg.value wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (0 / price) + ext_call.return_data[0] - tokenSaleCap == price
                                            require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                            require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                            require -ext_call.return_data[0] + tokenSaleCap > 0
                                            require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                            sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                            require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                            require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                            weiRaised = msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                            require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                            tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                            require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                            sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0]
                                            emit TokenPurchase(price, msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                            call walletAddress with:
                                               value msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 > 0:
                                                call msg.sender with:
                                                   value (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
            else:
                require 10^18 * msg.value / msg.value == 10^18
                require price
                if not arg2:
                    require msg.value > 0
                    require 10^18 * msg.value / price > 0
                    require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                    sub_463626d6 += 10^18 * msg.value / price
                    require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                    require msg.value + weiRaised >= weiRaised
                    weiRaised += msg.value
                    require (10^18 * msg.value / price) + tokensSold >= tokensSold
                    tokensSold += 10^18 * msg.value / price
                    require 10^18 * msg.value / price <= sub_0d27577e
                    sub_0d27577e -= 10^18 * msg.value / price
                    require ext_code.size(tokenAddress)
                    call tokenAddress.0x40c10f19 with:
                         gas gas_remaining wei
                        args address(arg1), 10^18 * msg.value / price
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0]
                    emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, arg1);
                    call walletAddress with:
                       value msg.value wei
                         gas 2300 * is_zero(value) wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                else:
                    require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                    require ext_code.size(tokenAddress)
                    call tokenAddress.0xfa2299ee with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (10^18 * msg.value / price) + ext_call.return_data[0] >= ext_call.return_data[0]
                    if (10^18 * msg.value / price) + sub_463626d6 <= roundTokenCap:
                        if (10^18 * msg.value / price) + ext_call.return_data[0] <= tokenSaleCap:
                            require msg.value > 0
                            require 10^18 * msg.value / price > 0
                            require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                            sub_463626d6 += 10^18 * msg.value / price
                            require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                            require msg.value + weiRaised >= weiRaised
                            weiRaised += msg.value
                            require (10^18 * msg.value / price) + tokensSold >= tokensSold
                            tokensSold += 10^18 * msg.value / price
                            require 10^18 * msg.value / price <= sub_0d27577e
                            sub_0d27577e -= 10^18 * msg.value / price
                            require ext_code.size(tokenAddress)
                            call tokenAddress.0x40c10f19 with:
                                 gas gas_remaining wei
                                args address(arg1), 10^18 * msg.value / price
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0]
                            emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, arg1);
                            call walletAddress with:
                               value msg.value wei
                                 gas 2300 * is_zero(value) wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                require msg.value > 0
                                require 10^18 * msg.value / price > 0
                                require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                sub_463626d6 += 10^18 * msg.value / price
                                require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                require msg.value + weiRaised >= weiRaised
                                weiRaised += msg.value
                                require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                tokensSold += 10^18 * msg.value / price
                                require 10^18 * msg.value / price <= sub_0d27577e
                                sub_0d27577e -= 10^18 * msg.value / price
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args address(arg1), 10^18 * msg.value / price
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, arg1);
                                call walletAddress with:
                                   value msg.value wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 10^18 * msg.value / price
                                if not (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap:
                                    require 0 <= msg.value
                                    require msg.value > 0
                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                    require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                    sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                    require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                    sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, arg1);
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap == price
                                    require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                    require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                    require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                    sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                    require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                    require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                    weiRaised = msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                    sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                    call walletAddress with:
                                       value msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 > 0:
                                        call msg.sender with:
                                           value (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap <= 0:
                            if (10^18 * msg.value / price) + ext_call.return_data[0] <= tokenSaleCap:
                                require msg.value > 0
                                require 10^18 * msg.value / price > 0
                                require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                sub_463626d6 += 10^18 * msg.value / price
                                require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                require msg.value + weiRaised >= weiRaised
                                weiRaised += msg.value
                                require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                tokensSold += 10^18 * msg.value / price
                                require 10^18 * msg.value / price <= sub_0d27577e
                                sub_0d27577e -= 10^18 * msg.value / price
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args address(arg1), 10^18 * msg.value / price
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, arg1);
                                call walletAddress with:
                                   value msg.value wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                    require msg.value > 0
                                    require 10^18 * msg.value / price > 0
                                    require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                    sub_463626d6 += 10^18 * msg.value / price
                                    require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                    tokensSold += 10^18 * msg.value / price
                                    require 10^18 * msg.value / price <= sub_0d27577e
                                    sub_0d27577e -= 10^18 * msg.value / price
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args address(arg1), 10^18 * msg.value / price
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, arg1);
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 10^18 * msg.value / price
                                    if not (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap:
                                        require 0 <= msg.value
                                        require msg.value > 0
                                        require -ext_call.return_data[0] + tokenSaleCap > 0
                                        require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                        sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                        require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                        tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                        require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                        sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, arg1);
                                        call walletAddress with:
                                           value msg.value wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap == price
                                        require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                        require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                        require -ext_call.return_data[0] + tokenSaleCap > 0
                                        require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                        sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                        require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                        require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                        weiRaised = msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                        require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                        tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                        require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                        sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit TokenPurchase(price, msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                        call walletAddress with:
                                           value msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 > 0:
                                            call msg.sender with:
                                               value (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (10^18 * msg.value / price) + ext_call.return_data[0] <= tokenSaleCap:
                                if (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap <= 0:
                                    require msg.value > 0
                                    require 10^18 * msg.value / price > 0
                                    require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                    sub_463626d6 += 10^18 * msg.value / price
                                    require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                    tokensSold += 10^18 * msg.value / price
                                    require 10^18 * msg.value / price <= sub_0d27577e
                                    sub_0d27577e -= 10^18 * msg.value / price
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args address(arg1), 10^18 * msg.value / price
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, arg1);
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap <= 10^18 * msg.value / price
                                    if not (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap:
                                        require 0 <= msg.value
                                        require msg.value > 0
                                        require -sub_463626d6 + roundTokenCap > 0
                                        require roundTokenCap >= sub_463626d6
                                        sub_463626d6 = roundTokenCap
                                        require roundTokenCap >= roundTokenCap
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                        tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                        require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                        sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args address(arg1), -sub_463626d6 + roundTokenCap
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit TokenPurchase(price, msg.value, -sub_463626d6 + roundTokenCap, 0, ethUsdRate, msg.sender, arg1);
                                        call walletAddress with:
                                           value msg.value wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap == price
                                        require (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= msg.value
                                        require msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) > 0
                                        require -sub_463626d6 + roundTokenCap > 0
                                        require roundTokenCap >= sub_463626d6
                                        sub_463626d6 = roundTokenCap
                                        require roundTokenCap >= roundTokenCap
                                        require msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised >= weiRaised
                                        weiRaised = msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised
                                        require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                        tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                        require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                        sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args address(arg1), -sub_463626d6 + roundTokenCap
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit TokenPurchase(price, msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18), -sub_463626d6 + roundTokenCap, (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                        call walletAddress with:
                                           value msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 > 0:
                                            call msg.sender with:
                                               value (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if ext_call.return_data[0] - tokenSaleCap <= sub_463626d6 - roundTokenCap:
                                    if (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap <= 0:
                                        require msg.value > 0
                                        require 10^18 * msg.value / price > 0
                                        require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                        sub_463626d6 += 10^18 * msg.value / price
                                        require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                        tokensSold += 10^18 * msg.value / price
                                        require 10^18 * msg.value / price <= sub_0d27577e
                                        sub_0d27577e -= 10^18 * msg.value / price
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args address(arg1), 10^18 * msg.value / price
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, arg1);
                                        call walletAddress with:
                                           value msg.value wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap <= 10^18 * msg.value / price
                                        if not (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap:
                                            require 0 <= msg.value
                                            require msg.value > 0
                                            require -sub_463626d6 + roundTokenCap > 0
                                            require roundTokenCap >= sub_463626d6
                                            sub_463626d6 = roundTokenCap
                                            require roundTokenCap >= roundTokenCap
                                            require msg.value + weiRaised >= weiRaised
                                            weiRaised += msg.value
                                            require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                            tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                            require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                            sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args address(arg1), -sub_463626d6 + roundTokenCap
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0]
                                            emit TokenPurchase(price, msg.value, -sub_463626d6 + roundTokenCap, 0, ethUsdRate, msg.sender, arg1);
                                            call walletAddress with:
                                               value msg.value wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap == price
                                            require (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= msg.value
                                            require msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) > 0
                                            require -sub_463626d6 + roundTokenCap > 0
                                            require roundTokenCap >= sub_463626d6
                                            sub_463626d6 = roundTokenCap
                                            require roundTokenCap >= roundTokenCap
                                            require msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised >= weiRaised
                                            weiRaised = msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised
                                            require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                            tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                            require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                            sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args address(arg1), -sub_463626d6 + roundTokenCap
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0]
                                            emit TokenPurchase(price, msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18), -sub_463626d6 + roundTokenCap, (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                            call walletAddress with:
                                               value msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 > 0:
                                                call msg.sender with:
                                                   value (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                        require msg.value > 0
                                        require 10^18 * msg.value / price > 0
                                        require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                        sub_463626d6 += 10^18 * msg.value / price
                                        require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                        tokensSold += 10^18 * msg.value / price
                                        require 10^18 * msg.value / price <= sub_0d27577e
                                        sub_0d27577e -= 10^18 * msg.value / price
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args address(arg1), 10^18 * msg.value / price
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, arg1);
                                        call walletAddress with:
                                           value msg.value wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 10^18 * msg.value / price
                                        if not (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap:
                                            require 0 <= msg.value
                                            require msg.value > 0
                                            require -ext_call.return_data[0] + tokenSaleCap > 0
                                            require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                            sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                            require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                            require msg.value + weiRaised >= weiRaised
                                            weiRaised += msg.value
                                            require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                            tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                            require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                            sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0]
                                            emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, arg1);
                                            call walletAddress with:
                                               value msg.value wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap == price
                                            require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                            require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                            require -ext_call.return_data[0] + tokenSaleCap > 0
                                            require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                            sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                            require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                            require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                            weiRaised = msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                            require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                            tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                            require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                            sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0]
                                            emit TokenPurchase(price, msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                            call walletAddress with:
                                               value msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 > 0:
                                                call msg.sender with:
                                                   value (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
            if sub_463626d6 >= roundTokenCap:
                emit RoundEnded(sub_463626d6, roundTokenCap);
        else:
            require ext_code.size(tokenAddress)
            call tokenAddress.0xfa2299ee with:
                 gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require tokenSaleCap > ext_call.return_data[0]
            require sub_fbde1348[address(msg.sender)].field_256 > 0
            if not msg.value:
                require sub_fbde1348[address(msg.sender)].field_256
                require 0 / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                if not arg2:
                    require msg.value > 0
                    require 0 / sub_fbde1348[address(msg.sender)].field_256 > 0
                    require 0 / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                    require msg.value + weiRaised >= weiRaised
                    weiRaised += msg.value
                    require (0 / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                    tokensSold += 0 / sub_fbde1348[address(msg.sender)].field_256
                    require ext_code.size(tokenAddress)
                    call tokenAddress.0x40c10f19 with:
                         gas gas_remaining wei
                        args address(arg1), 0 / sub_fbde1348[address(msg.sender)].field_256
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0]
                    emit 0x93cae43c: price, msg.value, 0 / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, arg1
                    require msg.sender
                    if sub_fbde1348[address(msg.sender)].field_0 > 0:
                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                        sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                        stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                        stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                        sub_fbde1348[address(msg.sender)].field_0 = 0
                        sub_fbde1348[address(msg.sender)].field_256 = 0
                        sub_fbde1348[address(msg.sender)].field_512 = 0
                        sub_fbde1348[address(msg.sender)].field_768 = 0
                        stor16[address(msg.sender)].field_0 = 0
                        stor16[address(msg.sender)].field_256 = 0
                        emit 0x83e21c4d: msg.sender
                    call walletAddress with:
                       value msg.value wei
                         gas 2300 * is_zero(value) wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                else:
                    require ext_code.size(tokenAddress)
                    call tokenAddress.0xfa2299ee with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] >= ext_call.return_data[0]
                    if 0 / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768:
                        if (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] <= tokenSaleCap:
                            require 0 / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                            require msg.value > 0
                            require 0 / sub_fbde1348[address(msg.sender)].field_256 > 0
                            require 0 / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                            require msg.value + weiRaised >= weiRaised
                            weiRaised += msg.value
                            require (0 / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                            tokensSold += 0 / sub_fbde1348[address(msg.sender)].field_256
                            require ext_code.size(tokenAddress)
                            call tokenAddress.0x40c10f19 with:
                                 gas gas_remaining wei
                                args address(arg1), 0 / sub_fbde1348[address(msg.sender)].field_256
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0]
                            emit 0x93cae43c: price, msg.value, 0 / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, arg1
                            require msg.sender
                            if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                sub_fbde1348[address(msg.sender)].field_0 = 0
                                sub_fbde1348[address(msg.sender)].field_256 = 0
                                sub_fbde1348[address(msg.sender)].field_512 = 0
                                sub_fbde1348[address(msg.sender)].field_768 = 0
                                stor16[address(msg.sender)].field_0 = 0
                                stor16[address(msg.sender)].field_256 = 0
                                emit 0x83e21c4d: msg.sender
                            call walletAddress with:
                               value msg.value wei
                                 gas 2300 * is_zero(value) wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                require 0 / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                require msg.value > 0
                                require 0 / sub_fbde1348[address(msg.sender)].field_256 > 0
                                require 0 / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                require msg.value + weiRaised >= weiRaised
                                weiRaised += msg.value
                                require (0 / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                tokensSold += 0 / sub_fbde1348[address(msg.sender)].field_256
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args address(arg1), 0 / sub_fbde1348[address(msg.sender)].field_256
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit 0x93cae43c: price, msg.value, 0 / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, arg1
                                require msg.sender
                                if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                    require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                    sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                    stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                    stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                    sub_fbde1348[address(msg.sender)].field_0 = 0
                                    sub_fbde1348[address(msg.sender)].field_256 = 0
                                    sub_fbde1348[address(msg.sender)].field_512 = 0
                                    sub_fbde1348[address(msg.sender)].field_768 = 0
                                    stor16[address(msg.sender)].field_0 = 0
                                    stor16[address(msg.sender)].field_256 = 0
                                    emit 0x83e21c4d: msg.sender
                                call walletAddress with:
                                   value msg.value wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 0 / sub_fbde1348[address(msg.sender)].field_256
                                if not (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap:
                                    require 0 <= msg.value
                                    require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                    require msg.value > 0
                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit 0x93cae43c: price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, msg.sender, arg1
                                    require msg.sender
                                    if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                        sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                        stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                        stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                        sub_fbde1348[address(msg.sender)].field_0 = 0
                                        sub_fbde1348[address(msg.sender)].field_256 = 0
                                        sub_fbde1348[address(msg.sender)].field_512 = 0
                                        sub_fbde1348[address(msg.sender)].field_768 = 0
                                        stor16[address(msg.sender)].field_0 = 0
                                        stor16[address(msg.sender)].field_256 = 0
                                        emit 0x83e21c4d: msg.sender
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap == sub_fbde1348[address(msg.sender)].field_256
                                    require (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= msg.value
                                    require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                    require msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) > 0
                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                    require msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised >= weiRaised
                                    weiRaised = msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised
                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit 0x93cae43c: price, msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18, msg.sender, arg1
                                    require msg.sender
                                    if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                        sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                        stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                        stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                        sub_fbde1348[address(msg.sender)].field_0 = 0
                                        sub_fbde1348[address(msg.sender)].field_256 = 0
                                        sub_fbde1348[address(msg.sender)].field_512 = 0
                                        sub_fbde1348[address(msg.sender)].field_768 = 0
                                        stor16[address(msg.sender)].field_0 = 0
                                        stor16[address(msg.sender)].field_256 = 0
                                        emit 0x83e21c4d: msg.sender
                                    call walletAddress with:
                                       value msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 > 0:
                                        call msg.sender with:
                                           value (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if (0 / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 <= 0:
                            if (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] <= tokenSaleCap:
                                require 0 / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                require msg.value > 0
                                require 0 / sub_fbde1348[address(msg.sender)].field_256 > 0
                                require 0 / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                require msg.value + weiRaised >= weiRaised
                                weiRaised += msg.value
                                require (0 / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                tokensSold += 0 / sub_fbde1348[address(msg.sender)].field_256
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args address(arg1), 0 / sub_fbde1348[address(msg.sender)].field_256
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit 0x93cae43c: price, msg.value, 0 / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, arg1
                                require msg.sender
                                if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                    require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                    sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                    stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                    stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                    sub_fbde1348[address(msg.sender)].field_0 = 0
                                    sub_fbde1348[address(msg.sender)].field_256 = 0
                                    sub_fbde1348[address(msg.sender)].field_512 = 0
                                    sub_fbde1348[address(msg.sender)].field_768 = 0
                                    stor16[address(msg.sender)].field_0 = 0
                                    stor16[address(msg.sender)].field_256 = 0
                                    emit 0x83e21c4d: msg.sender
                                call walletAddress with:
                                   value msg.value wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                    require 0 / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                    require msg.value > 0
                                    require 0 / sub_fbde1348[address(msg.sender)].field_256 > 0
                                    require 0 / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require (0 / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                    tokensSold += 0 / sub_fbde1348[address(msg.sender)].field_256
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args address(arg1), 0 / sub_fbde1348[address(msg.sender)].field_256
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit 0x93cae43c: price, msg.value, 0 / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, arg1
                                    require msg.sender
                                    if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                        sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                        stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                        stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                        sub_fbde1348[address(msg.sender)].field_0 = 0
                                        sub_fbde1348[address(msg.sender)].field_256 = 0
                                        sub_fbde1348[address(msg.sender)].field_512 = 0
                                        sub_fbde1348[address(msg.sender)].field_768 = 0
                                        stor16[address(msg.sender)].field_0 = 0
                                        stor16[address(msg.sender)].field_256 = 0
                                        emit 0x83e21c4d: msg.sender
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 0 / sub_fbde1348[address(msg.sender)].field_256
                                    if not (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap:
                                        require 0 <= msg.value
                                        require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                        require msg.value > 0
                                        require -ext_call.return_data[0] + tokenSaleCap > 0
                                        require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                        tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit 0x93cae43c: price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, msg.sender, arg1
                                        require msg.sender
                                        if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                            stor16[address(msg.sender)].field_0 = 0
                                            stor16[address(msg.sender)].field_256 = 0
                                            emit 0x83e21c4d: msg.sender
                                        call walletAddress with:
                                           value msg.value wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap == sub_fbde1348[address(msg.sender)].field_256
                                        require (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= msg.value
                                        require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                        require msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) > 0
                                        require -ext_call.return_data[0] + tokenSaleCap > 0
                                        require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                        require msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised >= weiRaised
                                        weiRaised = msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised
                                        require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                        tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit 0x93cae43c: price, msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18, msg.sender, arg1
                                        require msg.sender
                                        if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                            stor16[address(msg.sender)].field_0 = 0
                                            stor16[address(msg.sender)].field_256 = 0
                                            emit 0x83e21c4d: msg.sender
                                        call walletAddress with:
                                           value msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 > 0:
                                            call msg.sender with:
                                               value (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] <= tokenSaleCap:
                                if (0 / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 <= 0:
                                    require 0 / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                    require msg.value > 0
                                    require 0 / sub_fbde1348[address(msg.sender)].field_256 > 0
                                    require 0 / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require (0 / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                    tokensSold += 0 / sub_fbde1348[address(msg.sender)].field_256
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args address(arg1), 0 / sub_fbde1348[address(msg.sender)].field_256
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit 0x93cae43c: price, msg.value, 0 / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, arg1
                                    require msg.sender
                                    if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                        sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                        stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                        stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                        sub_fbde1348[address(msg.sender)].field_0 = 0
                                        sub_fbde1348[address(msg.sender)].field_256 = 0
                                        sub_fbde1348[address(msg.sender)].field_512 = 0
                                        sub_fbde1348[address(msg.sender)].field_768 = 0
                                        stor16[address(msg.sender)].field_0 = 0
                                        stor16[address(msg.sender)].field_256 = 0
                                        emit 0x83e21c4d: msg.sender
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (0 / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 <= 0 / sub_fbde1348[address(msg.sender)].field_256
                                    if not (0 / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768:
                                        require 0 <= msg.value
                                        require sub_fbde1348[address(msg.sender)].field_768 >= sub_fbde1348[address(msg.sender)].field_512
                                        require msg.value > 0
                                        require sub_fbde1348[address(msg.sender)].field_768 > 0
                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_fbde1348[address(msg.sender)].field_768
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require sub_fbde1348[address(msg.sender)].field_768 + tokensSold >= tokensSold
                                        tokensSold += sub_fbde1348[address(msg.sender)].field_768
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args address(arg1), sub_fbde1348[address(msg.sender)].field_768
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit 0x93cae43c: price, msg.value, sub_fbde1348[address(msg.sender)].field_768, 0, msg.sender, arg1
                                        require msg.sender
                                        if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                            stor16[address(msg.sender)].field_0 = 0
                                            stor16[address(msg.sender)].field_256 = 0
                                            emit 0x83e21c4d: msg.sender
                                        call walletAddress with:
                                           value msg.value wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / (0 / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 == sub_fbde1348[address(msg.sender)].field_256
                                        require (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= msg.value
                                        require sub_fbde1348[address(msg.sender)].field_768 >= sub_fbde1348[address(msg.sender)].field_512
                                        require msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) > 0
                                        require sub_fbde1348[address(msg.sender)].field_768 > 0
                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_fbde1348[address(msg.sender)].field_768
                                        require msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised >= weiRaised
                                        weiRaised = msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised
                                        require sub_fbde1348[address(msg.sender)].field_768 + tokensSold >= tokensSold
                                        tokensSold += sub_fbde1348[address(msg.sender)].field_768
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args address(arg1), sub_fbde1348[address(msg.sender)].field_768
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit 0x93cae43c: price, msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18), sub_fbde1348[address(msg.sender)].field_768, (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18, msg.sender, arg1
                                        require msg.sender
                                        if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                            stor16[address(msg.sender)].field_0 = 0
                                            stor16[address(msg.sender)].field_256 = 0
                                            emit 0x83e21c4d: msg.sender
                                        call walletAddress with:
                                           value msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 > 0:
                                            call msg.sender with:
                                               value (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if ext_call.return_data[0] - tokenSaleCap <= -sub_fbde1348[address(msg.sender)].field_768:
                                    if (0 / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 <= 0:
                                        require 0 / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                        require msg.value > 0
                                        require 0 / sub_fbde1348[address(msg.sender)].field_256 > 0
                                        require 0 / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require (0 / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                        tokensSold += 0 / sub_fbde1348[address(msg.sender)].field_256
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args address(arg1), 0 / sub_fbde1348[address(msg.sender)].field_256
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit 0x93cae43c: price, msg.value, 0 / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, arg1
                                        require msg.sender
                                        if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                            stor16[address(msg.sender)].field_0 = 0
                                            stor16[address(msg.sender)].field_256 = 0
                                            emit 0x83e21c4d: msg.sender
                                        call walletAddress with:
                                           value msg.value wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require (0 / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 <= 0 / sub_fbde1348[address(msg.sender)].field_256
                                        if not (0 / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768:
                                            require 0 <= msg.value
                                            require sub_fbde1348[address(msg.sender)].field_768 >= sub_fbde1348[address(msg.sender)].field_512
                                            require msg.value > 0
                                            require sub_fbde1348[address(msg.sender)].field_768 > 0
                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_fbde1348[address(msg.sender)].field_768
                                            require msg.value + weiRaised >= weiRaised
                                            weiRaised += msg.value
                                            require sub_fbde1348[address(msg.sender)].field_768 + tokensSold >= tokensSold
                                            tokensSold += sub_fbde1348[address(msg.sender)].field_768
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args address(arg1), sub_fbde1348[address(msg.sender)].field_768
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0]
                                            emit 0x93cae43c: price, msg.value, sub_fbde1348[address(msg.sender)].field_768, 0, msg.sender, arg1
                                            require msg.sender
                                            if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                                require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                sub_fbde1348[address(msg.sender)].field_0 = 0
                                                sub_fbde1348[address(msg.sender)].field_256 = 0
                                                sub_fbde1348[address(msg.sender)].field_512 = 0
                                                sub_fbde1348[address(msg.sender)].field_768 = 0
                                                stor16[address(msg.sender)].field_0 = 0
                                                stor16[address(msg.sender)].field_256 = 0
                                                emit 0x83e21c4d: msg.sender
                                            call walletAddress with:
                                               value msg.value wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / (0 / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 == sub_fbde1348[address(msg.sender)].field_256
                                            require (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= msg.value
                                            require sub_fbde1348[address(msg.sender)].field_768 >= sub_fbde1348[address(msg.sender)].field_512
                                            require msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) > 0
                                            require sub_fbde1348[address(msg.sender)].field_768 > 0
                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_fbde1348[address(msg.sender)].field_768
                                            require msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised >= weiRaised
                                            weiRaised = msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised
                                            require sub_fbde1348[address(msg.sender)].field_768 + tokensSold >= tokensSold
                                            tokensSold += sub_fbde1348[address(msg.sender)].field_768
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args address(arg1), sub_fbde1348[address(msg.sender)].field_768
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0]
                                            emit 0x93cae43c: price, msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18), sub_fbde1348[address(msg.sender)].field_768, (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18, msg.sender, arg1
                                            require msg.sender
                                            if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                                require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                sub_fbde1348[address(msg.sender)].field_0 = 0
                                                sub_fbde1348[address(msg.sender)].field_256 = 0
                                                sub_fbde1348[address(msg.sender)].field_512 = 0
                                                sub_fbde1348[address(msg.sender)].field_768 = 0
                                                stor16[address(msg.sender)].field_0 = 0
                                                stor16[address(msg.sender)].field_256 = 0
                                                emit 0x83e21c4d: msg.sender
                                            call walletAddress with:
                                               value msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 > 0:
                                                call msg.sender with:
                                                   value (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                        require 0 / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                        require msg.value > 0
                                        require 0 / sub_fbde1348[address(msg.sender)].field_256 > 0
                                        require 0 / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require (0 / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                        tokensSold += 0 / sub_fbde1348[address(msg.sender)].field_256
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args address(arg1), 0 / sub_fbde1348[address(msg.sender)].field_256
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit 0x93cae43c: price, msg.value, 0 / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, arg1
                                        require msg.sender
                                        if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                            stor16[address(msg.sender)].field_0 = 0
                                            stor16[address(msg.sender)].field_256 = 0
                                            emit 0x83e21c4d: msg.sender
                                        call walletAddress with:
                                           value msg.value wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 0 / sub_fbde1348[address(msg.sender)].field_256
                                        if not (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap:
                                            require 0 <= msg.value
                                            require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                            require msg.value > 0
                                            require -ext_call.return_data[0] + tokenSaleCap > 0
                                            require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                            require msg.value + weiRaised >= weiRaised
                                            weiRaised += msg.value
                                            require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                            tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0]
                                            emit 0x93cae43c: price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, msg.sender, arg1
                                            require msg.sender
                                            if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                                require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                sub_fbde1348[address(msg.sender)].field_0 = 0
                                                sub_fbde1348[address(msg.sender)].field_256 = 0
                                                sub_fbde1348[address(msg.sender)].field_512 = 0
                                                sub_fbde1348[address(msg.sender)].field_768 = 0
                                                stor16[address(msg.sender)].field_0 = 0
                                                stor16[address(msg.sender)].field_256 = 0
                                                emit 0x83e21c4d: msg.sender
                                            call walletAddress with:
                                               value msg.value wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap == sub_fbde1348[address(msg.sender)].field_256
                                            require (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= msg.value
                                            require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                            require msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) > 0
                                            require -ext_call.return_data[0] + tokenSaleCap > 0
                                            require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                            require msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised >= weiRaised
                                            weiRaised = msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised
                                            require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                            tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0]
                                            emit 0x93cae43c: price, msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18, msg.sender, arg1
                                            require msg.sender
                                            if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                                require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                sub_fbde1348[address(msg.sender)].field_0 = 0
                                                sub_fbde1348[address(msg.sender)].field_256 = 0
                                                sub_fbde1348[address(msg.sender)].field_512 = 0
                                                sub_fbde1348[address(msg.sender)].field_768 = 0
                                                stor16[address(msg.sender)].field_0 = 0
                                                stor16[address(msg.sender)].field_256 = 0
                                                emit 0x83e21c4d: msg.sender
                                            call walletAddress with:
                                               value msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 > 0:
                                                call msg.sender with:
                                                   value (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
            else:
                require 10^18 * msg.value / msg.value == 10^18
                require sub_fbde1348[address(msg.sender)].field_256
                require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                if not arg2:
                    require msg.value > 0
                    require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 > 0
                    require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                    require msg.value + weiRaised >= weiRaised
                    weiRaised += msg.value
                    require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                    tokensSold += 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                    require ext_code.size(tokenAddress)
                    call tokenAddress.0x40c10f19 with:
                         gas gas_remaining wei
                        args address(arg1), 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0]
                    emit 0x93cae43c: price, msg.value, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, arg1
                    require msg.sender
                    if sub_fbde1348[address(msg.sender)].field_0 > 0:
                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                        sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                        stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                        stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                        sub_fbde1348[address(msg.sender)].field_0 = 0
                        sub_fbde1348[address(msg.sender)].field_256 = 0
                        sub_fbde1348[address(msg.sender)].field_512 = 0
                        sub_fbde1348[address(msg.sender)].field_768 = 0
                        stor16[address(msg.sender)].field_0 = 0
                        stor16[address(msg.sender)].field_256 = 0
                        emit 0x83e21c4d: msg.sender
                    call walletAddress with:
                       value msg.value wei
                         gas 2300 * is_zero(value) wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                else:
                    require ext_code.size(tokenAddress)
                    call tokenAddress.0xfa2299ee with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] >= ext_call.return_data[0]
                    if 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768:
                        if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] <= tokenSaleCap:
                            require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                            require msg.value > 0
                            require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 > 0
                            require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                            require msg.value + weiRaised >= weiRaised
                            weiRaised += msg.value
                            require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                            tokensSold += 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                            require ext_code.size(tokenAddress)
                            call tokenAddress.0x40c10f19 with:
                                 gas gas_remaining wei
                                args address(arg1), 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0]
                            emit 0x93cae43c: price, msg.value, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, arg1
                            require msg.sender
                            if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                sub_fbde1348[address(msg.sender)].field_0 = 0
                                sub_fbde1348[address(msg.sender)].field_256 = 0
                                sub_fbde1348[address(msg.sender)].field_512 = 0
                                sub_fbde1348[address(msg.sender)].field_768 = 0
                                stor16[address(msg.sender)].field_0 = 0
                                stor16[address(msg.sender)].field_256 = 0
                                emit 0x83e21c4d: msg.sender
                            call walletAddress with:
                               value msg.value wei
                                 gas 2300 * is_zero(value) wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                require msg.value > 0
                                require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 > 0
                                require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                require msg.value + weiRaised >= weiRaised
                                weiRaised += msg.value
                                require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                tokensSold += 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args address(arg1), 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit 0x93cae43c: price, msg.value, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, arg1
                                require msg.sender
                                if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                    require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                    sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                    stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                    stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                    sub_fbde1348[address(msg.sender)].field_0 = 0
                                    sub_fbde1348[address(msg.sender)].field_256 = 0
                                    sub_fbde1348[address(msg.sender)].field_512 = 0
                                    sub_fbde1348[address(msg.sender)].field_768 = 0
                                    stor16[address(msg.sender)].field_0 = 0
                                    stor16[address(msg.sender)].field_256 = 0
                                    emit 0x83e21c4d: msg.sender
                                call walletAddress with:
                                   value msg.value wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                if not (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap:
                                    require 0 <= msg.value
                                    require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                    require msg.value > 0
                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit 0x93cae43c: price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, msg.sender, arg1
                                    require msg.sender
                                    if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                        sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                        stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                        stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                        sub_fbde1348[address(msg.sender)].field_0 = 0
                                        sub_fbde1348[address(msg.sender)].field_256 = 0
                                        sub_fbde1348[address(msg.sender)].field_512 = 0
                                        sub_fbde1348[address(msg.sender)].field_768 = 0
                                        stor16[address(msg.sender)].field_0 = 0
                                        stor16[address(msg.sender)].field_256 = 0
                                        emit 0x83e21c4d: msg.sender
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap == sub_fbde1348[address(msg.sender)].field_256
                                    require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= msg.value
                                    require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                    require msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) > 0
                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                    require msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised >= weiRaised
                                    weiRaised = msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised
                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit 0x93cae43c: price, msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18, msg.sender, arg1
                                    require msg.sender
                                    if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                        sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                        stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                        stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                        sub_fbde1348[address(msg.sender)].field_0 = 0
                                        sub_fbde1348[address(msg.sender)].field_256 = 0
                                        sub_fbde1348[address(msg.sender)].field_512 = 0
                                        sub_fbde1348[address(msg.sender)].field_768 = 0
                                        stor16[address(msg.sender)].field_0 = 0
                                        stor16[address(msg.sender)].field_256 = 0
                                        emit 0x83e21c4d: msg.sender
                                    call walletAddress with:
                                       value msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 > 0:
                                        call msg.sender with:
                                           value (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 <= 0:
                            if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] <= tokenSaleCap:
                                require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                require msg.value > 0
                                require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 > 0
                                require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                require msg.value + weiRaised >= weiRaised
                                weiRaised += msg.value
                                require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                tokensSold += 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args address(arg1), 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit 0x93cae43c: price, msg.value, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, arg1
                                require msg.sender
                                if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                    require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                    sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                    stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                    stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                    sub_fbde1348[address(msg.sender)].field_0 = 0
                                    sub_fbde1348[address(msg.sender)].field_256 = 0
                                    sub_fbde1348[address(msg.sender)].field_512 = 0
                                    sub_fbde1348[address(msg.sender)].field_768 = 0
                                    stor16[address(msg.sender)].field_0 = 0
                                    stor16[address(msg.sender)].field_256 = 0
                                    emit 0x83e21c4d: msg.sender
                                call walletAddress with:
                                   value msg.value wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                    require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                    require msg.value > 0
                                    require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 > 0
                                    require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                    tokensSold += 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args address(arg1), 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit 0x93cae43c: price, msg.value, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, arg1
                                    require msg.sender
                                    if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                        sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                        stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                        stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                        sub_fbde1348[address(msg.sender)].field_0 = 0
                                        sub_fbde1348[address(msg.sender)].field_256 = 0
                                        sub_fbde1348[address(msg.sender)].field_512 = 0
                                        sub_fbde1348[address(msg.sender)].field_768 = 0
                                        stor16[address(msg.sender)].field_0 = 0
                                        stor16[address(msg.sender)].field_256 = 0
                                        emit 0x83e21c4d: msg.sender
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                    if not (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap:
                                        require 0 <= msg.value
                                        require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                        require msg.value > 0
                                        require -ext_call.return_data[0] + tokenSaleCap > 0
                                        require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                        tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit 0x93cae43c: price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, msg.sender, arg1
                                        require msg.sender
                                        if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                            stor16[address(msg.sender)].field_0 = 0
                                            stor16[address(msg.sender)].field_256 = 0
                                            emit 0x83e21c4d: msg.sender
                                        call walletAddress with:
                                           value msg.value wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap == sub_fbde1348[address(msg.sender)].field_256
                                        require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= msg.value
                                        require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                        require msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) > 0
                                        require -ext_call.return_data[0] + tokenSaleCap > 0
                                        require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                        require msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised >= weiRaised
                                        weiRaised = msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised
                                        require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                        tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit 0x93cae43c: price, msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18, msg.sender, arg1
                                        require msg.sender
                                        if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                            stor16[address(msg.sender)].field_0 = 0
                                            stor16[address(msg.sender)].field_256 = 0
                                            emit 0x83e21c4d: msg.sender
                                        call walletAddress with:
                                           value msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 > 0:
                                            call msg.sender with:
                                               value (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] <= tokenSaleCap:
                                if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 <= 0:
                                    require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                    require msg.value > 0
                                    require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 > 0
                                    require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                    tokensSold += 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args address(arg1), 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit 0x93cae43c: price, msg.value, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, arg1
                                    require msg.sender
                                    if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                        sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                        stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                        stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                        sub_fbde1348[address(msg.sender)].field_0 = 0
                                        sub_fbde1348[address(msg.sender)].field_256 = 0
                                        sub_fbde1348[address(msg.sender)].field_512 = 0
                                        sub_fbde1348[address(msg.sender)].field_768 = 0
                                        stor16[address(msg.sender)].field_0 = 0
                                        stor16[address(msg.sender)].field_256 = 0
                                        emit 0x83e21c4d: msg.sender
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 <= 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                    if not (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768:
                                        require 0 <= msg.value
                                        require sub_fbde1348[address(msg.sender)].field_768 >= sub_fbde1348[address(msg.sender)].field_512
                                        require msg.value > 0
                                        require sub_fbde1348[address(msg.sender)].field_768 > 0
                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_fbde1348[address(msg.sender)].field_768
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require sub_fbde1348[address(msg.sender)].field_768 + tokensSold >= tokensSold
                                        tokensSold += sub_fbde1348[address(msg.sender)].field_768
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args address(arg1), sub_fbde1348[address(msg.sender)].field_768
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit 0x93cae43c: price, msg.value, sub_fbde1348[address(msg.sender)].field_768, 0, msg.sender, arg1
                                        require msg.sender
                                        if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                            stor16[address(msg.sender)].field_0 = 0
                                            stor16[address(msg.sender)].field_256 = 0
                                            emit 0x83e21c4d: msg.sender
                                        call walletAddress with:
                                           value msg.value wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 == sub_fbde1348[address(msg.sender)].field_256
                                        require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= msg.value
                                        require sub_fbde1348[address(msg.sender)].field_768 >= sub_fbde1348[address(msg.sender)].field_512
                                        require msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) > 0
                                        require sub_fbde1348[address(msg.sender)].field_768 > 0
                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_fbde1348[address(msg.sender)].field_768
                                        require msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised >= weiRaised
                                        weiRaised = msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised
                                        require sub_fbde1348[address(msg.sender)].field_768 + tokensSold >= tokensSold
                                        tokensSold += sub_fbde1348[address(msg.sender)].field_768
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args address(arg1), sub_fbde1348[address(msg.sender)].field_768
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit 0x93cae43c: price, msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18), sub_fbde1348[address(msg.sender)].field_768, (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18, msg.sender, arg1
                                        require msg.sender
                                        if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                            stor16[address(msg.sender)].field_0 = 0
                                            stor16[address(msg.sender)].field_256 = 0
                                            emit 0x83e21c4d: msg.sender
                                        call walletAddress with:
                                           value msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 > 0:
                                            call msg.sender with:
                                               value (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if ext_call.return_data[0] - tokenSaleCap <= -sub_fbde1348[address(msg.sender)].field_768:
                                    if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 <= 0:
                                        require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                        require msg.value > 0
                                        require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 > 0
                                        require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                        tokensSold += 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args address(arg1), 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit 0x93cae43c: price, msg.value, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, arg1
                                        require msg.sender
                                        if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                            stor16[address(msg.sender)].field_0 = 0
                                            stor16[address(msg.sender)].field_256 = 0
                                            emit 0x83e21c4d: msg.sender
                                        call walletAddress with:
                                           value msg.value wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 <= 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                        if not (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768:
                                            require 0 <= msg.value
                                            require sub_fbde1348[address(msg.sender)].field_768 >= sub_fbde1348[address(msg.sender)].field_512
                                            require msg.value > 0
                                            require sub_fbde1348[address(msg.sender)].field_768 > 0
                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_fbde1348[address(msg.sender)].field_768
                                            require msg.value + weiRaised >= weiRaised
                                            weiRaised += msg.value
                                            require sub_fbde1348[address(msg.sender)].field_768 + tokensSold >= tokensSold
                                            tokensSold += sub_fbde1348[address(msg.sender)].field_768
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args address(arg1), sub_fbde1348[address(msg.sender)].field_768
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0]
                                            emit 0x93cae43c: price, msg.value, sub_fbde1348[address(msg.sender)].field_768, 0, msg.sender, arg1
                                            require msg.sender
                                            if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                                require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                sub_fbde1348[address(msg.sender)].field_0 = 0
                                                sub_fbde1348[address(msg.sender)].field_256 = 0
                                                sub_fbde1348[address(msg.sender)].field_512 = 0
                                                sub_fbde1348[address(msg.sender)].field_768 = 0
                                                stor16[address(msg.sender)].field_0 = 0
                                                stor16[address(msg.sender)].field_256 = 0
                                                emit 0x83e21c4d: msg.sender
                                            call walletAddress with:
                                               value msg.value wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 == sub_fbde1348[address(msg.sender)].field_256
                                            require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= msg.value
                                            require sub_fbde1348[address(msg.sender)].field_768 >= sub_fbde1348[address(msg.sender)].field_512
                                            require msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) > 0
                                            require sub_fbde1348[address(msg.sender)].field_768 > 0
                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_fbde1348[address(msg.sender)].field_768
                                            require msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised >= weiRaised
                                            weiRaised = msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised
                                            require sub_fbde1348[address(msg.sender)].field_768 + tokensSold >= tokensSold
                                            tokensSold += sub_fbde1348[address(msg.sender)].field_768
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args address(arg1), sub_fbde1348[address(msg.sender)].field_768
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0]
                                            emit 0x93cae43c: price, msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18), sub_fbde1348[address(msg.sender)].field_768, (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18, msg.sender, arg1
                                            require msg.sender
                                            if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                                require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                sub_fbde1348[address(msg.sender)].field_0 = 0
                                                sub_fbde1348[address(msg.sender)].field_256 = 0
                                                sub_fbde1348[address(msg.sender)].field_512 = 0
                                                sub_fbde1348[address(msg.sender)].field_768 = 0
                                                stor16[address(msg.sender)].field_0 = 0
                                                stor16[address(msg.sender)].field_256 = 0
                                                emit 0x83e21c4d: msg.sender
                                            call walletAddress with:
                                               value msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 > 0:
                                                call msg.sender with:
                                                   value (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                        require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                        require msg.value > 0
                                        require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 > 0
                                        require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                        tokensSold += 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args address(arg1), 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit 0x93cae43c: price, msg.value, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, arg1
                                        require msg.sender
                                        if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                            stor16[address(msg.sender)].field_0 = 0
                                            stor16[address(msg.sender)].field_256 = 0
                                            emit 0x83e21c4d: msg.sender
                                        call walletAddress with:
                                           value msg.value wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                        if not (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap:
                                            require 0 <= msg.value
                                            require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                            require msg.value > 0
                                            require -ext_call.return_data[0] + tokenSaleCap > 0
                                            require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                            require msg.value + weiRaised >= weiRaised
                                            weiRaised += msg.value
                                            require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                            tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0]
                                            emit 0x93cae43c: price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, msg.sender, arg1
                                            require msg.sender
                                            if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                                require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                sub_fbde1348[address(msg.sender)].field_0 = 0
                                                sub_fbde1348[address(msg.sender)].field_256 = 0
                                                sub_fbde1348[address(msg.sender)].field_512 = 0
                                                sub_fbde1348[address(msg.sender)].field_768 = 0
                                                stor16[address(msg.sender)].field_0 = 0
                                                stor16[address(msg.sender)].field_256 = 0
                                                emit 0x83e21c4d: msg.sender
                                            call walletAddress with:
                                               value msg.value wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap == sub_fbde1348[address(msg.sender)].field_256
                                            require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= msg.value
                                            require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                            require msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) > 0
                                            require -ext_call.return_data[0] + tokenSaleCap > 0
                                            require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                            require msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised >= weiRaised
                                            weiRaised = msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised
                                            require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                            tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0]
                                            emit 0x93cae43c: price, msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18, msg.sender, arg1
                                            require msg.sender
                                            if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                                require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                sub_fbde1348[address(msg.sender)].field_0 = 0
                                                sub_fbde1348[address(msg.sender)].field_256 = 0
                                                sub_fbde1348[address(msg.sender)].field_512 = 0
                                                sub_fbde1348[address(msg.sender)].field_768 = 0
                                                stor16[address(msg.sender)].field_0 = 0
                                                stor16[address(msg.sender)].field_256 = 0
                                                emit 0x83e21c4d: msg.sender
                                            call walletAddress with:
                                               value msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 > 0:
                                                call msg.sender with:
                                                   value (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
}

function sub_2b7a0a8e(?) payable {
    require arg1 > 0
    require stor15
    require msg.value > 0
    require msg.sender
    require not stor12
    if sub_fbde1348[address(msg.sender)].field_0 <= 0:
        if arg1:
            require arg1 == price
        require msg.value >= minimumPurchase
        require ext_code.size(tokenAddress)
        call tokenAddress.0xfa2299ee with:
             gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require tokenSaleCap > ext_call.return_data[0]
        require roundTokenCap > sub_463626d6
        require 0 < price
        if not msg.value:
            require price
            if not arg2:
                require msg.value > 0
                require 0 / price > 0
                require (0 / price) + sub_463626d6 >= sub_463626d6
                sub_463626d6 += 0 / price
                require roundTokenCap >= (0 / price) + sub_463626d6
                require msg.value + weiRaised >= weiRaised
                weiRaised += msg.value
                require (0 / price) + tokensSold >= tokensSold
                tokensSold += 0 / price
                require 0 / price <= sub_0d27577e
                sub_0d27577e -= 0 / price
                require ext_code.size(tokenAddress)
                call tokenAddress.0x40c10f19 with:
                     gas gas_remaining wei
                    args msg.sender, 0 / price
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0]
                emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, msg.sender);
                call walletAddress with:
                   value msg.value wei
                     gas 2300 * is_zero(value) wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
            else:
                require (0 / price) + sub_463626d6 >= sub_463626d6
                require ext_code.size(tokenAddress)
                call tokenAddress.0xfa2299ee with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require (0 / price) + ext_call.return_data[0] >= ext_call.return_data[0]
                if (0 / price) + sub_463626d6 <= roundTokenCap:
                    if (0 / price) + ext_call.return_data[0] <= tokenSaleCap:
                        require msg.value > 0
                        require 0 / price > 0
                        require (0 / price) + sub_463626d6 >= sub_463626d6
                        sub_463626d6 += 0 / price
                        require roundTokenCap >= (0 / price) + sub_463626d6
                        require msg.value + weiRaised >= weiRaised
                        weiRaised += msg.value
                        require (0 / price) + tokensSold >= tokensSold
                        tokensSold += 0 / price
                        require 0 / price <= sub_0d27577e
                        sub_0d27577e -= 0 / price
                        require ext_code.size(tokenAddress)
                        call tokenAddress.0x40c10f19 with:
                             gas gas_remaining wei
                            args msg.sender, 0 / price
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0]
                        emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, msg.sender);
                        call walletAddress with:
                           value msg.value wei
                             gas 2300 * is_zero(value) wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                            require msg.value > 0
                            require 0 / price > 0
                            require (0 / price) + sub_463626d6 >= sub_463626d6
                            sub_463626d6 += 0 / price
                            require roundTokenCap >= (0 / price) + sub_463626d6
                            require msg.value + weiRaised >= weiRaised
                            weiRaised += msg.value
                            require (0 / price) + tokensSold >= tokensSold
                            tokensSold += 0 / price
                            require 0 / price <= sub_0d27577e
                            sub_0d27577e -= 0 / price
                            require ext_code.size(tokenAddress)
                            call tokenAddress.0x40c10f19 with:
                                 gas gas_remaining wei
                                args msg.sender, 0 / price
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0]
                            emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, msg.sender);
                            call walletAddress with:
                               value msg.value wei
                                 gas 2300 * is_zero(value) wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                        else:
                            require (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0 / price
                            if not (0 / price) + ext_call.return_data[0] - tokenSaleCap:
                                require 0 <= msg.value
                                require msg.value > 0
                                require -ext_call.return_data[0] + tokenSaleCap > 0
                                require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                require msg.value + weiRaised >= weiRaised
                                weiRaised += msg.value
                                require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, msg.sender);
                                call walletAddress with:
                                   value msg.value wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (0 / price) + ext_call.return_data[0] - tokenSaleCap == price
                                require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                require -ext_call.return_data[0] + tokenSaleCap > 0
                                require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                weiRaised = msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit TokenPurchase(price, msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, msg.sender);
                                call walletAddress with:
                                   value msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 > 0:
                                    call msg.sender with:
                                       value (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                else:
                    if (0 / price) + sub_463626d6 - roundTokenCap <= 0:
                        if (0 / price) + ext_call.return_data[0] <= tokenSaleCap:
                            require msg.value > 0
                            require 0 / price > 0
                            require (0 / price) + sub_463626d6 >= sub_463626d6
                            sub_463626d6 += 0 / price
                            require roundTokenCap >= (0 / price) + sub_463626d6
                            require msg.value + weiRaised >= weiRaised
                            weiRaised += msg.value
                            require (0 / price) + tokensSold >= tokensSold
                            tokensSold += 0 / price
                            require 0 / price <= sub_0d27577e
                            sub_0d27577e -= 0 / price
                            require ext_code.size(tokenAddress)
                            call tokenAddress.0x40c10f19 with:
                                 gas gas_remaining wei
                                args msg.sender, 0 / price
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0]
                            emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, msg.sender);
                            call walletAddress with:
                               value msg.value wei
                                 gas 2300 * is_zero(value) wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                require msg.value > 0
                                require 0 / price > 0
                                require (0 / price) + sub_463626d6 >= sub_463626d6
                                sub_463626d6 += 0 / price
                                require roundTokenCap >= (0 / price) + sub_463626d6
                                require msg.value + weiRaised >= weiRaised
                                weiRaised += msg.value
                                require (0 / price) + tokensSold >= tokensSold
                                tokensSold += 0 / price
                                require 0 / price <= sub_0d27577e
                                sub_0d27577e -= 0 / price
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, 0 / price
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, msg.sender);
                                call walletAddress with:
                                   value msg.value wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0 / price
                                if not (0 / price) + ext_call.return_data[0] - tokenSaleCap:
                                    require 0 <= msg.value
                                    require msg.value > 0
                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                    require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                    sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                    require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                    sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, msg.sender);
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (0 / price) + ext_call.return_data[0] - tokenSaleCap == price
                                    require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                    require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                    require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                    sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                    require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                    require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                    weiRaised = msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                    sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, msg.sender);
                                    call walletAddress with:
                                       value msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 > 0:
                                        call msg.sender with:
                                           value (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if (0 / price) + ext_call.return_data[0] <= tokenSaleCap:
                            if (0 / price) + sub_463626d6 - roundTokenCap <= 0:
                                require msg.value > 0
                                require 0 / price > 0
                                require (0 / price) + sub_463626d6 >= sub_463626d6
                                sub_463626d6 += 0 / price
                                require roundTokenCap >= (0 / price) + sub_463626d6
                                require msg.value + weiRaised >= weiRaised
                                weiRaised += msg.value
                                require (0 / price) + tokensSold >= tokensSold
                                tokensSold += 0 / price
                                require 0 / price <= sub_0d27577e
                                sub_0d27577e -= 0 / price
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, 0 / price
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, msg.sender);
                                call walletAddress with:
                                   value msg.value wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require (0 / price) + sub_463626d6 - roundTokenCap <= 0 / price
                                if not (0 / price) + sub_463626d6 - roundTokenCap:
                                    require 0 <= msg.value
                                    require msg.value > 0
                                    require -sub_463626d6 + roundTokenCap > 0
                                    require roundTokenCap >= sub_463626d6
                                    sub_463626d6 = roundTokenCap
                                    require roundTokenCap >= roundTokenCap
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                    tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                    require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                    sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, -sub_463626d6 + roundTokenCap
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value, -sub_463626d6 + roundTokenCap, 0, ethUsdRate, msg.sender, msg.sender);
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / (0 / price) + sub_463626d6 - roundTokenCap == price
                                    require (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= msg.value
                                    require msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) > 0
                                    require -sub_463626d6 + roundTokenCap > 0
                                    require roundTokenCap >= sub_463626d6
                                    sub_463626d6 = roundTokenCap
                                    require roundTokenCap >= roundTokenCap
                                    require msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised >= weiRaised
                                    weiRaised = msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised
                                    require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                    tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                    require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                    sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, -sub_463626d6 + roundTokenCap
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18), -sub_463626d6 + roundTokenCap, (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18, ethUsdRate, msg.sender, msg.sender);
                                    call walletAddress with:
                                       value msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 > 0:
                                        call msg.sender with:
                                           value (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if ext_call.return_data[0] - tokenSaleCap <= sub_463626d6 - roundTokenCap:
                                if (0 / price) + sub_463626d6 - roundTokenCap <= 0:
                                    require msg.value > 0
                                    require 0 / price > 0
                                    require (0 / price) + sub_463626d6 >= sub_463626d6
                                    sub_463626d6 += 0 / price
                                    require roundTokenCap >= (0 / price) + sub_463626d6
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require (0 / price) + tokensSold >= tokensSold
                                    tokensSold += 0 / price
                                    require 0 / price <= sub_0d27577e
                                    sub_0d27577e -= 0 / price
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, 0 / price
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, msg.sender);
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (0 / price) + sub_463626d6 - roundTokenCap <= 0 / price
                                    if not (0 / price) + sub_463626d6 - roundTokenCap:
                                        require 0 <= msg.value
                                        require msg.value > 0
                                        require -sub_463626d6 + roundTokenCap > 0
                                        require roundTokenCap >= sub_463626d6
                                        sub_463626d6 = roundTokenCap
                                        require roundTokenCap >= roundTokenCap
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                        tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                        require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                        sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, -sub_463626d6 + roundTokenCap
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit TokenPurchase(price, msg.value, -sub_463626d6 + roundTokenCap, 0, ethUsdRate, msg.sender, msg.sender);
                                        call walletAddress with:
                                           value msg.value wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / (0 / price) + sub_463626d6 - roundTokenCap == price
                                        require (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= msg.value
                                        require msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) > 0
                                        require -sub_463626d6 + roundTokenCap > 0
                                        require roundTokenCap >= sub_463626d6
                                        sub_463626d6 = roundTokenCap
                                        require roundTokenCap >= roundTokenCap
                                        require msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised >= weiRaised
                                        weiRaised = msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised
                                        require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                        tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                        require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                        sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, -sub_463626d6 + roundTokenCap
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit TokenPurchase(price, msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18), -sub_463626d6 + roundTokenCap, (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18, ethUsdRate, msg.sender, msg.sender);
                                        call walletAddress with:
                                           value msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 > 0:
                                            call msg.sender with:
                                               value (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                    require msg.value > 0
                                    require 0 / price > 0
                                    require (0 / price) + sub_463626d6 >= sub_463626d6
                                    sub_463626d6 += 0 / price
                                    require roundTokenCap >= (0 / price) + sub_463626d6
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require (0 / price) + tokensSold >= tokensSold
                                    tokensSold += 0 / price
                                    require 0 / price <= sub_0d27577e
                                    sub_0d27577e -= 0 / price
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, 0 / price
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, msg.sender);
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0 / price
                                    if not (0 / price) + ext_call.return_data[0] - tokenSaleCap:
                                        require 0 <= msg.value
                                        require msg.value > 0
                                        require -ext_call.return_data[0] + tokenSaleCap > 0
                                        require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                        sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                        require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                        tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                        require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                        sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, msg.sender);
                                        call walletAddress with:
                                           value msg.value wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (0 / price) + ext_call.return_data[0] - tokenSaleCap == price
                                        require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                        require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                        require -ext_call.return_data[0] + tokenSaleCap > 0
                                        require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                        sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                        require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                        require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                        weiRaised = msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                        require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                        tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                        require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                        sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit TokenPurchase(price, msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, msg.sender);
                                        call walletAddress with:
                                           value msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 > 0:
                                            call msg.sender with:
                                               value (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
        else:
            require 10^18 * msg.value / msg.value == 10^18
            require price
            if not arg2:
                require msg.value > 0
                require 10^18 * msg.value / price > 0
                require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                sub_463626d6 += 10^18 * msg.value / price
                require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                require msg.value + weiRaised >= weiRaised
                weiRaised += msg.value
                require (10^18 * msg.value / price) + tokensSold >= tokensSold
                tokensSold += 10^18 * msg.value / price
                require 10^18 * msg.value / price <= sub_0d27577e
                sub_0d27577e -= 10^18 * msg.value / price
                require ext_code.size(tokenAddress)
                call tokenAddress.0x40c10f19 with:
                     gas gas_remaining wei
                    args msg.sender, 10^18 * msg.value / price
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0]
                emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, msg.sender);
                call walletAddress with:
                   value msg.value wei
                     gas 2300 * is_zero(value) wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
            else:
                require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                require ext_code.size(tokenAddress)
                call tokenAddress.0xfa2299ee with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require (10^18 * msg.value / price) + ext_call.return_data[0] >= ext_call.return_data[0]
                if (10^18 * msg.value / price) + sub_463626d6 <= roundTokenCap:
                    if (10^18 * msg.value / price) + ext_call.return_data[0] <= tokenSaleCap:
                        require msg.value > 0
                        require 10^18 * msg.value / price > 0
                        require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                        sub_463626d6 += 10^18 * msg.value / price
                        require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                        require msg.value + weiRaised >= weiRaised
                        weiRaised += msg.value
                        require (10^18 * msg.value / price) + tokensSold >= tokensSold
                        tokensSold += 10^18 * msg.value / price
                        require 10^18 * msg.value / price <= sub_0d27577e
                        sub_0d27577e -= 10^18 * msg.value / price
                        require ext_code.size(tokenAddress)
                        call tokenAddress.0x40c10f19 with:
                             gas gas_remaining wei
                            args msg.sender, 10^18 * msg.value / price
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0]
                        emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, msg.sender);
                        call walletAddress with:
                           value msg.value wei
                             gas 2300 * is_zero(value) wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                            require msg.value > 0
                            require 10^18 * msg.value / price > 0
                            require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                            sub_463626d6 += 10^18 * msg.value / price
                            require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                            require msg.value + weiRaised >= weiRaised
                            weiRaised += msg.value
                            require (10^18 * msg.value / price) + tokensSold >= tokensSold
                            tokensSold += 10^18 * msg.value / price
                            require 10^18 * msg.value / price <= sub_0d27577e
                            sub_0d27577e -= 10^18 * msg.value / price
                            require ext_code.size(tokenAddress)
                            call tokenAddress.0x40c10f19 with:
                                 gas gas_remaining wei
                                args msg.sender, 10^18 * msg.value / price
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0]
                            emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, msg.sender);
                            call walletAddress with:
                               value msg.value wei
                                 gas 2300 * is_zero(value) wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                        else:
                            require (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 10^18 * msg.value / price
                            if not (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap:
                                require 0 <= msg.value
                                require msg.value > 0
                                require -ext_call.return_data[0] + tokenSaleCap > 0
                                require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                require msg.value + weiRaised >= weiRaised
                                weiRaised += msg.value
                                require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, msg.sender);
                                call walletAddress with:
                                   value msg.value wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap == price
                                require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                require -ext_call.return_data[0] + tokenSaleCap > 0
                                require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                weiRaised = msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit TokenPurchase(price, msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, msg.sender);
                                call walletAddress with:
                                   value msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 > 0:
                                    call msg.sender with:
                                       value (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                else:
                    if (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap <= 0:
                        if (10^18 * msg.value / price) + ext_call.return_data[0] <= tokenSaleCap:
                            require msg.value > 0
                            require 10^18 * msg.value / price > 0
                            require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                            sub_463626d6 += 10^18 * msg.value / price
                            require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                            require msg.value + weiRaised >= weiRaised
                            weiRaised += msg.value
                            require (10^18 * msg.value / price) + tokensSold >= tokensSold
                            tokensSold += 10^18 * msg.value / price
                            require 10^18 * msg.value / price <= sub_0d27577e
                            sub_0d27577e -= 10^18 * msg.value / price
                            require ext_code.size(tokenAddress)
                            call tokenAddress.0x40c10f19 with:
                                 gas gas_remaining wei
                                args msg.sender, 10^18 * msg.value / price
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0]
                            emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, msg.sender);
                            call walletAddress with:
                               value msg.value wei
                                 gas 2300 * is_zero(value) wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                require msg.value > 0
                                require 10^18 * msg.value / price > 0
                                require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                sub_463626d6 += 10^18 * msg.value / price
                                require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                require msg.value + weiRaised >= weiRaised
                                weiRaised += msg.value
                                require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                tokensSold += 10^18 * msg.value / price
                                require 10^18 * msg.value / price <= sub_0d27577e
                                sub_0d27577e -= 10^18 * msg.value / price
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, 10^18 * msg.value / price
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, msg.sender);
                                call walletAddress with:
                                   value msg.value wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 10^18 * msg.value / price
                                if not (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap:
                                    require 0 <= msg.value
                                    require msg.value > 0
                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                    require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                    sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                    require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                    sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, msg.sender);
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap == price
                                    require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                    require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                    require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                    sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                    require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                    require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                    weiRaised = msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                    sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, msg.sender);
                                    call walletAddress with:
                                       value msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 > 0:
                                        call msg.sender with:
                                           value (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if (10^18 * msg.value / price) + ext_call.return_data[0] <= tokenSaleCap:
                            if (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap <= 0:
                                require msg.value > 0
                                require 10^18 * msg.value / price > 0
                                require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                sub_463626d6 += 10^18 * msg.value / price
                                require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                require msg.value + weiRaised >= weiRaised
                                weiRaised += msg.value
                                require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                tokensSold += 10^18 * msg.value / price
                                require 10^18 * msg.value / price <= sub_0d27577e
                                sub_0d27577e -= 10^18 * msg.value / price
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, 10^18 * msg.value / price
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, msg.sender);
                                call walletAddress with:
                                   value msg.value wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap <= 10^18 * msg.value / price
                                if not (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap:
                                    require 0 <= msg.value
                                    require msg.value > 0
                                    require -sub_463626d6 + roundTokenCap > 0
                                    require roundTokenCap >= sub_463626d6
                                    sub_463626d6 = roundTokenCap
                                    require roundTokenCap >= roundTokenCap
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                    tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                    require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                    sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, -sub_463626d6 + roundTokenCap
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value, -sub_463626d6 + roundTokenCap, 0, ethUsdRate, msg.sender, msg.sender);
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap == price
                                    require (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= msg.value
                                    require msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) > 0
                                    require -sub_463626d6 + roundTokenCap > 0
                                    require roundTokenCap >= sub_463626d6
                                    sub_463626d6 = roundTokenCap
                                    require roundTokenCap >= roundTokenCap
                                    require msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised >= weiRaised
                                    weiRaised = msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised
                                    require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                    tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                    require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                    sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, -sub_463626d6 + roundTokenCap
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18), -sub_463626d6 + roundTokenCap, (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18, ethUsdRate, msg.sender, msg.sender);
                                    call walletAddress with:
                                       value msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 > 0:
                                        call msg.sender with:
                                           value (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if ext_call.return_data[0] - tokenSaleCap <= sub_463626d6 - roundTokenCap:
                                if (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap <= 0:
                                    require msg.value > 0
                                    require 10^18 * msg.value / price > 0
                                    require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                    sub_463626d6 += 10^18 * msg.value / price
                                    require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                    tokensSold += 10^18 * msg.value / price
                                    require 10^18 * msg.value / price <= sub_0d27577e
                                    sub_0d27577e -= 10^18 * msg.value / price
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, 10^18 * msg.value / price
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, msg.sender);
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap <= 10^18 * msg.value / price
                                    if not (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap:
                                        require 0 <= msg.value
                                        require msg.value > 0
                                        require -sub_463626d6 + roundTokenCap > 0
                                        require roundTokenCap >= sub_463626d6
                                        sub_463626d6 = roundTokenCap
                                        require roundTokenCap >= roundTokenCap
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                        tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                        require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                        sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, -sub_463626d6 + roundTokenCap
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit TokenPurchase(price, msg.value, -sub_463626d6 + roundTokenCap, 0, ethUsdRate, msg.sender, msg.sender);
                                        call walletAddress with:
                                           value msg.value wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap == price
                                        require (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= msg.value
                                        require msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) > 0
                                        require -sub_463626d6 + roundTokenCap > 0
                                        require roundTokenCap >= sub_463626d6
                                        sub_463626d6 = roundTokenCap
                                        require roundTokenCap >= roundTokenCap
                                        require msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised >= weiRaised
                                        weiRaised = msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised
                                        require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                        tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                        require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                        sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, -sub_463626d6 + roundTokenCap
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit TokenPurchase(price, msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18), -sub_463626d6 + roundTokenCap, (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18, ethUsdRate, msg.sender, msg.sender);
                                        call walletAddress with:
                                           value msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 > 0:
                                            call msg.sender with:
                                               value (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                    require msg.value > 0
                                    require 10^18 * msg.value / price > 0
                                    require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                    sub_463626d6 += 10^18 * msg.value / price
                                    require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                    tokensSold += 10^18 * msg.value / price
                                    require 10^18 * msg.value / price <= sub_0d27577e
                                    sub_0d27577e -= 10^18 * msg.value / price
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, 10^18 * msg.value / price
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, msg.sender);
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 10^18 * msg.value / price
                                    if not (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap:
                                        require 0 <= msg.value
                                        require msg.value > 0
                                        require -ext_call.return_data[0] + tokenSaleCap > 0
                                        require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                        sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                        require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                        tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                        require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                        sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, msg.sender);
                                        call walletAddress with:
                                           value msg.value wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap == price
                                        require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                        require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                        require -ext_call.return_data[0] + tokenSaleCap > 0
                                        require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                        sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                        require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                        require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                        weiRaised = msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                        require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                        tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                        require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                        sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit TokenPurchase(price, msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, msg.sender);
                                        call walletAddress with:
                                           value msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 > 0:
                                            call msg.sender with:
                                               value (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
        if sub_463626d6 >= roundTokenCap:
            emit RoundEnded(sub_463626d6, roundTokenCap);
    else:
        if sub_fbde1348[address(msg.sender)].field_0 <= block.timestamp:
            if arg1:
                require arg1 == price
            require msg.value >= minimumPurchase
            require ext_code.size(tokenAddress)
            call tokenAddress.0xfa2299ee with:
                 gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require tokenSaleCap > ext_call.return_data[0]
            require roundTokenCap > sub_463626d6
            require 0 < price
            if not msg.value:
                require price
                if not arg2:
                    require msg.value > 0
                    require 0 / price > 0
                    require (0 / price) + sub_463626d6 >= sub_463626d6
                    sub_463626d6 += 0 / price
                    require roundTokenCap >= (0 / price) + sub_463626d6
                    require msg.value + weiRaised >= weiRaised
                    weiRaised += msg.value
                    require (0 / price) + tokensSold >= tokensSold
                    tokensSold += 0 / price
                    require 0 / price <= sub_0d27577e
                    sub_0d27577e -= 0 / price
                    require ext_code.size(tokenAddress)
                    call tokenAddress.0x40c10f19 with:
                         gas gas_remaining wei
                        args msg.sender, 0 / price
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0]
                    emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, msg.sender);
                    call walletAddress with:
                       value msg.value wei
                         gas 2300 * is_zero(value) wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                else:
                    require (0 / price) + sub_463626d6 >= sub_463626d6
                    require ext_code.size(tokenAddress)
                    call tokenAddress.0xfa2299ee with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (0 / price) + ext_call.return_data[0] >= ext_call.return_data[0]
                    if (0 / price) + sub_463626d6 <= roundTokenCap:
                        if (0 / price) + ext_call.return_data[0] <= tokenSaleCap:
                            require msg.value > 0
                            require 0 / price > 0
                            require (0 / price) + sub_463626d6 >= sub_463626d6
                            sub_463626d6 += 0 / price
                            require roundTokenCap >= (0 / price) + sub_463626d6
                            require msg.value + weiRaised >= weiRaised
                            weiRaised += msg.value
                            require (0 / price) + tokensSold >= tokensSold
                            tokensSold += 0 / price
                            require 0 / price <= sub_0d27577e
                            sub_0d27577e -= 0 / price
                            require ext_code.size(tokenAddress)
                            call tokenAddress.0x40c10f19 with:
                                 gas gas_remaining wei
                                args msg.sender, 0 / price
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0]
                            emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, msg.sender);
                            call walletAddress with:
                               value msg.value wei
                                 gas 2300 * is_zero(value) wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                require msg.value > 0
                                require 0 / price > 0
                                require (0 / price) + sub_463626d6 >= sub_463626d6
                                sub_463626d6 += 0 / price
                                require roundTokenCap >= (0 / price) + sub_463626d6
                                require msg.value + weiRaised >= weiRaised
                                weiRaised += msg.value
                                require (0 / price) + tokensSold >= tokensSold
                                tokensSold += 0 / price
                                require 0 / price <= sub_0d27577e
                                sub_0d27577e -= 0 / price
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, 0 / price
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, msg.sender);
                                call walletAddress with:
                                   value msg.value wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0 / price
                                if not (0 / price) + ext_call.return_data[0] - tokenSaleCap:
                                    require 0 <= msg.value
                                    require msg.value > 0
                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                    require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                    sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                    require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                    sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, msg.sender);
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (0 / price) + ext_call.return_data[0] - tokenSaleCap == price
                                    require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                    require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                    require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                    sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                    require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                    require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                    weiRaised = msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                    sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, msg.sender);
                                    call walletAddress with:
                                       value msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 > 0:
                                        call msg.sender with:
                                           value (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if (0 / price) + sub_463626d6 - roundTokenCap <= 0:
                            if (0 / price) + ext_call.return_data[0] <= tokenSaleCap:
                                require msg.value > 0
                                require 0 / price > 0
                                require (0 / price) + sub_463626d6 >= sub_463626d6
                                sub_463626d6 += 0 / price
                                require roundTokenCap >= (0 / price) + sub_463626d6
                                require msg.value + weiRaised >= weiRaised
                                weiRaised += msg.value
                                require (0 / price) + tokensSold >= tokensSold
                                tokensSold += 0 / price
                                require 0 / price <= sub_0d27577e
                                sub_0d27577e -= 0 / price
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, 0 / price
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, msg.sender);
                                call walletAddress with:
                                   value msg.value wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                    require msg.value > 0
                                    require 0 / price > 0
                                    require (0 / price) + sub_463626d6 >= sub_463626d6
                                    sub_463626d6 += 0 / price
                                    require roundTokenCap >= (0 / price) + sub_463626d6
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require (0 / price) + tokensSold >= tokensSold
                                    tokensSold += 0 / price
                                    require 0 / price <= sub_0d27577e
                                    sub_0d27577e -= 0 / price
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, 0 / price
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, msg.sender);
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0 / price
                                    if not (0 / price) + ext_call.return_data[0] - tokenSaleCap:
                                        require 0 <= msg.value
                                        require msg.value > 0
                                        require -ext_call.return_data[0] + tokenSaleCap > 0
                                        require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                        sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                        require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                        tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                        require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                        sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, msg.sender);
                                        call walletAddress with:
                                           value msg.value wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (0 / price) + ext_call.return_data[0] - tokenSaleCap == price
                                        require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                        require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                        require -ext_call.return_data[0] + tokenSaleCap > 0
                                        require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                        sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                        require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                        require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                        weiRaised = msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                        require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                        tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                        require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                        sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit TokenPurchase(price, msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, msg.sender);
                                        call walletAddress with:
                                           value msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 > 0:
                                            call msg.sender with:
                                               value (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (0 / price) + ext_call.return_data[0] <= tokenSaleCap:
                                if (0 / price) + sub_463626d6 - roundTokenCap <= 0:
                                    require msg.value > 0
                                    require 0 / price > 0
                                    require (0 / price) + sub_463626d6 >= sub_463626d6
                                    sub_463626d6 += 0 / price
                                    require roundTokenCap >= (0 / price) + sub_463626d6
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require (0 / price) + tokensSold >= tokensSold
                                    tokensSold += 0 / price
                                    require 0 / price <= sub_0d27577e
                                    sub_0d27577e -= 0 / price
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, 0 / price
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, msg.sender);
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (0 / price) + sub_463626d6 - roundTokenCap <= 0 / price
                                    if not (0 / price) + sub_463626d6 - roundTokenCap:
                                        require 0 <= msg.value
                                        require msg.value > 0
                                        require -sub_463626d6 + roundTokenCap > 0
                                        require roundTokenCap >= sub_463626d6
                                        sub_463626d6 = roundTokenCap
                                        require roundTokenCap >= roundTokenCap
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                        tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                        require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                        sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, -sub_463626d6 + roundTokenCap
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit TokenPurchase(price, msg.value, -sub_463626d6 + roundTokenCap, 0, ethUsdRate, msg.sender, msg.sender);
                                        call walletAddress with:
                                           value msg.value wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / (0 / price) + sub_463626d6 - roundTokenCap == price
                                        require (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= msg.value
                                        require msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) > 0
                                        require -sub_463626d6 + roundTokenCap > 0
                                        require roundTokenCap >= sub_463626d6
                                        sub_463626d6 = roundTokenCap
                                        require roundTokenCap >= roundTokenCap
                                        require msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised >= weiRaised
                                        weiRaised = msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised
                                        require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                        tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                        require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                        sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, -sub_463626d6 + roundTokenCap
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit TokenPurchase(price, msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18), -sub_463626d6 + roundTokenCap, (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18, ethUsdRate, msg.sender, msg.sender);
                                        call walletAddress with:
                                           value msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 > 0:
                                            call msg.sender with:
                                               value (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if ext_call.return_data[0] - tokenSaleCap <= sub_463626d6 - roundTokenCap:
                                    if (0 / price) + sub_463626d6 - roundTokenCap <= 0:
                                        require msg.value > 0
                                        require 0 / price > 0
                                        require (0 / price) + sub_463626d6 >= sub_463626d6
                                        sub_463626d6 += 0 / price
                                        require roundTokenCap >= (0 / price) + sub_463626d6
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require (0 / price) + tokensSold >= tokensSold
                                        tokensSold += 0 / price
                                        require 0 / price <= sub_0d27577e
                                        sub_0d27577e -= 0 / price
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, 0 / price
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, msg.sender);
                                        call walletAddress with:
                                           value msg.value wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require (0 / price) + sub_463626d6 - roundTokenCap <= 0 / price
                                        if not (0 / price) + sub_463626d6 - roundTokenCap:
                                            require 0 <= msg.value
                                            require msg.value > 0
                                            require -sub_463626d6 + roundTokenCap > 0
                                            require roundTokenCap >= sub_463626d6
                                            sub_463626d6 = roundTokenCap
                                            require roundTokenCap >= roundTokenCap
                                            require msg.value + weiRaised >= weiRaised
                                            weiRaised += msg.value
                                            require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                            tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                            require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                            sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, -sub_463626d6 + roundTokenCap
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0]
                                            emit TokenPurchase(price, msg.value, -sub_463626d6 + roundTokenCap, 0, ethUsdRate, msg.sender, msg.sender);
                                            call walletAddress with:
                                               value msg.value wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / (0 / price) + sub_463626d6 - roundTokenCap == price
                                            require (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= msg.value
                                            require msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) > 0
                                            require -sub_463626d6 + roundTokenCap > 0
                                            require roundTokenCap >= sub_463626d6
                                            sub_463626d6 = roundTokenCap
                                            require roundTokenCap >= roundTokenCap
                                            require msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised >= weiRaised
                                            weiRaised = msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised
                                            require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                            tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                            require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                            sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, -sub_463626d6 + roundTokenCap
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0]
                                            emit TokenPurchase(price, msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18), -sub_463626d6 + roundTokenCap, (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18, ethUsdRate, msg.sender, msg.sender);
                                            call walletAddress with:
                                               value msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 > 0:
                                                call msg.sender with:
                                                   value (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                        require msg.value > 0
                                        require 0 / price > 0
                                        require (0 / price) + sub_463626d6 >= sub_463626d6
                                        sub_463626d6 += 0 / price
                                        require roundTokenCap >= (0 / price) + sub_463626d6
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require (0 / price) + tokensSold >= tokensSold
                                        tokensSold += 0 / price
                                        require 0 / price <= sub_0d27577e
                                        sub_0d27577e -= 0 / price
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, 0 / price
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, msg.sender);
                                        call walletAddress with:
                                           value msg.value wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0 / price
                                        if not (0 / price) + ext_call.return_data[0] - tokenSaleCap:
                                            require 0 <= msg.value
                                            require msg.value > 0
                                            require -ext_call.return_data[0] + tokenSaleCap > 0
                                            require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                            sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                            require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                            require msg.value + weiRaised >= weiRaised
                                            weiRaised += msg.value
                                            require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                            tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                            require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                            sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0]
                                            emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, msg.sender);
                                            call walletAddress with:
                                               value msg.value wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (0 / price) + ext_call.return_data[0] - tokenSaleCap == price
                                            require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                            require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                            require -ext_call.return_data[0] + tokenSaleCap > 0
                                            require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                            sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                            require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                            require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                            weiRaised = msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                            require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                            tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                            require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                            sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0]
                                            emit TokenPurchase(price, msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, msg.sender);
                                            call walletAddress with:
                                               value msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 > 0:
                                                call msg.sender with:
                                                   value (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
            else:
                require 10^18 * msg.value / msg.value == 10^18
                require price
                if not arg2:
                    require msg.value > 0
                    require 10^18 * msg.value / price > 0
                    require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                    sub_463626d6 += 10^18 * msg.value / price
                    require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                    require msg.value + weiRaised >= weiRaised
                    weiRaised += msg.value
                    require (10^18 * msg.value / price) + tokensSold >= tokensSold
                    tokensSold += 10^18 * msg.value / price
                    require 10^18 * msg.value / price <= sub_0d27577e
                    sub_0d27577e -= 10^18 * msg.value / price
                    require ext_code.size(tokenAddress)
                    call tokenAddress.0x40c10f19 with:
                         gas gas_remaining wei
                        args msg.sender, 10^18 * msg.value / price
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0]
                    emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, msg.sender);
                    call walletAddress with:
                       value msg.value wei
                         gas 2300 * is_zero(value) wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                else:
                    require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                    require ext_code.size(tokenAddress)
                    call tokenAddress.0xfa2299ee with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (10^18 * msg.value / price) + ext_call.return_data[0] >= ext_call.return_data[0]
                    if (10^18 * msg.value / price) + sub_463626d6 <= roundTokenCap:
                        if (10^18 * msg.value / price) + ext_call.return_data[0] <= tokenSaleCap:
                            require msg.value > 0
                            require 10^18 * msg.value / price > 0
                            require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                            sub_463626d6 += 10^18 * msg.value / price
                            require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                            require msg.value + weiRaised >= weiRaised
                            weiRaised += msg.value
                            require (10^18 * msg.value / price) + tokensSold >= tokensSold
                            tokensSold += 10^18 * msg.value / price
                            require 10^18 * msg.value / price <= sub_0d27577e
                            sub_0d27577e -= 10^18 * msg.value / price
                            require ext_code.size(tokenAddress)
                            call tokenAddress.0x40c10f19 with:
                                 gas gas_remaining wei
                                args msg.sender, 10^18 * msg.value / price
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0]
                            emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, msg.sender);
                            call walletAddress with:
                               value msg.value wei
                                 gas 2300 * is_zero(value) wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                require msg.value > 0
                                require 10^18 * msg.value / price > 0
                                require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                sub_463626d6 += 10^18 * msg.value / price
                                require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                require msg.value + weiRaised >= weiRaised
                                weiRaised += msg.value
                                require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                tokensSold += 10^18 * msg.value / price
                                require 10^18 * msg.value / price <= sub_0d27577e
                                sub_0d27577e -= 10^18 * msg.value / price
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, 10^18 * msg.value / price
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, msg.sender);
                                call walletAddress with:
                                   value msg.value wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 10^18 * msg.value / price
                                if not (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap:
                                    require 0 <= msg.value
                                    require msg.value > 0
                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                    require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                    sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                    require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                    sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, msg.sender);
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap == price
                                    require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                    require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                    require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                    sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                    require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                    require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                    weiRaised = msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                    sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, msg.sender);
                                    call walletAddress with:
                                       value msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 > 0:
                                        call msg.sender with:
                                           value (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap <= 0:
                            if (10^18 * msg.value / price) + ext_call.return_data[0] <= tokenSaleCap:
                                require msg.value > 0
                                require 10^18 * msg.value / price > 0
                                require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                sub_463626d6 += 10^18 * msg.value / price
                                require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                require msg.value + weiRaised >= weiRaised
                                weiRaised += msg.value
                                require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                tokensSold += 10^18 * msg.value / price
                                require 10^18 * msg.value / price <= sub_0d27577e
                                sub_0d27577e -= 10^18 * msg.value / price
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, 10^18 * msg.value / price
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, msg.sender);
                                call walletAddress with:
                                   value msg.value wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                    require msg.value > 0
                                    require 10^18 * msg.value / price > 0
                                    require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                    sub_463626d6 += 10^18 * msg.value / price
                                    require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                    tokensSold += 10^18 * msg.value / price
                                    require 10^18 * msg.value / price <= sub_0d27577e
                                    sub_0d27577e -= 10^18 * msg.value / price
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, 10^18 * msg.value / price
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, msg.sender);
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 10^18 * msg.value / price
                                    if not (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap:
                                        require 0 <= msg.value
                                        require msg.value > 0
                                        require -ext_call.return_data[0] + tokenSaleCap > 0
                                        require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                        sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                        require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                        tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                        require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                        sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, msg.sender);
                                        call walletAddress with:
                                           value msg.value wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap == price
                                        require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                        require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                        require -ext_call.return_data[0] + tokenSaleCap > 0
                                        require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                        sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                        require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                        require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                        weiRaised = msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                        require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                        tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                        require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                        sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit TokenPurchase(price, msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, msg.sender);
                                        call walletAddress with:
                                           value msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 > 0:
                                            call msg.sender with:
                                               value (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (10^18 * msg.value / price) + ext_call.return_data[0] <= tokenSaleCap:
                                if (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap <= 0:
                                    require msg.value > 0
                                    require 10^18 * msg.value / price > 0
                                    require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                    sub_463626d6 += 10^18 * msg.value / price
                                    require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                    tokensSold += 10^18 * msg.value / price
                                    require 10^18 * msg.value / price <= sub_0d27577e
                                    sub_0d27577e -= 10^18 * msg.value / price
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, 10^18 * msg.value / price
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, msg.sender);
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap <= 10^18 * msg.value / price
                                    if not (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap:
                                        require 0 <= msg.value
                                        require msg.value > 0
                                        require -sub_463626d6 + roundTokenCap > 0
                                        require roundTokenCap >= sub_463626d6
                                        sub_463626d6 = roundTokenCap
                                        require roundTokenCap >= roundTokenCap
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                        tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                        require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                        sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, -sub_463626d6 + roundTokenCap
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit TokenPurchase(price, msg.value, -sub_463626d6 + roundTokenCap, 0, ethUsdRate, msg.sender, msg.sender);
                                        call walletAddress with:
                                           value msg.value wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap == price
                                        require (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= msg.value
                                        require msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) > 0
                                        require -sub_463626d6 + roundTokenCap > 0
                                        require roundTokenCap >= sub_463626d6
                                        sub_463626d6 = roundTokenCap
                                        require roundTokenCap >= roundTokenCap
                                        require msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised >= weiRaised
                                        weiRaised = msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised
                                        require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                        tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                        require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                        sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, -sub_463626d6 + roundTokenCap
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit TokenPurchase(price, msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18), -sub_463626d6 + roundTokenCap, (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18, ethUsdRate, msg.sender, msg.sender);
                                        call walletAddress with:
                                           value msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 > 0:
                                            call msg.sender with:
                                               value (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if ext_call.return_data[0] - tokenSaleCap <= sub_463626d6 - roundTokenCap:
                                    if (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap <= 0:
                                        require msg.value > 0
                                        require 10^18 * msg.value / price > 0
                                        require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                        sub_463626d6 += 10^18 * msg.value / price
                                        require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                        tokensSold += 10^18 * msg.value / price
                                        require 10^18 * msg.value / price <= sub_0d27577e
                                        sub_0d27577e -= 10^18 * msg.value / price
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, 10^18 * msg.value / price
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, msg.sender);
                                        call walletAddress with:
                                           value msg.value wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap <= 10^18 * msg.value / price
                                        if not (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap:
                                            require 0 <= msg.value
                                            require msg.value > 0
                                            require -sub_463626d6 + roundTokenCap > 0
                                            require roundTokenCap >= sub_463626d6
                                            sub_463626d6 = roundTokenCap
                                            require roundTokenCap >= roundTokenCap
                                            require msg.value + weiRaised >= weiRaised
                                            weiRaised += msg.value
                                            require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                            tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                            require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                            sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, -sub_463626d6 + roundTokenCap
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0]
                                            emit TokenPurchase(price, msg.value, -sub_463626d6 + roundTokenCap, 0, ethUsdRate, msg.sender, msg.sender);
                                            call walletAddress with:
                                               value msg.value wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap == price
                                            require (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= msg.value
                                            require msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) > 0
                                            require -sub_463626d6 + roundTokenCap > 0
                                            require roundTokenCap >= sub_463626d6
                                            sub_463626d6 = roundTokenCap
                                            require roundTokenCap >= roundTokenCap
                                            require msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised >= weiRaised
                                            weiRaised = msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised
                                            require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                            tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                            require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                            sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, -sub_463626d6 + roundTokenCap
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0]
                                            emit TokenPurchase(price, msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18), -sub_463626d6 + roundTokenCap, (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18, ethUsdRate, msg.sender, msg.sender);
                                            call walletAddress with:
                                               value msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 > 0:
                                                call msg.sender with:
                                                   value (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                        require msg.value > 0
                                        require 10^18 * msg.value / price > 0
                                        require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                        sub_463626d6 += 10^18 * msg.value / price
                                        require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                        tokensSold += 10^18 * msg.value / price
                                        require 10^18 * msg.value / price <= sub_0d27577e
                                        sub_0d27577e -= 10^18 * msg.value / price
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, 10^18 * msg.value / price
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, msg.sender);
                                        call walletAddress with:
                                           value msg.value wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 10^18 * msg.value / price
                                        if not (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap:
                                            require 0 <= msg.value
                                            require msg.value > 0
                                            require -ext_call.return_data[0] + tokenSaleCap > 0
                                            require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                            sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                            require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                            require msg.value + weiRaised >= weiRaised
                                            weiRaised += msg.value
                                            require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                            tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                            require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                            sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0]
                                            emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, msg.sender);
                                            call walletAddress with:
                                               value msg.value wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap == price
                                            require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                            require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                            require -ext_call.return_data[0] + tokenSaleCap > 0
                                            require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                            sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                            require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                            require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                            weiRaised = msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                            require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                            tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                            require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                            sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0]
                                            emit TokenPurchase(price, msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, msg.sender);
                                            call walletAddress with:
                                               value msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 > 0:
                                                call msg.sender with:
                                                   value (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
            if sub_463626d6 >= roundTokenCap:
                emit RoundEnded(sub_463626d6, roundTokenCap);
        else:
            if arg1:
                require arg1 == sub_fbde1348[address(msg.sender)].field_256
            require ext_code.size(tokenAddress)
            call tokenAddress.0xfa2299ee with:
                 gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require tokenSaleCap > ext_call.return_data[0]
            require sub_fbde1348[address(msg.sender)].field_256 > 0
            if not msg.value:
                require sub_fbde1348[address(msg.sender)].field_256
                require 0 / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                if not arg2:
                    require msg.value > 0
                    require 0 / sub_fbde1348[address(msg.sender)].field_256 > 0
                    require 0 / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                    require msg.value + weiRaised >= weiRaised
                    weiRaised += msg.value
                    require (0 / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                    tokensSold += 0 / sub_fbde1348[address(msg.sender)].field_256
                    require ext_code.size(tokenAddress)
                    call tokenAddress.0x40c10f19 with:
                         gas gas_remaining wei
                        args msg.sender, 0 / sub_fbde1348[address(msg.sender)].field_256
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0]
                    emit 0x93cae43c: price, msg.value, 0 / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, msg.sender
                    require msg.sender
                    if sub_fbde1348[address(msg.sender)].field_0 > 0:
                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                        sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                        stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                        stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                        sub_fbde1348[address(msg.sender)].field_0 = 0
                        sub_fbde1348[address(msg.sender)].field_256 = 0
                        sub_fbde1348[address(msg.sender)].field_512 = 0
                        sub_fbde1348[address(msg.sender)].field_768 = 0
                        stor16[address(msg.sender)].field_0 = 0
                        stor16[address(msg.sender)].field_256 = 0
                        emit 0x83e21c4d: msg.sender
                    call walletAddress with:
                       value msg.value wei
                         gas 2300 * is_zero(value) wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                else:
                    require ext_code.size(tokenAddress)
                    call tokenAddress.0xfa2299ee with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] >= ext_call.return_data[0]
                    if 0 / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768:
                        if (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] <= tokenSaleCap:
                            require 0 / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                            require msg.value > 0
                            require 0 / sub_fbde1348[address(msg.sender)].field_256 > 0
                            require 0 / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                            require msg.value + weiRaised >= weiRaised
                            weiRaised += msg.value
                            require (0 / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                            tokensSold += 0 / sub_fbde1348[address(msg.sender)].field_256
                            require ext_code.size(tokenAddress)
                            call tokenAddress.0x40c10f19 with:
                                 gas gas_remaining wei
                                args msg.sender, 0 / sub_fbde1348[address(msg.sender)].field_256
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0]
                            emit 0x93cae43c: price, msg.value, 0 / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, msg.sender
                            require msg.sender
                            if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                sub_fbde1348[address(msg.sender)].field_0 = 0
                                sub_fbde1348[address(msg.sender)].field_256 = 0
                                sub_fbde1348[address(msg.sender)].field_512 = 0
                                sub_fbde1348[address(msg.sender)].field_768 = 0
                                stor16[address(msg.sender)].field_0 = 0
                                stor16[address(msg.sender)].field_256 = 0
                                emit 0x83e21c4d: msg.sender
                            call walletAddress with:
                               value msg.value wei
                                 gas 2300 * is_zero(value) wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                require 0 / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                require msg.value > 0
                                require 0 / sub_fbde1348[address(msg.sender)].field_256 > 0
                                require 0 / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                require msg.value + weiRaised >= weiRaised
                                weiRaised += msg.value
                                require (0 / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                tokensSold += 0 / sub_fbde1348[address(msg.sender)].field_256
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, 0 / sub_fbde1348[address(msg.sender)].field_256
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit 0x93cae43c: price, msg.value, 0 / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, msg.sender
                                require msg.sender
                                if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                    require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                    sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                    stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                    stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                    sub_fbde1348[address(msg.sender)].field_0 = 0
                                    sub_fbde1348[address(msg.sender)].field_256 = 0
                                    sub_fbde1348[address(msg.sender)].field_512 = 0
                                    sub_fbde1348[address(msg.sender)].field_768 = 0
                                    stor16[address(msg.sender)].field_0 = 0
                                    stor16[address(msg.sender)].field_256 = 0
                                    emit 0x83e21c4d: msg.sender
                                call walletAddress with:
                                   value msg.value wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 0 / sub_fbde1348[address(msg.sender)].field_256
                                if not (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap:
                                    require 0 <= msg.value
                                    require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                    require msg.value > 0
                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit 0x93cae43c: price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, msg.sender, msg.sender
                                    require msg.sender
                                    if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                        sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                        stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                        stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                        sub_fbde1348[address(msg.sender)].field_0 = 0
                                        sub_fbde1348[address(msg.sender)].field_256 = 0
                                        sub_fbde1348[address(msg.sender)].field_512 = 0
                                        sub_fbde1348[address(msg.sender)].field_768 = 0
                                        stor16[address(msg.sender)].field_0 = 0
                                        stor16[address(msg.sender)].field_256 = 0
                                        emit 0x83e21c4d: msg.sender
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap == sub_fbde1348[address(msg.sender)].field_256
                                    require (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= msg.value
                                    require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                    require msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) > 0
                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                    require msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised >= weiRaised
                                    weiRaised = msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised
                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit 0x93cae43c: price, msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18, msg.sender, msg.sender
                                    require msg.sender
                                    if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                        sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                        stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                        stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                        sub_fbde1348[address(msg.sender)].field_0 = 0
                                        sub_fbde1348[address(msg.sender)].field_256 = 0
                                        sub_fbde1348[address(msg.sender)].field_512 = 0
                                        sub_fbde1348[address(msg.sender)].field_768 = 0
                                        stor16[address(msg.sender)].field_0 = 0
                                        stor16[address(msg.sender)].field_256 = 0
                                        emit 0x83e21c4d: msg.sender
                                    call walletAddress with:
                                       value msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 > 0:
                                        call msg.sender with:
                                           value (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if (0 / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 <= 0:
                            if (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] <= tokenSaleCap:
                                require 0 / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                require msg.value > 0
                                require 0 / sub_fbde1348[address(msg.sender)].field_256 > 0
                                require 0 / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                require msg.value + weiRaised >= weiRaised
                                weiRaised += msg.value
                                require (0 / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                tokensSold += 0 / sub_fbde1348[address(msg.sender)].field_256
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, 0 / sub_fbde1348[address(msg.sender)].field_256
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit 0x93cae43c: price, msg.value, 0 / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, msg.sender
                                require msg.sender
                                if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                    require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                    sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                    stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                    stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                    sub_fbde1348[address(msg.sender)].field_0 = 0
                                    sub_fbde1348[address(msg.sender)].field_256 = 0
                                    sub_fbde1348[address(msg.sender)].field_512 = 0
                                    sub_fbde1348[address(msg.sender)].field_768 = 0
                                    stor16[address(msg.sender)].field_0 = 0
                                    stor16[address(msg.sender)].field_256 = 0
                                    emit 0x83e21c4d: msg.sender
                                call walletAddress with:
                                   value msg.value wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                    require 0 / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                    require msg.value > 0
                                    require 0 / sub_fbde1348[address(msg.sender)].field_256 > 0
                                    require 0 / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require (0 / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                    tokensSold += 0 / sub_fbde1348[address(msg.sender)].field_256
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, 0 / sub_fbde1348[address(msg.sender)].field_256
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit 0x93cae43c: price, msg.value, 0 / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, msg.sender
                                    require msg.sender
                                    if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                        sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                        stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                        stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                        sub_fbde1348[address(msg.sender)].field_0 = 0
                                        sub_fbde1348[address(msg.sender)].field_256 = 0
                                        sub_fbde1348[address(msg.sender)].field_512 = 0
                                        sub_fbde1348[address(msg.sender)].field_768 = 0
                                        stor16[address(msg.sender)].field_0 = 0
                                        stor16[address(msg.sender)].field_256 = 0
                                        emit 0x83e21c4d: msg.sender
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 0 / sub_fbde1348[address(msg.sender)].field_256
                                    if not (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap:
                                        require 0 <= msg.value
                                        require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                        require msg.value > 0
                                        require -ext_call.return_data[0] + tokenSaleCap > 0
                                        require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                        tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit 0x93cae43c: price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, msg.sender, msg.sender
                                        require msg.sender
                                        if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                            stor16[address(msg.sender)].field_0 = 0
                                            stor16[address(msg.sender)].field_256 = 0
                                            emit 0x83e21c4d: msg.sender
                                        call walletAddress with:
                                           value msg.value wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap == sub_fbde1348[address(msg.sender)].field_256
                                        require (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= msg.value
                                        require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                        require msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) > 0
                                        require -ext_call.return_data[0] + tokenSaleCap > 0
                                        require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                        require msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised >= weiRaised
                                        weiRaised = msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised
                                        require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                        tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit 0x93cae43c: price, msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18, msg.sender, msg.sender
                                        require msg.sender
                                        if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                            stor16[address(msg.sender)].field_0 = 0
                                            stor16[address(msg.sender)].field_256 = 0
                                            emit 0x83e21c4d: msg.sender
                                        call walletAddress with:
                                           value msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 > 0:
                                            call msg.sender with:
                                               value (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] <= tokenSaleCap:
                                if (0 / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 <= 0:
                                    require 0 / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                    require msg.value > 0
                                    require 0 / sub_fbde1348[address(msg.sender)].field_256 > 0
                                    require 0 / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require (0 / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                    tokensSold += 0 / sub_fbde1348[address(msg.sender)].field_256
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, 0 / sub_fbde1348[address(msg.sender)].field_256
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit 0x93cae43c: price, msg.value, 0 / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, msg.sender
                                    require msg.sender
                                    if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                        sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                        stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                        stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                        sub_fbde1348[address(msg.sender)].field_0 = 0
                                        sub_fbde1348[address(msg.sender)].field_256 = 0
                                        sub_fbde1348[address(msg.sender)].field_512 = 0
                                        sub_fbde1348[address(msg.sender)].field_768 = 0
                                        stor16[address(msg.sender)].field_0 = 0
                                        stor16[address(msg.sender)].field_256 = 0
                                        emit 0x83e21c4d: msg.sender
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (0 / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 <= 0 / sub_fbde1348[address(msg.sender)].field_256
                                    if not (0 / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768:
                                        require 0 <= msg.value
                                        require sub_fbde1348[address(msg.sender)].field_768 >= sub_fbde1348[address(msg.sender)].field_512
                                        require msg.value > 0
                                        require sub_fbde1348[address(msg.sender)].field_768 > 0
                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_fbde1348[address(msg.sender)].field_768
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require sub_fbde1348[address(msg.sender)].field_768 + tokensSold >= tokensSold
                                        tokensSold += sub_fbde1348[address(msg.sender)].field_768
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, sub_fbde1348[address(msg.sender)].field_768
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit 0x93cae43c: price, msg.value, sub_fbde1348[address(msg.sender)].field_768, 0, msg.sender, msg.sender
                                        require msg.sender
                                        if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                            stor16[address(msg.sender)].field_0 = 0
                                            stor16[address(msg.sender)].field_256 = 0
                                            emit 0x83e21c4d: msg.sender
                                        call walletAddress with:
                                           value msg.value wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / (0 / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 == sub_fbde1348[address(msg.sender)].field_256
                                        require (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= msg.value
                                        require sub_fbde1348[address(msg.sender)].field_768 >= sub_fbde1348[address(msg.sender)].field_512
                                        require msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) > 0
                                        require sub_fbde1348[address(msg.sender)].field_768 > 0
                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_fbde1348[address(msg.sender)].field_768
                                        require msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised >= weiRaised
                                        weiRaised = msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised
                                        require sub_fbde1348[address(msg.sender)].field_768 + tokensSold >= tokensSold
                                        tokensSold += sub_fbde1348[address(msg.sender)].field_768
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, sub_fbde1348[address(msg.sender)].field_768
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit 0x93cae43c: price, msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18), sub_fbde1348[address(msg.sender)].field_768, (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18, msg.sender, msg.sender
                                        require msg.sender
                                        if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                            stor16[address(msg.sender)].field_0 = 0
                                            stor16[address(msg.sender)].field_256 = 0
                                            emit 0x83e21c4d: msg.sender
                                        call walletAddress with:
                                           value msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 > 0:
                                            call msg.sender with:
                                               value (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if ext_call.return_data[0] - tokenSaleCap <= -sub_fbde1348[address(msg.sender)].field_768:
                                    if (0 / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 <= 0:
                                        require 0 / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                        require msg.value > 0
                                        require 0 / sub_fbde1348[address(msg.sender)].field_256 > 0
                                        require 0 / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require (0 / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                        tokensSold += 0 / sub_fbde1348[address(msg.sender)].field_256
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, 0 / sub_fbde1348[address(msg.sender)].field_256
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit 0x93cae43c: price, msg.value, 0 / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, msg.sender
                                        require msg.sender
                                        if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                            stor16[address(msg.sender)].field_0 = 0
                                            stor16[address(msg.sender)].field_256 = 0
                                            emit 0x83e21c4d: msg.sender
                                        call walletAddress with:
                                           value msg.value wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require (0 / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 <= 0 / sub_fbde1348[address(msg.sender)].field_256
                                        if not (0 / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768:
                                            require 0 <= msg.value
                                            require sub_fbde1348[address(msg.sender)].field_768 >= sub_fbde1348[address(msg.sender)].field_512
                                            require msg.value > 0
                                            require sub_fbde1348[address(msg.sender)].field_768 > 0
                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_fbde1348[address(msg.sender)].field_768
                                            require msg.value + weiRaised >= weiRaised
                                            weiRaised += msg.value
                                            require sub_fbde1348[address(msg.sender)].field_768 + tokensSold >= tokensSold
                                            tokensSold += sub_fbde1348[address(msg.sender)].field_768
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, sub_fbde1348[address(msg.sender)].field_768
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0]
                                            emit 0x93cae43c: price, msg.value, sub_fbde1348[address(msg.sender)].field_768, 0, msg.sender, msg.sender
                                            require msg.sender
                                            if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                                require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                sub_fbde1348[address(msg.sender)].field_0 = 0
                                                sub_fbde1348[address(msg.sender)].field_256 = 0
                                                sub_fbde1348[address(msg.sender)].field_512 = 0
                                                sub_fbde1348[address(msg.sender)].field_768 = 0
                                                stor16[address(msg.sender)].field_0 = 0
                                                stor16[address(msg.sender)].field_256 = 0
                                                emit 0x83e21c4d: msg.sender
                                            call walletAddress with:
                                               value msg.value wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / (0 / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 == sub_fbde1348[address(msg.sender)].field_256
                                            require (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= msg.value
                                            require sub_fbde1348[address(msg.sender)].field_768 >= sub_fbde1348[address(msg.sender)].field_512
                                            require msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) > 0
                                            require sub_fbde1348[address(msg.sender)].field_768 > 0
                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_fbde1348[address(msg.sender)].field_768
                                            require msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised >= weiRaised
                                            weiRaised = msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised
                                            require sub_fbde1348[address(msg.sender)].field_768 + tokensSold >= tokensSold
                                            tokensSold += sub_fbde1348[address(msg.sender)].field_768
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, sub_fbde1348[address(msg.sender)].field_768
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0]
                                            emit 0x93cae43c: price, msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18), sub_fbde1348[address(msg.sender)].field_768, (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18, msg.sender, msg.sender
                                            require msg.sender
                                            if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                                require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                sub_fbde1348[address(msg.sender)].field_0 = 0
                                                sub_fbde1348[address(msg.sender)].field_256 = 0
                                                sub_fbde1348[address(msg.sender)].field_512 = 0
                                                sub_fbde1348[address(msg.sender)].field_768 = 0
                                                stor16[address(msg.sender)].field_0 = 0
                                                stor16[address(msg.sender)].field_256 = 0
                                                emit 0x83e21c4d: msg.sender
                                            call walletAddress with:
                                               value msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 > 0:
                                                call msg.sender with:
                                                   value (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                        require 0 / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                        require msg.value > 0
                                        require 0 / sub_fbde1348[address(msg.sender)].field_256 > 0
                                        require 0 / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require (0 / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                        tokensSold += 0 / sub_fbde1348[address(msg.sender)].field_256
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, 0 / sub_fbde1348[address(msg.sender)].field_256
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit 0x93cae43c: price, msg.value, 0 / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, msg.sender
                                        require msg.sender
                                        if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                            stor16[address(msg.sender)].field_0 = 0
                                            stor16[address(msg.sender)].field_256 = 0
                                            emit 0x83e21c4d: msg.sender
                                        call walletAddress with:
                                           value msg.value wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 0 / sub_fbde1348[address(msg.sender)].field_256
                                        if not (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap:
                                            require 0 <= msg.value
                                            require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                            require msg.value > 0
                                            require -ext_call.return_data[0] + tokenSaleCap > 0
                                            require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                            require msg.value + weiRaised >= weiRaised
                                            weiRaised += msg.value
                                            require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                            tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0]
                                            emit 0x93cae43c: price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, msg.sender, msg.sender
                                            require msg.sender
                                            if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                                require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                sub_fbde1348[address(msg.sender)].field_0 = 0
                                                sub_fbde1348[address(msg.sender)].field_256 = 0
                                                sub_fbde1348[address(msg.sender)].field_512 = 0
                                                sub_fbde1348[address(msg.sender)].field_768 = 0
                                                stor16[address(msg.sender)].field_0 = 0
                                                stor16[address(msg.sender)].field_256 = 0
                                                emit 0x83e21c4d: msg.sender
                                            call walletAddress with:
                                               value msg.value wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap == sub_fbde1348[address(msg.sender)].field_256
                                            require (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= msg.value
                                            require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                            require msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) > 0
                                            require -ext_call.return_data[0] + tokenSaleCap > 0
                                            require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                            require msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised >= weiRaised
                                            weiRaised = msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised
                                            require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                            tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0]
                                            emit 0x93cae43c: price, msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18, msg.sender, msg.sender
                                            require msg.sender
                                            if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                                require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                sub_fbde1348[address(msg.sender)].field_0 = 0
                                                sub_fbde1348[address(msg.sender)].field_256 = 0
                                                sub_fbde1348[address(msg.sender)].field_512 = 0
                                                sub_fbde1348[address(msg.sender)].field_768 = 0
                                                stor16[address(msg.sender)].field_0 = 0
                                                stor16[address(msg.sender)].field_256 = 0
                                                emit 0x83e21c4d: msg.sender
                                            call walletAddress with:
                                               value msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 > 0:
                                                call msg.sender with:
                                                   value (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
            else:
                require 10^18 * msg.value / msg.value == 10^18
                require sub_fbde1348[address(msg.sender)].field_256
                require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                if not arg2:
                    require msg.value > 0
                    require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 > 0
                    require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                    require msg.value + weiRaised >= weiRaised
                    weiRaised += msg.value
                    require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                    tokensSold += 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                    require ext_code.size(tokenAddress)
                    call tokenAddress.0x40c10f19 with:
                         gas gas_remaining wei
                        args msg.sender, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0]
                    emit 0x93cae43c: price, msg.value, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, msg.sender
                    require msg.sender
                    if sub_fbde1348[address(msg.sender)].field_0 > 0:
                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                        sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                        stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                        stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                        sub_fbde1348[address(msg.sender)].field_0 = 0
                        sub_fbde1348[address(msg.sender)].field_256 = 0
                        sub_fbde1348[address(msg.sender)].field_512 = 0
                        sub_fbde1348[address(msg.sender)].field_768 = 0
                        stor16[address(msg.sender)].field_0 = 0
                        stor16[address(msg.sender)].field_256 = 0
                        emit 0x83e21c4d: msg.sender
                    call walletAddress with:
                       value msg.value wei
                         gas 2300 * is_zero(value) wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                else:
                    require ext_code.size(tokenAddress)
                    call tokenAddress.0xfa2299ee with:
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] >= ext_call.return_data[0]
                    if 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768:
                        if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] <= tokenSaleCap:
                            require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                            require msg.value > 0
                            require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 > 0
                            require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                            require msg.value + weiRaised >= weiRaised
                            weiRaised += msg.value
                            require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                            tokensSold += 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                            require ext_code.size(tokenAddress)
                            call tokenAddress.0x40c10f19 with:
                                 gas gas_remaining wei
                                args msg.sender, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0]
                            emit 0x93cae43c: price, msg.value, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, msg.sender
                            require msg.sender
                            if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                sub_fbde1348[address(msg.sender)].field_0 = 0
                                sub_fbde1348[address(msg.sender)].field_256 = 0
                                sub_fbde1348[address(msg.sender)].field_512 = 0
                                sub_fbde1348[address(msg.sender)].field_768 = 0
                                stor16[address(msg.sender)].field_0 = 0
                                stor16[address(msg.sender)].field_256 = 0
                                emit 0x83e21c4d: msg.sender
                            call walletAddress with:
                               value msg.value wei
                                 gas 2300 * is_zero(value) wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                require msg.value > 0
                                require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 > 0
                                require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                require msg.value + weiRaised >= weiRaised
                                weiRaised += msg.value
                                require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                tokensSold += 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit 0x93cae43c: price, msg.value, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, msg.sender
                                require msg.sender
                                if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                    require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                    sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                    stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                    stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                    sub_fbde1348[address(msg.sender)].field_0 = 0
                                    sub_fbde1348[address(msg.sender)].field_256 = 0
                                    sub_fbde1348[address(msg.sender)].field_512 = 0
                                    sub_fbde1348[address(msg.sender)].field_768 = 0
                                    stor16[address(msg.sender)].field_0 = 0
                                    stor16[address(msg.sender)].field_256 = 0
                                    emit 0x83e21c4d: msg.sender
                                call walletAddress with:
                                   value msg.value wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                if not (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap:
                                    require 0 <= msg.value
                                    require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                    require msg.value > 0
                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit 0x93cae43c: price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, msg.sender, msg.sender
                                    require msg.sender
                                    if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                        sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                        stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                        stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                        sub_fbde1348[address(msg.sender)].field_0 = 0
                                        sub_fbde1348[address(msg.sender)].field_256 = 0
                                        sub_fbde1348[address(msg.sender)].field_512 = 0
                                        sub_fbde1348[address(msg.sender)].field_768 = 0
                                        stor16[address(msg.sender)].field_0 = 0
                                        stor16[address(msg.sender)].field_256 = 0
                                        emit 0x83e21c4d: msg.sender
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap == sub_fbde1348[address(msg.sender)].field_256
                                    require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= msg.value
                                    require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                    require msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) > 0
                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                    require msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised >= weiRaised
                                    weiRaised = msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised
                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit 0x93cae43c: price, msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18, msg.sender, msg.sender
                                    require msg.sender
                                    if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                        sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                        stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                        stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                        sub_fbde1348[address(msg.sender)].field_0 = 0
                                        sub_fbde1348[address(msg.sender)].field_256 = 0
                                        sub_fbde1348[address(msg.sender)].field_512 = 0
                                        sub_fbde1348[address(msg.sender)].field_768 = 0
                                        stor16[address(msg.sender)].field_0 = 0
                                        stor16[address(msg.sender)].field_256 = 0
                                        emit 0x83e21c4d: msg.sender
                                    call walletAddress with:
                                       value msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 > 0:
                                        call msg.sender with:
                                           value (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 <= 0:
                            if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] <= tokenSaleCap:
                                require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                require msg.value > 0
                                require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 > 0
                                require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                require msg.value + weiRaised >= weiRaised
                                weiRaised += msg.value
                                require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                tokensSold += 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit 0x93cae43c: price, msg.value, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, msg.sender
                                require msg.sender
                                if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                    require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                    sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                    stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                    stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                    sub_fbde1348[address(msg.sender)].field_0 = 0
                                    sub_fbde1348[address(msg.sender)].field_256 = 0
                                    sub_fbde1348[address(msg.sender)].field_512 = 0
                                    sub_fbde1348[address(msg.sender)].field_768 = 0
                                    stor16[address(msg.sender)].field_0 = 0
                                    stor16[address(msg.sender)].field_256 = 0
                                    emit 0x83e21c4d: msg.sender
                                call walletAddress with:
                                   value msg.value wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                    require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                    require msg.value > 0
                                    require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 > 0
                                    require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                    tokensSold += 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit 0x93cae43c: price, msg.value, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, msg.sender
                                    require msg.sender
                                    if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                        sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                        stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                        stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                        sub_fbde1348[address(msg.sender)].field_0 = 0
                                        sub_fbde1348[address(msg.sender)].field_256 = 0
                                        sub_fbde1348[address(msg.sender)].field_512 = 0
                                        sub_fbde1348[address(msg.sender)].field_768 = 0
                                        stor16[address(msg.sender)].field_0 = 0
                                        stor16[address(msg.sender)].field_256 = 0
                                        emit 0x83e21c4d: msg.sender
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                    if not (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap:
                                        require 0 <= msg.value
                                        require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                        require msg.value > 0
                                        require -ext_call.return_data[0] + tokenSaleCap > 0
                                        require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                        tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit 0x93cae43c: price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, msg.sender, msg.sender
                                        require msg.sender
                                        if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                            stor16[address(msg.sender)].field_0 = 0
                                            stor16[address(msg.sender)].field_256 = 0
                                            emit 0x83e21c4d: msg.sender
                                        call walletAddress with:
                                           value msg.value wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap == sub_fbde1348[address(msg.sender)].field_256
                                        require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= msg.value
                                        require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                        require msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) > 0
                                        require -ext_call.return_data[0] + tokenSaleCap > 0
                                        require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                        require msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised >= weiRaised
                                        weiRaised = msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised
                                        require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                        tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit 0x93cae43c: price, msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18, msg.sender, msg.sender
                                        require msg.sender
                                        if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                            stor16[address(msg.sender)].field_0 = 0
                                            stor16[address(msg.sender)].field_256 = 0
                                            emit 0x83e21c4d: msg.sender
                                        call walletAddress with:
                                           value msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 > 0:
                                            call msg.sender with:
                                               value (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] <= tokenSaleCap:
                                if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 <= 0:
                                    require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                    require msg.value > 0
                                    require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 > 0
                                    require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                    tokensSold += 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0]
                                    emit 0x93cae43c: price, msg.value, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, msg.sender
                                    require msg.sender
                                    if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                        sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                        stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                        stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                        sub_fbde1348[address(msg.sender)].field_0 = 0
                                        sub_fbde1348[address(msg.sender)].field_256 = 0
                                        sub_fbde1348[address(msg.sender)].field_512 = 0
                                        sub_fbde1348[address(msg.sender)].field_768 = 0
                                        stor16[address(msg.sender)].field_0 = 0
                                        stor16[address(msg.sender)].field_256 = 0
                                        emit 0x83e21c4d: msg.sender
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 <= 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                    if not (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768:
                                        require 0 <= msg.value
                                        require sub_fbde1348[address(msg.sender)].field_768 >= sub_fbde1348[address(msg.sender)].field_512
                                        require msg.value > 0
                                        require sub_fbde1348[address(msg.sender)].field_768 > 0
                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_fbde1348[address(msg.sender)].field_768
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require sub_fbde1348[address(msg.sender)].field_768 + tokensSold >= tokensSold
                                        tokensSold += sub_fbde1348[address(msg.sender)].field_768
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, sub_fbde1348[address(msg.sender)].field_768
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit 0x93cae43c: price, msg.value, sub_fbde1348[address(msg.sender)].field_768, 0, msg.sender, msg.sender
                                        require msg.sender
                                        if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                            stor16[address(msg.sender)].field_0 = 0
                                            stor16[address(msg.sender)].field_256 = 0
                                            emit 0x83e21c4d: msg.sender
                                        call walletAddress with:
                                           value msg.value wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 == sub_fbde1348[address(msg.sender)].field_256
                                        require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= msg.value
                                        require sub_fbde1348[address(msg.sender)].field_768 >= sub_fbde1348[address(msg.sender)].field_512
                                        require msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) > 0
                                        require sub_fbde1348[address(msg.sender)].field_768 > 0
                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_fbde1348[address(msg.sender)].field_768
                                        require msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised >= weiRaised
                                        weiRaised = msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised
                                        require sub_fbde1348[address(msg.sender)].field_768 + tokensSold >= tokensSold
                                        tokensSold += sub_fbde1348[address(msg.sender)].field_768
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, sub_fbde1348[address(msg.sender)].field_768
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit 0x93cae43c: price, msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18), sub_fbde1348[address(msg.sender)].field_768, (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18, msg.sender, msg.sender
                                        require msg.sender
                                        if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                            stor16[address(msg.sender)].field_0 = 0
                                            stor16[address(msg.sender)].field_256 = 0
                                            emit 0x83e21c4d: msg.sender
                                        call walletAddress with:
                                           value msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 > 0:
                                            call msg.sender with:
                                               value (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if ext_call.return_data[0] - tokenSaleCap <= -sub_fbde1348[address(msg.sender)].field_768:
                                    if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 <= 0:
                                        require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                        require msg.value > 0
                                        require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 > 0
                                        require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                        tokensSold += 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit 0x93cae43c: price, msg.value, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, msg.sender
                                        require msg.sender
                                        if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                            stor16[address(msg.sender)].field_0 = 0
                                            stor16[address(msg.sender)].field_256 = 0
                                            emit 0x83e21c4d: msg.sender
                                        call walletAddress with:
                                           value msg.value wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 <= 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                        if not (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768:
                                            require 0 <= msg.value
                                            require sub_fbde1348[address(msg.sender)].field_768 >= sub_fbde1348[address(msg.sender)].field_512
                                            require msg.value > 0
                                            require sub_fbde1348[address(msg.sender)].field_768 > 0
                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_fbde1348[address(msg.sender)].field_768
                                            require msg.value + weiRaised >= weiRaised
                                            weiRaised += msg.value
                                            require sub_fbde1348[address(msg.sender)].field_768 + tokensSold >= tokensSold
                                            tokensSold += sub_fbde1348[address(msg.sender)].field_768
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, sub_fbde1348[address(msg.sender)].field_768
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0]
                                            emit 0x93cae43c: price, msg.value, sub_fbde1348[address(msg.sender)].field_768, 0, msg.sender, msg.sender
                                            require msg.sender
                                            if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                                require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                sub_fbde1348[address(msg.sender)].field_0 = 0
                                                sub_fbde1348[address(msg.sender)].field_256 = 0
                                                sub_fbde1348[address(msg.sender)].field_512 = 0
                                                sub_fbde1348[address(msg.sender)].field_768 = 0
                                                stor16[address(msg.sender)].field_0 = 0
                                                stor16[address(msg.sender)].field_256 = 0
                                                emit 0x83e21c4d: msg.sender
                                            call walletAddress with:
                                               value msg.value wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 == sub_fbde1348[address(msg.sender)].field_256
                                            require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= msg.value
                                            require sub_fbde1348[address(msg.sender)].field_768 >= sub_fbde1348[address(msg.sender)].field_512
                                            require msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) > 0
                                            require sub_fbde1348[address(msg.sender)].field_768 > 0
                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_fbde1348[address(msg.sender)].field_768
                                            require msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised >= weiRaised
                                            weiRaised = msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised
                                            require sub_fbde1348[address(msg.sender)].field_768 + tokensSold >= tokensSold
                                            tokensSold += sub_fbde1348[address(msg.sender)].field_768
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, sub_fbde1348[address(msg.sender)].field_768
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0]
                                            emit 0x93cae43c: price, msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18), sub_fbde1348[address(msg.sender)].field_768, (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18, msg.sender, msg.sender
                                            require msg.sender
                                            if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                                require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                sub_fbde1348[address(msg.sender)].field_0 = 0
                                                sub_fbde1348[address(msg.sender)].field_256 = 0
                                                sub_fbde1348[address(msg.sender)].field_512 = 0
                                                sub_fbde1348[address(msg.sender)].field_768 = 0
                                                stor16[address(msg.sender)].field_0 = 0
                                                stor16[address(msg.sender)].field_256 = 0
                                                emit 0x83e21c4d: msg.sender
                                            call walletAddress with:
                                               value msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 > 0:
                                                call msg.sender with:
                                                   value (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                        require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                        require msg.value > 0
                                        require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 > 0
                                        require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                        tokensSold += 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit 0x93cae43c: price, msg.value, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, msg.sender
                                        require msg.sender
                                        if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                            stor16[address(msg.sender)].field_0 = 0
                                            stor16[address(msg.sender)].field_256 = 0
                                            emit 0x83e21c4d: msg.sender
                                        call walletAddress with:
                                           value msg.value wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                        if not (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap:
                                            require 0 <= msg.value
                                            require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                            require msg.value > 0
                                            require -ext_call.return_data[0] + tokenSaleCap > 0
                                            require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                            require msg.value + weiRaised >= weiRaised
                                            weiRaised += msg.value
                                            require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                            tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0]
                                            emit 0x93cae43c: price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, msg.sender, msg.sender
                                            require msg.sender
                                            if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                                require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                sub_fbde1348[address(msg.sender)].field_0 = 0
                                                sub_fbde1348[address(msg.sender)].field_256 = 0
                                                sub_fbde1348[address(msg.sender)].field_512 = 0
                                                sub_fbde1348[address(msg.sender)].field_768 = 0
                                                stor16[address(msg.sender)].field_0 = 0
                                                stor16[address(msg.sender)].field_256 = 0
                                                emit 0x83e21c4d: msg.sender
                                            call walletAddress with:
                                               value msg.value wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap == sub_fbde1348[address(msg.sender)].field_256
                                            require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= msg.value
                                            require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                            require msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) > 0
                                            require -ext_call.return_data[0] + tokenSaleCap > 0
                                            require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                            require msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised >= weiRaised
                                            weiRaised = msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised
                                            require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                            tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, -ext_call.return_data[0] + tokenSaleCap
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0]
                                            emit 0x93cae43c: price, msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18, msg.sender, msg.sender
                                            require msg.sender
                                            if sub_fbde1348[address(msg.sender)].field_0 > 0:
                                                require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                sub_fbde1348[address(msg.sender)].field_0 = 0
                                                sub_fbde1348[address(msg.sender)].field_256 = 0
                                                sub_fbde1348[address(msg.sender)].field_512 = 0
                                                sub_fbde1348[address(msg.sender)].field_768 = 0
                                                stor16[address(msg.sender)].field_0 = 0
                                                stor16[address(msg.sender)].field_256 = 0
                                                emit 0x83e21c4d: msg.sender
                                            call walletAddress with:
                                               value msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 > 0:
                                                call msg.sender with:
                                                   value (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
}

function sub_23b4af03(?) payable {
    require arg2 > 0
    require stor15
    require msg.value > 0
    require arg1
    require not stor12
    if sub_fbde1348[address(msg.sender)].field_0 <= 0:
        if not arg2:
            require msg.value >= minimumPurchase
            require ext_code.size(tokenAddress)
            call tokenAddress.0xfa2299ee with:
                 gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            else:
                require return_data.size >= 32
                require tokenSaleCap > ext_call.return_data[0]
                require roundTokenCap > sub_463626d6
                require 0 < price
                if msg.value:
                    require 10^18 * msg.value / msg.value == 10^18
                    require price
                    if not arg3:
                        require msg.value > 0
                        require 10^18 * msg.value / price > 0
                        require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                        sub_463626d6 += 10^18 * msg.value / price
                        require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                        require msg.value + weiRaised >= weiRaised
                        weiRaised += msg.value
                        require (10^18 * msg.value / price) + tokensSold >= tokensSold
                        tokensSold += 10^18 * msg.value / price
                        require 10^18 * msg.value / price <= sub_0d27577e
                        sub_0d27577e -= 10^18 * msg.value / price
                        require ext_code.size(tokenAddress)
                        call tokenAddress.0x40c10f19 with:
                             gas gas_remaining wei
                            args address(arg1), 10^18 * msg.value / price
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        else:
                            require return_data.size >= 32
                            require ext_call.return_data[0]
                            emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, arg1);
                            call walletAddress with:
                               value msg.value wei
                                 gas 2300 * is_zero(value) wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if sub_463626d6 < roundTokenCap:
                                else:
                                    emit RoundEnded(sub_463626d6, roundTokenCap);
                    else:
                        require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                        if (10^18 * msg.value / price) + sub_463626d6 <= roundTokenCap:
                            require ext_code.size(tokenAddress)
                            call tokenAddress.0xfa2299ee with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require return_data.size >= 32
                                require (10^18 * msg.value / price) + ext_call.return_data[0] >= ext_call.return_data[0]
                                if (10^18 * msg.value / price) + ext_call.return_data[0] <= tokenSaleCap:
                                    require msg.value > 0
                                    require 10^18 * msg.value / price > 0
                                    require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                    sub_463626d6 += 10^18 * msg.value / price
                                    require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                    tokensSold += 10^18 * msg.value / price
                                    require 10^18 * msg.value / price <= sub_0d27577e
                                    sub_0d27577e -= 10^18 * msg.value / price
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args address(arg1), 10^18 * msg.value / price
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, arg1);
                                        call walletAddress with:
                                           value msg.value wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            if sub_463626d6 < roundTokenCap:
                                            else:
                                                emit RoundEnded(sub_463626d6, roundTokenCap);
                                else:
                                    if (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                        require msg.value > 0
                                        require 10^18 * msg.value / price > 0
                                        require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                        sub_463626d6 += 10^18 * msg.value / price
                                        require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                        tokensSold += 10^18 * msg.value / price
                                        require 10^18 * msg.value / price <= sub_0d27577e
                                        sub_0d27577e -= 10^18 * msg.value / price
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args address(arg1), 10^18 * msg.value / price
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require return_data.size >= 32
                                            require ext_call.return_data[0]
                                            emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, arg1);
                                            call walletAddress with:
                                               value msg.value wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                if sub_463626d6 < roundTokenCap:
                                                else:
                                                    emit RoundEnded(sub_463626d6, roundTokenCap);
                                    else:
                                        require (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 10^18 * msg.value / price
                                        if (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap:
                                            require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap == price
                                            require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                            require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                            require -ext_call.return_data[0] + tokenSaleCap > 0
                                            require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                            sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                            require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                            require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                            weiRaised = msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                            require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                            tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                            require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                            sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                require return_data.size >= 32
                                                require ext_call.return_data[0]
                                                emit TokenPurchase(price, msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                                call walletAddress with:
                                                   value msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    if (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= 0:
                                                        if sub_463626d6 < roundTokenCap:
                                                        else:
                                                            emit RoundEnded(sub_463626d6, roundTokenCap);
                                                    else:
                                                        call msg.sender with:
                                                           value (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if sub_463626d6 < roundTokenCap:
                                                            else:
                                                                emit RoundEnded(sub_463626d6, roundTokenCap);
                                        else:
                                            require 0 <= msg.value
                                            require msg.value > 0
                                            require -ext_call.return_data[0] + tokenSaleCap > 0
                                            require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                            sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                            require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                            require msg.value + weiRaised >= weiRaised
                                            weiRaised += msg.value
                                            require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                            tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                            require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                            sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                require return_data.size >= 32
                                                require ext_call.return_data[0]
                                                emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, arg1);
                                                call walletAddress with:
                                                   value msg.value wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    if sub_463626d6 < roundTokenCap:
                                                    else:
                                                        emit RoundEnded(sub_463626d6, roundTokenCap);
                        else:
                            if (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap <= 0:
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0xfa2299ee with:
                                     gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require return_data.size >= 32
                                    require (10^18 * msg.value / price) + ext_call.return_data[0] >= ext_call.return_data[0]
                                    if (10^18 * msg.value / price) + ext_call.return_data[0] <= tokenSaleCap:
                                        require msg.value > 0
                                        require 10^18 * msg.value / price > 0
                                        require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                        sub_463626d6 += 10^18 * msg.value / price
                                        require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                        tokensSold += 10^18 * msg.value / price
                                        require 10^18 * msg.value / price <= sub_0d27577e
                                        sub_0d27577e -= 10^18 * msg.value / price
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args address(arg1), 10^18 * msg.value / price
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require return_data.size >= 32
                                            require ext_call.return_data[0]
                                            emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, arg1);
                                            call walletAddress with:
                                               value msg.value wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                if sub_463626d6 < roundTokenCap:
                                                else:
                                                    emit RoundEnded(sub_463626d6, roundTokenCap);
                                    else:
                                        if (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                            require msg.value > 0
                                            require 10^18 * msg.value / price > 0
                                            require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                            sub_463626d6 += 10^18 * msg.value / price
                                            require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                            require msg.value + weiRaised >= weiRaised
                                            weiRaised += msg.value
                                            require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                            tokensSold += 10^18 * msg.value / price
                                            require 10^18 * msg.value / price <= sub_0d27577e
                                            sub_0d27577e -= 10^18 * msg.value / price
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args address(arg1), 10^18 * msg.value / price
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                require return_data.size >= 32
                                                require ext_call.return_data[0]
                                                emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, arg1);
                                                call walletAddress with:
                                                   value msg.value wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    if sub_463626d6 < roundTokenCap:
                                                    else:
                                                        emit RoundEnded(sub_463626d6, roundTokenCap);
                                        else:
                                            require (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 10^18 * msg.value / price
                                            if (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap:
                                                require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap == price
                                                require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                                require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                                require -ext_call.return_data[0] + tokenSaleCap > 0
                                                require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                                sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                                weiRaised = msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                                require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                                sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit TokenPurchase(price, msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                                    call walletAddress with:
                                                       value msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        if (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= 0:
                                                            if sub_463626d6 < roundTokenCap:
                                                            else:
                                                                emit RoundEnded(sub_463626d6, roundTokenCap);
                                                        else:
                                                            call msg.sender with:
                                                               value (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                if sub_463626d6 < roundTokenCap:
                                                                else:
                                                                    emit RoundEnded(sub_463626d6, roundTokenCap);
                                            else:
                                                require 0 <= msg.value
                                                require msg.value > 0
                                                require -ext_call.return_data[0] + tokenSaleCap > 0
                                                require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                                sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                require msg.value + weiRaised >= weiRaised
                                                weiRaised += msg.value
                                                require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                                sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, arg1);
                                                    call walletAddress with:
                                                       value msg.value wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        if sub_463626d6 < roundTokenCap:
                                                        else:
                                                            emit RoundEnded(sub_463626d6, roundTokenCap);
                            else:
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0xfa2299ee with:
                                     gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require return_data.size >= 32
                                    require (10^18 * msg.value / price) + ext_call.return_data[0] >= ext_call.return_data[0]
                                    if (10^18 * msg.value / price) + ext_call.return_data[0] <= tokenSaleCap:
                                        if (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap <= 0:
                                            require msg.value > 0
                                            require 10^18 * msg.value / price > 0
                                            require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                            sub_463626d6 += 10^18 * msg.value / price
                                            require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                            require msg.value + weiRaised >= weiRaised
                                            weiRaised += msg.value
                                            require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                            tokensSold += 10^18 * msg.value / price
                                            require 10^18 * msg.value / price <= sub_0d27577e
                                            sub_0d27577e -= 10^18 * msg.value / price
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args address(arg1), 10^18 * msg.value / price
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                require return_data.size >= 32
                                                require ext_call.return_data[0]
                                                emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, arg1);
                                                call walletAddress with:
                                                   value msg.value wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    if sub_463626d6 < roundTokenCap:
                                                    else:
                                                        emit RoundEnded(sub_463626d6, roundTokenCap);
                                        else:
                                            require (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap <= 10^18 * msg.value / price
                                            if (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap:
                                                require (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap == price
                                                require (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= msg.value
                                                require msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) > 0
                                                require -sub_463626d6 + roundTokenCap > 0
                                                require roundTokenCap >= sub_463626d6
                                                sub_463626d6 = roundTokenCap
                                                require roundTokenCap >= roundTokenCap
                                                require msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised >= weiRaised
                                                weiRaised = msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised
                                                require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                                tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                                require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                                sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), -sub_463626d6 + roundTokenCap
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit TokenPurchase(price, msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18), -sub_463626d6 + roundTokenCap, (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                                    call walletAddress with:
                                                       value msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        if (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= 0:
                                                            if sub_463626d6 < roundTokenCap:
                                                            else:
                                                                emit RoundEnded(sub_463626d6, roundTokenCap);
                                                        else:
                                                            call msg.sender with:
                                                               value (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                if sub_463626d6 < roundTokenCap:
                                                                else:
                                                                    emit RoundEnded(sub_463626d6, roundTokenCap);
                                            else:
                                                require 0 <= msg.value
                                                require msg.value > 0
                                                require -sub_463626d6 + roundTokenCap > 0
                                                require roundTokenCap >= sub_463626d6
                                                sub_463626d6 = roundTokenCap
                                                require roundTokenCap >= roundTokenCap
                                                require msg.value + weiRaised >= weiRaised
                                                weiRaised += msg.value
                                                require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                                tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                                require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                                sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), -sub_463626d6 + roundTokenCap
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit TokenPurchase(price, msg.value, -sub_463626d6 + roundTokenCap, 0, ethUsdRate, msg.sender, arg1);
                                                    call walletAddress with:
                                                       value msg.value wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        if sub_463626d6 < roundTokenCap:
                                                        else:
                                                            emit RoundEnded(sub_463626d6, roundTokenCap);
                                    else:
                                        if ext_call.return_data[0] - tokenSaleCap <= sub_463626d6 - roundTokenCap:
                                            if (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap <= 0:
                                                require msg.value > 0
                                                require 10^18 * msg.value / price > 0
                                                require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                                sub_463626d6 += 10^18 * msg.value / price
                                                require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                                require msg.value + weiRaised >= weiRaised
                                                weiRaised += msg.value
                                                require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                                tokensSold += 10^18 * msg.value / price
                                                require 10^18 * msg.value / price <= sub_0d27577e
                                                sub_0d27577e -= 10^18 * msg.value / price
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), 10^18 * msg.value / price
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, arg1);
                                                    call walletAddress with:
                                                       value msg.value wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        if sub_463626d6 < roundTokenCap:
                                                        else:
                                                            emit RoundEnded(sub_463626d6, roundTokenCap);
                                            else:
                                                require (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap <= 10^18 * msg.value / price
                                                if (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap:
                                                    require (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap == price
                                                    require (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= msg.value
                                                    require msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) > 0
                                                    require -sub_463626d6 + roundTokenCap > 0
                                                    require roundTokenCap >= sub_463626d6
                                                    sub_463626d6 = roundTokenCap
                                                    require roundTokenCap >= roundTokenCap
                                                    require msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised >= weiRaised
                                                    weiRaised = msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised
                                                    require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                                    tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                                    require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                                    sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), -sub_463626d6 + roundTokenCap
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit TokenPurchase(price, msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18), -sub_463626d6 + roundTokenCap, (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                                        call walletAddress with:
                                                           value msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= 0:
                                                                if sub_463626d6 < roundTokenCap:
                                                                else:
                                                                    emit RoundEnded(sub_463626d6, roundTokenCap);
                                                            else:
                                                                call msg.sender with:
                                                                   value (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    if sub_463626d6 < roundTokenCap:
                                                                    else:
                                                                        emit RoundEnded(sub_463626d6, roundTokenCap);
                                                else:
                                                    require 0 <= msg.value
                                                    require msg.value > 0
                                                    require -sub_463626d6 + roundTokenCap > 0
                                                    require roundTokenCap >= sub_463626d6
                                                    sub_463626d6 = roundTokenCap
                                                    require roundTokenCap >= roundTokenCap
                                                    require msg.value + weiRaised >= weiRaised
                                                    weiRaised += msg.value
                                                    require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                                    tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                                    require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                                    sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), -sub_463626d6 + roundTokenCap
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit TokenPurchase(price, msg.value, -sub_463626d6 + roundTokenCap, 0, ethUsdRate, msg.sender, arg1);
                                                        call walletAddress with:
                                                           value msg.value wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if sub_463626d6 < roundTokenCap:
                                                            else:
                                                                emit RoundEnded(sub_463626d6, roundTokenCap);
                                        else:
                                            if (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                                require msg.value > 0
                                                require 10^18 * msg.value / price > 0
                                                require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                                sub_463626d6 += 10^18 * msg.value / price
                                                require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                                require msg.value + weiRaised >= weiRaised
                                                weiRaised += msg.value
                                                require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                                tokensSold += 10^18 * msg.value / price
                                                require 10^18 * msg.value / price <= sub_0d27577e
                                                sub_0d27577e -= 10^18 * msg.value / price
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), 10^18 * msg.value / price
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, arg1);
                                                    call walletAddress with:
                                                       value msg.value wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        if sub_463626d6 < roundTokenCap:
                                                        else:
                                                            emit RoundEnded(sub_463626d6, roundTokenCap);
                                            else:
                                                require (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 10^18 * msg.value / price
                                                if (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap:
                                                    require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap == price
                                                    require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                                    require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                                    require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                                    sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                    require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                    require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                                    weiRaised = msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                                    sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit TokenPurchase(price, msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                                        call walletAddress with:
                                                           value msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= 0:
                                                                if sub_463626d6 < roundTokenCap:
                                                                else:
                                                                    emit RoundEnded(sub_463626d6, roundTokenCap);
                                                            else:
                                                                call msg.sender with:
                                                                   value (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    if sub_463626d6 < roundTokenCap:
                                                                    else:
                                                                        emit RoundEnded(sub_463626d6, roundTokenCap);
                                                else:
                                                    require 0 <= msg.value
                                                    require msg.value > 0
                                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                                    require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                                    sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                    require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                    require msg.value + weiRaised >= weiRaised
                                                    weiRaised += msg.value
                                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                                    sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, arg1);
                                                        call walletAddress with:
                                                           value msg.value wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if sub_463626d6 < roundTokenCap:
                                                            else:
                                                                emit RoundEnded(sub_463626d6, roundTokenCap);
                else:
                    require price
                    if not arg3:
                        require msg.value > 0
                        require 0 / price > 0
                        require (0 / price) + sub_463626d6 >= sub_463626d6
                        sub_463626d6 += 0 / price
                        require roundTokenCap >= (0 / price) + sub_463626d6
                        require msg.value + weiRaised >= weiRaised
                        weiRaised += msg.value
                        require (0 / price) + tokensSold >= tokensSold
                        tokensSold += 0 / price
                        require 0 / price <= sub_0d27577e
                        sub_0d27577e -= 0 / price
                        require ext_code.size(tokenAddress)
                        call tokenAddress.0x40c10f19 with:
                             gas gas_remaining wei
                            args address(arg1), 0 / price
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        else:
                            require return_data.size >= 32
                            require ext_call.return_data[0]
                            emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, arg1);
                            call walletAddress with:
                               value msg.value wei
                                 gas 2300 * is_zero(value) wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if sub_463626d6 < roundTokenCap:
                                else:
                                    emit RoundEnded(sub_463626d6, roundTokenCap);
                    else:
                        require (0 / price) + sub_463626d6 >= sub_463626d6
                        if (0 / price) + sub_463626d6 <= roundTokenCap:
                            require ext_code.size(tokenAddress)
                            call tokenAddress.0xfa2299ee with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require return_data.size >= 32
                                require (0 / price) + ext_call.return_data[0] >= ext_call.return_data[0]
                                if (0 / price) + ext_call.return_data[0] <= tokenSaleCap:
                                    require msg.value > 0
                                    require 0 / price > 0
                                    require (0 / price) + sub_463626d6 >= sub_463626d6
                                    sub_463626d6 += 0 / price
                                    require roundTokenCap >= (0 / price) + sub_463626d6
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require (0 / price) + tokensSold >= tokensSold
                                    tokensSold += 0 / price
                                    require 0 / price <= sub_0d27577e
                                    sub_0d27577e -= 0 / price
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args address(arg1), 0 / price
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, arg1);
                                        call walletAddress with:
                                           value msg.value wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            if sub_463626d6 < roundTokenCap:
                                            else:
                                                emit RoundEnded(sub_463626d6, roundTokenCap);
                                else:
                                    if (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                        require msg.value > 0
                                        require 0 / price > 0
                                        require (0 / price) + sub_463626d6 >= sub_463626d6
                                        sub_463626d6 += 0 / price
                                        require roundTokenCap >= (0 / price) + sub_463626d6
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require (0 / price) + tokensSold >= tokensSold
                                        tokensSold += 0 / price
                                        require 0 / price <= sub_0d27577e
                                        sub_0d27577e -= 0 / price
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args address(arg1), 0 / price
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require return_data.size >= 32
                                            require ext_call.return_data[0]
                                            emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, arg1);
                                            call walletAddress with:
                                               value msg.value wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                if sub_463626d6 < roundTokenCap:
                                                else:
                                                    emit RoundEnded(sub_463626d6, roundTokenCap);
                                    else:
                                        require (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0 / price
                                        if (0 / price) + ext_call.return_data[0] - tokenSaleCap:
                                            require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (0 / price) + ext_call.return_data[0] - tokenSaleCap == price
                                            require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                            require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                            require -ext_call.return_data[0] + tokenSaleCap > 0
                                            require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                            sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                            require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                            require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                            weiRaised = msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                            require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                            tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                            require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                            sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                require return_data.size >= 32
                                                require ext_call.return_data[0]
                                                emit TokenPurchase(price, msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                                call walletAddress with:
                                                   value msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    if (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= 0:
                                                        if sub_463626d6 < roundTokenCap:
                                                        else:
                                                            emit RoundEnded(sub_463626d6, roundTokenCap);
                                                    else:
                                                        call msg.sender with:
                                                           value (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if sub_463626d6 < roundTokenCap:
                                                            else:
                                                                emit RoundEnded(sub_463626d6, roundTokenCap);
                                        else:
                                            require 0 <= msg.value
                                            require msg.value > 0
                                            require -ext_call.return_data[0] + tokenSaleCap > 0
                                            require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                            sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                            require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                            require msg.value + weiRaised >= weiRaised
                                            weiRaised += msg.value
                                            require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                            tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                            require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                            sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                require return_data.size >= 32
                                                require ext_call.return_data[0]
                                                emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, arg1);
                                                call walletAddress with:
                                                   value msg.value wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    if sub_463626d6 < roundTokenCap:
                                                    else:
                                                        emit RoundEnded(sub_463626d6, roundTokenCap);
                        else:
                            if (0 / price) + sub_463626d6 - roundTokenCap <= 0:
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0xfa2299ee with:
                                     gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require return_data.size >= 32
                                    require (0 / price) + ext_call.return_data[0] >= ext_call.return_data[0]
                                    if (0 / price) + ext_call.return_data[0] <= tokenSaleCap:
                                        require msg.value > 0
                                        require 0 / price > 0
                                        require (0 / price) + sub_463626d6 >= sub_463626d6
                                        sub_463626d6 += 0 / price
                                        require roundTokenCap >= (0 / price) + sub_463626d6
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require (0 / price) + tokensSold >= tokensSold
                                        tokensSold += 0 / price
                                        require 0 / price <= sub_0d27577e
                                        sub_0d27577e -= 0 / price
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args address(arg1), 0 / price
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require return_data.size >= 32
                                            require ext_call.return_data[0]
                                            emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, arg1);
                                            call walletAddress with:
                                               value msg.value wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                if sub_463626d6 < roundTokenCap:
                                                else:
                                                    emit RoundEnded(sub_463626d6, roundTokenCap);
                                    else:
                                        if (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                            require msg.value > 0
                                            require 0 / price > 0
                                            require (0 / price) + sub_463626d6 >= sub_463626d6
                                            sub_463626d6 += 0 / price
                                            require roundTokenCap >= (0 / price) + sub_463626d6
                                            require msg.value + weiRaised >= weiRaised
                                            weiRaised += msg.value
                                            require (0 / price) + tokensSold >= tokensSold
                                            tokensSold += 0 / price
                                            require 0 / price <= sub_0d27577e
                                            sub_0d27577e -= 0 / price
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args address(arg1), 0 / price
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                require return_data.size >= 32
                                                require ext_call.return_data[0]
                                                emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, arg1);
                                                call walletAddress with:
                                                   value msg.value wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    if sub_463626d6 < roundTokenCap:
                                                    else:
                                                        emit RoundEnded(sub_463626d6, roundTokenCap);
                                        else:
                                            require (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0 / price
                                            if (0 / price) + ext_call.return_data[0] - tokenSaleCap:
                                                require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (0 / price) + ext_call.return_data[0] - tokenSaleCap == price
                                                require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                                require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                                require -ext_call.return_data[0] + tokenSaleCap > 0
                                                require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                                sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                                weiRaised = msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                                require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                                sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit TokenPurchase(price, msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                                    call walletAddress with:
                                                       value msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        if (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= 0:
                                                            if sub_463626d6 < roundTokenCap:
                                                            else:
                                                                emit RoundEnded(sub_463626d6, roundTokenCap);
                                                        else:
                                                            call msg.sender with:
                                                               value (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                if sub_463626d6 < roundTokenCap:
                                                                else:
                                                                    emit RoundEnded(sub_463626d6, roundTokenCap);
                                            else:
                                                require 0 <= msg.value
                                                require msg.value > 0
                                                require -ext_call.return_data[0] + tokenSaleCap > 0
                                                require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                                sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                require msg.value + weiRaised >= weiRaised
                                                weiRaised += msg.value
                                                require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                                sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, arg1);
                                                    call walletAddress with:
                                                       value msg.value wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        if sub_463626d6 < roundTokenCap:
                                                        else:
                                                            emit RoundEnded(sub_463626d6, roundTokenCap);
                            else:
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0xfa2299ee with:
                                     gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require return_data.size >= 32
                                    require (0 / price) + ext_call.return_data[0] >= ext_call.return_data[0]
                                    if (0 / price) + ext_call.return_data[0] <= tokenSaleCap:
                                        if (0 / price) + sub_463626d6 - roundTokenCap <= 0:
                                            require msg.value > 0
                                            require 0 / price > 0
                                            require (0 / price) + sub_463626d6 >= sub_463626d6
                                            sub_463626d6 += 0 / price
                                            require roundTokenCap >= (0 / price) + sub_463626d6
                                            require msg.value + weiRaised >= weiRaised
                                            weiRaised += msg.value
                                            require (0 / price) + tokensSold >= tokensSold
                                            tokensSold += 0 / price
                                            require 0 / price <= sub_0d27577e
                                            sub_0d27577e -= 0 / price
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args address(arg1), 0 / price
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                require return_data.size >= 32
                                                require ext_call.return_data[0]
                                                emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, arg1);
                                                call walletAddress with:
                                                   value msg.value wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    if sub_463626d6 < roundTokenCap:
                                                    else:
                                                        emit RoundEnded(sub_463626d6, roundTokenCap);
                                        else:
                                            require (0 / price) + sub_463626d6 - roundTokenCap <= 0 / price
                                            if (0 / price) + sub_463626d6 - roundTokenCap:
                                                require (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / (0 / price) + sub_463626d6 - roundTokenCap == price
                                                require (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= msg.value
                                                require msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) > 0
                                                require -sub_463626d6 + roundTokenCap > 0
                                                require roundTokenCap >= sub_463626d6
                                                sub_463626d6 = roundTokenCap
                                                require roundTokenCap >= roundTokenCap
                                                require msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised >= weiRaised
                                                weiRaised = msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised
                                                require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                                tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                                require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                                sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), -sub_463626d6 + roundTokenCap
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit TokenPurchase(price, msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18), -sub_463626d6 + roundTokenCap, (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                                    call walletAddress with:
                                                       value msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        if (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= 0:
                                                            if sub_463626d6 < roundTokenCap:
                                                            else:
                                                                emit RoundEnded(sub_463626d6, roundTokenCap);
                                                        else:
                                                            call msg.sender with:
                                                               value (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                if sub_463626d6 < roundTokenCap:
                                                                else:
                                                                    emit RoundEnded(sub_463626d6, roundTokenCap);
                                            else:
                                                require 0 <= msg.value
                                                require msg.value > 0
                                                require -sub_463626d6 + roundTokenCap > 0
                                                require roundTokenCap >= sub_463626d6
                                                sub_463626d6 = roundTokenCap
                                                require roundTokenCap >= roundTokenCap
                                                require msg.value + weiRaised >= weiRaised
                                                weiRaised += msg.value
                                                require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                                tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                                require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                                sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), -sub_463626d6 + roundTokenCap
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit TokenPurchase(price, msg.value, -sub_463626d6 + roundTokenCap, 0, ethUsdRate, msg.sender, arg1);
                                                    call walletAddress with:
                                                       value msg.value wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        if sub_463626d6 < roundTokenCap:
                                                        else:
                                                            emit RoundEnded(sub_463626d6, roundTokenCap);
                                    else:
                                        if ext_call.return_data[0] - tokenSaleCap <= sub_463626d6 - roundTokenCap:
                                            if (0 / price) + sub_463626d6 - roundTokenCap <= 0:
                                                require msg.value > 0
                                                require 0 / price > 0
                                                require (0 / price) + sub_463626d6 >= sub_463626d6
                                                sub_463626d6 += 0 / price
                                                require roundTokenCap >= (0 / price) + sub_463626d6
                                                require msg.value + weiRaised >= weiRaised
                                                weiRaised += msg.value
                                                require (0 / price) + tokensSold >= tokensSold
                                                tokensSold += 0 / price
                                                require 0 / price <= sub_0d27577e
                                                sub_0d27577e -= 0 / price
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), 0 / price
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, arg1);
                                                    call walletAddress with:
                                                       value msg.value wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        if sub_463626d6 < roundTokenCap:
                                                        else:
                                                            emit RoundEnded(sub_463626d6, roundTokenCap);
                                            else:
                                                require (0 / price) + sub_463626d6 - roundTokenCap <= 0 / price
                                                if (0 / price) + sub_463626d6 - roundTokenCap:
                                                    require (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / (0 / price) + sub_463626d6 - roundTokenCap == price
                                                    require (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= msg.value
                                                    require msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) > 0
                                                    require -sub_463626d6 + roundTokenCap > 0
                                                    require roundTokenCap >= sub_463626d6
                                                    sub_463626d6 = roundTokenCap
                                                    require roundTokenCap >= roundTokenCap
                                                    require msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised >= weiRaised
                                                    weiRaised = msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised
                                                    require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                                    tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                                    require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                                    sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), -sub_463626d6 + roundTokenCap
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit TokenPurchase(price, msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18), -sub_463626d6 + roundTokenCap, (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                                        call walletAddress with:
                                                           value msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= 0:
                                                                if sub_463626d6 < roundTokenCap:
                                                                else:
                                                                    emit RoundEnded(sub_463626d6, roundTokenCap);
                                                            else:
                                                                call msg.sender with:
                                                                   value (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    if sub_463626d6 < roundTokenCap:
                                                                    else:
                                                                        emit RoundEnded(sub_463626d6, roundTokenCap);
                                                else:
                                                    require 0 <= msg.value
                                                    require msg.value > 0
                                                    require -sub_463626d6 + roundTokenCap > 0
                                                    require roundTokenCap >= sub_463626d6
                                                    sub_463626d6 = roundTokenCap
                                                    require roundTokenCap >= roundTokenCap
                                                    require msg.value + weiRaised >= weiRaised
                                                    weiRaised += msg.value
                                                    require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                                    tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                                    require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                                    sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), -sub_463626d6 + roundTokenCap
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit TokenPurchase(price, msg.value, -sub_463626d6 + roundTokenCap, 0, ethUsdRate, msg.sender, arg1);
                                                        call walletAddress with:
                                                           value msg.value wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if sub_463626d6 < roundTokenCap:
                                                            else:
                                                                emit RoundEnded(sub_463626d6, roundTokenCap);
                                        else:
                                            if (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                                require msg.value > 0
                                                require 0 / price > 0
                                                require (0 / price) + sub_463626d6 >= sub_463626d6
                                                sub_463626d6 += 0 / price
                                                require roundTokenCap >= (0 / price) + sub_463626d6
                                                require msg.value + weiRaised >= weiRaised
                                                weiRaised += msg.value
                                                require (0 / price) + tokensSold >= tokensSold
                                                tokensSold += 0 / price
                                                require 0 / price <= sub_0d27577e
                                                sub_0d27577e -= 0 / price
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), 0 / price
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, arg1);
                                                    call walletAddress with:
                                                       value msg.value wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        if sub_463626d6 < roundTokenCap:
                                                        else:
                                                            emit RoundEnded(sub_463626d6, roundTokenCap);
                                            else:
                                                require (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0 / price
                                                if (0 / price) + ext_call.return_data[0] - tokenSaleCap:
                                                    require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (0 / price) + ext_call.return_data[0] - tokenSaleCap == price
                                                    require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                                    require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                                    require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                                    sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                    require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                    require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                                    weiRaised = msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                                    sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit TokenPurchase(price, msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                                        call walletAddress with:
                                                           value msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= 0:
                                                                if sub_463626d6 < roundTokenCap:
                                                                else:
                                                                    emit RoundEnded(sub_463626d6, roundTokenCap);
                                                            else:
                                                                call msg.sender with:
                                                                   value (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    if sub_463626d6 < roundTokenCap:
                                                                    else:
                                                                        emit RoundEnded(sub_463626d6, roundTokenCap);
                                                else:
                                                    require 0 <= msg.value
                                                    require msg.value > 0
                                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                                    require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                                    sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                    require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                    require msg.value + weiRaised >= weiRaised
                                                    weiRaised += msg.value
                                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                                    sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, arg1);
                                                        call walletAddress with:
                                                           value msg.value wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if sub_463626d6 < roundTokenCap:
                                                            else:
                                                                emit RoundEnded(sub_463626d6, roundTokenCap);
        else:
            require arg2 == price
            require msg.value >= minimumPurchase
            require ext_code.size(tokenAddress)
            call tokenAddress.0xfa2299ee with:
                 gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            else:
                require return_data.size >= 32
                require tokenSaleCap > ext_call.return_data[0]
                require roundTokenCap > sub_463626d6
                require 0 < price
                if msg.value:
                    require 10^18 * msg.value / msg.value == 10^18
                    require price
                    if not arg3:
                        require msg.value > 0
                        require 10^18 * msg.value / price > 0
                        require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                        sub_463626d6 += 10^18 * msg.value / price
                        require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                        require msg.value + weiRaised >= weiRaised
                        weiRaised += msg.value
                        require (10^18 * msg.value / price) + tokensSold >= tokensSold
                        tokensSold += 10^18 * msg.value / price
                        require 10^18 * msg.value / price <= sub_0d27577e
                        sub_0d27577e -= 10^18 * msg.value / price
                        require ext_code.size(tokenAddress)
                        call tokenAddress.0x40c10f19 with:
                             gas gas_remaining wei
                            args address(arg1), 10^18 * msg.value / price
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        else:
                            require return_data.size >= 32
                            require ext_call.return_data[0]
                            emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, arg1);
                            call walletAddress with:
                               value msg.value wei
                                 gas 2300 * is_zero(value) wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if sub_463626d6 < roundTokenCap:
                                else:
                                    emit RoundEnded(sub_463626d6, roundTokenCap);
                    else:
                        require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                        if (10^18 * msg.value / price) + sub_463626d6 <= roundTokenCap:
                            require ext_code.size(tokenAddress)
                            call tokenAddress.0xfa2299ee with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require return_data.size >= 32
                                require (10^18 * msg.value / price) + ext_call.return_data[0] >= ext_call.return_data[0]
                                if (10^18 * msg.value / price) + ext_call.return_data[0] <= tokenSaleCap:
                                    require msg.value > 0
                                    require 10^18 * msg.value / price > 0
                                    require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                    sub_463626d6 += 10^18 * msg.value / price
                                    require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                    tokensSold += 10^18 * msg.value / price
                                    require 10^18 * msg.value / price <= sub_0d27577e
                                    sub_0d27577e -= 10^18 * msg.value / price
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args address(arg1), 10^18 * msg.value / price
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, arg1);
                                        call walletAddress with:
                                           value msg.value wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            if sub_463626d6 < roundTokenCap:
                                            else:
                                                emit RoundEnded(sub_463626d6, roundTokenCap);
                                else:
                                    if (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                        require msg.value > 0
                                        require 10^18 * msg.value / price > 0
                                        require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                        sub_463626d6 += 10^18 * msg.value / price
                                        require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                        tokensSold += 10^18 * msg.value / price
                                        require 10^18 * msg.value / price <= sub_0d27577e
                                        sub_0d27577e -= 10^18 * msg.value / price
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args address(arg1), 10^18 * msg.value / price
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require return_data.size >= 32
                                            require ext_call.return_data[0]
                                            emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, arg1);
                                            call walletAddress with:
                                               value msg.value wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                if sub_463626d6 < roundTokenCap:
                                                else:
                                                    emit RoundEnded(sub_463626d6, roundTokenCap);
                                    else:
                                        require (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 10^18 * msg.value / price
                                        if (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap:
                                            require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap == price
                                            require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                            require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                            require -ext_call.return_data[0] + tokenSaleCap > 0
                                            require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                            sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                            require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                            require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                            weiRaised = msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                            require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                            tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                            require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                            sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                require return_data.size >= 32
                                                require ext_call.return_data[0]
                                                emit TokenPurchase(price, msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                                call walletAddress with:
                                                   value msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    if (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= 0:
                                                        if sub_463626d6 < roundTokenCap:
                                                        else:
                                                            emit RoundEnded(sub_463626d6, roundTokenCap);
                                                    else:
                                                        call msg.sender with:
                                                           value (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if sub_463626d6 < roundTokenCap:
                                                            else:
                                                                emit RoundEnded(sub_463626d6, roundTokenCap);
                                        else:
                                            require 0 <= msg.value
                                            require msg.value > 0
                                            require -ext_call.return_data[0] + tokenSaleCap > 0
                                            require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                            sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                            require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                            require msg.value + weiRaised >= weiRaised
                                            weiRaised += msg.value
                                            require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                            tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                            require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                            sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                require return_data.size >= 32
                                                require ext_call.return_data[0]
                                                emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, arg1);
                                                call walletAddress with:
                                                   value msg.value wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    if sub_463626d6 < roundTokenCap:
                                                    else:
                                                        emit RoundEnded(sub_463626d6, roundTokenCap);
                        else:
                            if (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap <= 0:
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0xfa2299ee with:
                                     gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require return_data.size >= 32
                                    require (10^18 * msg.value / price) + ext_call.return_data[0] >= ext_call.return_data[0]
                                    if (10^18 * msg.value / price) + ext_call.return_data[0] <= tokenSaleCap:
                                        require msg.value > 0
                                        require 10^18 * msg.value / price > 0
                                        require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                        sub_463626d6 += 10^18 * msg.value / price
                                        require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                        tokensSold += 10^18 * msg.value / price
                                        require 10^18 * msg.value / price <= sub_0d27577e
                                        sub_0d27577e -= 10^18 * msg.value / price
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args address(arg1), 10^18 * msg.value / price
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require return_data.size >= 32
                                            require ext_call.return_data[0]
                                            emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, arg1);
                                            call walletAddress with:
                                               value msg.value wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                if sub_463626d6 < roundTokenCap:
                                                else:
                                                    emit RoundEnded(sub_463626d6, roundTokenCap);
                                    else:
                                        if (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                            require msg.value > 0
                                            require 10^18 * msg.value / price > 0
                                            require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                            sub_463626d6 += 10^18 * msg.value / price
                                            require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                            require msg.value + weiRaised >= weiRaised
                                            weiRaised += msg.value
                                            require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                            tokensSold += 10^18 * msg.value / price
                                            require 10^18 * msg.value / price <= sub_0d27577e
                                            sub_0d27577e -= 10^18 * msg.value / price
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args address(arg1), 10^18 * msg.value / price
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                require return_data.size >= 32
                                                require ext_call.return_data[0]
                                                emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, arg1);
                                                call walletAddress with:
                                                   value msg.value wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    if sub_463626d6 < roundTokenCap:
                                                    else:
                                                        emit RoundEnded(sub_463626d6, roundTokenCap);
                                        else:
                                            require (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 10^18 * msg.value / price
                                            if (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap:
                                                require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap == price
                                                require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                                require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                                require -ext_call.return_data[0] + tokenSaleCap > 0
                                                require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                                sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                                weiRaised = msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                                require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                                sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit TokenPurchase(price, msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                                    call walletAddress with:
                                                       value msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        if (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= 0:
                                                            if sub_463626d6 < roundTokenCap:
                                                            else:
                                                                emit RoundEnded(sub_463626d6, roundTokenCap);
                                                        else:
                                                            call msg.sender with:
                                                               value (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                if sub_463626d6 < roundTokenCap:
                                                                else:
                                                                    emit RoundEnded(sub_463626d6, roundTokenCap);
                                            else:
                                                require 0 <= msg.value
                                                require msg.value > 0
                                                require -ext_call.return_data[0] + tokenSaleCap > 0
                                                require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                                sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                require msg.value + weiRaised >= weiRaised
                                                weiRaised += msg.value
                                                require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                                sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, arg1);
                                                    call walletAddress with:
                                                       value msg.value wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        if sub_463626d6 < roundTokenCap:
                                                        else:
                                                            emit RoundEnded(sub_463626d6, roundTokenCap);
                            else:
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0xfa2299ee with:
                                     gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require return_data.size >= 32
                                    require (10^18 * msg.value / price) + ext_call.return_data[0] >= ext_call.return_data[0]
                                    if (10^18 * msg.value / price) + ext_call.return_data[0] <= tokenSaleCap:
                                        if (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap <= 0:
                                            require msg.value > 0
                                            require 10^18 * msg.value / price > 0
                                            require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                            sub_463626d6 += 10^18 * msg.value / price
                                            require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                            require msg.value + weiRaised >= weiRaised
                                            weiRaised += msg.value
                                            require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                            tokensSold += 10^18 * msg.value / price
                                            require 10^18 * msg.value / price <= sub_0d27577e
                                            sub_0d27577e -= 10^18 * msg.value / price
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args address(arg1), 10^18 * msg.value / price
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                require return_data.size >= 32
                                                require ext_call.return_data[0]
                                                emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, arg1);
                                                call walletAddress with:
                                                   value msg.value wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    if sub_463626d6 < roundTokenCap:
                                                    else:
                                                        emit RoundEnded(sub_463626d6, roundTokenCap);
                                        else:
                                            require (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap <= 10^18 * msg.value / price
                                            if (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap:
                                                require (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap == price
                                                require (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= msg.value
                                                require msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) > 0
                                                require -sub_463626d6 + roundTokenCap > 0
                                                require roundTokenCap >= sub_463626d6
                                                sub_463626d6 = roundTokenCap
                                                require roundTokenCap >= roundTokenCap
                                                require msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised >= weiRaised
                                                weiRaised = msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised
                                                require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                                tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                                require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                                sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), -sub_463626d6 + roundTokenCap
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit TokenPurchase(price, msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18), -sub_463626d6 + roundTokenCap, (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                                    call walletAddress with:
                                                       value msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        if (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= 0:
                                                            if sub_463626d6 < roundTokenCap:
                                                            else:
                                                                emit RoundEnded(sub_463626d6, roundTokenCap);
                                                        else:
                                                            call msg.sender with:
                                                               value (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                if sub_463626d6 < roundTokenCap:
                                                                else:
                                                                    emit RoundEnded(sub_463626d6, roundTokenCap);
                                            else:
                                                require 0 <= msg.value
                                                require msg.value > 0
                                                require -sub_463626d6 + roundTokenCap > 0
                                                require roundTokenCap >= sub_463626d6
                                                sub_463626d6 = roundTokenCap
                                                require roundTokenCap >= roundTokenCap
                                                require msg.value + weiRaised >= weiRaised
                                                weiRaised += msg.value
                                                require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                                tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                                require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                                sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), -sub_463626d6 + roundTokenCap
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit TokenPurchase(price, msg.value, -sub_463626d6 + roundTokenCap, 0, ethUsdRate, msg.sender, arg1);
                                                    call walletAddress with:
                                                       value msg.value wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        if sub_463626d6 < roundTokenCap:
                                                        else:
                                                            emit RoundEnded(sub_463626d6, roundTokenCap);
                                    else:
                                        if ext_call.return_data[0] - tokenSaleCap <= sub_463626d6 - roundTokenCap:
                                            if (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap <= 0:
                                                require msg.value > 0
                                                require 10^18 * msg.value / price > 0
                                                require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                                sub_463626d6 += 10^18 * msg.value / price
                                                require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                                require msg.value + weiRaised >= weiRaised
                                                weiRaised += msg.value
                                                require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                                tokensSold += 10^18 * msg.value / price
                                                require 10^18 * msg.value / price <= sub_0d27577e
                                                sub_0d27577e -= 10^18 * msg.value / price
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), 10^18 * msg.value / price
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, arg1);
                                                    call walletAddress with:
                                                       value msg.value wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        if sub_463626d6 < roundTokenCap:
                                                        else:
                                                            emit RoundEnded(sub_463626d6, roundTokenCap);
                                            else:
                                                require (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap <= 10^18 * msg.value / price
                                                if (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap:
                                                    require (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap == price
                                                    require (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= msg.value
                                                    require msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) > 0
                                                    require -sub_463626d6 + roundTokenCap > 0
                                                    require roundTokenCap >= sub_463626d6
                                                    sub_463626d6 = roundTokenCap
                                                    require roundTokenCap >= roundTokenCap
                                                    require msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised >= weiRaised
                                                    weiRaised = msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised
                                                    require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                                    tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                                    require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                                    sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), -sub_463626d6 + roundTokenCap
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit TokenPurchase(price, msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18), -sub_463626d6 + roundTokenCap, (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                                        call walletAddress with:
                                                           value msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= 0:
                                                                if sub_463626d6 < roundTokenCap:
                                                                else:
                                                                    emit RoundEnded(sub_463626d6, roundTokenCap);
                                                            else:
                                                                call msg.sender with:
                                                                   value (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    if sub_463626d6 < roundTokenCap:
                                                                    else:
                                                                        emit RoundEnded(sub_463626d6, roundTokenCap);
                                                else:
                                                    require 0 <= msg.value
                                                    require msg.value > 0
                                                    require -sub_463626d6 + roundTokenCap > 0
                                                    require roundTokenCap >= sub_463626d6
                                                    sub_463626d6 = roundTokenCap
                                                    require roundTokenCap >= roundTokenCap
                                                    require msg.value + weiRaised >= weiRaised
                                                    weiRaised += msg.value
                                                    require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                                    tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                                    require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                                    sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), -sub_463626d6 + roundTokenCap
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit TokenPurchase(price, msg.value, -sub_463626d6 + roundTokenCap, 0, ethUsdRate, msg.sender, arg1);
                                                        call walletAddress with:
                                                           value msg.value wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if sub_463626d6 < roundTokenCap:
                                                            else:
                                                                emit RoundEnded(sub_463626d6, roundTokenCap);
                                        else:
                                            if (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                                require msg.value > 0
                                                require 10^18 * msg.value / price > 0
                                                require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                                sub_463626d6 += 10^18 * msg.value / price
                                                require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                                require msg.value + weiRaised >= weiRaised
                                                weiRaised += msg.value
                                                require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                                tokensSold += 10^18 * msg.value / price
                                                require 10^18 * msg.value / price <= sub_0d27577e
                                                sub_0d27577e -= 10^18 * msg.value / price
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), 10^18 * msg.value / price
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, arg1);
                                                    call walletAddress with:
                                                       value msg.value wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        if sub_463626d6 < roundTokenCap:
                                                        else:
                                                            emit RoundEnded(sub_463626d6, roundTokenCap);
                                            else:
                                                require (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 10^18 * msg.value / price
                                                if (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap:
                                                    require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap == price
                                                    require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                                    require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                                    require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                                    sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                    require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                    require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                                    weiRaised = msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                                    sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit TokenPurchase(price, msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                                        call walletAddress with:
                                                           value msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= 0:
                                                                if sub_463626d6 < roundTokenCap:
                                                                else:
                                                                    emit RoundEnded(sub_463626d6, roundTokenCap);
                                                            else:
                                                                call msg.sender with:
                                                                   value (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    if sub_463626d6 < roundTokenCap:
                                                                    else:
                                                                        emit RoundEnded(sub_463626d6, roundTokenCap);
                                                else:
                                                    require 0 <= msg.value
                                                    require msg.value > 0
                                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                                    require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                                    sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                    require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                    require msg.value + weiRaised >= weiRaised
                                                    weiRaised += msg.value
                                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                                    sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, arg1);
                                                        call walletAddress with:
                                                           value msg.value wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if sub_463626d6 < roundTokenCap:
                                                            else:
                                                                emit RoundEnded(sub_463626d6, roundTokenCap);
                else:
                    require price
                    if not arg3:
                        require msg.value > 0
                        require 0 / price > 0
                        require (0 / price) + sub_463626d6 >= sub_463626d6
                        sub_463626d6 += 0 / price
                        require roundTokenCap >= (0 / price) + sub_463626d6
                        require msg.value + weiRaised >= weiRaised
                        weiRaised += msg.value
                        require (0 / price) + tokensSold >= tokensSold
                        tokensSold += 0 / price
                        require 0 / price <= sub_0d27577e
                        sub_0d27577e -= 0 / price
                        require ext_code.size(tokenAddress)
                        call tokenAddress.0x40c10f19 with:
                             gas gas_remaining wei
                            args address(arg1), 0 / price
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        else:
                            require return_data.size >= 32
                            require ext_call.return_data[0]
                            emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, arg1);
                            call walletAddress with:
                               value msg.value wei
                                 gas 2300 * is_zero(value) wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if sub_463626d6 < roundTokenCap:
                                else:
                                    emit RoundEnded(sub_463626d6, roundTokenCap);
                    else:
                        require (0 / price) + sub_463626d6 >= sub_463626d6
                        if (0 / price) + sub_463626d6 <= roundTokenCap:
                            require ext_code.size(tokenAddress)
                            call tokenAddress.0xfa2299ee with:
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require return_data.size >= 32
                                require (0 / price) + ext_call.return_data[0] >= ext_call.return_data[0]
                                if (0 / price) + ext_call.return_data[0] <= tokenSaleCap:
                                    require msg.value > 0
                                    require 0 / price > 0
                                    require (0 / price) + sub_463626d6 >= sub_463626d6
                                    sub_463626d6 += 0 / price
                                    require roundTokenCap >= (0 / price) + sub_463626d6
                                    require msg.value + weiRaised >= weiRaised
                                    weiRaised += msg.value
                                    require (0 / price) + tokensSold >= tokensSold
                                    tokensSold += 0 / price
                                    require 0 / price <= sub_0d27577e
                                    sub_0d27577e -= 0 / price
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args address(arg1), 0 / price
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require return_data.size >= 32
                                        require ext_call.return_data[0]
                                        emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, arg1);
                                        call walletAddress with:
                                           value msg.value wei
                                             gas 2300 * is_zero(value) wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            if sub_463626d6 < roundTokenCap:
                                            else:
                                                emit RoundEnded(sub_463626d6, roundTokenCap);
                                else:
                                    if (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                        require msg.value > 0
                                        require 0 / price > 0
                                        require (0 / price) + sub_463626d6 >= sub_463626d6
                                        sub_463626d6 += 0 / price
                                        require roundTokenCap >= (0 / price) + sub_463626d6
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require (0 / price) + tokensSold >= tokensSold
                                        tokensSold += 0 / price
                                        require 0 / price <= sub_0d27577e
                                        sub_0d27577e -= 0 / price
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args address(arg1), 0 / price
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require return_data.size >= 32
                                            require ext_call.return_data[0]
                                            emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, arg1);
                                            call walletAddress with:
                                               value msg.value wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                if sub_463626d6 < roundTokenCap:
                                                else:
                                                    emit RoundEnded(sub_463626d6, roundTokenCap);
                                    else:
                                        require (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0 / price
                                        if (0 / price) + ext_call.return_data[0] - tokenSaleCap:
                                            require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (0 / price) + ext_call.return_data[0] - tokenSaleCap == price
                                            require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                            require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                            require -ext_call.return_data[0] + tokenSaleCap > 0
                                            require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                            sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                            require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                            require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                            weiRaised = msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                            require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                            tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                            require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                            sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                require return_data.size >= 32
                                                require ext_call.return_data[0]
                                                emit TokenPurchase(price, msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                                call walletAddress with:
                                                   value msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    if (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= 0:
                                                        if sub_463626d6 < roundTokenCap:
                                                        else:
                                                            emit RoundEnded(sub_463626d6, roundTokenCap);
                                                    else:
                                                        call msg.sender with:
                                                           value (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if sub_463626d6 < roundTokenCap:
                                                            else:
                                                                emit RoundEnded(sub_463626d6, roundTokenCap);
                                        else:
                                            require 0 <= msg.value
                                            require msg.value > 0
                                            require -ext_call.return_data[0] + tokenSaleCap > 0
                                            require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                            sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                            require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                            require msg.value + weiRaised >= weiRaised
                                            weiRaised += msg.value
                                            require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                            tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                            require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                            sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                require return_data.size >= 32
                                                require ext_call.return_data[0]
                                                emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, arg1);
                                                call walletAddress with:
                                                   value msg.value wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    if sub_463626d6 < roundTokenCap:
                                                    else:
                                                        emit RoundEnded(sub_463626d6, roundTokenCap);
                        else:
                            if (0 / price) + sub_463626d6 - roundTokenCap <= 0:
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0xfa2299ee with:
                                     gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require return_data.size >= 32
                                    require (0 / price) + ext_call.return_data[0] >= ext_call.return_data[0]
                                    if (0 / price) + ext_call.return_data[0] <= tokenSaleCap:
                                        require msg.value > 0
                                        require 0 / price > 0
                                        require (0 / price) + sub_463626d6 >= sub_463626d6
                                        sub_463626d6 += 0 / price
                                        require roundTokenCap >= (0 / price) + sub_463626d6
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require (0 / price) + tokensSold >= tokensSold
                                        tokensSold += 0 / price
                                        require 0 / price <= sub_0d27577e
                                        sub_0d27577e -= 0 / price
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args address(arg1), 0 / price
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require return_data.size >= 32
                                            require ext_call.return_data[0]
                                            emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, arg1);
                                            call walletAddress with:
                                               value msg.value wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                if sub_463626d6 < roundTokenCap:
                                                else:
                                                    emit RoundEnded(sub_463626d6, roundTokenCap);
                                    else:
                                        if (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                            require msg.value > 0
                                            require 0 / price > 0
                                            require (0 / price) + sub_463626d6 >= sub_463626d6
                                            sub_463626d6 += 0 / price
                                            require roundTokenCap >= (0 / price) + sub_463626d6
                                            require msg.value + weiRaised >= weiRaised
                                            weiRaised += msg.value
                                            require (0 / price) + tokensSold >= tokensSold
                                            tokensSold += 0 / price
                                            require 0 / price <= sub_0d27577e
                                            sub_0d27577e -= 0 / price
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args address(arg1), 0 / price
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                require return_data.size >= 32
                                                require ext_call.return_data[0]
                                                emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, arg1);
                                                call walletAddress with:
                                                   value msg.value wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    if sub_463626d6 < roundTokenCap:
                                                    else:
                                                        emit RoundEnded(sub_463626d6, roundTokenCap);
                                        else:
                                            require (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0 / price
                                            if (0 / price) + ext_call.return_data[0] - tokenSaleCap:
                                                require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (0 / price) + ext_call.return_data[0] - tokenSaleCap == price
                                                require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                                require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                                require -ext_call.return_data[0] + tokenSaleCap > 0
                                                require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                                sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                                weiRaised = msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                                require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                                sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit TokenPurchase(price, msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                                    call walletAddress with:
                                                       value msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        if (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= 0:
                                                            if sub_463626d6 < roundTokenCap:
                                                            else:
                                                                emit RoundEnded(sub_463626d6, roundTokenCap);
                                                        else:
                                                            call msg.sender with:
                                                               value (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                if sub_463626d6 < roundTokenCap:
                                                                else:
                                                                    emit RoundEnded(sub_463626d6, roundTokenCap);
                                            else:
                                                require 0 <= msg.value
                                                require msg.value > 0
                                                require -ext_call.return_data[0] + tokenSaleCap > 0
                                                require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                                sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                require msg.value + weiRaised >= weiRaised
                                                weiRaised += msg.value
                                                require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                                sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, arg1);
                                                    call walletAddress with:
                                                       value msg.value wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        if sub_463626d6 < roundTokenCap:
                                                        else:
                                                            emit RoundEnded(sub_463626d6, roundTokenCap);
                            else:
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0xfa2299ee with:
                                     gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require return_data.size >= 32
                                    require (0 / price) + ext_call.return_data[0] >= ext_call.return_data[0]
                                    if (0 / price) + ext_call.return_data[0] <= tokenSaleCap:
                                        if (0 / price) + sub_463626d6 - roundTokenCap <= 0:
                                            require msg.value > 0
                                            require 0 / price > 0
                                            require (0 / price) + sub_463626d6 >= sub_463626d6
                                            sub_463626d6 += 0 / price
                                            require roundTokenCap >= (0 / price) + sub_463626d6
                                            require msg.value + weiRaised >= weiRaised
                                            weiRaised += msg.value
                                            require (0 / price) + tokensSold >= tokensSold
                                            tokensSold += 0 / price
                                            require 0 / price <= sub_0d27577e
                                            sub_0d27577e -= 0 / price
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args address(arg1), 0 / price
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                require return_data.size >= 32
                                                require ext_call.return_data[0]
                                                emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, arg1);
                                                call walletAddress with:
                                                   value msg.value wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    if sub_463626d6 < roundTokenCap:
                                                    else:
                                                        emit RoundEnded(sub_463626d6, roundTokenCap);
                                        else:
                                            require (0 / price) + sub_463626d6 - roundTokenCap <= 0 / price
                                            if (0 / price) + sub_463626d6 - roundTokenCap:
                                                require (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / (0 / price) + sub_463626d6 - roundTokenCap == price
                                                require (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= msg.value
                                                require msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) > 0
                                                require -sub_463626d6 + roundTokenCap > 0
                                                require roundTokenCap >= sub_463626d6
                                                sub_463626d6 = roundTokenCap
                                                require roundTokenCap >= roundTokenCap
                                                require msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised >= weiRaised
                                                weiRaised = msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised
                                                require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                                tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                                require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                                sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), -sub_463626d6 + roundTokenCap
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit TokenPurchase(price, msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18), -sub_463626d6 + roundTokenCap, (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                                    call walletAddress with:
                                                       value msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        if (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= 0:
                                                            if sub_463626d6 < roundTokenCap:
                                                            else:
                                                                emit RoundEnded(sub_463626d6, roundTokenCap);
                                                        else:
                                                            call msg.sender with:
                                                               value (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                if sub_463626d6 < roundTokenCap:
                                                                else:
                                                                    emit RoundEnded(sub_463626d6, roundTokenCap);
                                            else:
                                                require 0 <= msg.value
                                                require msg.value > 0
                                                require -sub_463626d6 + roundTokenCap > 0
                                                require roundTokenCap >= sub_463626d6
                                                sub_463626d6 = roundTokenCap
                                                require roundTokenCap >= roundTokenCap
                                                require msg.value + weiRaised >= weiRaised
                                                weiRaised += msg.value
                                                require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                                tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                                require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                                sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), -sub_463626d6 + roundTokenCap
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit TokenPurchase(price, msg.value, -sub_463626d6 + roundTokenCap, 0, ethUsdRate, msg.sender, arg1);
                                                    call walletAddress with:
                                                       value msg.value wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        if sub_463626d6 < roundTokenCap:
                                                        else:
                                                            emit RoundEnded(sub_463626d6, roundTokenCap);
                                    else:
                                        if ext_call.return_data[0] - tokenSaleCap <= sub_463626d6 - roundTokenCap:
                                            if (0 / price) + sub_463626d6 - roundTokenCap <= 0:
                                                require msg.value > 0
                                                require 0 / price > 0
                                                require (0 / price) + sub_463626d6 >= sub_463626d6
                                                sub_463626d6 += 0 / price
                                                require roundTokenCap >= (0 / price) + sub_463626d6
                                                require msg.value + weiRaised >= weiRaised
                                                weiRaised += msg.value
                                                require (0 / price) + tokensSold >= tokensSold
                                                tokensSold += 0 / price
                                                require 0 / price <= sub_0d27577e
                                                sub_0d27577e -= 0 / price
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), 0 / price
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, arg1);
                                                    call walletAddress with:
                                                       value msg.value wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        if sub_463626d6 < roundTokenCap:
                                                        else:
                                                            emit RoundEnded(sub_463626d6, roundTokenCap);
                                            else:
                                                require (0 / price) + sub_463626d6 - roundTokenCap <= 0 / price
                                                if (0 / price) + sub_463626d6 - roundTokenCap:
                                                    require (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / (0 / price) + sub_463626d6 - roundTokenCap == price
                                                    require (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= msg.value
                                                    require msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) > 0
                                                    require -sub_463626d6 + roundTokenCap > 0
                                                    require roundTokenCap >= sub_463626d6
                                                    sub_463626d6 = roundTokenCap
                                                    require roundTokenCap >= roundTokenCap
                                                    require msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised >= weiRaised
                                                    weiRaised = msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised
                                                    require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                                    tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                                    require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                                    sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), -sub_463626d6 + roundTokenCap
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit TokenPurchase(price, msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18), -sub_463626d6 + roundTokenCap, (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                                        call walletAddress with:
                                                           value msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= 0:
                                                                if sub_463626d6 < roundTokenCap:
                                                                else:
                                                                    emit RoundEnded(sub_463626d6, roundTokenCap);
                                                            else:
                                                                call msg.sender with:
                                                                   value (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    if sub_463626d6 < roundTokenCap:
                                                                    else:
                                                                        emit RoundEnded(sub_463626d6, roundTokenCap);
                                                else:
                                                    require 0 <= msg.value
                                                    require msg.value > 0
                                                    require -sub_463626d6 + roundTokenCap > 0
                                                    require roundTokenCap >= sub_463626d6
                                                    sub_463626d6 = roundTokenCap
                                                    require roundTokenCap >= roundTokenCap
                                                    require msg.value + weiRaised >= weiRaised
                                                    weiRaised += msg.value
                                                    require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                                    tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                                    require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                                    sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), -sub_463626d6 + roundTokenCap
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit TokenPurchase(price, msg.value, -sub_463626d6 + roundTokenCap, 0, ethUsdRate, msg.sender, arg1);
                                                        call walletAddress with:
                                                           value msg.value wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if sub_463626d6 < roundTokenCap:
                                                            else:
                                                                emit RoundEnded(sub_463626d6, roundTokenCap);
                                        else:
                                            if (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                                require msg.value > 0
                                                require 0 / price > 0
                                                require (0 / price) + sub_463626d6 >= sub_463626d6
                                                sub_463626d6 += 0 / price
                                                require roundTokenCap >= (0 / price) + sub_463626d6
                                                require msg.value + weiRaised >= weiRaised
                                                weiRaised += msg.value
                                                require (0 / price) + tokensSold >= tokensSold
                                                tokensSold += 0 / price
                                                require 0 / price <= sub_0d27577e
                                                sub_0d27577e -= 0 / price
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), 0 / price
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, arg1);
                                                    call walletAddress with:
                                                       value msg.value wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        if sub_463626d6 < roundTokenCap:
                                                        else:
                                                            emit RoundEnded(sub_463626d6, roundTokenCap);
                                            else:
                                                require (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0 / price
                                                if (0 / price) + ext_call.return_data[0] - tokenSaleCap:
                                                    require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (0 / price) + ext_call.return_data[0] - tokenSaleCap == price
                                                    require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                                    require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                                    require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                                    sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                    require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                    require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                                    weiRaised = msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                                    sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit TokenPurchase(price, msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                                        call walletAddress with:
                                                           value msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= 0:
                                                                if sub_463626d6 < roundTokenCap:
                                                                else:
                                                                    emit RoundEnded(sub_463626d6, roundTokenCap);
                                                            else:
                                                                call msg.sender with:
                                                                   value (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    if sub_463626d6 < roundTokenCap:
                                                                    else:
                                                                        emit RoundEnded(sub_463626d6, roundTokenCap);
                                                else:
                                                    require 0 <= msg.value
                                                    require msg.value > 0
                                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                                    require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                                    sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                    require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                    require msg.value + weiRaised >= weiRaised
                                                    weiRaised += msg.value
                                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                                    sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, arg1);
                                                        call walletAddress with:
                                                           value msg.value wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if sub_463626d6 < roundTokenCap:
                                                            else:
                                                                emit RoundEnded(sub_463626d6, roundTokenCap);
    else:
        if sub_fbde1348[address(msg.sender)].field_0 <= block.timestamp:
            if not arg2:
                require msg.value >= minimumPurchase
                require ext_code.size(tokenAddress)
                call tokenAddress.0xfa2299ee with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                else:
                    require return_data.size >= 32
                    require tokenSaleCap > ext_call.return_data[0]
                    require roundTokenCap > sub_463626d6
                    require 0 < price
                    if msg.value:
                        require 10^18 * msg.value / msg.value == 10^18
                        require price
                        if not arg3:
                            require msg.value > 0
                            require 10^18 * msg.value / price > 0
                            require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                            sub_463626d6 += 10^18 * msg.value / price
                            require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                            require msg.value + weiRaised >= weiRaised
                            weiRaised += msg.value
                            require (10^18 * msg.value / price) + tokensSold >= tokensSold
                            tokensSold += 10^18 * msg.value / price
                            require 10^18 * msg.value / price <= sub_0d27577e
                            sub_0d27577e -= 10^18 * msg.value / price
                            require ext_code.size(tokenAddress)
                            call tokenAddress.0x40c10f19 with:
                                 gas gas_remaining wei
                                args address(arg1), 10^18 * msg.value / price
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, arg1);
                                call walletAddress with:
                                   value msg.value wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if sub_463626d6 < roundTokenCap:
                                    else:
                                        emit RoundEnded(sub_463626d6, roundTokenCap);
                        else:
                            require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                            if (10^18 * msg.value / price) + sub_463626d6 <= roundTokenCap:
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0xfa2299ee with:
                                     gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require return_data.size >= 32
                                    require (10^18 * msg.value / price) + ext_call.return_data[0] >= ext_call.return_data[0]
                                    if (10^18 * msg.value / price) + ext_call.return_data[0] <= tokenSaleCap:
                                        require msg.value > 0
                                        require 10^18 * msg.value / price > 0
                                        require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                        sub_463626d6 += 10^18 * msg.value / price
                                        require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                        tokensSold += 10^18 * msg.value / price
                                        require 10^18 * msg.value / price <= sub_0d27577e
                                        sub_0d27577e -= 10^18 * msg.value / price
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args address(arg1), 10^18 * msg.value / price
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require return_data.size >= 32
                                            require ext_call.return_data[0]
                                            emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, arg1);
                                            call walletAddress with:
                                               value msg.value wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                if sub_463626d6 < roundTokenCap:
                                                else:
                                                    emit RoundEnded(sub_463626d6, roundTokenCap);
                                    else:
                                        if (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                            require msg.value > 0
                                            require 10^18 * msg.value / price > 0
                                            require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                            sub_463626d6 += 10^18 * msg.value / price
                                            require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                            require msg.value + weiRaised >= weiRaised
                                            weiRaised += msg.value
                                            require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                            tokensSold += 10^18 * msg.value / price
                                            require 10^18 * msg.value / price <= sub_0d27577e
                                            sub_0d27577e -= 10^18 * msg.value / price
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args address(arg1), 10^18 * msg.value / price
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                require return_data.size >= 32
                                                require ext_call.return_data[0]
                                                emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, arg1);
                                                call walletAddress with:
                                                   value msg.value wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    if sub_463626d6 < roundTokenCap:
                                                    else:
                                                        emit RoundEnded(sub_463626d6, roundTokenCap);
                                        else:
                                            require (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 10^18 * msg.value / price
                                            if (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap:
                                                require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap == price
                                                require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                                require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                                require -ext_call.return_data[0] + tokenSaleCap > 0
                                                require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                                sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                                weiRaised = msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                                require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                                sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit TokenPurchase(price, msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                                    call walletAddress with:
                                                       value msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        if (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= 0:
                                                            if sub_463626d6 < roundTokenCap:
                                                            else:
                                                                emit RoundEnded(sub_463626d6, roundTokenCap);
                                                        else:
                                                            call msg.sender with:
                                                               value (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                if sub_463626d6 < roundTokenCap:
                                                                else:
                                                                    emit RoundEnded(sub_463626d6, roundTokenCap);
                                            else:
                                                require 0 <= msg.value
                                                require msg.value > 0
                                                require -ext_call.return_data[0] + tokenSaleCap > 0
                                                require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                                sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                require msg.value + weiRaised >= weiRaised
                                                weiRaised += msg.value
                                                require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                                sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, arg1);
                                                    call walletAddress with:
                                                       value msg.value wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        if sub_463626d6 < roundTokenCap:
                                                        else:
                                                            emit RoundEnded(sub_463626d6, roundTokenCap);
                            else:
                                if (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap <= 0:
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0xfa2299ee with:
                                         gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require return_data.size >= 32
                                        require (10^18 * msg.value / price) + ext_call.return_data[0] >= ext_call.return_data[0]
                                        if (10^18 * msg.value / price) + ext_call.return_data[0] <= tokenSaleCap:
                                            require msg.value > 0
                                            require 10^18 * msg.value / price > 0
                                            require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                            sub_463626d6 += 10^18 * msg.value / price
                                            require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                            require msg.value + weiRaised >= weiRaised
                                            weiRaised += msg.value
                                            require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                            tokensSold += 10^18 * msg.value / price
                                            require 10^18 * msg.value / price <= sub_0d27577e
                                            sub_0d27577e -= 10^18 * msg.value / price
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args address(arg1), 10^18 * msg.value / price
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                require return_data.size >= 32
                                                require ext_call.return_data[0]
                                                emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, arg1);
                                                call walletAddress with:
                                                   value msg.value wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    if sub_463626d6 < roundTokenCap:
                                                    else:
                                                        emit RoundEnded(sub_463626d6, roundTokenCap);
                                        else:
                                            if (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                                require msg.value > 0
                                                require 10^18 * msg.value / price > 0
                                                require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                                sub_463626d6 += 10^18 * msg.value / price
                                                require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                                require msg.value + weiRaised >= weiRaised
                                                weiRaised += msg.value
                                                require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                                tokensSold += 10^18 * msg.value / price
                                                require 10^18 * msg.value / price <= sub_0d27577e
                                                sub_0d27577e -= 10^18 * msg.value / price
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), 10^18 * msg.value / price
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, arg1);
                                                    call walletAddress with:
                                                       value msg.value wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        if sub_463626d6 < roundTokenCap:
                                                        else:
                                                            emit RoundEnded(sub_463626d6, roundTokenCap);
                                            else:
                                                require (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 10^18 * msg.value / price
                                                if (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap:
                                                    require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap == price
                                                    require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                                    require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                                    require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                                    sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                    require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                    require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                                    weiRaised = msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                                    sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit TokenPurchase(price, msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                                        call walletAddress with:
                                                           value msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= 0:
                                                                if sub_463626d6 < roundTokenCap:
                                                                else:
                                                                    emit RoundEnded(sub_463626d6, roundTokenCap);
                                                            else:
                                                                call msg.sender with:
                                                                   value (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    if sub_463626d6 < roundTokenCap:
                                                                    else:
                                                                        emit RoundEnded(sub_463626d6, roundTokenCap);
                                                else:
                                                    require 0 <= msg.value
                                                    require msg.value > 0
                                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                                    require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                                    sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                    require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                    require msg.value + weiRaised >= weiRaised
                                                    weiRaised += msg.value
                                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                                    sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, arg1);
                                                        call walletAddress with:
                                                           value msg.value wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if sub_463626d6 < roundTokenCap:
                                                            else:
                                                                emit RoundEnded(sub_463626d6, roundTokenCap);
                                else:
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0xfa2299ee with:
                                         gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require return_data.size >= 32
                                        require (10^18 * msg.value / price) + ext_call.return_data[0] >= ext_call.return_data[0]
                                        if (10^18 * msg.value / price) + ext_call.return_data[0] <= tokenSaleCap:
                                            if (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap <= 0:
                                                require msg.value > 0
                                                require 10^18 * msg.value / price > 0
                                                require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                                sub_463626d6 += 10^18 * msg.value / price
                                                require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                                require msg.value + weiRaised >= weiRaised
                                                weiRaised += msg.value
                                                require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                                tokensSold += 10^18 * msg.value / price
                                                require 10^18 * msg.value / price <= sub_0d27577e
                                                sub_0d27577e -= 10^18 * msg.value / price
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), 10^18 * msg.value / price
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, arg1);
                                                    call walletAddress with:
                                                       value msg.value wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        if sub_463626d6 < roundTokenCap:
                                                        else:
                                                            emit RoundEnded(sub_463626d6, roundTokenCap);
                                            else:
                                                require (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap <= 10^18 * msg.value / price
                                                if (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap:
                                                    require (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap == price
                                                    require (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= msg.value
                                                    require msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) > 0
                                                    require -sub_463626d6 + roundTokenCap > 0
                                                    require roundTokenCap >= sub_463626d6
                                                    sub_463626d6 = roundTokenCap
                                                    require roundTokenCap >= roundTokenCap
                                                    require msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised >= weiRaised
                                                    weiRaised = msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised
                                                    require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                                    tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                                    require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                                    sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), -sub_463626d6 + roundTokenCap
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit TokenPurchase(price, msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18), -sub_463626d6 + roundTokenCap, (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                                        call walletAddress with:
                                                           value msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= 0:
                                                                if sub_463626d6 < roundTokenCap:
                                                                else:
                                                                    emit RoundEnded(sub_463626d6, roundTokenCap);
                                                            else:
                                                                call msg.sender with:
                                                                   value (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    if sub_463626d6 < roundTokenCap:
                                                                    else:
                                                                        emit RoundEnded(sub_463626d6, roundTokenCap);
                                                else:
                                                    require 0 <= msg.value
                                                    require msg.value > 0
                                                    require -sub_463626d6 + roundTokenCap > 0
                                                    require roundTokenCap >= sub_463626d6
                                                    sub_463626d6 = roundTokenCap
                                                    require roundTokenCap >= roundTokenCap
                                                    require msg.value + weiRaised >= weiRaised
                                                    weiRaised += msg.value
                                                    require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                                    tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                                    require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                                    sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), -sub_463626d6 + roundTokenCap
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit TokenPurchase(price, msg.value, -sub_463626d6 + roundTokenCap, 0, ethUsdRate, msg.sender, arg1);
                                                        call walletAddress with:
                                                           value msg.value wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if sub_463626d6 < roundTokenCap:
                                                            else:
                                                                emit RoundEnded(sub_463626d6, roundTokenCap);
                                        else:
                                            if ext_call.return_data[0] - tokenSaleCap <= sub_463626d6 - roundTokenCap:
                                                if (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap <= 0:
                                                    require msg.value > 0
                                                    require 10^18 * msg.value / price > 0
                                                    require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                                    sub_463626d6 += 10^18 * msg.value / price
                                                    require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                                    require msg.value + weiRaised >= weiRaised
                                                    weiRaised += msg.value
                                                    require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                                    tokensSold += 10^18 * msg.value / price
                                                    require 10^18 * msg.value / price <= sub_0d27577e
                                                    sub_0d27577e -= 10^18 * msg.value / price
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), 10^18 * msg.value / price
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, arg1);
                                                        call walletAddress with:
                                                           value msg.value wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if sub_463626d6 < roundTokenCap:
                                                            else:
                                                                emit RoundEnded(sub_463626d6, roundTokenCap);
                                                else:
                                                    require (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap <= 10^18 * msg.value / price
                                                    if (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap:
                                                        require (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap == price
                                                        require (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= msg.value
                                                        require msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) > 0
                                                        require -sub_463626d6 + roundTokenCap > 0
                                                        require roundTokenCap >= sub_463626d6
                                                        sub_463626d6 = roundTokenCap
                                                        require roundTokenCap >= roundTokenCap
                                                        require msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised >= weiRaised
                                                        weiRaised = msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised
                                                        require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                                        tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                                        require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                                        sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                                        require ext_code.size(tokenAddress)
                                                        call tokenAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args address(arg1), -sub_463626d6 + roundTokenCap
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0]
                                                            emit TokenPurchase(price, msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18), -sub_463626d6 + roundTokenCap, (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                                            call walletAddress with:
                                                               value msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                if (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= 0:
                                                                    if sub_463626d6 < roundTokenCap:
                                                                    else:
                                                                        emit RoundEnded(sub_463626d6, roundTokenCap);
                                                                else:
                                                                    call msg.sender with:
                                                                       value (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 wei
                                                                         gas 2300 * is_zero(value) wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                                        if sub_463626d6 < roundTokenCap:
                                                                        else:
                                                                            emit RoundEnded(sub_463626d6, roundTokenCap);
                                                    else:
                                                        require 0 <= msg.value
                                                        require msg.value > 0
                                                        require -sub_463626d6 + roundTokenCap > 0
                                                        require roundTokenCap >= sub_463626d6
                                                        sub_463626d6 = roundTokenCap
                                                        require roundTokenCap >= roundTokenCap
                                                        require msg.value + weiRaised >= weiRaised
                                                        weiRaised += msg.value
                                                        require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                                        tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                                        require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                                        sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                                        require ext_code.size(tokenAddress)
                                                        call tokenAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args address(arg1), -sub_463626d6 + roundTokenCap
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0]
                                                            emit TokenPurchase(price, msg.value, -sub_463626d6 + roundTokenCap, 0, ethUsdRate, msg.sender, arg1);
                                                            call walletAddress with:
                                                               value msg.value wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                if sub_463626d6 < roundTokenCap:
                                                                else:
                                                                    emit RoundEnded(sub_463626d6, roundTokenCap);
                                            else:
                                                if (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                                    require msg.value > 0
                                                    require 10^18 * msg.value / price > 0
                                                    require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                                    sub_463626d6 += 10^18 * msg.value / price
                                                    require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                                    require msg.value + weiRaised >= weiRaised
                                                    weiRaised += msg.value
                                                    require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                                    tokensSold += 10^18 * msg.value / price
                                                    require 10^18 * msg.value / price <= sub_0d27577e
                                                    sub_0d27577e -= 10^18 * msg.value / price
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), 10^18 * msg.value / price
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, arg1);
                                                        call walletAddress with:
                                                           value msg.value wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if sub_463626d6 < roundTokenCap:
                                                            else:
                                                                emit RoundEnded(sub_463626d6, roundTokenCap);
                                                else:
                                                    require (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 10^18 * msg.value / price
                                                    if (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap:
                                                        require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap == price
                                                        require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                                        require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                                        require -ext_call.return_data[0] + tokenSaleCap > 0
                                                        require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                                        sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                        require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                        require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                                        weiRaised = msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                                        require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                        tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                        require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                                        sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                                        require ext_code.size(tokenAddress)
                                                        call tokenAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0]
                                                            emit TokenPurchase(price, msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                                            call walletAddress with:
                                                               value msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                if (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= 0:
                                                                    if sub_463626d6 < roundTokenCap:
                                                                    else:
                                                                        emit RoundEnded(sub_463626d6, roundTokenCap);
                                                                else:
                                                                    call msg.sender with:
                                                                       value (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                                                         gas 2300 * is_zero(value) wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                                        if sub_463626d6 < roundTokenCap:
                                                                        else:
                                                                            emit RoundEnded(sub_463626d6, roundTokenCap);
                                                    else:
                                                        require 0 <= msg.value
                                                        require msg.value > 0
                                                        require -ext_call.return_data[0] + tokenSaleCap > 0
                                                        require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                                        sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                        require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                        require msg.value + weiRaised >= weiRaised
                                                        weiRaised += msg.value
                                                        require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                        tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                        require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                                        sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                                        require ext_code.size(tokenAddress)
                                                        call tokenAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0]
                                                            emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, arg1);
                                                            call walletAddress with:
                                                               value msg.value wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                if sub_463626d6 < roundTokenCap:
                                                                else:
                                                                    emit RoundEnded(sub_463626d6, roundTokenCap);
                    else:
                        require price
                        if not arg3:
                            require msg.value > 0
                            require 0 / price > 0
                            require (0 / price) + sub_463626d6 >= sub_463626d6
                            sub_463626d6 += 0 / price
                            require roundTokenCap >= (0 / price) + sub_463626d6
                            require msg.value + weiRaised >= weiRaised
                            weiRaised += msg.value
                            require (0 / price) + tokensSold >= tokensSold
                            tokensSold += 0 / price
                            require 0 / price <= sub_0d27577e
                            sub_0d27577e -= 0 / price
                            require ext_code.size(tokenAddress)
                            call tokenAddress.0x40c10f19 with:
                                 gas gas_remaining wei
                                args address(arg1), 0 / price
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, arg1);
                                call walletAddress with:
                                   value msg.value wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if sub_463626d6 < roundTokenCap:
                                    else:
                                        emit RoundEnded(sub_463626d6, roundTokenCap);
                        else:
                            require (0 / price) + sub_463626d6 >= sub_463626d6
                            if (0 / price) + sub_463626d6 <= roundTokenCap:
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0xfa2299ee with:
                                     gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require return_data.size >= 32
                                    require (0 / price) + ext_call.return_data[0] >= ext_call.return_data[0]
                                    if (0 / price) + ext_call.return_data[0] <= tokenSaleCap:
                                        require msg.value > 0
                                        require 0 / price > 0
                                        require (0 / price) + sub_463626d6 >= sub_463626d6
                                        sub_463626d6 += 0 / price
                                        require roundTokenCap >= (0 / price) + sub_463626d6
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require (0 / price) + tokensSold >= tokensSold
                                        tokensSold += 0 / price
                                        require 0 / price <= sub_0d27577e
                                        sub_0d27577e -= 0 / price
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args address(arg1), 0 / price
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require return_data.size >= 32
                                            require ext_call.return_data[0]
                                            emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, arg1);
                                            call walletAddress with:
                                               value msg.value wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                if sub_463626d6 < roundTokenCap:
                                                else:
                                                    emit RoundEnded(sub_463626d6, roundTokenCap);
                                    else:
                                        if (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                            require msg.value > 0
                                            require 0 / price > 0
                                            require (0 / price) + sub_463626d6 >= sub_463626d6
                                            sub_463626d6 += 0 / price
                                            require roundTokenCap >= (0 / price) + sub_463626d6
                                            require msg.value + weiRaised >= weiRaised
                                            weiRaised += msg.value
                                            require (0 / price) + tokensSold >= tokensSold
                                            tokensSold += 0 / price
                                            require 0 / price <= sub_0d27577e
                                            sub_0d27577e -= 0 / price
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args address(arg1), 0 / price
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                require return_data.size >= 32
                                                require ext_call.return_data[0]
                                                emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, arg1);
                                                call walletAddress with:
                                                   value msg.value wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    if sub_463626d6 < roundTokenCap:
                                                    else:
                                                        emit RoundEnded(sub_463626d6, roundTokenCap);
                                        else:
                                            require (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0 / price
                                            if (0 / price) + ext_call.return_data[0] - tokenSaleCap:
                                                require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (0 / price) + ext_call.return_data[0] - tokenSaleCap == price
                                                require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                                require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                                require -ext_call.return_data[0] + tokenSaleCap > 0
                                                require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                                sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                                weiRaised = msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                                require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                                sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit TokenPurchase(price, msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                                    call walletAddress with:
                                                       value msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        if (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= 0:
                                                            if sub_463626d6 < roundTokenCap:
                                                            else:
                                                                emit RoundEnded(sub_463626d6, roundTokenCap);
                                                        else:
                                                            call msg.sender with:
                                                               value (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                if sub_463626d6 < roundTokenCap:
                                                                else:
                                                                    emit RoundEnded(sub_463626d6, roundTokenCap);
                                            else:
                                                require 0 <= msg.value
                                                require msg.value > 0
                                                require -ext_call.return_data[0] + tokenSaleCap > 0
                                                require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                                sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                require msg.value + weiRaised >= weiRaised
                                                weiRaised += msg.value
                                                require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                                sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, arg1);
                                                    call walletAddress with:
                                                       value msg.value wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        if sub_463626d6 < roundTokenCap:
                                                        else:
                                                            emit RoundEnded(sub_463626d6, roundTokenCap);
                            else:
                                if (0 / price) + sub_463626d6 - roundTokenCap <= 0:
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0xfa2299ee with:
                                         gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require return_data.size >= 32
                                        require (0 / price) + ext_call.return_data[0] >= ext_call.return_data[0]
                                        if (0 / price) + ext_call.return_data[0] <= tokenSaleCap:
                                            require msg.value > 0
                                            require 0 / price > 0
                                            require (0 / price) + sub_463626d6 >= sub_463626d6
                                            sub_463626d6 += 0 / price
                                            require roundTokenCap >= (0 / price) + sub_463626d6
                                            require msg.value + weiRaised >= weiRaised
                                            weiRaised += msg.value
                                            require (0 / price) + tokensSold >= tokensSold
                                            tokensSold += 0 / price
                                            require 0 / price <= sub_0d27577e
                                            sub_0d27577e -= 0 / price
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args address(arg1), 0 / price
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                require return_data.size >= 32
                                                require ext_call.return_data[0]
                                                emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, arg1);
                                                call walletAddress with:
                                                   value msg.value wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    if sub_463626d6 < roundTokenCap:
                                                    else:
                                                        emit RoundEnded(sub_463626d6, roundTokenCap);
                                        else:
                                            if (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                                require msg.value > 0
                                                require 0 / price > 0
                                                require (0 / price) + sub_463626d6 >= sub_463626d6
                                                sub_463626d6 += 0 / price
                                                require roundTokenCap >= (0 / price) + sub_463626d6
                                                require msg.value + weiRaised >= weiRaised
                                                weiRaised += msg.value
                                                require (0 / price) + tokensSold >= tokensSold
                                                tokensSold += 0 / price
                                                require 0 / price <= sub_0d27577e
                                                sub_0d27577e -= 0 / price
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), 0 / price
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, arg1);
                                                    call walletAddress with:
                                                       value msg.value wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        if sub_463626d6 < roundTokenCap:
                                                        else:
                                                            emit RoundEnded(sub_463626d6, roundTokenCap);
                                            else:
                                                require (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0 / price
                                                if (0 / price) + ext_call.return_data[0] - tokenSaleCap:
                                                    require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (0 / price) + ext_call.return_data[0] - tokenSaleCap == price
                                                    require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                                    require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                                    require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                                    sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                    require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                    require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                                    weiRaised = msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                                    sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit TokenPurchase(price, msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                                        call walletAddress with:
                                                           value msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= 0:
                                                                if sub_463626d6 < roundTokenCap:
                                                                else:
                                                                    emit RoundEnded(sub_463626d6, roundTokenCap);
                                                            else:
                                                                call msg.sender with:
                                                                   value (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    if sub_463626d6 < roundTokenCap:
                                                                    else:
                                                                        emit RoundEnded(sub_463626d6, roundTokenCap);
                                                else:
                                                    require 0 <= msg.value
                                                    require msg.value > 0
                                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                                    require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                                    sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                    require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                    require msg.value + weiRaised >= weiRaised
                                                    weiRaised += msg.value
                                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                                    sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, arg1);
                                                        call walletAddress with:
                                                           value msg.value wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if sub_463626d6 < roundTokenCap:
                                                            else:
                                                                emit RoundEnded(sub_463626d6, roundTokenCap);
                                else:
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0xfa2299ee with:
                                         gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require return_data.size >= 32
                                        require (0 / price) + ext_call.return_data[0] >= ext_call.return_data[0]
                                        if (0 / price) + ext_call.return_data[0] <= tokenSaleCap:
                                            if (0 / price) + sub_463626d6 - roundTokenCap <= 0:
                                                require msg.value > 0
                                                require 0 / price > 0
                                                require (0 / price) + sub_463626d6 >= sub_463626d6
                                                sub_463626d6 += 0 / price
                                                require roundTokenCap >= (0 / price) + sub_463626d6
                                                require msg.value + weiRaised >= weiRaised
                                                weiRaised += msg.value
                                                require (0 / price) + tokensSold >= tokensSold
                                                tokensSold += 0 / price
                                                require 0 / price <= sub_0d27577e
                                                sub_0d27577e -= 0 / price
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), 0 / price
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, arg1);
                                                    call walletAddress with:
                                                       value msg.value wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        if sub_463626d6 < roundTokenCap:
                                                        else:
                                                            emit RoundEnded(sub_463626d6, roundTokenCap);
                                            else:
                                                require (0 / price) + sub_463626d6 - roundTokenCap <= 0 / price
                                                if (0 / price) + sub_463626d6 - roundTokenCap:
                                                    require (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / (0 / price) + sub_463626d6 - roundTokenCap == price
                                                    require (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= msg.value
                                                    require msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) > 0
                                                    require -sub_463626d6 + roundTokenCap > 0
                                                    require roundTokenCap >= sub_463626d6
                                                    sub_463626d6 = roundTokenCap
                                                    require roundTokenCap >= roundTokenCap
                                                    require msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised >= weiRaised
                                                    weiRaised = msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised
                                                    require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                                    tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                                    require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                                    sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), -sub_463626d6 + roundTokenCap
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit TokenPurchase(price, msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18), -sub_463626d6 + roundTokenCap, (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                                        call walletAddress with:
                                                           value msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= 0:
                                                                if sub_463626d6 < roundTokenCap:
                                                                else:
                                                                    emit RoundEnded(sub_463626d6, roundTokenCap);
                                                            else:
                                                                call msg.sender with:
                                                                   value (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    if sub_463626d6 < roundTokenCap:
                                                                    else:
                                                                        emit RoundEnded(sub_463626d6, roundTokenCap);
                                                else:
                                                    require 0 <= msg.value
                                                    require msg.value > 0
                                                    require -sub_463626d6 + roundTokenCap > 0
                                                    require roundTokenCap >= sub_463626d6
                                                    sub_463626d6 = roundTokenCap
                                                    require roundTokenCap >= roundTokenCap
                                                    require msg.value + weiRaised >= weiRaised
                                                    weiRaised += msg.value
                                                    require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                                    tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                                    require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                                    sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), -sub_463626d6 + roundTokenCap
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit TokenPurchase(price, msg.value, -sub_463626d6 + roundTokenCap, 0, ethUsdRate, msg.sender, arg1);
                                                        call walletAddress with:
                                                           value msg.value wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if sub_463626d6 < roundTokenCap:
                                                            else:
                                                                emit RoundEnded(sub_463626d6, roundTokenCap);
                                        else:
                                            if ext_call.return_data[0] - tokenSaleCap <= sub_463626d6 - roundTokenCap:
                                                if (0 / price) + sub_463626d6 - roundTokenCap <= 0:
                                                    require msg.value > 0
                                                    require 0 / price > 0
                                                    require (0 / price) + sub_463626d6 >= sub_463626d6
                                                    sub_463626d6 += 0 / price
                                                    require roundTokenCap >= (0 / price) + sub_463626d6
                                                    require msg.value + weiRaised >= weiRaised
                                                    weiRaised += msg.value
                                                    require (0 / price) + tokensSold >= tokensSold
                                                    tokensSold += 0 / price
                                                    require 0 / price <= sub_0d27577e
                                                    sub_0d27577e -= 0 / price
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), 0 / price
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, arg1);
                                                        call walletAddress with:
                                                           value msg.value wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if sub_463626d6 < roundTokenCap:
                                                            else:
                                                                emit RoundEnded(sub_463626d6, roundTokenCap);
                                                else:
                                                    require (0 / price) + sub_463626d6 - roundTokenCap <= 0 / price
                                                    if (0 / price) + sub_463626d6 - roundTokenCap:
                                                        require (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / (0 / price) + sub_463626d6 - roundTokenCap == price
                                                        require (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= msg.value
                                                        require msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) > 0
                                                        require -sub_463626d6 + roundTokenCap > 0
                                                        require roundTokenCap >= sub_463626d6
                                                        sub_463626d6 = roundTokenCap
                                                        require roundTokenCap >= roundTokenCap
                                                        require msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised >= weiRaised
                                                        weiRaised = msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised
                                                        require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                                        tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                                        require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                                        sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                                        require ext_code.size(tokenAddress)
                                                        call tokenAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args address(arg1), -sub_463626d6 + roundTokenCap
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0]
                                                            emit TokenPurchase(price, msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18), -sub_463626d6 + roundTokenCap, (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                                            call walletAddress with:
                                                               value msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                if (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= 0:
                                                                    if sub_463626d6 < roundTokenCap:
                                                                    else:
                                                                        emit RoundEnded(sub_463626d6, roundTokenCap);
                                                                else:
                                                                    call msg.sender with:
                                                                       value (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 wei
                                                                         gas 2300 * is_zero(value) wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                                        if sub_463626d6 < roundTokenCap:
                                                                        else:
                                                                            emit RoundEnded(sub_463626d6, roundTokenCap);
                                                    else:
                                                        require 0 <= msg.value
                                                        require msg.value > 0
                                                        require -sub_463626d6 + roundTokenCap > 0
                                                        require roundTokenCap >= sub_463626d6
                                                        sub_463626d6 = roundTokenCap
                                                        require roundTokenCap >= roundTokenCap
                                                        require msg.value + weiRaised >= weiRaised
                                                        weiRaised += msg.value
                                                        require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                                        tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                                        require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                                        sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                                        require ext_code.size(tokenAddress)
                                                        call tokenAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args address(arg1), -sub_463626d6 + roundTokenCap
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0]
                                                            emit TokenPurchase(price, msg.value, -sub_463626d6 + roundTokenCap, 0, ethUsdRate, msg.sender, arg1);
                                                            call walletAddress with:
                                                               value msg.value wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                if sub_463626d6 < roundTokenCap:
                                                                else:
                                                                    emit RoundEnded(sub_463626d6, roundTokenCap);
                                            else:
                                                if (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                                    require msg.value > 0
                                                    require 0 / price > 0
                                                    require (0 / price) + sub_463626d6 >= sub_463626d6
                                                    sub_463626d6 += 0 / price
                                                    require roundTokenCap >= (0 / price) + sub_463626d6
                                                    require msg.value + weiRaised >= weiRaised
                                                    weiRaised += msg.value
                                                    require (0 / price) + tokensSold >= tokensSold
                                                    tokensSold += 0 / price
                                                    require 0 / price <= sub_0d27577e
                                                    sub_0d27577e -= 0 / price
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), 0 / price
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, arg1);
                                                        call walletAddress with:
                                                           value msg.value wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if sub_463626d6 < roundTokenCap:
                                                            else:
                                                                emit RoundEnded(sub_463626d6, roundTokenCap);
                                                else:
                                                    require (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0 / price
                                                    if (0 / price) + ext_call.return_data[0] - tokenSaleCap:
                                                        require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (0 / price) + ext_call.return_data[0] - tokenSaleCap == price
                                                        require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                                        require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                                        require -ext_call.return_data[0] + tokenSaleCap > 0
                                                        require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                                        sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                        require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                        require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                                        weiRaised = msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                                        require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                        tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                        require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                                        sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                                        require ext_code.size(tokenAddress)
                                                        call tokenAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0]
                                                            emit TokenPurchase(price, msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                                            call walletAddress with:
                                                               value msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                if (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= 0:
                                                                    if sub_463626d6 < roundTokenCap:
                                                                    else:
                                                                        emit RoundEnded(sub_463626d6, roundTokenCap);
                                                                else:
                                                                    call msg.sender with:
                                                                       value (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                                                         gas 2300 * is_zero(value) wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                                        if sub_463626d6 < roundTokenCap:
                                                                        else:
                                                                            emit RoundEnded(sub_463626d6, roundTokenCap);
                                                    else:
                                                        require 0 <= msg.value
                                                        require msg.value > 0
                                                        require -ext_call.return_data[0] + tokenSaleCap > 0
                                                        require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                                        sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                        require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                        require msg.value + weiRaised >= weiRaised
                                                        weiRaised += msg.value
                                                        require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                        tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                        require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                                        sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                                        require ext_code.size(tokenAddress)
                                                        call tokenAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0]
                                                            emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, arg1);
                                                            call walletAddress with:
                                                               value msg.value wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                if sub_463626d6 < roundTokenCap:
                                                                else:
                                                                    emit RoundEnded(sub_463626d6, roundTokenCap);
            else:
                require arg2 == price
                require msg.value >= minimumPurchase
                require ext_code.size(tokenAddress)
                call tokenAddress.0xfa2299ee with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                else:
                    require return_data.size >= 32
                    require tokenSaleCap > ext_call.return_data[0]
                    require roundTokenCap > sub_463626d6
                    require 0 < price
                    if msg.value:
                        require 10^18 * msg.value / msg.value == 10^18
                        require price
                        if not arg3:
                            require msg.value > 0
                            require 10^18 * msg.value / price > 0
                            require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                            sub_463626d6 += 10^18 * msg.value / price
                            require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                            require msg.value + weiRaised >= weiRaised
                            weiRaised += msg.value
                            require (10^18 * msg.value / price) + tokensSold >= tokensSold
                            tokensSold += 10^18 * msg.value / price
                            require 10^18 * msg.value / price <= sub_0d27577e
                            sub_0d27577e -= 10^18 * msg.value / price
                            require ext_code.size(tokenAddress)
                            call tokenAddress.0x40c10f19 with:
                                 gas gas_remaining wei
                                args address(arg1), 10^18 * msg.value / price
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, arg1);
                                call walletAddress with:
                                   value msg.value wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if sub_463626d6 < roundTokenCap:
                                    else:
                                        emit RoundEnded(sub_463626d6, roundTokenCap);
                        else:
                            require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                            if (10^18 * msg.value / price) + sub_463626d6 <= roundTokenCap:
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0xfa2299ee with:
                                     gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require return_data.size >= 32
                                    require (10^18 * msg.value / price) + ext_call.return_data[0] >= ext_call.return_data[0]
                                    if (10^18 * msg.value / price) + ext_call.return_data[0] <= tokenSaleCap:
                                        require msg.value > 0
                                        require 10^18 * msg.value / price > 0
                                        require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                        sub_463626d6 += 10^18 * msg.value / price
                                        require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                        tokensSold += 10^18 * msg.value / price
                                        require 10^18 * msg.value / price <= sub_0d27577e
                                        sub_0d27577e -= 10^18 * msg.value / price
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args address(arg1), 10^18 * msg.value / price
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require return_data.size >= 32
                                            require ext_call.return_data[0]
                                            emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, arg1);
                                            call walletAddress with:
                                               value msg.value wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                if sub_463626d6 < roundTokenCap:
                                                else:
                                                    emit RoundEnded(sub_463626d6, roundTokenCap);
                                    else:
                                        if (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                            require msg.value > 0
                                            require 10^18 * msg.value / price > 0
                                            require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                            sub_463626d6 += 10^18 * msg.value / price
                                            require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                            require msg.value + weiRaised >= weiRaised
                                            weiRaised += msg.value
                                            require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                            tokensSold += 10^18 * msg.value / price
                                            require 10^18 * msg.value / price <= sub_0d27577e
                                            sub_0d27577e -= 10^18 * msg.value / price
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args address(arg1), 10^18 * msg.value / price
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                require return_data.size >= 32
                                                require ext_call.return_data[0]
                                                emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, arg1);
                                                call walletAddress with:
                                                   value msg.value wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    if sub_463626d6 < roundTokenCap:
                                                    else:
                                                        emit RoundEnded(sub_463626d6, roundTokenCap);
                                        else:
                                            require (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 10^18 * msg.value / price
                                            if (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap:
                                                require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap == price
                                                require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                                require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                                require -ext_call.return_data[0] + tokenSaleCap > 0
                                                require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                                sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                                weiRaised = msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                                require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                                sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit TokenPurchase(price, msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                                    call walletAddress with:
                                                       value msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        if (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= 0:
                                                            if sub_463626d6 < roundTokenCap:
                                                            else:
                                                                emit RoundEnded(sub_463626d6, roundTokenCap);
                                                        else:
                                                            call msg.sender with:
                                                               value (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                if sub_463626d6 < roundTokenCap:
                                                                else:
                                                                    emit RoundEnded(sub_463626d6, roundTokenCap);
                                            else:
                                                require 0 <= msg.value
                                                require msg.value > 0
                                                require -ext_call.return_data[0] + tokenSaleCap > 0
                                                require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                                sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                require msg.value + weiRaised >= weiRaised
                                                weiRaised += msg.value
                                                require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                                sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, arg1);
                                                    call walletAddress with:
                                                       value msg.value wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        if sub_463626d6 < roundTokenCap:
                                                        else:
                                                            emit RoundEnded(sub_463626d6, roundTokenCap);
                            else:
                                if (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap <= 0:
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0xfa2299ee with:
                                         gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require return_data.size >= 32
                                        require (10^18 * msg.value / price) + ext_call.return_data[0] >= ext_call.return_data[0]
                                        if (10^18 * msg.value / price) + ext_call.return_data[0] <= tokenSaleCap:
                                            require msg.value > 0
                                            require 10^18 * msg.value / price > 0
                                            require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                            sub_463626d6 += 10^18 * msg.value / price
                                            require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                            require msg.value + weiRaised >= weiRaised
                                            weiRaised += msg.value
                                            require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                            tokensSold += 10^18 * msg.value / price
                                            require 10^18 * msg.value / price <= sub_0d27577e
                                            sub_0d27577e -= 10^18 * msg.value / price
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args address(arg1), 10^18 * msg.value / price
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                require return_data.size >= 32
                                                require ext_call.return_data[0]
                                                emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, arg1);
                                                call walletAddress with:
                                                   value msg.value wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    if sub_463626d6 < roundTokenCap:
                                                    else:
                                                        emit RoundEnded(sub_463626d6, roundTokenCap);
                                        else:
                                            if (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                                require msg.value > 0
                                                require 10^18 * msg.value / price > 0
                                                require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                                sub_463626d6 += 10^18 * msg.value / price
                                                require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                                require msg.value + weiRaised >= weiRaised
                                                weiRaised += msg.value
                                                require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                                tokensSold += 10^18 * msg.value / price
                                                require 10^18 * msg.value / price <= sub_0d27577e
                                                sub_0d27577e -= 10^18 * msg.value / price
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), 10^18 * msg.value / price
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, arg1);
                                                    call walletAddress with:
                                                       value msg.value wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        if sub_463626d6 < roundTokenCap:
                                                        else:
                                                            emit RoundEnded(sub_463626d6, roundTokenCap);
                                            else:
                                                require (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 10^18 * msg.value / price
                                                if (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap:
                                                    require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap == price
                                                    require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                                    require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                                    require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                                    sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                    require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                    require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                                    weiRaised = msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                                    sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit TokenPurchase(price, msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                                        call walletAddress with:
                                                           value msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= 0:
                                                                if sub_463626d6 < roundTokenCap:
                                                                else:
                                                                    emit RoundEnded(sub_463626d6, roundTokenCap);
                                                            else:
                                                                call msg.sender with:
                                                                   value (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    if sub_463626d6 < roundTokenCap:
                                                                    else:
                                                                        emit RoundEnded(sub_463626d6, roundTokenCap);
                                                else:
                                                    require 0 <= msg.value
                                                    require msg.value > 0
                                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                                    require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                                    sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                    require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                    require msg.value + weiRaised >= weiRaised
                                                    weiRaised += msg.value
                                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                                    sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, arg1);
                                                        call walletAddress with:
                                                           value msg.value wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if sub_463626d6 < roundTokenCap:
                                                            else:
                                                                emit RoundEnded(sub_463626d6, roundTokenCap);
                                else:
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0xfa2299ee with:
                                         gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require return_data.size >= 32
                                        require (10^18 * msg.value / price) + ext_call.return_data[0] >= ext_call.return_data[0]
                                        if (10^18 * msg.value / price) + ext_call.return_data[0] <= tokenSaleCap:
                                            if (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap <= 0:
                                                require msg.value > 0
                                                require 10^18 * msg.value / price > 0
                                                require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                                sub_463626d6 += 10^18 * msg.value / price
                                                require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                                require msg.value + weiRaised >= weiRaised
                                                weiRaised += msg.value
                                                require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                                tokensSold += 10^18 * msg.value / price
                                                require 10^18 * msg.value / price <= sub_0d27577e
                                                sub_0d27577e -= 10^18 * msg.value / price
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), 10^18 * msg.value / price
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, arg1);
                                                    call walletAddress with:
                                                       value msg.value wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        if sub_463626d6 < roundTokenCap:
                                                        else:
                                                            emit RoundEnded(sub_463626d6, roundTokenCap);
                                            else:
                                                require (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap <= 10^18 * msg.value / price
                                                if (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap:
                                                    require (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap == price
                                                    require (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= msg.value
                                                    require msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) > 0
                                                    require -sub_463626d6 + roundTokenCap > 0
                                                    require roundTokenCap >= sub_463626d6
                                                    sub_463626d6 = roundTokenCap
                                                    require roundTokenCap >= roundTokenCap
                                                    require msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised >= weiRaised
                                                    weiRaised = msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised
                                                    require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                                    tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                                    require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                                    sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), -sub_463626d6 + roundTokenCap
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit TokenPurchase(price, msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18), -sub_463626d6 + roundTokenCap, (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                                        call walletAddress with:
                                                           value msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= 0:
                                                                if sub_463626d6 < roundTokenCap:
                                                                else:
                                                                    emit RoundEnded(sub_463626d6, roundTokenCap);
                                                            else:
                                                                call msg.sender with:
                                                                   value (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    if sub_463626d6 < roundTokenCap:
                                                                    else:
                                                                        emit RoundEnded(sub_463626d6, roundTokenCap);
                                                else:
                                                    require 0 <= msg.value
                                                    require msg.value > 0
                                                    require -sub_463626d6 + roundTokenCap > 0
                                                    require roundTokenCap >= sub_463626d6
                                                    sub_463626d6 = roundTokenCap
                                                    require roundTokenCap >= roundTokenCap
                                                    require msg.value + weiRaised >= weiRaised
                                                    weiRaised += msg.value
                                                    require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                                    tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                                    require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                                    sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), -sub_463626d6 + roundTokenCap
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit TokenPurchase(price, msg.value, -sub_463626d6 + roundTokenCap, 0, ethUsdRate, msg.sender, arg1);
                                                        call walletAddress with:
                                                           value msg.value wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if sub_463626d6 < roundTokenCap:
                                                            else:
                                                                emit RoundEnded(sub_463626d6, roundTokenCap);
                                        else:
                                            if ext_call.return_data[0] - tokenSaleCap <= sub_463626d6 - roundTokenCap:
                                                if (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap <= 0:
                                                    require msg.value > 0
                                                    require 10^18 * msg.value / price > 0
                                                    require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                                    sub_463626d6 += 10^18 * msg.value / price
                                                    require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                                    require msg.value + weiRaised >= weiRaised
                                                    weiRaised += msg.value
                                                    require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                                    tokensSold += 10^18 * msg.value / price
                                                    require 10^18 * msg.value / price <= sub_0d27577e
                                                    sub_0d27577e -= 10^18 * msg.value / price
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), 10^18 * msg.value / price
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, arg1);
                                                        call walletAddress with:
                                                           value msg.value wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if sub_463626d6 < roundTokenCap:
                                                            else:
                                                                emit RoundEnded(sub_463626d6, roundTokenCap);
                                                else:
                                                    require (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap <= 10^18 * msg.value / price
                                                    if (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap:
                                                        require (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / (10^18 * msg.value / price) + sub_463626d6 - roundTokenCap == price
                                                        require (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= msg.value
                                                        require msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) > 0
                                                        require -sub_463626d6 + roundTokenCap > 0
                                                        require roundTokenCap >= sub_463626d6
                                                        sub_463626d6 = roundTokenCap
                                                        require roundTokenCap >= roundTokenCap
                                                        require msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised >= weiRaised
                                                        weiRaised = msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised
                                                        require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                                        tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                                        require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                                        sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                                        require ext_code.size(tokenAddress)
                                                        call tokenAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args address(arg1), -sub_463626d6 + roundTokenCap
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0]
                                                            emit TokenPurchase(price, msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18), -sub_463626d6 + roundTokenCap, (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                                            call walletAddress with:
                                                               value msg.value - ((10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                if (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= 0:
                                                                    if sub_463626d6 < roundTokenCap:
                                                                    else:
                                                                        emit RoundEnded(sub_463626d6, roundTokenCap);
                                                                else:
                                                                    call msg.sender with:
                                                                       value (10^18 * msg.value / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 wei
                                                                         gas 2300 * is_zero(value) wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                                        if sub_463626d6 < roundTokenCap:
                                                                        else:
                                                                            emit RoundEnded(sub_463626d6, roundTokenCap);
                                                    else:
                                                        require 0 <= msg.value
                                                        require msg.value > 0
                                                        require -sub_463626d6 + roundTokenCap > 0
                                                        require roundTokenCap >= sub_463626d6
                                                        sub_463626d6 = roundTokenCap
                                                        require roundTokenCap >= roundTokenCap
                                                        require msg.value + weiRaised >= weiRaised
                                                        weiRaised += msg.value
                                                        require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                                        tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                                        require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                                        sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                                        require ext_code.size(tokenAddress)
                                                        call tokenAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args address(arg1), -sub_463626d6 + roundTokenCap
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0]
                                                            emit TokenPurchase(price, msg.value, -sub_463626d6 + roundTokenCap, 0, ethUsdRate, msg.sender, arg1);
                                                            call walletAddress with:
                                                               value msg.value wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                if sub_463626d6 < roundTokenCap:
                                                                else:
                                                                    emit RoundEnded(sub_463626d6, roundTokenCap);
                                            else:
                                                if (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                                    require msg.value > 0
                                                    require 10^18 * msg.value / price > 0
                                                    require (10^18 * msg.value / price) + sub_463626d6 >= sub_463626d6
                                                    sub_463626d6 += 10^18 * msg.value / price
                                                    require roundTokenCap >= (10^18 * msg.value / price) + sub_463626d6
                                                    require msg.value + weiRaised >= weiRaised
                                                    weiRaised += msg.value
                                                    require (10^18 * msg.value / price) + tokensSold >= tokensSold
                                                    tokensSold += 10^18 * msg.value / price
                                                    require 10^18 * msg.value / price <= sub_0d27577e
                                                    sub_0d27577e -= 10^18 * msg.value / price
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), 10^18 * msg.value / price
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit TokenPurchase(price, msg.value, 10^18 * msg.value / price, 0, ethUsdRate, msg.sender, arg1);
                                                        call walletAddress with:
                                                           value msg.value wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if sub_463626d6 < roundTokenCap:
                                                            else:
                                                                emit RoundEnded(sub_463626d6, roundTokenCap);
                                                else:
                                                    require (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap <= 10^18 * msg.value / price
                                                    if (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap:
                                                        require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (10^18 * msg.value / price) + ext_call.return_data[0] - tokenSaleCap == price
                                                        require (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                                        require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                                        require -ext_call.return_data[0] + tokenSaleCap > 0
                                                        require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                                        sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                        require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                        require msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                                        weiRaised = msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                                        require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                        tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                        require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                                        sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                                        require ext_code.size(tokenAddress)
                                                        call tokenAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0]
                                                            emit TokenPurchase(price, msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                                            call walletAddress with:
                                                               value msg.value - ((10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                if (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= 0:
                                                                    if sub_463626d6 < roundTokenCap:
                                                                    else:
                                                                        emit RoundEnded(sub_463626d6, roundTokenCap);
                                                                else:
                                                                    call msg.sender with:
                                                                       value (10^18 * msg.value / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                                                         gas 2300 * is_zero(value) wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                                        if sub_463626d6 < roundTokenCap:
                                                                        else:
                                                                            emit RoundEnded(sub_463626d6, roundTokenCap);
                                                    else:
                                                        require 0 <= msg.value
                                                        require msg.value > 0
                                                        require -ext_call.return_data[0] + tokenSaleCap > 0
                                                        require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                                        sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                        require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                        require msg.value + weiRaised >= weiRaised
                                                        weiRaised += msg.value
                                                        require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                        tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                        require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                                        sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                                        require ext_code.size(tokenAddress)
                                                        call tokenAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0]
                                                            emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, arg1);
                                                            call walletAddress with:
                                                               value msg.value wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                if sub_463626d6 < roundTokenCap:
                                                                else:
                                                                    emit RoundEnded(sub_463626d6, roundTokenCap);
                    else:
                        require price
                        if not arg3:
                            require msg.value > 0
                            require 0 / price > 0
                            require (0 / price) + sub_463626d6 >= sub_463626d6
                            sub_463626d6 += 0 / price
                            require roundTokenCap >= (0 / price) + sub_463626d6
                            require msg.value + weiRaised >= weiRaised
                            weiRaised += msg.value
                            require (0 / price) + tokensSold >= tokensSold
                            tokensSold += 0 / price
                            require 0 / price <= sub_0d27577e
                            sub_0d27577e -= 0 / price
                            require ext_code.size(tokenAddress)
                            call tokenAddress.0x40c10f19 with:
                                 gas gas_remaining wei
                                args address(arg1), 0 / price
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, arg1);
                                call walletAddress with:
                                   value msg.value wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if sub_463626d6 < roundTokenCap:
                                    else:
                                        emit RoundEnded(sub_463626d6, roundTokenCap);
                        else:
                            require (0 / price) + sub_463626d6 >= sub_463626d6
                            if (0 / price) + sub_463626d6 <= roundTokenCap:
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0xfa2299ee with:
                                     gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require return_data.size >= 32
                                    require (0 / price) + ext_call.return_data[0] >= ext_call.return_data[0]
                                    if (0 / price) + ext_call.return_data[0] <= tokenSaleCap:
                                        require msg.value > 0
                                        require 0 / price > 0
                                        require (0 / price) + sub_463626d6 >= sub_463626d6
                                        sub_463626d6 += 0 / price
                                        require roundTokenCap >= (0 / price) + sub_463626d6
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require (0 / price) + tokensSold >= tokensSold
                                        tokensSold += 0 / price
                                        require 0 / price <= sub_0d27577e
                                        sub_0d27577e -= 0 / price
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args address(arg1), 0 / price
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require return_data.size >= 32
                                            require ext_call.return_data[0]
                                            emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, arg1);
                                            call walletAddress with:
                                               value msg.value wei
                                                 gas 2300 * is_zero(value) wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                if sub_463626d6 < roundTokenCap:
                                                else:
                                                    emit RoundEnded(sub_463626d6, roundTokenCap);
                                    else:
                                        if (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                            require msg.value > 0
                                            require 0 / price > 0
                                            require (0 / price) + sub_463626d6 >= sub_463626d6
                                            sub_463626d6 += 0 / price
                                            require roundTokenCap >= (0 / price) + sub_463626d6
                                            require msg.value + weiRaised >= weiRaised
                                            weiRaised += msg.value
                                            require (0 / price) + tokensSold >= tokensSold
                                            tokensSold += 0 / price
                                            require 0 / price <= sub_0d27577e
                                            sub_0d27577e -= 0 / price
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args address(arg1), 0 / price
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                require return_data.size >= 32
                                                require ext_call.return_data[0]
                                                emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, arg1);
                                                call walletAddress with:
                                                   value msg.value wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    if sub_463626d6 < roundTokenCap:
                                                    else:
                                                        emit RoundEnded(sub_463626d6, roundTokenCap);
                                        else:
                                            require (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0 / price
                                            if (0 / price) + ext_call.return_data[0] - tokenSaleCap:
                                                require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (0 / price) + ext_call.return_data[0] - tokenSaleCap == price
                                                require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                                require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                                require -ext_call.return_data[0] + tokenSaleCap > 0
                                                require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                                sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                                weiRaised = msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                                require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                                sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit TokenPurchase(price, msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                                    call walletAddress with:
                                                       value msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        if (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= 0:
                                                            if sub_463626d6 < roundTokenCap:
                                                            else:
                                                                emit RoundEnded(sub_463626d6, roundTokenCap);
                                                        else:
                                                            call msg.sender with:
                                                               value (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                if sub_463626d6 < roundTokenCap:
                                                                else:
                                                                    emit RoundEnded(sub_463626d6, roundTokenCap);
                                            else:
                                                require 0 <= msg.value
                                                require msg.value > 0
                                                require -ext_call.return_data[0] + tokenSaleCap > 0
                                                require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                                sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                require msg.value + weiRaised >= weiRaised
                                                weiRaised += msg.value
                                                require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                                sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, arg1);
                                                    call walletAddress with:
                                                       value msg.value wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        if sub_463626d6 < roundTokenCap:
                                                        else:
                                                            emit RoundEnded(sub_463626d6, roundTokenCap);
                            else:
                                if (0 / price) + sub_463626d6 - roundTokenCap <= 0:
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0xfa2299ee with:
                                         gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require return_data.size >= 32
                                        require (0 / price) + ext_call.return_data[0] >= ext_call.return_data[0]
                                        if (0 / price) + ext_call.return_data[0] <= tokenSaleCap:
                                            require msg.value > 0
                                            require 0 / price > 0
                                            require (0 / price) + sub_463626d6 >= sub_463626d6
                                            sub_463626d6 += 0 / price
                                            require roundTokenCap >= (0 / price) + sub_463626d6
                                            require msg.value + weiRaised >= weiRaised
                                            weiRaised += msg.value
                                            require (0 / price) + tokensSold >= tokensSold
                                            tokensSold += 0 / price
                                            require 0 / price <= sub_0d27577e
                                            sub_0d27577e -= 0 / price
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args address(arg1), 0 / price
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                require return_data.size >= 32
                                                require ext_call.return_data[0]
                                                emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, arg1);
                                                call walletAddress with:
                                                   value msg.value wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    if sub_463626d6 < roundTokenCap:
                                                    else:
                                                        emit RoundEnded(sub_463626d6, roundTokenCap);
                                        else:
                                            if (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                                require msg.value > 0
                                                require 0 / price > 0
                                                require (0 / price) + sub_463626d6 >= sub_463626d6
                                                sub_463626d6 += 0 / price
                                                require roundTokenCap >= (0 / price) + sub_463626d6
                                                require msg.value + weiRaised >= weiRaised
                                                weiRaised += msg.value
                                                require (0 / price) + tokensSold >= tokensSold
                                                tokensSold += 0 / price
                                                require 0 / price <= sub_0d27577e
                                                sub_0d27577e -= 0 / price
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), 0 / price
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, arg1);
                                                    call walletAddress with:
                                                       value msg.value wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        if sub_463626d6 < roundTokenCap:
                                                        else:
                                                            emit RoundEnded(sub_463626d6, roundTokenCap);
                                            else:
                                                require (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0 / price
                                                if (0 / price) + ext_call.return_data[0] - tokenSaleCap:
                                                    require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (0 / price) + ext_call.return_data[0] - tokenSaleCap == price
                                                    require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                                    require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                                    require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                                    sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                    require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                    require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                                    weiRaised = msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                                    sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit TokenPurchase(price, msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                                        call walletAddress with:
                                                           value msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= 0:
                                                                if sub_463626d6 < roundTokenCap:
                                                                else:
                                                                    emit RoundEnded(sub_463626d6, roundTokenCap);
                                                            else:
                                                                call msg.sender with:
                                                                   value (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    if sub_463626d6 < roundTokenCap:
                                                                    else:
                                                                        emit RoundEnded(sub_463626d6, roundTokenCap);
                                                else:
                                                    require 0 <= msg.value
                                                    require msg.value > 0
                                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                                    require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                                    sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                    require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                    require msg.value + weiRaised >= weiRaised
                                                    weiRaised += msg.value
                                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                                    sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, arg1);
                                                        call walletAddress with:
                                                           value msg.value wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if sub_463626d6 < roundTokenCap:
                                                            else:
                                                                emit RoundEnded(sub_463626d6, roundTokenCap);
                                else:
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0xfa2299ee with:
                                         gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require return_data.size >= 32
                                        require (0 / price) + ext_call.return_data[0] >= ext_call.return_data[0]
                                        if (0 / price) + ext_call.return_data[0] <= tokenSaleCap:
                                            if (0 / price) + sub_463626d6 - roundTokenCap <= 0:
                                                require msg.value > 0
                                                require 0 / price > 0
                                                require (0 / price) + sub_463626d6 >= sub_463626d6
                                                sub_463626d6 += 0 / price
                                                require roundTokenCap >= (0 / price) + sub_463626d6
                                                require msg.value + weiRaised >= weiRaised
                                                weiRaised += msg.value
                                                require (0 / price) + tokensSold >= tokensSold
                                                tokensSold += 0 / price
                                                require 0 / price <= sub_0d27577e
                                                sub_0d27577e -= 0 / price
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), 0 / price
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, arg1);
                                                    call walletAddress with:
                                                       value msg.value wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        if sub_463626d6 < roundTokenCap:
                                                        else:
                                                            emit RoundEnded(sub_463626d6, roundTokenCap);
                                            else:
                                                require (0 / price) + sub_463626d6 - roundTokenCap <= 0 / price
                                                if (0 / price) + sub_463626d6 - roundTokenCap:
                                                    require (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / (0 / price) + sub_463626d6 - roundTokenCap == price
                                                    require (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= msg.value
                                                    require msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) > 0
                                                    require -sub_463626d6 + roundTokenCap > 0
                                                    require roundTokenCap >= sub_463626d6
                                                    sub_463626d6 = roundTokenCap
                                                    require roundTokenCap >= roundTokenCap
                                                    require msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised >= weiRaised
                                                    weiRaised = msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised
                                                    require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                                    tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                                    require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                                    sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), -sub_463626d6 + roundTokenCap
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit TokenPurchase(price, msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18), -sub_463626d6 + roundTokenCap, (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                                        call walletAddress with:
                                                           value msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= 0:
                                                                if sub_463626d6 < roundTokenCap:
                                                                else:
                                                                    emit RoundEnded(sub_463626d6, roundTokenCap);
                                                            else:
                                                                call msg.sender with:
                                                                   value (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    if sub_463626d6 < roundTokenCap:
                                                                    else:
                                                                        emit RoundEnded(sub_463626d6, roundTokenCap);
                                                else:
                                                    require 0 <= msg.value
                                                    require msg.value > 0
                                                    require -sub_463626d6 + roundTokenCap > 0
                                                    require roundTokenCap >= sub_463626d6
                                                    sub_463626d6 = roundTokenCap
                                                    require roundTokenCap >= roundTokenCap
                                                    require msg.value + weiRaised >= weiRaised
                                                    weiRaised += msg.value
                                                    require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                                    tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                                    require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                                    sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), -sub_463626d6 + roundTokenCap
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit TokenPurchase(price, msg.value, -sub_463626d6 + roundTokenCap, 0, ethUsdRate, msg.sender, arg1);
                                                        call walletAddress with:
                                                           value msg.value wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if sub_463626d6 < roundTokenCap:
                                                            else:
                                                                emit RoundEnded(sub_463626d6, roundTokenCap);
                                        else:
                                            if ext_call.return_data[0] - tokenSaleCap <= sub_463626d6 - roundTokenCap:
                                                if (0 / price) + sub_463626d6 - roundTokenCap <= 0:
                                                    require msg.value > 0
                                                    require 0 / price > 0
                                                    require (0 / price) + sub_463626d6 >= sub_463626d6
                                                    sub_463626d6 += 0 / price
                                                    require roundTokenCap >= (0 / price) + sub_463626d6
                                                    require msg.value + weiRaised >= weiRaised
                                                    weiRaised += msg.value
                                                    require (0 / price) + tokensSold >= tokensSold
                                                    tokensSold += 0 / price
                                                    require 0 / price <= sub_0d27577e
                                                    sub_0d27577e -= 0 / price
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), 0 / price
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, arg1);
                                                        call walletAddress with:
                                                           value msg.value wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if sub_463626d6 < roundTokenCap:
                                                            else:
                                                                emit RoundEnded(sub_463626d6, roundTokenCap);
                                                else:
                                                    require (0 / price) + sub_463626d6 - roundTokenCap <= 0 / price
                                                    if (0 / price) + sub_463626d6 - roundTokenCap:
                                                        require (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / (0 / price) + sub_463626d6 - roundTokenCap == price
                                                        require (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= msg.value
                                                        require msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) > 0
                                                        require -sub_463626d6 + roundTokenCap > 0
                                                        require roundTokenCap >= sub_463626d6
                                                        sub_463626d6 = roundTokenCap
                                                        require roundTokenCap >= roundTokenCap
                                                        require msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised >= weiRaised
                                                        weiRaised = msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) + weiRaised
                                                        require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                                        tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                                        require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                                        sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                                        require ext_code.size(tokenAddress)
                                                        call tokenAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args address(arg1), -sub_463626d6 + roundTokenCap
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0]
                                                            emit TokenPurchase(price, msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18), -sub_463626d6 + roundTokenCap, (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                                            call walletAddress with:
                                                               value msg.value - ((0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18) wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                if (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 <= 0:
                                                                    if sub_463626d6 < roundTokenCap:
                                                                    else:
                                                                        emit RoundEnded(sub_463626d6, roundTokenCap);
                                                                else:
                                                                    call msg.sender with:
                                                                       value (0 / price * price) + (sub_463626d6 * price) - (roundTokenCap * price) / 10^18 wei
                                                                         gas 2300 * is_zero(value) wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                                        if sub_463626d6 < roundTokenCap:
                                                                        else:
                                                                            emit RoundEnded(sub_463626d6, roundTokenCap);
                                                    else:
                                                        require 0 <= msg.value
                                                        require msg.value > 0
                                                        require -sub_463626d6 + roundTokenCap > 0
                                                        require roundTokenCap >= sub_463626d6
                                                        sub_463626d6 = roundTokenCap
                                                        require roundTokenCap >= roundTokenCap
                                                        require msg.value + weiRaised >= weiRaised
                                                        weiRaised += msg.value
                                                        require -sub_463626d6 + roundTokenCap + tokensSold >= tokensSold
                                                        tokensSold = -sub_463626d6 + roundTokenCap + tokensSold
                                                        require -sub_463626d6 + roundTokenCap <= sub_0d27577e
                                                        sub_0d27577e = sub_0d27577e + sub_463626d6 - roundTokenCap
                                                        require ext_code.size(tokenAddress)
                                                        call tokenAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args address(arg1), -sub_463626d6 + roundTokenCap
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0]
                                                            emit TokenPurchase(price, msg.value, -sub_463626d6 + roundTokenCap, 0, ethUsdRate, msg.sender, arg1);
                                                            call walletAddress with:
                                                               value msg.value wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                if sub_463626d6 < roundTokenCap:
                                                                else:
                                                                    emit RoundEnded(sub_463626d6, roundTokenCap);
                                            else:
                                                if (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                                    require msg.value > 0
                                                    require 0 / price > 0
                                                    require (0 / price) + sub_463626d6 >= sub_463626d6
                                                    sub_463626d6 += 0 / price
                                                    require roundTokenCap >= (0 / price) + sub_463626d6
                                                    require msg.value + weiRaised >= weiRaised
                                                    weiRaised += msg.value
                                                    require (0 / price) + tokensSold >= tokensSold
                                                    tokensSold += 0 / price
                                                    require 0 / price <= sub_0d27577e
                                                    sub_0d27577e -= 0 / price
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), 0 / price
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit TokenPurchase(price, msg.value, 0 / price, 0, ethUsdRate, msg.sender, arg1);
                                                        call walletAddress with:
                                                           value msg.value wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if sub_463626d6 < roundTokenCap:
                                                            else:
                                                                emit RoundEnded(sub_463626d6, roundTokenCap);
                                                else:
                                                    require (0 / price) + ext_call.return_data[0] - tokenSaleCap <= 0 / price
                                                    if (0 / price) + ext_call.return_data[0] - tokenSaleCap:
                                                        require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / (0 / price) + ext_call.return_data[0] - tokenSaleCap == price
                                                        require (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= msg.value
                                                        require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) > 0
                                                        require -ext_call.return_data[0] + tokenSaleCap > 0
                                                        require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                                        sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                        require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                        require msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised >= weiRaised
                                                        weiRaised = msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) + weiRaised
                                                        require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                        tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                        require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                                        sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                                        require ext_code.size(tokenAddress)
                                                        call tokenAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0]
                                                            emit TokenPurchase(price, msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18, ethUsdRate, msg.sender, arg1);
                                                            call walletAddress with:
                                                               value msg.value - ((0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18) wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                if (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 <= 0:
                                                                    if sub_463626d6 < roundTokenCap:
                                                                    else:
                                                                        emit RoundEnded(sub_463626d6, roundTokenCap);
                                                                else:
                                                                    call msg.sender with:
                                                                       value (0 / price * price) + (ext_call.return_data[0] * price) - (tokenSaleCap * price) / 10^18 wei
                                                                         gas 2300 * is_zero(value) wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                                        if sub_463626d6 < roundTokenCap:
                                                                        else:
                                                                            emit RoundEnded(sub_463626d6, roundTokenCap);
                                                    else:
                                                        require 0 <= msg.value
                                                        require msg.value > 0
                                                        require -ext_call.return_data[0] + tokenSaleCap > 0
                                                        require -ext_call.return_data[0] + tokenSaleCap + sub_463626d6 >= sub_463626d6
                                                        sub_463626d6 = -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                        require roundTokenCap >= -ext_call.return_data[0] + tokenSaleCap + sub_463626d6
                                                        require msg.value + weiRaised >= weiRaised
                                                        weiRaised += msg.value
                                                        require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                        tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                        require -ext_call.return_data[0] + tokenSaleCap <= sub_0d27577e
                                                        sub_0d27577e = sub_0d27577e + ext_call.return_data[0] - tokenSaleCap
                                                        require ext_code.size(tokenAddress)
                                                        call tokenAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0]
                                                            emit TokenPurchase(price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, ethUsdRate, msg.sender, arg1);
                                                            call walletAddress with:
                                                               value msg.value wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                if sub_463626d6 < roundTokenCap:
                                                                else:
                                                                    emit RoundEnded(sub_463626d6, roundTokenCap);
        else:
            if not arg2:
                require ext_code.size(tokenAddress)
                call tokenAddress.0xfa2299ee with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                else:
                    require return_data.size >= 32
                    require tokenSaleCap > ext_call.return_data[0]
                    require sub_fbde1348[address(msg.sender)].field_256 > 0
                    if msg.value:
                        require 10^18 * msg.value / msg.value == 10^18
                        require sub_fbde1348[address(msg.sender)].field_256
                        require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                        if not arg3:
                            require msg.value > 0
                            require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 > 0
                            require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                            require msg.value + weiRaised >= weiRaised
                            weiRaised += msg.value
                            require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                            tokensSold += 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                            require ext_code.size(tokenAddress)
                            call tokenAddress.0x40c10f19 with:
                                 gas gas_remaining wei
                                args address(arg1), 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit 0x93cae43c: price, msg.value, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, arg1
                                require msg.sender
                                if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                else:
                                    require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                    sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                    stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                    stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                    sub_fbde1348[address(msg.sender)].field_0 = 0
                                    sub_fbde1348[address(msg.sender)].field_256 = 0
                                    sub_fbde1348[address(msg.sender)].field_512 = 0
                                    sub_fbde1348[address(msg.sender)].field_768 = 0
                                    stor16[address(msg.sender)].field_0 = 0
                                    stor16[address(msg.sender)].field_256 = 0
                                    emit 0x83e21c4d: msg.sender
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    else:
                        else:
                            if 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768:
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0xfa2299ee with:
                                     gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require return_data.size >= 32
                                    require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] >= ext_call.return_data[0]
                                    if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] <= tokenSaleCap:
                                        require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                        require msg.value > 0
                                        require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 > 0
                                        require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                        tokensSold += 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args address(arg1), 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require return_data.size >= 32
                                            require ext_call.return_data[0]
                                            emit 0x93cae43c: price, msg.value, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, arg1
                                            require msg.sender
                                            if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                call walletAddress with:
                                                   value msg.value wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                            else:
                                                require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                sub_fbde1348[address(msg.sender)].field_0 = 0
                                                sub_fbde1348[address(msg.sender)].field_256 = 0
                                                sub_fbde1348[address(msg.sender)].field_512 = 0
                                                sub_fbde1348[address(msg.sender)].field_768 = 0
                                                stor16[address(msg.sender)].field_0 = 0
                                                stor16[address(msg.sender)].field_256 = 0
                                                emit 0x83e21c4d: msg.sender
                                                call walletAddress with:
                                                   value msg.value wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                    else:
                                        if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                            require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                            require msg.value > 0
                                            require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 > 0
                                            require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                            require msg.value + weiRaised >= weiRaised
                                            weiRaised += msg.value
                                            require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                            tokensSold += 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args address(arg1), 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                require return_data.size >= 32
                                                require ext_call.return_data[0]
                                                emit 0x93cae43c: price, msg.value, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, arg1
                                                require msg.sender
                                                if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                    call walletAddress with:
                                                       value msg.value wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                else:
                                                    require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                    sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                    stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                    stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                    sub_fbde1348[address(msg.sender)].field_0 = 0
                                                    sub_fbde1348[address(msg.sender)].field_256 = 0
                                                    sub_fbde1348[address(msg.sender)].field_512 = 0
                                                    sub_fbde1348[address(msg.sender)].field_768 = 0
                                                    stor16[address(msg.sender)].field_0 = 0
                                                    stor16[address(msg.sender)].field_256 = 0
                                                    emit 0x83e21c4d: msg.sender
                                                    call walletAddress with:
                                                       value msg.value wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                        else:
                                            require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                            if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap:
                                                require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap == sub_fbde1348[address(msg.sender)].field_256
                                                require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= msg.value
                                                require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                                require msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) > 0
                                                require -ext_call.return_data[0] + tokenSaleCap > 0
                                                require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                                require msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised >= weiRaised
                                                weiRaised = msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised
                                                require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit 0x93cae43c: price, msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18, msg.sender, arg1
                                                    require msg.sender
                                                    if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                        call walletAddress with:
                                                           value msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= 0:
                                                            else:
                                                                call msg.sender with:
                                                                   value (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                    else:
                                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                        sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                        stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                        stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                        sub_fbde1348[address(msg.sender)].field_0 = 0
                                                        sub_fbde1348[address(msg.sender)].field_256 = 0
                                                        sub_fbde1348[address(msg.sender)].field_512 = 0
                                                        sub_fbde1348[address(msg.sender)].field_768 = 0
                                                        stor16[address(msg.sender)].field_0 = 0
                                                        stor16[address(msg.sender)].field_256 = 0
                                                        emit 0x83e21c4d: msg.sender
                                                        call walletAddress with:
                                                           value msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= 0:
                                                            else:
                                                                call msg.sender with:
                                                                   value (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                            else:
                                                require 0 <= msg.value
                                                require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                                require msg.value > 0
                                                require -ext_call.return_data[0] + tokenSaleCap > 0
                                                require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                                require msg.value + weiRaised >= weiRaised
                                                weiRaised += msg.value
                                                require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit 0x93cae43c: price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, msg.sender, arg1
                                                    require msg.sender
                                                    if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                        call walletAddress with:
                                                           value msg.value wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                    else:
                                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                        sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                        stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                        stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                        sub_fbde1348[address(msg.sender)].field_0 = 0
                                                        sub_fbde1348[address(msg.sender)].field_256 = 0
                                                        sub_fbde1348[address(msg.sender)].field_512 = 0
                                                        sub_fbde1348[address(msg.sender)].field_768 = 0
                                                        stor16[address(msg.sender)].field_0 = 0
                                                        stor16[address(msg.sender)].field_256 = 0
                                                        emit 0x83e21c4d: msg.sender
                                                        call walletAddress with:
                                                           value msg.value wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                            else:
                                if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 <= 0:
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0xfa2299ee with:
                                         gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require return_data.size >= 32
                                        require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] >= ext_call.return_data[0]
                                        if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] <= tokenSaleCap:
                                            require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                            require msg.value > 0
                                            require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 > 0
                                            require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                            require msg.value + weiRaised >= weiRaised
                                            weiRaised += msg.value
                                            require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                            tokensSold += 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args address(arg1), 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                require return_data.size >= 32
                                                require ext_call.return_data[0]
                                                emit 0x93cae43c: price, msg.value, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, arg1
                                                require msg.sender
                                                if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                    call walletAddress with:
                                                       value msg.value wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                else:
                                                    require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                    sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                    stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                    stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                    sub_fbde1348[address(msg.sender)].field_0 = 0
                                                    sub_fbde1348[address(msg.sender)].field_256 = 0
                                                    sub_fbde1348[address(msg.sender)].field_512 = 0
                                                    sub_fbde1348[address(msg.sender)].field_768 = 0
                                                    stor16[address(msg.sender)].field_0 = 0
                                                    stor16[address(msg.sender)].field_256 = 0
                                                    emit 0x83e21c4d: msg.sender
                                                    call walletAddress with:
                                                       value msg.value wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                        else:
                                            if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                                require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                                require msg.value > 0
                                                require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 > 0
                                                require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                                require msg.value + weiRaised >= weiRaised
                                                weiRaised += msg.value
                                                require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                                tokensSold += 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit 0x93cae43c: price, msg.value, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, arg1
                                                    require msg.sender
                                                    if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                        call walletAddress with:
                                                           value msg.value wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                    else:
                                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                        sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                        stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                        stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                        sub_fbde1348[address(msg.sender)].field_0 = 0
                                                        sub_fbde1348[address(msg.sender)].field_256 = 0
                                                        sub_fbde1348[address(msg.sender)].field_512 = 0
                                                        sub_fbde1348[address(msg.sender)].field_768 = 0
                                                        stor16[address(msg.sender)].field_0 = 0
                                                        stor16[address(msg.sender)].field_256 = 0
                                                        emit 0x83e21c4d: msg.sender
                                                        call walletAddress with:
                                                           value msg.value wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                            else:
                                                require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                                if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap:
                                                    require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap == sub_fbde1348[address(msg.sender)].field_256
                                                    require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= msg.value
                                                    require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                                    require msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) > 0
                                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                                    require msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised >= weiRaised
                                                    weiRaised = msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised
                                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit 0x93cae43c: price, msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18, msg.sender, arg1
                                                        require msg.sender
                                                        if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                            call walletAddress with:
                                                               value msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= 0:
                                                                else:
                                                                    call msg.sender with:
                                                                       value (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                                         gas 2300 * is_zero(value) wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                        else:
                                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                                            stor16[address(msg.sender)].field_0 = 0
                                                            stor16[address(msg.sender)].field_256 = 0
                                                            emit 0x83e21c4d: msg.sender
                                                            call walletAddress with:
                                                               value msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= 0:
                                                                else:
                                                                    call msg.sender with:
                                                                       value (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                                         gas 2300 * is_zero(value) wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                else:
                                                    require 0 <= msg.value
                                                    require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                                    require msg.value > 0
                                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                                    require msg.value + weiRaised >= weiRaised
                                                    weiRaised += msg.value
                                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit 0x93cae43c: price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, msg.sender, arg1
                                                        require msg.sender
                                                        if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                            call walletAddress with:
                                                               value msg.value wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                        else:
                                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                                            stor16[address(msg.sender)].field_0 = 0
                                                            stor16[address(msg.sender)].field_256 = 0
                                                            emit 0x83e21c4d: msg.sender
                                                            call walletAddress with:
                                                               value msg.value wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                else:
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0xfa2299ee with:
                                         gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require return_data.size >= 32
                                        require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] >= ext_call.return_data[0]
                                        if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] <= tokenSaleCap:
                                            if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 <= 0:
                                                require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                                require msg.value > 0
                                                require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 > 0
                                                require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                                require msg.value + weiRaised >= weiRaised
                                                weiRaised += msg.value
                                                require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                                tokensSold += 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit 0x93cae43c: price, msg.value, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, arg1
                                                    require msg.sender
                                                    if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                        call walletAddress with:
                                                           value msg.value wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                    else:
                                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                        sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                        stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                        stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                        sub_fbde1348[address(msg.sender)].field_0 = 0
                                                        sub_fbde1348[address(msg.sender)].field_256 = 0
                                                        sub_fbde1348[address(msg.sender)].field_512 = 0
                                                        sub_fbde1348[address(msg.sender)].field_768 = 0
                                                        stor16[address(msg.sender)].field_0 = 0
                                                        stor16[address(msg.sender)].field_256 = 0
                                                        emit 0x83e21c4d: msg.sender
                                                        call walletAddress with:
                                                           value msg.value wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                            else:
                                                require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 <= 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                                if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768:
                                                    require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 == sub_fbde1348[address(msg.sender)].field_256
                                                    require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= msg.value
                                                    require sub_fbde1348[address(msg.sender)].field_768 >= sub_fbde1348[address(msg.sender)].field_512
                                                    require msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) > 0
                                                    require sub_fbde1348[address(msg.sender)].field_768 > 0
                                                    require sub_fbde1348[address(msg.sender)].field_768 <= sub_fbde1348[address(msg.sender)].field_768
                                                    require msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised >= weiRaised
                                                    weiRaised = msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised
                                                    require sub_fbde1348[address(msg.sender)].field_768 + tokensSold >= tokensSold
                                                    tokensSold += sub_fbde1348[address(msg.sender)].field_768
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), sub_fbde1348[address(msg.sender)].field_768
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit 0x93cae43c: price, msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18), sub_fbde1348[address(msg.sender)].field_768, (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18, msg.sender, arg1
                                                        require msg.sender
                                                        if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                            call walletAddress with:
                                                               value msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= 0:
                                                                else:
                                                                    call msg.sender with:
                                                                       value (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                                         gas 2300 * is_zero(value) wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                        else:
                                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                                            stor16[address(msg.sender)].field_0 = 0
                                                            stor16[address(msg.sender)].field_256 = 0
                                                            emit 0x83e21c4d: msg.sender
                                                            call walletAddress with:
                                                               value msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= 0:
                                                                else:
                                                                    call msg.sender with:
                                                                       value (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                                         gas 2300 * is_zero(value) wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                else:
                                                    require 0 <= msg.value
                                                    require sub_fbde1348[address(msg.sender)].field_768 >= sub_fbde1348[address(msg.sender)].field_512
                                                    require msg.value > 0
                                                    require sub_fbde1348[address(msg.sender)].field_768 > 0
                                                    require sub_fbde1348[address(msg.sender)].field_768 <= sub_fbde1348[address(msg.sender)].field_768
                                                    require msg.value + weiRaised >= weiRaised
                                                    weiRaised += msg.value
                                                    require sub_fbde1348[address(msg.sender)].field_768 + tokensSold >= tokensSold
                                                    tokensSold += sub_fbde1348[address(msg.sender)].field_768
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), sub_fbde1348[address(msg.sender)].field_768
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit 0x93cae43c: price, msg.value, sub_fbde1348[address(msg.sender)].field_768, 0, msg.sender, arg1
                                                        require msg.sender
                                                        if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                            call walletAddress with:
                                                               value msg.value wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                        else:
                                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                                            stor16[address(msg.sender)].field_0 = 0
                                                            stor16[address(msg.sender)].field_256 = 0
                                                            emit 0x83e21c4d: msg.sender
                                                            call walletAddress with:
                                                               value msg.value wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                        else:
                                            if ext_call.return_data[0] - tokenSaleCap <= -sub_fbde1348[address(msg.sender)].field_768:
                                                if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 <= 0:
                                                    require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                                    require msg.value > 0
                                                    require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 > 0
                                                    require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                                    require msg.value + weiRaised >= weiRaised
                                                    weiRaised += msg.value
                                                    require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                                    tokensSold += 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit 0x93cae43c: price, msg.value, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, arg1
                                                        require msg.sender
                                                        if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                            call walletAddress with:
                                                               value msg.value wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                        else:
                                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                                            stor16[address(msg.sender)].field_0 = 0
                                                            stor16[address(msg.sender)].field_256 = 0
                                                            emit 0x83e21c4d: msg.sender
                                                            call walletAddress with:
                                                               value msg.value wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                else:
                                                    require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 <= 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                                    if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768:
                                                        require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 == sub_fbde1348[address(msg.sender)].field_256
                                                        require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= msg.value
                                                        require sub_fbde1348[address(msg.sender)].field_768 >= sub_fbde1348[address(msg.sender)].field_512
                                                        require msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) > 0
                                                        require sub_fbde1348[address(msg.sender)].field_768 > 0
                                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_fbde1348[address(msg.sender)].field_768
                                                        require msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised >= weiRaised
                                                        weiRaised = msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised
                                                        require sub_fbde1348[address(msg.sender)].field_768 + tokensSold >= tokensSold
                                                        tokensSold += sub_fbde1348[address(msg.sender)].field_768
                                                        require ext_code.size(tokenAddress)
                                                        call tokenAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args address(arg1), sub_fbde1348[address(msg.sender)].field_768
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0]
                                                            emit 0x93cae43c: price, msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18), sub_fbde1348[address(msg.sender)].field_768, (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18, msg.sender, arg1
                                                            require msg.sender
                                                            if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                                call walletAddress with:
                                                                   value msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= 0:
                                                                    else:
                                                                        call msg.sender with:
                                                                           value (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                                             gas 2300 * is_zero(value) wei
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        else:
                                                            else:
                                                                require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                                sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                                stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                                stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                                sub_fbde1348[address(msg.sender)].field_0 = 0
                                                                sub_fbde1348[address(msg.sender)].field_256 = 0
                                                                sub_fbde1348[address(msg.sender)].field_512 = 0
                                                                sub_fbde1348[address(msg.sender)].field_768 = 0
                                                                stor16[address(msg.sender)].field_0 = 0
                                                                stor16[address(msg.sender)].field_256 = 0
                                                                emit 0x83e21c4d: msg.sender
                                                                call walletAddress with:
                                                                   value msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= 0:
                                                                    else:
                                                                        call msg.sender with:
                                                                           value (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                                             gas 2300 * is_zero(value) wei
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        else:
                                                    else:
                                                        require 0 <= msg.value
                                                        require sub_fbde1348[address(msg.sender)].field_768 >= sub_fbde1348[address(msg.sender)].field_512
                                                        require msg.value > 0
                                                        require sub_fbde1348[address(msg.sender)].field_768 > 0
                                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_fbde1348[address(msg.sender)].field_768
                                                        require msg.value + weiRaised >= weiRaised
                                                        weiRaised += msg.value
                                                        require sub_fbde1348[address(msg.sender)].field_768 + tokensSold >= tokensSold
                                                        tokensSold += sub_fbde1348[address(msg.sender)].field_768
                                                        require ext_code.size(tokenAddress)
                                                        call tokenAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args address(arg1), sub_fbde1348[address(msg.sender)].field_768
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0]
                                                            emit 0x93cae43c: price, msg.value, sub_fbde1348[address(msg.sender)].field_768, 0, msg.sender, arg1
                                                            require msg.sender
                                                            if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                                call walletAddress with:
                                                                   value msg.value wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                            else:
                                                                require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                                sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                                stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                                stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                                sub_fbde1348[address(msg.sender)].field_0 = 0
                                                                sub_fbde1348[address(msg.sender)].field_256 = 0
                                                                sub_fbde1348[address(msg.sender)].field_512 = 0
                                                                sub_fbde1348[address(msg.sender)].field_768 = 0
                                                                stor16[address(msg.sender)].field_0 = 0
                                                                stor16[address(msg.sender)].field_256 = 0
                                                                emit 0x83e21c4d: msg.sender
                                                                call walletAddress with:
                                                                   value msg.value wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                            else:
                                                if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                                    require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                                    require msg.value > 0
                                                    require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 > 0
                                                    require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                                    require msg.value + weiRaised >= weiRaised
                                                    weiRaised += msg.value
                                                    require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                                    tokensSold += 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit 0x93cae43c: price, msg.value, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, arg1
                                                        require msg.sender
                                                        if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                            call walletAddress with:
                                                               value msg.value wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                        else:
                                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                                            stor16[address(msg.sender)].field_0 = 0
                                                            stor16[address(msg.sender)].field_256 = 0
                                                            emit 0x83e21c4d: msg.sender
                                                            call walletAddress with:
                                                               value msg.value wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                else:
                                                    require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                                    if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap:
                                                        require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap == sub_fbde1348[address(msg.sender)].field_256
                                                        require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= msg.value
                                                        require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                                        require msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) > 0
                                                        require -ext_call.return_data[0] + tokenSaleCap > 0
                                                        require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                                        require msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised >= weiRaised
                                                        weiRaised = msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised
                                                        require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                        tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                        require ext_code.size(tokenAddress)
                                                        call tokenAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0]
                                                            emit 0x93cae43c: price, msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18, msg.sender, arg1
                                                            require msg.sender
                                                            if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                                call walletAddress with:
                                                                   value msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= 0:
                                                                    else:
                                                                        call msg.sender with:
                                                                           value (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                                             gas 2300 * is_zero(value) wei
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        else:
                                                            else:
                                                                require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                                sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                                stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                                stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                                sub_fbde1348[address(msg.sender)].field_0 = 0
                                                                sub_fbde1348[address(msg.sender)].field_256 = 0
                                                                sub_fbde1348[address(msg.sender)].field_512 = 0
                                                                sub_fbde1348[address(msg.sender)].field_768 = 0
                                                                stor16[address(msg.sender)].field_0 = 0
                                                                stor16[address(msg.sender)].field_256 = 0
                                                                emit 0x83e21c4d: msg.sender
                                                                call walletAddress with:
                                                                   value msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= 0:
                                                                    else:
                                                                        call msg.sender with:
                                                                           value (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                                             gas 2300 * is_zero(value) wei
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        else:
                                                    else:
                                                        require 0 <= msg.value
                                                        require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                                        require msg.value > 0
                                                        require -ext_call.return_data[0] + tokenSaleCap > 0
                                                        require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                                        require msg.value + weiRaised >= weiRaised
                                                        weiRaised += msg.value
                                                        require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                        tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                        require ext_code.size(tokenAddress)
                                                        call tokenAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0]
                                                            emit 0x93cae43c: price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, msg.sender, arg1
                                                            require msg.sender
                                                            if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                                call walletAddress with:
                                                                   value msg.value wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                            else:
                                                                require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                                sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                                stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                                stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                                sub_fbde1348[address(msg.sender)].field_0 = 0
                                                                sub_fbde1348[address(msg.sender)].field_256 = 0
                                                                sub_fbde1348[address(msg.sender)].field_512 = 0
                                                                sub_fbde1348[address(msg.sender)].field_768 = 0
                                                                stor16[address(msg.sender)].field_0 = 0
                                                                stor16[address(msg.sender)].field_256 = 0
                                                                emit 0x83e21c4d: msg.sender
                                                                call walletAddress with:
                                                                   value msg.value wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                    else:
                        require sub_fbde1348[address(msg.sender)].field_256
                        require 0 / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                        if not arg3:
                            require msg.value > 0
                            require 0 / sub_fbde1348[address(msg.sender)].field_256 > 0
                            require 0 / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                            require msg.value + weiRaised >= weiRaised
                            weiRaised += msg.value
                            require (0 / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                            tokensSold += 0 / sub_fbde1348[address(msg.sender)].field_256
                            require ext_code.size(tokenAddress)
                            call tokenAddress.0x40c10f19 with:
                                 gas gas_remaining wei
                                args address(arg1), 0 / sub_fbde1348[address(msg.sender)].field_256
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit 0x93cae43c: price, msg.value, 0 / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, arg1
                                require msg.sender
                                if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                else:
                                    require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                    sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                    stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                    stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                    sub_fbde1348[address(msg.sender)].field_0 = 0
                                    sub_fbde1348[address(msg.sender)].field_256 = 0
                                    sub_fbde1348[address(msg.sender)].field_512 = 0
                                    sub_fbde1348[address(msg.sender)].field_768 = 0
                                    stor16[address(msg.sender)].field_0 = 0
                                    stor16[address(msg.sender)].field_256 = 0
                                    emit 0x83e21c4d: msg.sender
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    else:
                        else:
                            if 0 / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768:
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0xfa2299ee with:
                                     gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require return_data.size >= 32
                                    require (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] >= ext_call.return_data[0]
                                    if (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] <= tokenSaleCap:
                                        require 0 / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                        require msg.value > 0
                                        require 0 / sub_fbde1348[address(msg.sender)].field_256 > 0
                                        require 0 / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require (0 / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                        tokensSold += 0 / sub_fbde1348[address(msg.sender)].field_256
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args address(arg1), 0 / sub_fbde1348[address(msg.sender)].field_256
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require return_data.size >= 32
                                            require ext_call.return_data[0]
                                            emit 0x93cae43c: price, msg.value, 0 / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, arg1
                                            require msg.sender
                                            if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                call walletAddress with:
                                                   value msg.value wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                            else:
                                                require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                sub_fbde1348[address(msg.sender)].field_0 = 0
                                                sub_fbde1348[address(msg.sender)].field_256 = 0
                                                sub_fbde1348[address(msg.sender)].field_512 = 0
                                                sub_fbde1348[address(msg.sender)].field_768 = 0
                                                stor16[address(msg.sender)].field_0 = 0
                                                stor16[address(msg.sender)].field_256 = 0
                                                emit 0x83e21c4d: msg.sender
                                                call walletAddress with:
                                                   value msg.value wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                    else:
                                        if (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                            require 0 / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                            require msg.value > 0
                                            require 0 / sub_fbde1348[address(msg.sender)].field_256 > 0
                                            require 0 / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                            require msg.value + weiRaised >= weiRaised
                                            weiRaised += msg.value
                                            require (0 / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                            tokensSold += 0 / sub_fbde1348[address(msg.sender)].field_256
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args address(arg1), 0 / sub_fbde1348[address(msg.sender)].field_256
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                require return_data.size >= 32
                                                require ext_call.return_data[0]
                                                emit 0x93cae43c: price, msg.value, 0 / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, arg1
                                                require msg.sender
                                                if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                    call walletAddress with:
                                                       value msg.value wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                else:
                                                    require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                    sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                    stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                    stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                    sub_fbde1348[address(msg.sender)].field_0 = 0
                                                    sub_fbde1348[address(msg.sender)].field_256 = 0
                                                    sub_fbde1348[address(msg.sender)].field_512 = 0
                                                    sub_fbde1348[address(msg.sender)].field_768 = 0
                                                    stor16[address(msg.sender)].field_0 = 0
                                                    stor16[address(msg.sender)].field_256 = 0
                                                    emit 0x83e21c4d: msg.sender
                                                    call walletAddress with:
                                                       value msg.value wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                        else:
                                            require (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 0 / sub_fbde1348[address(msg.sender)].field_256
                                            if (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap:
                                                require (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap == sub_fbde1348[address(msg.sender)].field_256
                                                require (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= msg.value
                                                require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                                require msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) > 0
                                                require -ext_call.return_data[0] + tokenSaleCap > 0
                                                require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                                require msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised >= weiRaised
                                                weiRaised = msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised
                                                require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit 0x93cae43c: price, msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18, msg.sender, arg1
                                                    require msg.sender
                                                    if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                        call walletAddress with:
                                                           value msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= 0:
                                                            else:
                                                                call msg.sender with:
                                                                   value (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                    else:
                                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                        sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                        stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                        stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                        sub_fbde1348[address(msg.sender)].field_0 = 0
                                                        sub_fbde1348[address(msg.sender)].field_256 = 0
                                                        sub_fbde1348[address(msg.sender)].field_512 = 0
                                                        sub_fbde1348[address(msg.sender)].field_768 = 0
                                                        stor16[address(msg.sender)].field_0 = 0
                                                        stor16[address(msg.sender)].field_256 = 0
                                                        emit 0x83e21c4d: msg.sender
                                                        call walletAddress with:
                                                           value msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= 0:
                                                            else:
                                                                call msg.sender with:
                                                                   value (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                            else:
                                                require 0 <= msg.value
                                                require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                                require msg.value > 0
                                                require -ext_call.return_data[0] + tokenSaleCap > 0
                                                require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                                require msg.value + weiRaised >= weiRaised
                                                weiRaised += msg.value
                                                require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit 0x93cae43c: price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, msg.sender, arg1
                                                    require msg.sender
                                                    if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                        call walletAddress with:
                                                           value msg.value wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                    else:
                                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                        sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                        stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                        stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                        sub_fbde1348[address(msg.sender)].field_0 = 0
                                                        sub_fbde1348[address(msg.sender)].field_256 = 0
                                                        sub_fbde1348[address(msg.sender)].field_512 = 0
                                                        sub_fbde1348[address(msg.sender)].field_768 = 0
                                                        stor16[address(msg.sender)].field_0 = 0
                                                        stor16[address(msg.sender)].field_256 = 0
                                                        emit 0x83e21c4d: msg.sender
                                                        call walletAddress with:
                                                           value msg.value wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                            else:
                                if (0 / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 <= 0:
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0xfa2299ee with:
                                         gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require return_data.size >= 32
                                        require (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] >= ext_call.return_data[0]
                                        if (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] <= tokenSaleCap:
                                            require 0 / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                            require msg.value > 0
                                            require 0 / sub_fbde1348[address(msg.sender)].field_256 > 0
                                            require 0 / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                            require msg.value + weiRaised >= weiRaised
                                            weiRaised += msg.value
                                            require (0 / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                            tokensSold += 0 / sub_fbde1348[address(msg.sender)].field_256
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args address(arg1), 0 / sub_fbde1348[address(msg.sender)].field_256
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                require return_data.size >= 32
                                                require ext_call.return_data[0]
                                                emit 0x93cae43c: price, msg.value, 0 / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, arg1
                                                require msg.sender
                                                if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                    call walletAddress with:
                                                       value msg.value wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                else:
                                                    require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                    sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                    stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                    stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                    sub_fbde1348[address(msg.sender)].field_0 = 0
                                                    sub_fbde1348[address(msg.sender)].field_256 = 0
                                                    sub_fbde1348[address(msg.sender)].field_512 = 0
                                                    sub_fbde1348[address(msg.sender)].field_768 = 0
                                                    stor16[address(msg.sender)].field_0 = 0
                                                    stor16[address(msg.sender)].field_256 = 0
                                                    emit 0x83e21c4d: msg.sender
                                                    call walletAddress with:
                                                       value msg.value wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                        else:
                                            if (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                                require 0 / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                                require msg.value > 0
                                                require 0 / sub_fbde1348[address(msg.sender)].field_256 > 0
                                                require 0 / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                                require msg.value + weiRaised >= weiRaised
                                                weiRaised += msg.value
                                                require (0 / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                                tokensSold += 0 / sub_fbde1348[address(msg.sender)].field_256
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), 0 / sub_fbde1348[address(msg.sender)].field_256
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit 0x93cae43c: price, msg.value, 0 / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, arg1
                                                    require msg.sender
                                                    if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                        call walletAddress with:
                                                           value msg.value wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                    else:
                                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                        sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                        stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                        stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                        sub_fbde1348[address(msg.sender)].field_0 = 0
                                                        sub_fbde1348[address(msg.sender)].field_256 = 0
                                                        sub_fbde1348[address(msg.sender)].field_512 = 0
                                                        sub_fbde1348[address(msg.sender)].field_768 = 0
                                                        stor16[address(msg.sender)].field_0 = 0
                                                        stor16[address(msg.sender)].field_256 = 0
                                                        emit 0x83e21c4d: msg.sender
                                                        call walletAddress with:
                                                           value msg.value wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                            else:
                                                require (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 0 / sub_fbde1348[address(msg.sender)].field_256
                                                if (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap:
                                                    require (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap == sub_fbde1348[address(msg.sender)].field_256
                                                    require (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= msg.value
                                                    require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                                    require msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) > 0
                                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                                    require msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised >= weiRaised
                                                    weiRaised = msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised
                                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit 0x93cae43c: price, msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18, msg.sender, arg1
                                                        require msg.sender
                                                        if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                            call walletAddress with:
                                                               value msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                if (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= 0:
                                                                else:
                                                                    call msg.sender with:
                                                                       value (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                                         gas 2300 * is_zero(value) wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                        else:
                                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                                            stor16[address(msg.sender)].field_0 = 0
                                                            stor16[address(msg.sender)].field_256 = 0
                                                            emit 0x83e21c4d: msg.sender
                                                            call walletAddress with:
                                                               value msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                if (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= 0:
                                                                else:
                                                                    call msg.sender with:
                                                                       value (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                                         gas 2300 * is_zero(value) wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                else:
                                                    require 0 <= msg.value
                                                    require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                                    require msg.value > 0
                                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                                    require msg.value + weiRaised >= weiRaised
                                                    weiRaised += msg.value
                                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit 0x93cae43c: price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, msg.sender, arg1
                                                        require msg.sender
                                                        if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                            call walletAddress with:
                                                               value msg.value wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                        else:
                                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                                            stor16[address(msg.sender)].field_0 = 0
                                                            stor16[address(msg.sender)].field_256 = 0
                                                            emit 0x83e21c4d: msg.sender
                                                            call walletAddress with:
                                                               value msg.value wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                else:
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0xfa2299ee with:
                                         gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require return_data.size >= 32
                                        require (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] >= ext_call.return_data[0]
                                        if (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] <= tokenSaleCap:
                                            if (0 / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 <= 0:
                                                require 0 / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                                require msg.value > 0
                                                require 0 / sub_fbde1348[address(msg.sender)].field_256 > 0
                                                require 0 / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                                require msg.value + weiRaised >= weiRaised
                                                weiRaised += msg.value
                                                require (0 / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                                tokensSold += 0 / sub_fbde1348[address(msg.sender)].field_256
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), 0 / sub_fbde1348[address(msg.sender)].field_256
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit 0x93cae43c: price, msg.value, 0 / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, arg1
                                                    require msg.sender
                                                    if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                        call walletAddress with:
                                                           value msg.value wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                    else:
                                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                        sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                        stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                        stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                        sub_fbde1348[address(msg.sender)].field_0 = 0
                                                        sub_fbde1348[address(msg.sender)].field_256 = 0
                                                        sub_fbde1348[address(msg.sender)].field_512 = 0
                                                        sub_fbde1348[address(msg.sender)].field_768 = 0
                                                        stor16[address(msg.sender)].field_0 = 0
                                                        stor16[address(msg.sender)].field_256 = 0
                                                        emit 0x83e21c4d: msg.sender
                                                        call walletAddress with:
                                                           value msg.value wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                            else:
                                                require (0 / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 <= 0 / sub_fbde1348[address(msg.sender)].field_256
                                                if (0 / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768:
                                                    require (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / (0 / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 == sub_fbde1348[address(msg.sender)].field_256
                                                    require (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= msg.value
                                                    require sub_fbde1348[address(msg.sender)].field_768 >= sub_fbde1348[address(msg.sender)].field_512
                                                    require msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) > 0
                                                    require sub_fbde1348[address(msg.sender)].field_768 > 0
                                                    require sub_fbde1348[address(msg.sender)].field_768 <= sub_fbde1348[address(msg.sender)].field_768
                                                    require msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised >= weiRaised
                                                    weiRaised = msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised
                                                    require sub_fbde1348[address(msg.sender)].field_768 + tokensSold >= tokensSold
                                                    tokensSold += sub_fbde1348[address(msg.sender)].field_768
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), sub_fbde1348[address(msg.sender)].field_768
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit 0x93cae43c: price, msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18), sub_fbde1348[address(msg.sender)].field_768, (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18, msg.sender, arg1
                                                        require msg.sender
                                                        if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                            call walletAddress with:
                                                               value msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                if (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= 0:
                                                                else:
                                                                    call msg.sender with:
                                                                       value (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                                         gas 2300 * is_zero(value) wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                        else:
                                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                                            stor16[address(msg.sender)].field_0 = 0
                                                            stor16[address(msg.sender)].field_256 = 0
                                                            emit 0x83e21c4d: msg.sender
                                                            call walletAddress with:
                                                               value msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                if (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= 0:
                                                                else:
                                                                    call msg.sender with:
                                                                       value (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                                         gas 2300 * is_zero(value) wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                else:
                                                    require 0 <= msg.value
                                                    require sub_fbde1348[address(msg.sender)].field_768 >= sub_fbde1348[address(msg.sender)].field_512
                                                    require msg.value > 0
                                                    require sub_fbde1348[address(msg.sender)].field_768 > 0
                                                    require sub_fbde1348[address(msg.sender)].field_768 <= sub_fbde1348[address(msg.sender)].field_768
                                                    require msg.value + weiRaised >= weiRaised
                                                    weiRaised += msg.value
                                                    require sub_fbde1348[address(msg.sender)].field_768 + tokensSold >= tokensSold
                                                    tokensSold += sub_fbde1348[address(msg.sender)].field_768
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), sub_fbde1348[address(msg.sender)].field_768
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit 0x93cae43c: price, msg.value, sub_fbde1348[address(msg.sender)].field_768, 0, msg.sender, arg1
                                                        require msg.sender
                                                        if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                            call walletAddress with:
                                                               value msg.value wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                        else:
                                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                                            stor16[address(msg.sender)].field_0 = 0
                                                            stor16[address(msg.sender)].field_256 = 0
                                                            emit 0x83e21c4d: msg.sender
                                                            call walletAddress with:
                                                               value msg.value wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                        else:
                                            if ext_call.return_data[0] - tokenSaleCap <= -sub_fbde1348[address(msg.sender)].field_768:
                                                if (0 / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 <= 0:
                                                    require 0 / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                                    require msg.value > 0
                                                    require 0 / sub_fbde1348[address(msg.sender)].field_256 > 0
                                                    require 0 / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                                    require msg.value + weiRaised >= weiRaised
                                                    weiRaised += msg.value
                                                    require (0 / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                                    tokensSold += 0 / sub_fbde1348[address(msg.sender)].field_256
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), 0 / sub_fbde1348[address(msg.sender)].field_256
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit 0x93cae43c: price, msg.value, 0 / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, arg1
                                                        require msg.sender
                                                        if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                            call walletAddress with:
                                                               value msg.value wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                        else:
                                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                                            stor16[address(msg.sender)].field_0 = 0
                                                            stor16[address(msg.sender)].field_256 = 0
                                                            emit 0x83e21c4d: msg.sender
                                                            call walletAddress with:
                                                               value msg.value wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                else:
                                                    require (0 / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 <= 0 / sub_fbde1348[address(msg.sender)].field_256
                                                    if (0 / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768:
                                                        require (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / (0 / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 == sub_fbde1348[address(msg.sender)].field_256
                                                        require (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= msg.value
                                                        require sub_fbde1348[address(msg.sender)].field_768 >= sub_fbde1348[address(msg.sender)].field_512
                                                        require msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) > 0
                                                        require sub_fbde1348[address(msg.sender)].field_768 > 0
                                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_fbde1348[address(msg.sender)].field_768
                                                        require msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised >= weiRaised
                                                        weiRaised = msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised
                                                        require sub_fbde1348[address(msg.sender)].field_768 + tokensSold >= tokensSold
                                                        tokensSold += sub_fbde1348[address(msg.sender)].field_768
                                                        require ext_code.size(tokenAddress)
                                                        call tokenAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args address(arg1), sub_fbde1348[address(msg.sender)].field_768
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0]
                                                            emit 0x93cae43c: price, msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18), sub_fbde1348[address(msg.sender)].field_768, (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18, msg.sender, arg1
                                                            require msg.sender
                                                            if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                                call walletAddress with:
                                                                   value msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    if (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= 0:
                                                                    else:
                                                                        call msg.sender with:
                                                                           value (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                                             gas 2300 * is_zero(value) wei
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        else:
                                                            else:
                                                                require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                                sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                                stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                                stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                                sub_fbde1348[address(msg.sender)].field_0 = 0
                                                                sub_fbde1348[address(msg.sender)].field_256 = 0
                                                                sub_fbde1348[address(msg.sender)].field_512 = 0
                                                                sub_fbde1348[address(msg.sender)].field_768 = 0
                                                                stor16[address(msg.sender)].field_0 = 0
                                                                stor16[address(msg.sender)].field_256 = 0
                                                                emit 0x83e21c4d: msg.sender
                                                                call walletAddress with:
                                                                   value msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    if (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= 0:
                                                                    else:
                                                                        call msg.sender with:
                                                                           value (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                                             gas 2300 * is_zero(value) wei
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        else:
                                                    else:
                                                        require 0 <= msg.value
                                                        require sub_fbde1348[address(msg.sender)].field_768 >= sub_fbde1348[address(msg.sender)].field_512
                                                        require msg.value > 0
                                                        require sub_fbde1348[address(msg.sender)].field_768 > 0
                                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_fbde1348[address(msg.sender)].field_768
                                                        require msg.value + weiRaised >= weiRaised
                                                        weiRaised += msg.value
                                                        require sub_fbde1348[address(msg.sender)].field_768 + tokensSold >= tokensSold
                                                        tokensSold += sub_fbde1348[address(msg.sender)].field_768
                                                        require ext_code.size(tokenAddress)
                                                        call tokenAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args address(arg1), sub_fbde1348[address(msg.sender)].field_768
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0]
                                                            emit 0x93cae43c: price, msg.value, sub_fbde1348[address(msg.sender)].field_768, 0, msg.sender, arg1
                                                            require msg.sender
                                                            if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                                call walletAddress with:
                                                                   value msg.value wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                            else:
                                                                require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                                sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                                stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                                stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                                sub_fbde1348[address(msg.sender)].field_0 = 0
                                                                sub_fbde1348[address(msg.sender)].field_256 = 0
                                                                sub_fbde1348[address(msg.sender)].field_512 = 0
                                                                sub_fbde1348[address(msg.sender)].field_768 = 0
                                                                stor16[address(msg.sender)].field_0 = 0
                                                                stor16[address(msg.sender)].field_256 = 0
                                                                emit 0x83e21c4d: msg.sender
                                                                call walletAddress with:
                                                                   value msg.value wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                            else:
                                                if (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                                    require 0 / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                                    require msg.value > 0
                                                    require 0 / sub_fbde1348[address(msg.sender)].field_256 > 0
                                                    require 0 / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                                    require msg.value + weiRaised >= weiRaised
                                                    weiRaised += msg.value
                                                    require (0 / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                                    tokensSold += 0 / sub_fbde1348[address(msg.sender)].field_256
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), 0 / sub_fbde1348[address(msg.sender)].field_256
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit 0x93cae43c: price, msg.value, 0 / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, arg1
                                                        require msg.sender
                                                        if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                            call walletAddress with:
                                                               value msg.value wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                        else:
                                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                                            stor16[address(msg.sender)].field_0 = 0
                                                            stor16[address(msg.sender)].field_256 = 0
                                                            emit 0x83e21c4d: msg.sender
                                                            call walletAddress with:
                                                               value msg.value wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                else:
                                                    require (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 0 / sub_fbde1348[address(msg.sender)].field_256
                                                    if (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap:
                                                        require (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap == sub_fbde1348[address(msg.sender)].field_256
                                                        require (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= msg.value
                                                        require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                                        require msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) > 0
                                                        require -ext_call.return_data[0] + tokenSaleCap > 0
                                                        require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                                        require msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised >= weiRaised
                                                        weiRaised = msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised
                                                        require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                        tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                        require ext_code.size(tokenAddress)
                                                        call tokenAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0]
                                                            emit 0x93cae43c: price, msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18, msg.sender, arg1
                                                            require msg.sender
                                                            if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                                call walletAddress with:
                                                                   value msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    if (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= 0:
                                                                    else:
                                                                        call msg.sender with:
                                                                           value (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                                             gas 2300 * is_zero(value) wei
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        else:
                                                            else:
                                                                require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                                sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                                stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                                stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                                sub_fbde1348[address(msg.sender)].field_0 = 0
                                                                sub_fbde1348[address(msg.sender)].field_256 = 0
                                                                sub_fbde1348[address(msg.sender)].field_512 = 0
                                                                sub_fbde1348[address(msg.sender)].field_768 = 0
                                                                stor16[address(msg.sender)].field_0 = 0
                                                                stor16[address(msg.sender)].field_256 = 0
                                                                emit 0x83e21c4d: msg.sender
                                                                call walletAddress with:
                                                                   value msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    if (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= 0:
                                                                    else:
                                                                        call msg.sender with:
                                                                           value (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                                             gas 2300 * is_zero(value) wei
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        else:
                                                    else:
                                                        require 0 <= msg.value
                                                        require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                                        require msg.value > 0
                                                        require -ext_call.return_data[0] + tokenSaleCap > 0
                                                        require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                                        require msg.value + weiRaised >= weiRaised
                                                        weiRaised += msg.value
                                                        require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                        tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                        require ext_code.size(tokenAddress)
                                                        call tokenAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0]
                                                            emit 0x93cae43c: price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, msg.sender, arg1
                                                            require msg.sender
                                                            if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                                call walletAddress with:
                                                                   value msg.value wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                            else:
                                                                require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                                sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                                stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                                stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                                sub_fbde1348[address(msg.sender)].field_0 = 0
                                                                sub_fbde1348[address(msg.sender)].field_256 = 0
                                                                sub_fbde1348[address(msg.sender)].field_512 = 0
                                                                sub_fbde1348[address(msg.sender)].field_768 = 0
                                                                stor16[address(msg.sender)].field_0 = 0
                                                                stor16[address(msg.sender)].field_256 = 0
                                                                emit 0x83e21c4d: msg.sender
                                                                call walletAddress with:
                                                                   value msg.value wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
            else:
                require arg2 == sub_fbde1348[address(msg.sender)].field_256
                require ext_code.size(tokenAddress)
                call tokenAddress.0xfa2299ee with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                else:
                    require return_data.size >= 32
                    require tokenSaleCap > ext_call.return_data[0]
                    require sub_fbde1348[address(msg.sender)].field_256 > 0
                    if msg.value:
                        require 10^18 * msg.value / msg.value == 10^18
                        require sub_fbde1348[address(msg.sender)].field_256
                        require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                        if not arg3:
                            require msg.value > 0
                            require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 > 0
                            require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                            require msg.value + weiRaised >= weiRaised
                            weiRaised += msg.value
                            require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                            tokensSold += 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                            require ext_code.size(tokenAddress)
                            call tokenAddress.0x40c10f19 with:
                                 gas gas_remaining wei
                                args address(arg1), 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit 0x93cae43c: price, msg.value, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, arg1
                                require msg.sender
                                if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                else:
                                    require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                    sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                    stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                    stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                    sub_fbde1348[address(msg.sender)].field_0 = 0
                                    sub_fbde1348[address(msg.sender)].field_256 = 0
                                    sub_fbde1348[address(msg.sender)].field_512 = 0
                                    sub_fbde1348[address(msg.sender)].field_768 = 0
                                    stor16[address(msg.sender)].field_0 = 0
                                    stor16[address(msg.sender)].field_256 = 0
                                    emit 0x83e21c4d: msg.sender
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    else:
                        else:
                            if 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768:
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0xfa2299ee with:
                                     gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require return_data.size >= 32
                                    require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] >= ext_call.return_data[0]
                                    if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] <= tokenSaleCap:
                                        require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                        require msg.value > 0
                                        require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 > 0
                                        require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                        tokensSold += 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args address(arg1), 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require return_data.size >= 32
                                            require ext_call.return_data[0]
                                            emit 0x93cae43c: price, msg.value, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, arg1
                                            require msg.sender
                                            if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                call walletAddress with:
                                                   value msg.value wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                            else:
                                                require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                sub_fbde1348[address(msg.sender)].field_0 = 0
                                                sub_fbde1348[address(msg.sender)].field_256 = 0
                                                sub_fbde1348[address(msg.sender)].field_512 = 0
                                                sub_fbde1348[address(msg.sender)].field_768 = 0
                                                stor16[address(msg.sender)].field_0 = 0
                                                stor16[address(msg.sender)].field_256 = 0
                                                emit 0x83e21c4d: msg.sender
                                                call walletAddress with:
                                                   value msg.value wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                    else:
                                        if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                            require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                            require msg.value > 0
                                            require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 > 0
                                            require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                            require msg.value + weiRaised >= weiRaised
                                            weiRaised += msg.value
                                            require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                            tokensSold += 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args address(arg1), 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                require return_data.size >= 32
                                                require ext_call.return_data[0]
                                                emit 0x93cae43c: price, msg.value, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, arg1
                                                require msg.sender
                                                if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                    call walletAddress with:
                                                       value msg.value wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                else:
                                                    require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                    sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                    stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                    stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                    sub_fbde1348[address(msg.sender)].field_0 = 0
                                                    sub_fbde1348[address(msg.sender)].field_256 = 0
                                                    sub_fbde1348[address(msg.sender)].field_512 = 0
                                                    sub_fbde1348[address(msg.sender)].field_768 = 0
                                                    stor16[address(msg.sender)].field_0 = 0
                                                    stor16[address(msg.sender)].field_256 = 0
                                                    emit 0x83e21c4d: msg.sender
                                                    call walletAddress with:
                                                       value msg.value wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                        else:
                                            require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                            if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap:
                                                require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap == sub_fbde1348[address(msg.sender)].field_256
                                                require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= msg.value
                                                require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                                require msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) > 0
                                                require -ext_call.return_data[0] + tokenSaleCap > 0
                                                require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                                require msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised >= weiRaised
                                                weiRaised = msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised
                                                require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit 0x93cae43c: price, msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18, msg.sender, arg1
                                                    require msg.sender
                                                    if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                        call walletAddress with:
                                                           value msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= 0:
                                                            else:
                                                                call msg.sender with:
                                                                   value (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                    else:
                                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                        sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                        stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                        stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                        sub_fbde1348[address(msg.sender)].field_0 = 0
                                                        sub_fbde1348[address(msg.sender)].field_256 = 0
                                                        sub_fbde1348[address(msg.sender)].field_512 = 0
                                                        sub_fbde1348[address(msg.sender)].field_768 = 0
                                                        stor16[address(msg.sender)].field_0 = 0
                                                        stor16[address(msg.sender)].field_256 = 0
                                                        emit 0x83e21c4d: msg.sender
                                                        call walletAddress with:
                                                           value msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= 0:
                                                            else:
                                                                call msg.sender with:
                                                                   value (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                            else:
                                                require 0 <= msg.value
                                                require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                                require msg.value > 0
                                                require -ext_call.return_data[0] + tokenSaleCap > 0
                                                require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                                require msg.value + weiRaised >= weiRaised
                                                weiRaised += msg.value
                                                require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit 0x93cae43c: price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, msg.sender, arg1
                                                    require msg.sender
                                                    if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                        call walletAddress with:
                                                           value msg.value wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                    else:
                                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                        sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                        stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                        stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                        sub_fbde1348[address(msg.sender)].field_0 = 0
                                                        sub_fbde1348[address(msg.sender)].field_256 = 0
                                                        sub_fbde1348[address(msg.sender)].field_512 = 0
                                                        sub_fbde1348[address(msg.sender)].field_768 = 0
                                                        stor16[address(msg.sender)].field_0 = 0
                                                        stor16[address(msg.sender)].field_256 = 0
                                                        emit 0x83e21c4d: msg.sender
                                                        call walletAddress with:
                                                           value msg.value wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                            else:
                                if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 <= 0:
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0xfa2299ee with:
                                         gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require return_data.size >= 32
                                        require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] >= ext_call.return_data[0]
                                        if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] <= tokenSaleCap:
                                            require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                            require msg.value > 0
                                            require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 > 0
                                            require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                            require msg.value + weiRaised >= weiRaised
                                            weiRaised += msg.value
                                            require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                            tokensSold += 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args address(arg1), 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                require return_data.size >= 32
                                                require ext_call.return_data[0]
                                                emit 0x93cae43c: price, msg.value, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, arg1
                                                require msg.sender
                                                if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                    call walletAddress with:
                                                       value msg.value wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                else:
                                                    require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                    sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                    stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                    stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                    sub_fbde1348[address(msg.sender)].field_0 = 0
                                                    sub_fbde1348[address(msg.sender)].field_256 = 0
                                                    sub_fbde1348[address(msg.sender)].field_512 = 0
                                                    sub_fbde1348[address(msg.sender)].field_768 = 0
                                                    stor16[address(msg.sender)].field_0 = 0
                                                    stor16[address(msg.sender)].field_256 = 0
                                                    emit 0x83e21c4d: msg.sender
                                                    call walletAddress with:
                                                       value msg.value wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                        else:
                                            if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                                require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                                require msg.value > 0
                                                require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 > 0
                                                require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                                require msg.value + weiRaised >= weiRaised
                                                weiRaised += msg.value
                                                require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                                tokensSold += 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit 0x93cae43c: price, msg.value, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, arg1
                                                    require msg.sender
                                                    if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                        call walletAddress with:
                                                           value msg.value wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                    else:
                                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                        sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                        stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                        stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                        sub_fbde1348[address(msg.sender)].field_0 = 0
                                                        sub_fbde1348[address(msg.sender)].field_256 = 0
                                                        sub_fbde1348[address(msg.sender)].field_512 = 0
                                                        sub_fbde1348[address(msg.sender)].field_768 = 0
                                                        stor16[address(msg.sender)].field_0 = 0
                                                        stor16[address(msg.sender)].field_256 = 0
                                                        emit 0x83e21c4d: msg.sender
                                                        call walletAddress with:
                                                           value msg.value wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                            else:
                                                require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                                if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap:
                                                    require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap == sub_fbde1348[address(msg.sender)].field_256
                                                    require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= msg.value
                                                    require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                                    require msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) > 0
                                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                                    require msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised >= weiRaised
                                                    weiRaised = msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised
                                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit 0x93cae43c: price, msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18, msg.sender, arg1
                                                        require msg.sender
                                                        if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                            call walletAddress with:
                                                               value msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= 0:
                                                                else:
                                                                    call msg.sender with:
                                                                       value (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                                         gas 2300 * is_zero(value) wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                        else:
                                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                                            stor16[address(msg.sender)].field_0 = 0
                                                            stor16[address(msg.sender)].field_256 = 0
                                                            emit 0x83e21c4d: msg.sender
                                                            call walletAddress with:
                                                               value msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= 0:
                                                                else:
                                                                    call msg.sender with:
                                                                       value (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                                         gas 2300 * is_zero(value) wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                else:
                                                    require 0 <= msg.value
                                                    require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                                    require msg.value > 0
                                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                                    require msg.value + weiRaised >= weiRaised
                                                    weiRaised += msg.value
                                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit 0x93cae43c: price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, msg.sender, arg1
                                                        require msg.sender
                                                        if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                            call walletAddress with:
                                                               value msg.value wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                        else:
                                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                                            stor16[address(msg.sender)].field_0 = 0
                                                            stor16[address(msg.sender)].field_256 = 0
                                                            emit 0x83e21c4d: msg.sender
                                                            call walletAddress with:
                                                               value msg.value wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                else:
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0xfa2299ee with:
                                         gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require return_data.size >= 32
                                        require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] >= ext_call.return_data[0]
                                        if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] <= tokenSaleCap:
                                            if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 <= 0:
                                                require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                                require msg.value > 0
                                                require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 > 0
                                                require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                                require msg.value + weiRaised >= weiRaised
                                                weiRaised += msg.value
                                                require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                                tokensSold += 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit 0x93cae43c: price, msg.value, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, arg1
                                                    require msg.sender
                                                    if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                        call walletAddress with:
                                                           value msg.value wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                    else:
                                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                        sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                        stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                        stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                        sub_fbde1348[address(msg.sender)].field_0 = 0
                                                        sub_fbde1348[address(msg.sender)].field_256 = 0
                                                        sub_fbde1348[address(msg.sender)].field_512 = 0
                                                        sub_fbde1348[address(msg.sender)].field_768 = 0
                                                        stor16[address(msg.sender)].field_0 = 0
                                                        stor16[address(msg.sender)].field_256 = 0
                                                        emit 0x83e21c4d: msg.sender
                                                        call walletAddress with:
                                                           value msg.value wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                            else:
                                                require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 <= 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                                if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768:
                                                    require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 == sub_fbde1348[address(msg.sender)].field_256
                                                    require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= msg.value
                                                    require sub_fbde1348[address(msg.sender)].field_768 >= sub_fbde1348[address(msg.sender)].field_512
                                                    require msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) > 0
                                                    require sub_fbde1348[address(msg.sender)].field_768 > 0
                                                    require sub_fbde1348[address(msg.sender)].field_768 <= sub_fbde1348[address(msg.sender)].field_768
                                                    require msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised >= weiRaised
                                                    weiRaised = msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised
                                                    require sub_fbde1348[address(msg.sender)].field_768 + tokensSold >= tokensSold
                                                    tokensSold += sub_fbde1348[address(msg.sender)].field_768
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), sub_fbde1348[address(msg.sender)].field_768
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit 0x93cae43c: price, msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18), sub_fbde1348[address(msg.sender)].field_768, (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18, msg.sender, arg1
                                                        require msg.sender
                                                        if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                            call walletAddress with:
                                                               value msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= 0:
                                                                else:
                                                                    call msg.sender with:
                                                                       value (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                                         gas 2300 * is_zero(value) wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                        else:
                                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                                            stor16[address(msg.sender)].field_0 = 0
                                                            stor16[address(msg.sender)].field_256 = 0
                                                            emit 0x83e21c4d: msg.sender
                                                            call walletAddress with:
                                                               value msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= 0:
                                                                else:
                                                                    call msg.sender with:
                                                                       value (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                                         gas 2300 * is_zero(value) wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                else:
                                                    require 0 <= msg.value
                                                    require sub_fbde1348[address(msg.sender)].field_768 >= sub_fbde1348[address(msg.sender)].field_512
                                                    require msg.value > 0
                                                    require sub_fbde1348[address(msg.sender)].field_768 > 0
                                                    require sub_fbde1348[address(msg.sender)].field_768 <= sub_fbde1348[address(msg.sender)].field_768
                                                    require msg.value + weiRaised >= weiRaised
                                                    weiRaised += msg.value
                                                    require sub_fbde1348[address(msg.sender)].field_768 + tokensSold >= tokensSold
                                                    tokensSold += sub_fbde1348[address(msg.sender)].field_768
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), sub_fbde1348[address(msg.sender)].field_768
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit 0x93cae43c: price, msg.value, sub_fbde1348[address(msg.sender)].field_768, 0, msg.sender, arg1
                                                        require msg.sender
                                                        if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                            call walletAddress with:
                                                               value msg.value wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                        else:
                                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                                            stor16[address(msg.sender)].field_0 = 0
                                                            stor16[address(msg.sender)].field_256 = 0
                                                            emit 0x83e21c4d: msg.sender
                                                            call walletAddress with:
                                                               value msg.value wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                        else:
                                            if ext_call.return_data[0] - tokenSaleCap <= -sub_fbde1348[address(msg.sender)].field_768:
                                                if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 <= 0:
                                                    require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                                    require msg.value > 0
                                                    require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 > 0
                                                    require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                                    require msg.value + weiRaised >= weiRaised
                                                    weiRaised += msg.value
                                                    require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                                    tokensSold += 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit 0x93cae43c: price, msg.value, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, arg1
                                                        require msg.sender
                                                        if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                            call walletAddress with:
                                                               value msg.value wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                        else:
                                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                                            stor16[address(msg.sender)].field_0 = 0
                                                            stor16[address(msg.sender)].field_256 = 0
                                                            emit 0x83e21c4d: msg.sender
                                                            call walletAddress with:
                                                               value msg.value wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                else:
                                                    require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 <= 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                                    if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768:
                                                        require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 == sub_fbde1348[address(msg.sender)].field_256
                                                        require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= msg.value
                                                        require sub_fbde1348[address(msg.sender)].field_768 >= sub_fbde1348[address(msg.sender)].field_512
                                                        require msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) > 0
                                                        require sub_fbde1348[address(msg.sender)].field_768 > 0
                                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_fbde1348[address(msg.sender)].field_768
                                                        require msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised >= weiRaised
                                                        weiRaised = msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised
                                                        require sub_fbde1348[address(msg.sender)].field_768 + tokensSold >= tokensSold
                                                        tokensSold += sub_fbde1348[address(msg.sender)].field_768
                                                        require ext_code.size(tokenAddress)
                                                        call tokenAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args address(arg1), sub_fbde1348[address(msg.sender)].field_768
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0]
                                                            emit 0x93cae43c: price, msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18), sub_fbde1348[address(msg.sender)].field_768, (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18, msg.sender, arg1
                                                            require msg.sender
                                                            if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                                call walletAddress with:
                                                                   value msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= 0:
                                                                    else:
                                                                        call msg.sender with:
                                                                           value (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                                             gas 2300 * is_zero(value) wei
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        else:
                                                            else:
                                                                require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                                sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                                stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                                stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                                sub_fbde1348[address(msg.sender)].field_0 = 0
                                                                sub_fbde1348[address(msg.sender)].field_256 = 0
                                                                sub_fbde1348[address(msg.sender)].field_512 = 0
                                                                sub_fbde1348[address(msg.sender)].field_768 = 0
                                                                stor16[address(msg.sender)].field_0 = 0
                                                                stor16[address(msg.sender)].field_256 = 0
                                                                emit 0x83e21c4d: msg.sender
                                                                call walletAddress with:
                                                                   value msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= 0:
                                                                    else:
                                                                        call msg.sender with:
                                                                           value (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                                             gas 2300 * is_zero(value) wei
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        else:
                                                    else:
                                                        require 0 <= msg.value
                                                        require sub_fbde1348[address(msg.sender)].field_768 >= sub_fbde1348[address(msg.sender)].field_512
                                                        require msg.value > 0
                                                        require sub_fbde1348[address(msg.sender)].field_768 > 0
                                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_fbde1348[address(msg.sender)].field_768
                                                        require msg.value + weiRaised >= weiRaised
                                                        weiRaised += msg.value
                                                        require sub_fbde1348[address(msg.sender)].field_768 + tokensSold >= tokensSold
                                                        tokensSold += sub_fbde1348[address(msg.sender)].field_768
                                                        require ext_code.size(tokenAddress)
                                                        call tokenAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args address(arg1), sub_fbde1348[address(msg.sender)].field_768
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0]
                                                            emit 0x93cae43c: price, msg.value, sub_fbde1348[address(msg.sender)].field_768, 0, msg.sender, arg1
                                                            require msg.sender
                                                            if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                                call walletAddress with:
                                                                   value msg.value wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                            else:
                                                                require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                                sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                                stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                                stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                                sub_fbde1348[address(msg.sender)].field_0 = 0
                                                                sub_fbde1348[address(msg.sender)].field_256 = 0
                                                                sub_fbde1348[address(msg.sender)].field_512 = 0
                                                                sub_fbde1348[address(msg.sender)].field_768 = 0
                                                                stor16[address(msg.sender)].field_0 = 0
                                                                stor16[address(msg.sender)].field_256 = 0
                                                                emit 0x83e21c4d: msg.sender
                                                                call walletAddress with:
                                                                   value msg.value wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                            else:
                                                if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                                    require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                                    require msg.value > 0
                                                    require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 > 0
                                                    require 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                                    require msg.value + weiRaised >= weiRaised
                                                    weiRaised += msg.value
                                                    require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                                    tokensSold += 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit 0x93cae43c: price, msg.value, 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, arg1
                                                        require msg.sender
                                                        if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                            call walletAddress with:
                                                               value msg.value wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                        else:
                                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                                            stor16[address(msg.sender)].field_0 = 0
                                                            stor16[address(msg.sender)].field_256 = 0
                                                            emit 0x83e21c4d: msg.sender
                                                            call walletAddress with:
                                                               value msg.value wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                else:
                                                    require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256
                                                    if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap:
                                                        require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap == sub_fbde1348[address(msg.sender)].field_256
                                                        require (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= msg.value
                                                        require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                                        require msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) > 0
                                                        require -ext_call.return_data[0] + tokenSaleCap > 0
                                                        require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                                        require msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised >= weiRaised
                                                        weiRaised = msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised
                                                        require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                        tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                        require ext_code.size(tokenAddress)
                                                        call tokenAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0]
                                                            emit 0x93cae43c: price, msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18, msg.sender, arg1
                                                            require msg.sender
                                                            if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                                call walletAddress with:
                                                                   value msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= 0:
                                                                    else:
                                                                        call msg.sender with:
                                                                           value (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                                             gas 2300 * is_zero(value) wei
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        else:
                                                            else:
                                                                require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                                sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                                stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                                stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                                sub_fbde1348[address(msg.sender)].field_0 = 0
                                                                sub_fbde1348[address(msg.sender)].field_256 = 0
                                                                sub_fbde1348[address(msg.sender)].field_512 = 0
                                                                sub_fbde1348[address(msg.sender)].field_768 = 0
                                                                stor16[address(msg.sender)].field_0 = 0
                                                                stor16[address(msg.sender)].field_256 = 0
                                                                emit 0x83e21c4d: msg.sender
                                                                call walletAddress with:
                                                                   value msg.value - ((10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    if (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= 0:
                                                                    else:
                                                                        call msg.sender with:
                                                                           value (10^18 * msg.value / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                                             gas 2300 * is_zero(value) wei
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        else:
                                                    else:
                                                        require 0 <= msg.value
                                                        require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                                        require msg.value > 0
                                                        require -ext_call.return_data[0] + tokenSaleCap > 0
                                                        require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                                        require msg.value + weiRaised >= weiRaised
                                                        weiRaised += msg.value
                                                        require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                        tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                        require ext_code.size(tokenAddress)
                                                        call tokenAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0]
                                                            emit 0x93cae43c: price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, msg.sender, arg1
                                                            require msg.sender
                                                            if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                                call walletAddress with:
                                                                   value msg.value wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                            else:
                                                                require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                                sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                                stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                                stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                                sub_fbde1348[address(msg.sender)].field_0 = 0
                                                                sub_fbde1348[address(msg.sender)].field_256 = 0
                                                                sub_fbde1348[address(msg.sender)].field_512 = 0
                                                                sub_fbde1348[address(msg.sender)].field_768 = 0
                                                                stor16[address(msg.sender)].field_0 = 0
                                                                stor16[address(msg.sender)].field_256 = 0
                                                                emit 0x83e21c4d: msg.sender
                                                                call walletAddress with:
                                                                   value msg.value wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                    else:
                        require sub_fbde1348[address(msg.sender)].field_256
                        require 0 / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                        if not arg3:
                            require msg.value > 0
                            require 0 / sub_fbde1348[address(msg.sender)].field_256 > 0
                            require 0 / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                            require msg.value + weiRaised >= weiRaised
                            weiRaised += msg.value
                            require (0 / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                            tokensSold += 0 / sub_fbde1348[address(msg.sender)].field_256
                            require ext_code.size(tokenAddress)
                            call tokenAddress.0x40c10f19 with:
                                 gas gas_remaining wei
                                args address(arg1), 0 / sub_fbde1348[address(msg.sender)].field_256
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require return_data.size >= 32
                                require ext_call.return_data[0]
                                emit 0x93cae43c: price, msg.value, 0 / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, arg1
                                require msg.sender
                                if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                else:
                                    require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                    sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                    stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                    stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                    sub_fbde1348[address(msg.sender)].field_0 = 0
                                    sub_fbde1348[address(msg.sender)].field_256 = 0
                                    sub_fbde1348[address(msg.sender)].field_512 = 0
                                    sub_fbde1348[address(msg.sender)].field_768 = 0
                                    stor16[address(msg.sender)].field_0 = 0
                                    stor16[address(msg.sender)].field_256 = 0
                                    emit 0x83e21c4d: msg.sender
                                    call walletAddress with:
                                       value msg.value wei
                                         gas 2300 * is_zero(value) wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    else:
                        else:
                            if 0 / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768:
                                require ext_code.size(tokenAddress)
                                call tokenAddress.0xfa2299ee with:
                                     gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require return_data.size >= 32
                                    require (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] >= ext_call.return_data[0]
                                    if (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] <= tokenSaleCap:
                                        require 0 / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                        require msg.value > 0
                                        require 0 / sub_fbde1348[address(msg.sender)].field_256 > 0
                                        require 0 / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                        require msg.value + weiRaised >= weiRaised
                                        weiRaised += msg.value
                                        require (0 / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                        tokensSold += 0 / sub_fbde1348[address(msg.sender)].field_256
                                        require ext_code.size(tokenAddress)
                                        call tokenAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args address(arg1), 0 / sub_fbde1348[address(msg.sender)].field_256
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require return_data.size >= 32
                                            require ext_call.return_data[0]
                                            emit 0x93cae43c: price, msg.value, 0 / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, arg1
                                            require msg.sender
                                            if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                call walletAddress with:
                                                   value msg.value wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                            else:
                                                require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                sub_fbde1348[address(msg.sender)].field_0 = 0
                                                sub_fbde1348[address(msg.sender)].field_256 = 0
                                                sub_fbde1348[address(msg.sender)].field_512 = 0
                                                sub_fbde1348[address(msg.sender)].field_768 = 0
                                                stor16[address(msg.sender)].field_0 = 0
                                                stor16[address(msg.sender)].field_256 = 0
                                                emit 0x83e21c4d: msg.sender
                                                call walletAddress with:
                                                   value msg.value wei
                                                     gas 2300 * is_zero(value) wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                    else:
                                        if (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                            require 0 / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                            require msg.value > 0
                                            require 0 / sub_fbde1348[address(msg.sender)].field_256 > 0
                                            require 0 / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                            require msg.value + weiRaised >= weiRaised
                                            weiRaised += msg.value
                                            require (0 / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                            tokensSold += 0 / sub_fbde1348[address(msg.sender)].field_256
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args address(arg1), 0 / sub_fbde1348[address(msg.sender)].field_256
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                require return_data.size >= 32
                                                require ext_call.return_data[0]
                                                emit 0x93cae43c: price, msg.value, 0 / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, arg1
                                                require msg.sender
                                                if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                    call walletAddress with:
                                                       value msg.value wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                else:
                                                    require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                    sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                    stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                    stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                    sub_fbde1348[address(msg.sender)].field_0 = 0
                                                    sub_fbde1348[address(msg.sender)].field_256 = 0
                                                    sub_fbde1348[address(msg.sender)].field_512 = 0
                                                    sub_fbde1348[address(msg.sender)].field_768 = 0
                                                    stor16[address(msg.sender)].field_0 = 0
                                                    stor16[address(msg.sender)].field_256 = 0
                                                    emit 0x83e21c4d: msg.sender
                                                    call walletAddress with:
                                                       value msg.value wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                        else:
                                            require (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 0 / sub_fbde1348[address(msg.sender)].field_256
                                            if (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap:
                                                require (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap == sub_fbde1348[address(msg.sender)].field_256
                                                require (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= msg.value
                                                require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                                require msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) > 0
                                                require -ext_call.return_data[0] + tokenSaleCap > 0
                                                require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                                require msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised >= weiRaised
                                                weiRaised = msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised
                                                require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit 0x93cae43c: price, msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18, msg.sender, arg1
                                                    require msg.sender
                                                    if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                        call walletAddress with:
                                                           value msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= 0:
                                                            else:
                                                                call msg.sender with:
                                                                   value (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                    else:
                                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                        sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                        stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                        stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                        sub_fbde1348[address(msg.sender)].field_0 = 0
                                                        sub_fbde1348[address(msg.sender)].field_256 = 0
                                                        sub_fbde1348[address(msg.sender)].field_512 = 0
                                                        sub_fbde1348[address(msg.sender)].field_768 = 0
                                                        stor16[address(msg.sender)].field_0 = 0
                                                        stor16[address(msg.sender)].field_256 = 0
                                                        emit 0x83e21c4d: msg.sender
                                                        call walletAddress with:
                                                           value msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= 0:
                                                            else:
                                                                call msg.sender with:
                                                                   value (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                            else:
                                                require 0 <= msg.value
                                                require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                                require msg.value > 0
                                                require -ext_call.return_data[0] + tokenSaleCap > 0
                                                require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                                require msg.value + weiRaised >= weiRaised
                                                weiRaised += msg.value
                                                require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit 0x93cae43c: price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, msg.sender, arg1
                                                    require msg.sender
                                                    if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                        call walletAddress with:
                                                           value msg.value wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                    else:
                                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                        sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                        stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                        stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                        sub_fbde1348[address(msg.sender)].field_0 = 0
                                                        sub_fbde1348[address(msg.sender)].field_256 = 0
                                                        sub_fbde1348[address(msg.sender)].field_512 = 0
                                                        sub_fbde1348[address(msg.sender)].field_768 = 0
                                                        stor16[address(msg.sender)].field_0 = 0
                                                        stor16[address(msg.sender)].field_256 = 0
                                                        emit 0x83e21c4d: msg.sender
                                                        call walletAddress with:
                                                           value msg.value wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                            else:
                                if (0 / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 <= 0:
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0xfa2299ee with:
                                         gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require return_data.size >= 32
                                        require (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] >= ext_call.return_data[0]
                                        if (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] <= tokenSaleCap:
                                            require 0 / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                            require msg.value > 0
                                            require 0 / sub_fbde1348[address(msg.sender)].field_256 > 0
                                            require 0 / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                            require msg.value + weiRaised >= weiRaised
                                            weiRaised += msg.value
                                            require (0 / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                            tokensSold += 0 / sub_fbde1348[address(msg.sender)].field_256
                                            require ext_code.size(tokenAddress)
                                            call tokenAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args address(arg1), 0 / sub_fbde1348[address(msg.sender)].field_256
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                require return_data.size >= 32
                                                require ext_call.return_data[0]
                                                emit 0x93cae43c: price, msg.value, 0 / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, arg1
                                                require msg.sender
                                                if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                    call walletAddress with:
                                                       value msg.value wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                else:
                                                    require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                    sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                    stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                    stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                    sub_fbde1348[address(msg.sender)].field_0 = 0
                                                    sub_fbde1348[address(msg.sender)].field_256 = 0
                                                    sub_fbde1348[address(msg.sender)].field_512 = 0
                                                    sub_fbde1348[address(msg.sender)].field_768 = 0
                                                    stor16[address(msg.sender)].field_0 = 0
                                                    stor16[address(msg.sender)].field_256 = 0
                                                    emit 0x83e21c4d: msg.sender
                                                    call walletAddress with:
                                                       value msg.value wei
                                                         gas 2300 * is_zero(value) wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                        else:
                                            if (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                                require 0 / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                                require msg.value > 0
                                                require 0 / sub_fbde1348[address(msg.sender)].field_256 > 0
                                                require 0 / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                                require msg.value + weiRaised >= weiRaised
                                                weiRaised += msg.value
                                                require (0 / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                                tokensSold += 0 / sub_fbde1348[address(msg.sender)].field_256
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), 0 / sub_fbde1348[address(msg.sender)].field_256
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit 0x93cae43c: price, msg.value, 0 / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, arg1
                                                    require msg.sender
                                                    if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                        call walletAddress with:
                                                           value msg.value wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                    else:
                                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                        sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                        stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                        stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                        sub_fbde1348[address(msg.sender)].field_0 = 0
                                                        sub_fbde1348[address(msg.sender)].field_256 = 0
                                                        sub_fbde1348[address(msg.sender)].field_512 = 0
                                                        sub_fbde1348[address(msg.sender)].field_768 = 0
                                                        stor16[address(msg.sender)].field_0 = 0
                                                        stor16[address(msg.sender)].field_256 = 0
                                                        emit 0x83e21c4d: msg.sender
                                                        call walletAddress with:
                                                           value msg.value wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                            else:
                                                require (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 0 / sub_fbde1348[address(msg.sender)].field_256
                                                if (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap:
                                                    require (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap == sub_fbde1348[address(msg.sender)].field_256
                                                    require (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= msg.value
                                                    require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                                    require msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) > 0
                                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                                    require msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised >= weiRaised
                                                    weiRaised = msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised
                                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit 0x93cae43c: price, msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18, msg.sender, arg1
                                                        require msg.sender
                                                        if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                            call walletAddress with:
                                                               value msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                if (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= 0:
                                                                else:
                                                                    call msg.sender with:
                                                                       value (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                                         gas 2300 * is_zero(value) wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                        else:
                                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                                            stor16[address(msg.sender)].field_0 = 0
                                                            stor16[address(msg.sender)].field_256 = 0
                                                            emit 0x83e21c4d: msg.sender
                                                            call walletAddress with:
                                                               value msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                if (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= 0:
                                                                else:
                                                                    call msg.sender with:
                                                                       value (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                                         gas 2300 * is_zero(value) wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                else:
                                                    require 0 <= msg.value
                                                    require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                                    require msg.value > 0
                                                    require -ext_call.return_data[0] + tokenSaleCap > 0
                                                    require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                                    require msg.value + weiRaised >= weiRaised
                                                    weiRaised += msg.value
                                                    require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                    tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit 0x93cae43c: price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, msg.sender, arg1
                                                        require msg.sender
                                                        if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                            call walletAddress with:
                                                               value msg.value wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                        else:
                                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                                            stor16[address(msg.sender)].field_0 = 0
                                                            stor16[address(msg.sender)].field_256 = 0
                                                            emit 0x83e21c4d: msg.sender
                                                            call walletAddress with:
                                                               value msg.value wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                else:
                                    require ext_code.size(tokenAddress)
                                    call tokenAddress.0xfa2299ee with:
                                         gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require return_data.size >= 32
                                        require (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] >= ext_call.return_data[0]
                                        if (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] <= tokenSaleCap:
                                            if (0 / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 <= 0:
                                                require 0 / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                                require msg.value > 0
                                                require 0 / sub_fbde1348[address(msg.sender)].field_256 > 0
                                                require 0 / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                                require msg.value + weiRaised >= weiRaised
                                                weiRaised += msg.value
                                                require (0 / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                                tokensSold += 0 / sub_fbde1348[address(msg.sender)].field_256
                                                require ext_code.size(tokenAddress)
                                                call tokenAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args address(arg1), 0 / sub_fbde1348[address(msg.sender)].field_256
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0]
                                                    emit 0x93cae43c: price, msg.value, 0 / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, arg1
                                                    require msg.sender
                                                    if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                        call walletAddress with:
                                                           value msg.value wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                    else:
                                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                        sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                        stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                        stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                        sub_fbde1348[address(msg.sender)].field_0 = 0
                                                        sub_fbde1348[address(msg.sender)].field_256 = 0
                                                        sub_fbde1348[address(msg.sender)].field_512 = 0
                                                        sub_fbde1348[address(msg.sender)].field_768 = 0
                                                        stor16[address(msg.sender)].field_0 = 0
                                                        stor16[address(msg.sender)].field_256 = 0
                                                        emit 0x83e21c4d: msg.sender
                                                        call walletAddress with:
                                                           value msg.value wei
                                                             gas 2300 * is_zero(value) wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                            else:
                                                require (0 / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 <= 0 / sub_fbde1348[address(msg.sender)].field_256
                                                if (0 / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768:
                                                    require (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / (0 / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 == sub_fbde1348[address(msg.sender)].field_256
                                                    require (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= msg.value
                                                    require sub_fbde1348[address(msg.sender)].field_768 >= sub_fbde1348[address(msg.sender)].field_512
                                                    require msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) > 0
                                                    require sub_fbde1348[address(msg.sender)].field_768 > 0
                                                    require sub_fbde1348[address(msg.sender)].field_768 <= sub_fbde1348[address(msg.sender)].field_768
                                                    require msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised >= weiRaised
                                                    weiRaised = msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised
                                                    require sub_fbde1348[address(msg.sender)].field_768 + tokensSold >= tokensSold
                                                    tokensSold += sub_fbde1348[address(msg.sender)].field_768
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), sub_fbde1348[address(msg.sender)].field_768
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit 0x93cae43c: price, msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18), sub_fbde1348[address(msg.sender)].field_768, (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18, msg.sender, arg1
                                                        require msg.sender
                                                        if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                            call walletAddress with:
                                                               value msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                if (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= 0:
                                                                else:
                                                                    call msg.sender with:
                                                                       value (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                                         gas 2300 * is_zero(value) wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                        else:
                                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                                            stor16[address(msg.sender)].field_0 = 0
                                                            stor16[address(msg.sender)].field_256 = 0
                                                            emit 0x83e21c4d: msg.sender
                                                            call walletAddress with:
                                                               value msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                if (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= 0:
                                                                else:
                                                                    call msg.sender with:
                                                                       value (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                                         gas 2300 * is_zero(value) wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                else:
                                                    require 0 <= msg.value
                                                    require sub_fbde1348[address(msg.sender)].field_768 >= sub_fbde1348[address(msg.sender)].field_512
                                                    require msg.value > 0
                                                    require sub_fbde1348[address(msg.sender)].field_768 > 0
                                                    require sub_fbde1348[address(msg.sender)].field_768 <= sub_fbde1348[address(msg.sender)].field_768
                                                    require msg.value + weiRaised >= weiRaised
                                                    weiRaised += msg.value
                                                    require sub_fbde1348[address(msg.sender)].field_768 + tokensSold >= tokensSold
                                                    tokensSold += sub_fbde1348[address(msg.sender)].field_768
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), sub_fbde1348[address(msg.sender)].field_768
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit 0x93cae43c: price, msg.value, sub_fbde1348[address(msg.sender)].field_768, 0, msg.sender, arg1
                                                        require msg.sender
                                                        if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                            call walletAddress with:
                                                               value msg.value wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                        else:
                                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                                            stor16[address(msg.sender)].field_0 = 0
                                                            stor16[address(msg.sender)].field_256 = 0
                                                            emit 0x83e21c4d: msg.sender
                                                            call walletAddress with:
                                                               value msg.value wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                        else:
                                            if ext_call.return_data[0] - tokenSaleCap <= -sub_fbde1348[address(msg.sender)].field_768:
                                                if (0 / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 <= 0:
                                                    require 0 / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                                    require msg.value > 0
                                                    require 0 / sub_fbde1348[address(msg.sender)].field_256 > 0
                                                    require 0 / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                                    require msg.value + weiRaised >= weiRaised
                                                    weiRaised += msg.value
                                                    require (0 / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                                    tokensSold += 0 / sub_fbde1348[address(msg.sender)].field_256
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), 0 / sub_fbde1348[address(msg.sender)].field_256
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit 0x93cae43c: price, msg.value, 0 / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, arg1
                                                        require msg.sender
                                                        if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                            call walletAddress with:
                                                               value msg.value wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                        else:
                                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                                            stor16[address(msg.sender)].field_0 = 0
                                                            stor16[address(msg.sender)].field_256 = 0
                                                            emit 0x83e21c4d: msg.sender
                                                            call walletAddress with:
                                                               value msg.value wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                else:
                                                    require (0 / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 <= 0 / sub_fbde1348[address(msg.sender)].field_256
                                                    if (0 / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768:
                                                        require (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / (0 / sub_fbde1348[address(msg.sender)].field_256) - sub_fbde1348[address(msg.sender)].field_768 == sub_fbde1348[address(msg.sender)].field_256
                                                        require (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= msg.value
                                                        require sub_fbde1348[address(msg.sender)].field_768 >= sub_fbde1348[address(msg.sender)].field_512
                                                        require msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) > 0
                                                        require sub_fbde1348[address(msg.sender)].field_768 > 0
                                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_fbde1348[address(msg.sender)].field_768
                                                        require msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised >= weiRaised
                                                        weiRaised = msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised
                                                        require sub_fbde1348[address(msg.sender)].field_768 + tokensSold >= tokensSold
                                                        tokensSold += sub_fbde1348[address(msg.sender)].field_768
                                                        require ext_code.size(tokenAddress)
                                                        call tokenAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args address(arg1), sub_fbde1348[address(msg.sender)].field_768
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0]
                                                            emit 0x93cae43c: price, msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18), sub_fbde1348[address(msg.sender)].field_768, (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18, msg.sender, arg1
                                                            require msg.sender
                                                            if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                                call walletAddress with:
                                                                   value msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    if (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= 0:
                                                                    else:
                                                                        call msg.sender with:
                                                                           value (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                                             gas 2300 * is_zero(value) wei
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        else:
                                                            else:
                                                                require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                                sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                                stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                                stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                                sub_fbde1348[address(msg.sender)].field_0 = 0
                                                                sub_fbde1348[address(msg.sender)].field_256 = 0
                                                                sub_fbde1348[address(msg.sender)].field_512 = 0
                                                                sub_fbde1348[address(msg.sender)].field_768 = 0
                                                                stor16[address(msg.sender)].field_0 = 0
                                                                stor16[address(msg.sender)].field_256 = 0
                                                                emit 0x83e21c4d: msg.sender
                                                                call walletAddress with:
                                                                   value msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    if (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= 0:
                                                                    else:
                                                                        call msg.sender with:
                                                                           value (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) - (sub_fbde1348[address(msg.sender)].field_768 * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                                             gas 2300 * is_zero(value) wei
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        else:
                                                    else:
                                                        require 0 <= msg.value
                                                        require sub_fbde1348[address(msg.sender)].field_768 >= sub_fbde1348[address(msg.sender)].field_512
                                                        require msg.value > 0
                                                        require sub_fbde1348[address(msg.sender)].field_768 > 0
                                                        require sub_fbde1348[address(msg.sender)].field_768 <= sub_fbde1348[address(msg.sender)].field_768
                                                        require msg.value + weiRaised >= weiRaised
                                                        weiRaised += msg.value
                                                        require sub_fbde1348[address(msg.sender)].field_768 + tokensSold >= tokensSold
                                                        tokensSold += sub_fbde1348[address(msg.sender)].field_768
                                                        require ext_code.size(tokenAddress)
                                                        call tokenAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args address(arg1), sub_fbde1348[address(msg.sender)].field_768
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0]
                                                            emit 0x93cae43c: price, msg.value, sub_fbde1348[address(msg.sender)].field_768, 0, msg.sender, arg1
                                                            require msg.sender
                                                            if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                                call walletAddress with:
                                                                   value msg.value wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                            else:
                                                                require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                                sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                                stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                                stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                                sub_fbde1348[address(msg.sender)].field_0 = 0
                                                                sub_fbde1348[address(msg.sender)].field_256 = 0
                                                                sub_fbde1348[address(msg.sender)].field_512 = 0
                                                                sub_fbde1348[address(msg.sender)].field_768 = 0
                                                                stor16[address(msg.sender)].field_0 = 0
                                                                stor16[address(msg.sender)].field_256 = 0
                                                                emit 0x83e21c4d: msg.sender
                                                                call walletAddress with:
                                                                   value msg.value wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                            else:
                                                if (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 0:
                                                    require 0 / sub_fbde1348[address(msg.sender)].field_256 >= sub_fbde1348[address(msg.sender)].field_512
                                                    require msg.value > 0
                                                    require 0 / sub_fbde1348[address(msg.sender)].field_256 > 0
                                                    require 0 / sub_fbde1348[address(msg.sender)].field_256 <= sub_fbde1348[address(msg.sender)].field_768
                                                    require msg.value + weiRaised >= weiRaised
                                                    weiRaised += msg.value
                                                    require (0 / sub_fbde1348[address(msg.sender)].field_256) + tokensSold >= tokensSold
                                                    tokensSold += 0 / sub_fbde1348[address(msg.sender)].field_256
                                                    require ext_code.size(tokenAddress)
                                                    call tokenAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args address(arg1), 0 / sub_fbde1348[address(msg.sender)].field_256
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0]
                                                        emit 0x93cae43c: price, msg.value, 0 / sub_fbde1348[address(msg.sender)].field_256, 0, msg.sender, arg1
                                                        require msg.sender
                                                        if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                            call walletAddress with:
                                                               value msg.value wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                        else:
                                                            require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                            sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                            stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                            stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                            sub_fbde1348[address(msg.sender)].field_0 = 0
                                                            sub_fbde1348[address(msg.sender)].field_256 = 0
                                                            sub_fbde1348[address(msg.sender)].field_512 = 0
                                                            sub_fbde1348[address(msg.sender)].field_768 = 0
                                                            stor16[address(msg.sender)].field_0 = 0
                                                            stor16[address(msg.sender)].field_256 = 0
                                                            emit 0x83e21c4d: msg.sender
                                                            call walletAddress with:
                                                               value msg.value wei
                                                                 gas 2300 * is_zero(value) wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                else:
                                                    require (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap <= 0 / sub_fbde1348[address(msg.sender)].field_256
                                                    if (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap:
                                                        require (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / (0 / sub_fbde1348[address(msg.sender)].field_256) + ext_call.return_data[0] - tokenSaleCap == sub_fbde1348[address(msg.sender)].field_256
                                                        require (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= msg.value
                                                        require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                                        require msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) > 0
                                                        require -ext_call.return_data[0] + tokenSaleCap > 0
                                                        require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                                        require msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised >= weiRaised
                                                        weiRaised = msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) + weiRaised
                                                        require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                        tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                        require ext_code.size(tokenAddress)
                                                        call tokenAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0]
                                                            emit 0x93cae43c: price, msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18), -ext_call.return_data[0] + tokenSaleCap, (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18, msg.sender, arg1
                                                            require msg.sender
                                                            if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                                call walletAddress with:
                                                                   value msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    if (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= 0:
                                                                    else:
                                                                        call msg.sender with:
                                                                           value (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                                             gas 2300 * is_zero(value) wei
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        else:
                                                            else:
                                                                require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                                sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                                stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                                stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                                sub_fbde1348[address(msg.sender)].field_0 = 0
                                                                sub_fbde1348[address(msg.sender)].field_256 = 0
                                                                sub_fbde1348[address(msg.sender)].field_512 = 0
                                                                sub_fbde1348[address(msg.sender)].field_768 = 0
                                                                stor16[address(msg.sender)].field_0 = 0
                                                                stor16[address(msg.sender)].field_256 = 0
                                                                emit 0x83e21c4d: msg.sender
                                                                call walletAddress with:
                                                                   value msg.value - ((0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18) wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    if (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 <= 0:
                                                                    else:
                                                                        call msg.sender with:
                                                                           value (0 / sub_fbde1348[address(msg.sender)].field_256 * sub_fbde1348[address(msg.sender)].field_256) + (ext_call.return_data[0] * sub_fbde1348[address(msg.sender)].field_256) - (tokenSaleCap * sub_fbde1348[address(msg.sender)].field_256) / 10^18 wei
                                                                             gas 2300 * is_zero(value) wei
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        else:
                                                    else:
                                                        require 0 <= msg.value
                                                        require -ext_call.return_data[0] + tokenSaleCap >= sub_fbde1348[address(msg.sender)].field_512
                                                        require msg.value > 0
                                                        require -ext_call.return_data[0] + tokenSaleCap > 0
                                                        require -ext_call.return_data[0] + tokenSaleCap <= sub_fbde1348[address(msg.sender)].field_768
                                                        require msg.value + weiRaised >= weiRaised
                                                        weiRaised += msg.value
                                                        require -ext_call.return_data[0] + tokenSaleCap + tokensSold >= tokensSold
                                                        tokensSold = -ext_call.return_data[0] + tokenSaleCap + tokensSold
                                                        require ext_code.size(tokenAddress)
                                                        call tokenAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args address(arg1), -ext_call.return_data[0] + tokenSaleCap
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0]
                                                            emit 0x93cae43c: price, msg.value, -ext_call.return_data[0] + tokenSaleCap, 0, msg.sender, arg1
                                                            require msg.sender
                                                            if sub_fbde1348[address(msg.sender)].field_0 <= 0:
                                                                call walletAddress with:
                                                                   value msg.value wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                            else:
                                                                require sub_fbde1348[address(msg.sender)].field_768 <= sub_0d27577e
                                                                sub_0d27577e -= sub_fbde1348[address(msg.sender)].field_768
                                                                stor16[stor16[address(msg.sender)].field_0].field_256 = stor16[address(msg.sender)].field_256
                                                                stor16[stor16[address(msg.sender)].field_256].field_0 = stor16[address(msg.sender)].field_0
                                                                sub_fbde1348[address(msg.sender)].field_0 = 0
                                                                sub_fbde1348[address(msg.sender)].field_256 = 0
                                                                sub_fbde1348[address(msg.sender)].field_512 = 0
                                                                sub_fbde1348[address(msg.sender)].field_768 = 0
                                                                stor16[address(msg.sender)].field_0 = 0
                                                                stor16[address(msg.sender)].field_256 = 0
                                                                emit 0x83e21c4d: msg.sender
                                                                call walletAddress with:
                                                                   value msg.value wei
                                                                     gas 2300 * is_zero(value) wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
}



}
