contract main {




// =====================  Runtime code  =====================


address stor0;
address sub_41c78bedAddress;
uint32 sub_b58e0bc5;
uint32 sub_6f0a3abd; offset 32
uint256 stor11;
uint8 frozen;
uint8 sub_80f7133d; offset 8
uint256 stor12; offset 8
address sub_6cdba9bbAddress;
address sub_55721f5aAddress;
address sub_43d71909Address;
array of address sub_5942ea99;
array of uint256 stor6;
uint8 sub_1b761b5c; offset 16
uint8 sub_1076287c; offset 24
uint8 sub_8595d65b; offset 32
uint16 sub_c3f5bc5f;
mapping of uint256 sub_11bc91c9;
mapping of uint256 sub_335133a7;

function sub_1076287c(?) {
    return bool(sub_1076287c)
}

function sub_11bc91c9(?) {
    return sub_11bc91c9[arg1]
}

function sub_1b761b5c(?) {
    return bool(sub_1b761b5c)
}

function sub_335133a7(?) {
    return sub_335133a7[arg1]
}

function sub_41c78bed(?) {
    return sub_41c78bedAddress
}

function sub_43d71909(?) {
    return sub_43d71909Address
}

function sub_55721f5a(?) {
    return sub_55721f5aAddress
}

function sub_5942ea99(?) {
    require arg1 < sub_5942ea99.length
    return sub_5942ea99[arg1]
}

function sub_6cdba9bb(?) {
    return sub_6cdba9bbAddress
}

function sub_6f0a3abd(?) {
    return sub_6f0a3abd
}

function sub_80f7133d(?) {
    return bool(sub_80f7133d)
}

function sub_8595d65b(?) {
    return bool(sub_8595d65b)
}

function sub_a2951b96(?) {
    require arg1 < stor6.length
    return sub_a2951b96[uint8(arg1)]
}

function Frozen() {
    return bool(frozen)
}

function sub_b58e0bc5(?) {
    return sub_b58e0bc5
}

function sub_c3f5bc5f(?) {
    return sub_c3f5bc5f
}

function isContract(address arg1) {
    return (ext_code.size(arg1) > 0)
}

function sub_b8129c6b(?) {
    if arg1 != sub_43d71909Address:
        return bool(sub_1076287c)
    return 1
}

function Freeze() {
    if frozen:
        revert with 0, 'Contract is Frozen'
    if sub_41c78bedAddress != msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Only contract Manager can use this function'
    frozen = 1
    emit 0xa013a6ba: msg.sender, block.number
    return 1
}

function Thaw() {
    if sub_41c78bedAddress != msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Only contract Manager can use this function'
    if not frozen:
        revert with 0, 'Contract is not Frozen'
    frozen = 0
    emit 0x5737d085: msg.sender, block.number
    return 1
}

function sub_fb722529(?) {
    if sub_41c78bedAddress != msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Only contract Manager can use this function'
    if sub_80f7133d:
        revert with 0, 'Contract is Archived'
    stor12 = 1
    emit 0x67c44f7f: msg.sender, block.number
    return 1
}

function sub_edddc3f5(?) {
    if frozen:
        revert with 0, 'Contract is Frozen'
    if sub_41c78bedAddress != msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Only contract Manager can use this function'
    sub_11bc91c9[address(this.address)] += arg1
    sub_335133a7[address(this.address)]++
    emit 0x19b6939f: msg.sender, arg1
    return 1
}

function tokenFallback(address arg1, uint256 arg2) {
    if frozen:
        revert with 0, 'Contract is Frozen'
    if sub_80f7133d:
        revert with 0, 'Contract is Archived'
    stor11++
    if sub_1b761b5c:
        require ext_code.size(sub_55721f5aAddress)
        call sub_55721f5aAddress.0x6873c96f with:
             gas gas_remaining wei
            args arg1
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            revert with 0, 'Sender must be a verified wallet'
    if sub_43d71909Address != msg.sender:
        if not sub_1076287c:
            revert with 0, 'Cannot Receive That Token'
    require uint32(100 * sub_b58e0bc5)
    require ext_code.size(msg.sender)
    call msg.sender.0xa9059cbb with:
         gas gas_remaining wei
        args sub_6cdba9bbAddress, sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        revert with 0, 'Could Not Transfer Cangea Fee'
    s = 0
    idx = 0
    s = sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5)
    while uint16(idx) < uint16(sub_c3f5bc5f - 1):
        require uint16(idx) < stor6.length
        require uint32(100 * sub_b58e0bc5)
        require (arg2 * stor('array', ('mask_shl', 13, 3, -3, ('var', 0)), ('name', 'stor6', 6))[uint8(idx)]) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * stor('array', ('mask_shl', 13, 3, -3, ('var', 0)), ('name', 'stor6', 6))[uint8(idx)]) / uint32(100 * sub_b58e0bc5) < arg2
        require uint16(idx) < sub_5942ea99.length
        mem[0] = 5
        mem[100] = sub_5942ea99[uint16(idx)]
        mem[132] = (arg2 * stor('array', ('mask_shl', 13, 3, -3, ('var', 0)), ('name', 'stor6', 6))[uint8(idx)]) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * stor('array', ('mask_shl', 13, 3, -3, ('var', 0)), ('name', 'stor6', 6))[uint8(idx)]) / uint32(100 * sub_b58e0bc5)
        require ext_code.size(msg.sender)
        call msg.sender.0xa9059cbb with:
             gas gas_remaining wei
            args sub_5942ea99[uint16(idx)], (arg2 * stor('array', ('mask_shl', 13, 3, -3, ('var', 0)), ('name', 'stor6', 6))[uint8(idx)]) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * stor('array', ('mask_shl', 13, 3, -3, ('var', 0)), ('name', 'stor6', 6))[uint8(idx)]) / uint32(100 * sub_b58e0bc5)
        mem[96] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            revert with 0, 'Could Not Transfer Percentage Split'
        s = (arg2 * stor('array', ('mask_shl', 13, 3, -3, ('var', 0)), ('name', 'stor6', 6))[uint8(idx)]) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * stor('array', ('mask_shl', 13, 3, -3, ('var', 0)), ('name', 'stor6', 6))[uint8(idx)]) / uint32(100 * sub_b58e0bc5)
        idx = idx + 1
        s = s + ((arg2 * stor('array', ('mask_shl', 13, 3, -3, ('var', 0)), ('name', 'stor6', 6))[uint8(idx)]) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * stor('array', ('mask_shl', 13, 3, -3, ('var', 0)), ('name', 'stor6', 6))[uint8(idx)]) / uint32(100 * sub_b58e0bc5))
        continue 
    require uint16(None) < sub_5942ea99.length
    require ext_code.size(msg.sender)
    call msg.sender.0xa9059cbb with:
         gas gas_remaining wei
        args sub_5942ea99[uint16(None)], arg2 - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5)) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (s * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        revert with 0, 'Could Not Transfer Percentage Split'
    sub_11bc91c9[address(msg.sender)] += arg2
    sub_335133a7[address(msg.sender)]++
    emit 0xc5792853: msg.sender, arg1, arg2
    if stor11 != stor11:
        revert with 0, 'Cannot Create Payment Loop'
}

function tokenFallback(address arg1, uint256 arg2, bytes arg3) {
    if frozen:
        revert with 0, 'Contract is Frozen'
    if sub_80f7133d:
        revert with 0, 'Contract is Archived'
    stor11++
    if sub_1b761b5c:
        require ext_code.size(sub_55721f5aAddress)
        call sub_55721f5aAddress.0x6873c96f with:
             gas gas_remaining wei
            args arg1
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            revert with 0, 'Sender must be a verified wallet'
    if sub_43d71909Address != msg.sender:
        if not sub_1076287c:
            revert with 0, 'Cannot Receive That Token'
    require uint32(100 * sub_b58e0bc5)
    require ext_code.size(msg.sender)
    call msg.sender.0xa9059cbb with:
         gas gas_remaining wei
        args sub_6cdba9bbAddress, sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        revert with 0, 'Could Not Transfer Cangea Fee'
    s = 0
    idx = 0
    s = sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5)
    while uint16(idx) < uint16(sub_c3f5bc5f - 1):
        require uint16(idx) < stor6.length
        require uint32(100 * sub_b58e0bc5)
        require (arg2 * stor('array', ('mask_shl', 13, 3, -3, ('var', 0)), ('name', 'stor6', 6))[uint8(idx)]) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * stor('array', ('mask_shl', 13, 3, -3, ('var', 0)), ('name', 'stor6', 6))[uint8(idx)]) / uint32(100 * sub_b58e0bc5) < arg2
        require uint16(idx) < sub_5942ea99.length
        mem[0] = 5
        mem[ceil32(arg3.length) + 132] = sub_5942ea99[uint16(idx)]
        mem[ceil32(arg3.length) + 164] = (arg2 * stor('array', ('mask_shl', 13, 3, -3, ('var', 0)), ('name', 'stor6', 6))[uint8(idx)]) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * stor('array', ('mask_shl', 13, 3, -3, ('var', 0)), ('name', 'stor6', 6))[uint8(idx)]) / uint32(100 * sub_b58e0bc5)
        require ext_code.size(msg.sender)
        call msg.sender.0xa9059cbb with:
             gas gas_remaining wei
            args sub_5942ea99[uint16(idx)], (arg2 * stor('array', ('mask_shl', 13, 3, -3, ('var', 0)), ('name', 'stor6', 6))[uint8(idx)]) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * stor('array', ('mask_shl', 13, 3, -3, ('var', 0)), ('name', 'stor6', 6))[uint8(idx)]) / uint32(100 * sub_b58e0bc5)
        mem[ceil32(arg3.length) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            revert with 0, 'Could Not Transfer Percentage Split'
        s = (arg2 * stor('array', ('mask_shl', 13, 3, -3, ('var', 0)), ('name', 'stor6', 6))[uint8(idx)]) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * stor('array', ('mask_shl', 13, 3, -3, ('var', 0)), ('name', 'stor6', 6))[uint8(idx)]) / uint32(100 * sub_b58e0bc5)
        idx = idx + 1
        s = s + ((arg2 * stor('array', ('mask_shl', 13, 3, -3, ('var', 0)), ('name', 'stor6', 6))[uint8(idx)]) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * stor('array', ('mask_shl', 13, 3, -3, ('var', 0)), ('name', 'stor6', 6))[uint8(idx)]) / uint32(100 * sub_b58e0bc5))
        continue 
    require uint16(None) < sub_5942ea99.length
    require ext_code.size(msg.sender)
    call msg.sender.0xa9059cbb with:
         gas gas_remaining wei
        args sub_5942ea99[uint16(None)], arg2 - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5)) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * arg2 / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (s * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        revert with 0, 'Could Not Transfer Percentage Split'
    sub_11bc91c9[address(msg.sender)] += arg2
    sub_335133a7[address(msg.sender)]++
    emit 0xc5792853: msg.sender, arg1, arg2
    if stor11 != stor11:
        revert with 0, 'Cannot Create Payment Loop'
}

function sub_a9ba327c(?) {
    require ext_code.size(stor0)
    call stor0.0x24d7806c with:
         gas gas_remaining wei
        args msg.sender
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        revert with 0, 'Must be an Administrator'
    require ext_code.size(arg1)
    call arg1.0x70a08231 with:
         gas gas_remaining wei
        args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] > 0:
        if frozen:
            revert with 0, 'Contract is Frozen'
        if sub_80f7133d:
            revert with 0, 'Contract is Archived'
        stor11++
        if sub_1b761b5c:
            require ext_code.size(sub_55721f5aAddress)
            call sub_55721f5aAddress.0x6873c96f with:
                 gas gas_remaining wei
                args arg1
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                revert with 0, 'Sender must be a verified wallet'
        if sub_43d71909Address != msg.sender:
            if not sub_1076287c:
                revert with 0, 'Cannot Receive That Token'
        require uint32(100 * sub_b58e0bc5)
        require ext_code.size(arg1)
        call arg1.0xa9059cbb with:
             gas gas_remaining wei
            args sub_6cdba9bbAddress, sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5)
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            revert with 0, 'Could Not Transfer Cangea Fee'
        s = 0
        idx = 0
        s = sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5)
        while uint16(idx) < uint16(sub_c3f5bc5f - 1):
            require uint16(idx) < stor6.length
            require uint32(100 * sub_b58e0bc5)
            require (ext_call.return_data[0] * stor('array', ('mask_shl', 13, 3, -3, ('var', 0)), ('name', 'stor6', 6))[uint8(idx)]) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * stor('array', ('mask_shl', 13, 3, -3, ('var', 0)), ('name', 'stor6', 6))[uint8(idx)]) / uint32(100 * sub_b58e0bc5) < ext_call.return_data[0]
            require uint16(idx) < sub_5942ea99.length
            mem[0] = 5
            mem[100] = sub_5942ea99[uint16(idx)]
            mem[132] = (ext_call.return_data[0] * stor('array', ('mask_shl', 13, 3, -3, ('var', 0)), ('name', 'stor6', 6))[uint8(idx)]) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * stor('array', ('mask_shl', 13, 3, -3, ('var', 0)), ('name', 'stor6', 6))[uint8(idx)]) / uint32(100 * sub_b58e0bc5)
            require ext_code.size(arg1)
            call arg1.0xa9059cbb with:
                 gas gas_remaining wei
                args sub_5942ea99[uint16(idx)], (ext_call.return_data[0] * stor('array', ('mask_shl', 13, 3, -3, ('var', 0)), ('name', 'stor6', 6))[uint8(idx)]) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * stor('array', ('mask_shl', 13, 3, -3, ('var', 0)), ('name', 'stor6', 6))[uint8(idx)]) / uint32(100 * sub_b58e0bc5)
            mem[96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                revert with 0, 'Could Not Transfer Percentage Split'
            s = (ext_call.return_data[0] * stor('array', ('mask_shl', 13, 3, -3, ('var', 0)), ('name', 'stor6', 6))[uint8(idx)]) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * stor('array', ('mask_shl', 13, 3, -3, ('var', 0)), ('name', 'stor6', 6))[uint8(idx)]) / uint32(100 * sub_b58e0bc5)
            idx = idx + 1
            s = s + ((ext_call.return_data[0] * stor('array', ('mask_shl', 13, 3, -3, ('var', 0)), ('name', 'stor6', 6))[uint8(idx)]) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * stor('array', ('mask_shl', 13, 3, -3, ('var', 0)), ('name', 'stor6', 6))[uint8(idx)]) / uint32(100 * sub_b58e0bc5))
            continue 
        require uint16(None) < sub_5942ea99.length
        require ext_code.size(arg1)
        call arg1.0xa9059cbb with:
             gas gas_remaining wei
            args sub_5942ea99[uint16(None)], ext_call.return_data[0] - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5)) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (s * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None)
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            revert with 0, 'Could Not Transfer Percentage Split'
        sub_11bc91c9[address(arg1)] += ext_call.return_data[0]
        sub_335133a7[address(arg1)]++
        emit 0xc5792853: arg1, arg1, ext_call.return_data[0]
        if stor11 != stor11:
            revert with 0, 'Cannot Create Payment Loop'
    return 1
}

function _fallback() payable {
    if msg.value > 0:
        if not sub_8595d65b:
            revert with 0, 'Contract Cannot Receive ETH'
        if frozen:
            revert with 0, 'Contract is Frozen'
        if sub_80f7133d:
            revert with 0, 'Contract is Archived'
        stor11++
        if sub_1b761b5c:
            require ext_code.size(sub_55721f5aAddress)
            call sub_55721f5aAddress.0x6873c96f with:
                 gas gas_remaining wei
                args msg.sender
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                revert with 0, 'Sender must be a verified wallet'
        require uint32(100 * sub_b58e0bc5)
        call sub_6cdba9bbAddress with:
           value sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) wei
             gas gas_remaining wei
        if not ext_call.success:
            revert with 0, 'Could Not Transfer Cangea Fee'
        s = 0
        idx = 0
        s = sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5)
        while uint16(idx) < uint16(sub_c3f5bc5f - 1):
            require uint16(idx) < stor6.length
            require uint32(100 * sub_b58e0bc5)
            require (msg.value * stor('array', ('mask_shl', 13, 3, -3, ('var', 0)), ('name', 'stor6', 6))[uint8(idx)]) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * stor('array', ('mask_shl', 13, 3, -3, ('var', 0)), ('name', 'stor6', 6))[uint8(idx)]) / uint32(100 * sub_b58e0bc5) < msg.value
            require uint16(idx) < sub_5942ea99.length
            mem[0] = 5
            call sub_5942ea99[uint16(idx)] with:
               value (msg.value * stor('array', ('mask_shl', 13, 3, -3, ('var', 0)), ('name', 'stor6', 6))[uint8(idx)]) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * stor('array', ('mask_shl', 13, 3, -3, ('var', 0)), ('name', 'stor6', 6))[uint8(idx)]) / uint32(100 * sub_b58e0bc5) wei
                 gas gas_remaining wei
            if not ext_call.success:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Could Not Transfer Percentage Split'
            s = (msg.value * stor('array', ('mask_shl', 13, 3, -3, ('var', 0)), ('name', 'stor6', 6))[uint8(idx)]) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * stor('array', ('mask_shl', 13, 3, -3, ('var', 0)), ('name', 'stor6', 6))[uint8(idx)]) / uint32(100 * sub_b58e0bc5)
            idx = idx + 1
            s = s + ((msg.value * stor('array', ('mask_shl', 13, 3, -3, ('var', 0)), ('name', 'stor6', 6))[uint8(idx)]) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * stor('array', ('mask_shl', 13, 3, -3, ('var', 0)), ('name', 'stor6', 6))[uint8(idx)]) / uint32(100 * sub_b58e0bc5))
            continue 
        require uint16(sub_c3f5bc5f - 1) < sub_5942ea99.length
        call sub_5942ea99[uint16(stor7 - 1)] with:
           value msg.value - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5)) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * msg.value / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (s * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) wei
             gas gas_remaining wei
        if not ext_call.success:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Could Not Transfer Final Percentage Split'
        sub_11bc91c9[0] += msg.value
        sub_335133a7[0]++
        emit 0xc5792853: 0, msg.sender, msg.value
        if stor11 != stor11:
            revert with 0, 'Cannot Create Payment Loop'
    if sub_1076287c:
        if ext_code.size(msg.sender) > 0:
            require ext_code.size(stor0)
            call stor0.0x24d7806c with:
                 gas gas_remaining wei
                args msg.sender
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                revert with 0, 'Must be an Administrator'
            require ext_code.size(msg.sender)
            call msg.sender.0x70a08231 with:
                 gas gas_remaining wei
                args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] > 0:
                if frozen:
                    revert with 0, 'Contract is Frozen'
                if sub_80f7133d:
                    revert with 0, 'Contract is Archived'
                stor11++
                if sub_1b761b5c:
                    require ext_code.size(sub_55721f5aAddress)
                    call sub_55721f5aAddress.0x6873c96f with:
                         gas gas_remaining wei
                        args msg.sender
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        revert with 0, 'Sender must be a verified wallet'
                if sub_43d71909Address != msg.sender:
                    if not sub_1076287c:
                        revert with 0, 'Cannot Receive That Token'
                require uint32(100 * sub_b58e0bc5)
                require ext_code.size(msg.sender)
                call msg.sender.0xa9059cbb with:
                     gas gas_remaining wei
                    args sub_6cdba9bbAddress, sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    revert with 0, 'Could Not Transfer Cangea Fee'
                s = 0
                idx = 0
                s = sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5)
                while uint16(idx) < uint16(sub_c3f5bc5f - 1):
                    require uint16(idx) < stor6.length
                    require uint32(100 * sub_b58e0bc5)
                    require (ext_call.return_data[0] * stor('array', ('mask_shl', 13, 3, -3, ('var', 0)), ('name', 'stor6', 6))[uint8(idx)]) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * stor('array', ('mask_shl', 13, 3, -3, ('var', 0)), ('name', 'stor6', 6))[uint8(idx)]) / uint32(100 * sub_b58e0bc5) < ext_call.return_data[0]
                    require uint16(idx) < sub_5942ea99.length
                    mem[0] = 5
                    mem[100] = sub_5942ea99[uint16(idx)]
                    mem[132] = (ext_call.return_data[0] * stor('array', ('mask_shl', 13, 3, -3, ('var', 0)), ('name', 'stor6', 6))[uint8(idx)]) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * stor('array', ('mask_shl', 13, 3, -3, ('var', 0)), ('name', 'stor6', 6))[uint8(idx)]) / uint32(100 * sub_b58e0bc5)
                    require ext_code.size(msg.sender)
                    call msg.sender.0xa9059cbb with:
                         gas gas_remaining wei
                        args sub_5942ea99[uint16(idx)], (ext_call.return_data[0] * stor('array', ('mask_shl', 13, 3, -3, ('var', 0)), ('name', 'stor6', 6))[uint8(idx)]) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * stor('array', ('mask_shl', 13, 3, -3, ('var', 0)), ('name', 'stor6', 6))[uint8(idx)]) / uint32(100 * sub_b58e0bc5)
                    mem[96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        revert with 0, 'Could Not Transfer Percentage Split'
                    s = (ext_call.return_data[0] * stor('array', ('mask_shl', 13, 3, -3, ('var', 0)), ('name', 'stor6', 6))[uint8(idx)]) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * stor('array', ('mask_shl', 13, 3, -3, ('var', 0)), ('name', 'stor6', 6))[uint8(idx)]) / uint32(100 * sub_b58e0bc5)
                    idx = idx + 1
                    s = s + ((ext_call.return_data[0] * stor('array', ('mask_shl', 13, 3, -3, ('var', 0)), ('name', 'stor6', 6))[uint8(idx)]) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * stor('array', ('mask_shl', 13, 3, -3, ('var', 0)), ('name', 'stor6', 6))[uint8(idx)]) / uint32(100 * sub_b58e0bc5))
                    continue 
                require uint16(None) < sub_5942ea99.length
                require ext_code.size(msg.sender)
                call msg.sender.0xa9059cbb with:
                     gas gas_remaining wei
                    args sub_5942ea99[uint16(None)], ext_call.return_data[0] - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5)) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (sub_6f0a3abd * ext_call.return_data[0] / uint32(100 * sub_b58e0bc5) * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None) - (s * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None * None)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    revert with 0, 'Could Not Transfer Percentage Split'
                sub_11bc91c9[address(msg.sender)] += ext_call.return_data[0]
                sub_335133a7[address(msg.sender)]++
                emit 0xc5792853: msg.sender, msg.sender, ext_call.return_data[0]
                if stor11 != stor11:
                    revert with 0, 'Cannot Create Payment Loop'
}



}
